From ef65191180c3022072eead2f802a9f80454f07da Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Wed, 8 Jul 2015 20:58:35 -0700
Subject: [PATCH 001/164] Add content from website

---
 routes/angularTut.js      | 108 +++++++++++++++++++++
 routes/blazeTut.js        | 107 +++++++++++++++++++++
 routes/tutorial-pages.js  |  36 +++++++
 steps/angular/step01.html |  35 +++++++
 steps/angular/step02.html | 232 ++++++++++++++++++++++++++++++++++++++++++++++
 steps/angular/step03.html |  55 +++++++++++
 steps/angular/step04.html |  68 ++++++++++++++
 steps/angular/step05.html |  41 ++++++++
 steps/angular/step06.html |  20 ++++
 steps/angular/step07.html | 113 ++++++++++++++++++++++
 steps/angular/step08.html |  98 ++++++++++++++++++++
 steps/angular/step09.html |  94 +++++++++++++++++++
 steps/angular/step10.html |  93 +++++++++++++++++++
 steps/angular/step11.html | 111 ++++++++++++++++++++++
 steps/angular/step12.html |  31 +++++++
 steps/blaze/step01.html   |  35 +++++++
 steps/blaze/step02.html   | 210 +++++++++++++++++++++++++++++++++++++++++
 steps/blaze/step03.html   |  47 ++++++++++
 steps/blaze/step04.html   |  80 ++++++++++++++++
 steps/blaze/step05.html   |  62 +++++++++++++
 steps/blaze/step06.html   |  20 ++++
 steps/blaze/step07.html   |  86 +++++++++++++++++
 steps/blaze/step08.html   |  74 +++++++++++++++
 steps/blaze/step09.html   |  80 ++++++++++++++++
 steps/blaze/step10.html   |  81 ++++++++++++++++
 steps/blaze/step11.html   | 122 ++++++++++++++++++++++++
 steps/blaze/step12.html   |  40 ++++++++
 steps/step00.html         |  49 ++++++++++
 28 files changed, 2228 insertions(+)
 create mode 100644 routes/angularTut.js
 create mode 100644 routes/blazeTut.js
 create mode 100644 routes/tutorial-pages.js
 create mode 100644 steps/angular/step01.html
 create mode 100644 steps/angular/step02.html
 create mode 100644 steps/angular/step03.html
 create mode 100644 steps/angular/step04.html
 create mode 100644 steps/angular/step05.html
 create mode 100644 steps/angular/step06.html
 create mode 100644 steps/angular/step07.html
 create mode 100644 steps/angular/step08.html
 create mode 100644 steps/angular/step09.html
 create mode 100644 steps/angular/step10.html
 create mode 100644 steps/angular/step11.html
 create mode 100644 steps/angular/step12.html
 create mode 100644 steps/blaze/step01.html
 create mode 100644 steps/blaze/step02.html
 create mode 100644 steps/blaze/step03.html
 create mode 100644 steps/blaze/step04.html
 create mode 100644 steps/blaze/step05.html
 create mode 100644 steps/blaze/step06.html
 create mode 100644 steps/blaze/step07.html
 create mode 100644 steps/blaze/step08.html
 create mode 100644 steps/blaze/step09.html
 create mode 100644 steps/blaze/step10.html
 create mode 100644 steps/blaze/step11.html
 create mode 100644 steps/blaze/step12.html
 create mode 100644 steps/step00.html

diff --git a/routes/angularTut.js b/routes/angularTut.js
new file mode 100644
index 0000000..3b70561
--- /dev/null
+++ b/routes/angularTut.js
@@ -0,0 +1,108 @@
+ANGULAR_TUT = [
+  {
+    id: "0",
+    title: 'Creating an app',
+    seoTitle: 'Creating an app',
+    route: "tutorials.angular.creating-an-app",
+    path: "/tutorials/angular/creating-an-app",
+    contentTemplate: 'angular-step01',
+    sha: "fc766519b453d3d57820a6fe8839dae173f49941"
+  },
+  {
+    id: "1",
+    title: 'Templates',
+    seoTitle: 'Templates',
+    route: "tutorials.angular.templates",
+    path: "/tutorials/angular/templates",
+    contentTemplate: 'angular-step02',
+    sha: "7eea17a2de2c45031b7f345e4db7ec1152d6386f"
+  },
+  {
+    id: "2",
+    title: 'Collections',
+    seoTitle: 'Collections',
+    route: "tutorials.angular.collections",
+    path: "/tutorials/angular/collections",
+    contentTemplate: 'angular-step03',
+    sha: "8bc939ece149a547e1130c056853b13f89519627"
+  },
+  {
+    id: "3",
+    title: 'Forms and events',
+    seoTitle: 'Forms and events',
+    route: "tutorials.angular.forms-and-events",
+    path: "/tutorials/angular/forms-and-events",
+    contentTemplate: 'angular-step04',
+    sha: "785d5fa76b32ba37e2a73bccea2cebfe27b79c94"
+  },
+  {
+    id: "4",
+    title: 'Update and remove',
+    seoTitle: 'Update and remove',
+    route: "tutorials.angular.update-and-remove",
+    path: "/tutorials/angular/update-and-remove",
+    contentTemplate: 'angular-step05',
+    sha: "2c5420e51ca2d0177d83befad0730adea8e75c4a"
+  },
+  {
+    id: "5",
+    title: 'Deploying your app',
+    seoTitle: 'Deploying your app',
+    route: "tutorials.angular.deploying-your-app",
+    path: "/tutorials/angular/deploying-your-app",
+    contentTemplate: 'angular-step06'
+  },
+  {
+    id: "6",
+    title: 'Running on mobile',
+    seoTitle: 'Running on mobile',
+    route: "tutorials.angular.running-on-mobile",
+    path: "/tutorials/angular/running-on-mobile",
+    contentTemplate: 'angular-step07',
+    sha: "f285fe5d508411b1aed368a818263eb23239f024"
+  },
+  {
+    id: "7",
+    title: 'Filtering Collections',
+    seoTitle: 'Filtering Collections',
+    route: "tutorials.angular.filtering-collections",
+    path: "/tutorials/angular/filtering-collections",
+    contentTemplate: 'angular-step08',
+    sha: "f11a875b19ccf321e62fd5494d8de5d03df0c55e"
+  },
+  {
+    id: "8",
+    title: 'Adding user accounts',
+    seoTitle: 'Adding user accounts',
+    route: "tutorials.angular.adding-user-accounts",
+    path: "/tutorials/angular/adding-user-accounts",
+    contentTemplate: 'angular-step09',
+    sha: "85b6b6606e8a0742250614041455784d8455810c"
+  },
+  {
+    id: "9",
+    title: 'Security with methods',
+    seoTitle: 'Security with methods',
+    route: "tutorials.angular.security-with-methods",
+    path: "/tutorials/angular/security-with-methods",
+    contentTemplate: 'angular-step10',
+    sha: "75b8328206dc9a6a0f8ce019da35446c63b5b5d1"
+  },
+  {
+    id: "10",
+    title: 'Publish and subscribe',
+    seoTitle: 'Publish and subscribe',
+    route: "tutorials.angular.publish-and-subscribe",
+    path: "/tutorials/angular/publish-and-subscribe",
+    contentTemplate: 'angular-step11',
+    sha: "a85b2f031fa08fb1ae09bdc69d55ce760d44bf72"
+  },
+  {
+    id: "11",
+    title: 'Next steps',
+    seoTitle: 'Next steps',
+    route: "tutorials.angular.next-steps",
+    path: "/tutorials/angular/next-steps",
+    contentTemplate: 'angular-step12'
+  }
+];
\ No newline at end of file
diff --git a/routes/blazeTut.js b/routes/blazeTut.js
new file mode 100644
index 0000000..616cbc6
--- /dev/null
+++ b/routes/blazeTut.js
@@ -0,0 +1,107 @@
+BLAZE_TUT = [
+  {
+    id: "0",
+    title: 'Creating an app',
+    seoTitle: 'Creating an app',
+    route: "tutorials.blaze.creating-an-app",
+    path: "/tutorials/blaze/creating-an-app",
+    contentTemplate: 'blaze-step01',
+    sha: "377a8610c2fa77056d015e6998d5eb894436c99e"
+  },
+  {
+    id: "1",
+    title: 'Templates',
+    seoTitle: 'Templates',
+    route: "tutorials.blaze.templates",
+    path: "/tutorials/blaze/templates",
+    contentTemplate: 'blaze-step02',
+    sha: "9f5c65302f1527f25cacaaf275ea5c747d55e405"
+  },
+  {
+    id: "2",
+    title: 'Collections',
+    seoTitle: 'Collections',
+    route: "tutorials.blaze.collections",
+    path: "/tutorials/blaze/collections",
+    contentTemplate: 'blaze-step03',
+    sha: "ab14d317db174a3b2d408f4e24a50c7af13342cd"
+  },
+  {
+    id: "3",
+    title: 'Forms and events',
+    seoTitle: 'Forms and events',
+    route: "tutorials.blaze.forms-and-events",
+    path: "/tutorials/blaze/forms-and-events",
+    contentTemplate: 'blaze-step04',
+    sha: "9c24b998e540848f0dbc241702a4fcfa48fb9087"
+  },
+  {
+    id: "4",
+    title: 'Update and remove',
+    seoTitle: 'Update and remove',
+    route: "tutorials.blaze.update-and-remove",
+    path: "/tutorials/blaze/update-and-remove",
+    contentTemplate: 'blaze-step05',
+    sha: "4e6f9494c895eff43fe26167a7b803a24c35854e"
+  },
+  {
+    id: "5",
+    title: 'Deploying your app',
+    seoTitle: 'Deploying your app',
+    route: "tutorials.blaze.deploying-your-app",
+    path: "/tutorials/blaze/deploying-your-app",
+    contentTemplate: 'blaze-step06'
+  },
+  {
+    id: "6",
+    title: 'Running on mobile',
+    seoTitle: 'Running on mobile',
+    route: "tutorials.blaze.running-on-mobile",
+    path: "/tutorials/blaze/running-on-mobile",
+    contentTemplate: 'blaze-step07'
+  },
+  {
+    id: "7",
+    title: 'Temporary UI state',
+    seoTitle: 'Temporary UI state',
+    route: "tutorials.blaze.temporary-ui-state",
+    path: "/tutorials/blaze/temporary-ui-state",
+    contentTemplate: 'blaze-step08',
+    sha: "ad35c7e02a9f7c40f45f40dbff8d297fba4b13ac"
+  },
+  {
+    id: "8",
+    title: 'Adding user accounts',
+    seoTitle: 'Adding user accounts',
+    route: "tutorials.blaze.adding-user-accounts",
+    path: "/tutorials/blaze/adding-user-accounts",
+    contentTemplate: 'blaze-step09',
+    sha: "bb4a0fc190c44aa8cfd4189a03c2e18f1294074c"
+  },
+  {
+    id: "9",
+    title: 'Security with methods',
+    seoTitle: 'Security with methods',
+    route: "tutorials.blaze.security-with-methods",
+    path: "/tutorials/blaze/security-with-methods",
+    contentTemplate: 'blaze-step10',
+    sha: "e3b7fa8ed373c9e6b96fb3c370d0af238170b89a"
+  },
+  {
+    id: "10",
+    title: 'Publish and subscribe',
+    seoTitle: 'Publish and subscribe',
+    route: "tutorials.blaze.publish-and-subscribe",
+    path: "/tutorials/blaze/publish-and-subscribe",
+    contentTemplate: 'blaze-step11',
+    sha: "44dfd82a9e90cf8600c18b7e9f3c2e742c34285d"
+  },
+  {
+    id: "11",
+    title: 'Next steps',
+    seoTitle: 'Next steps',
+    route: "tutorials.blaze.next-steps",
+    path: "/tutorials/blaze/next-steps",
+    contentTemplate: 'blaze-step12'
+  }
+];
\ No newline at end of file
diff --git a/routes/tutorial-pages.js b/routes/tutorial-pages.js
new file mode 100644
index 0000000..985bfdb
--- /dev/null
+++ b/routes/tutorial-pages.js
@@ -0,0 +1,36 @@
+TUTORIAL_PAGES = {
+  id: "0",
+  title: "Tutorials",
+  route: "tutorials",
+  path: "/tutorials",
+  pathRedirect: "/install",
+  template: "tutorials",
+  pages: [
+    {
+      id: "1",
+      title: "Todo App",
+      route: "tutorials.blaze",
+      path: "/tutorials/blaze",
+      pathRedirect: "/tutorials/blaze/creating-an-app",
+      ghRepoName: "simple-todos",
+      subSidebarType: "sidebarStepsCollapse",
+      seoTitlePrefix: "Meteor Tutorial | ",
+      subHead: "Build your first Meteor app",
+      stepbarHide: true,
+      pages: BLAZE_TUT
+    },
+    {
+      id: "2",
+      title: "Todo App with Angular",
+      route: "tutorials.angular",
+      path: "/tutorials/angular",
+      pathRedirect: "/tutorials/angular/creating-an-app",
+      ghRepoName: "simple-todos-angular",
+      subSidebarType: "sidebarStepsCollapse",
+      seoTitlePrefix: "Meteor-Angular Tutorial | ",
+      subHead: "Integrate Meteor and AngularJS",
+      stepbarHide: true,
+      pages: ANGULAR_TUT
+    }
+  ]
+}
\ No newline at end of file
diff --git a/steps/angular/step01.html b/steps/angular/step01.html
new file mode 100644
index 0000000..7517c37
--- /dev/null
+++ b/steps/angular/step01.html
@@ -0,0 +1,35 @@
+<template name="angular-step01">
+{{#markdown}}
+# Creating your first angular-meteor app
+
+In this tutorial, we are going to create the same 'todo' app as in the other tutorial, but this time using the [angular-meteor](http://angular-meteor.com) package to integrate angular as our reactive front-end.
+
+To create a Meteor app, open your terminal and type:
+
+```bash
+meteor create simple-todos-angular
+```
+
+This will create a new folder called `simple-todos-angular` with all of the files that a Meteor app needs:
+
+```bash
+simple-todos-angular.js       # a JavaScript file loaded on both client and server
+simple-todos-angular.html     # an HTML file that defines our main view
+simple-todos-angular.css      # a CSS file to define your app's styles
+.meteor                       # internal Meteor files
+```
+
+To run the newly created app:
+
+```bash
+cd simple-todos-angular
+meteor
+```
+
+Open your web browser and go to `http://localhost:3000` to see the app running.
+
+You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `simple-todos-angular.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
+
+Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application.
+{{/markdown}}
+</template>
diff --git a/steps/angular/step02.html b/steps/angular/step02.html
new file mode 100644
index 0000000..589948d
--- /dev/null
+++ b/steps/angular/step02.html
@@ -0,0 +1,232 @@
+<template name="angular-step02">
+{{#markdown}}
+# Defining views with templates
+
+To turn our Meteor app into Angular compatible, we need to add the [angular-meteor package](http://angular-meteor.com/) by typing the following
+command into your command line:
+
+    meteor add urigo:angular
+
+
+To start working on our todos list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
+
+```html
+<!-- simple-todos-angular.html -->
+<head>
+  <title>Todo List</title>
+</head>
+
+<body ng-app="simple-todos"
+      ng-include="'todos-list.ng.html'"
+      ng-controller="TodosListCtrl">
+</body>
+```
+
+```js
+// simple-todos-angular.js
+if (Meteor.isClient) {
+
+	// This code only runs on the client
+	angular.module("simple-todos",['angular-meteor']);
+
+	angular.module("simple-todos").controller("TodosListCtrl", ['$scope',
+	  function($scope){
+
+      $scope.tasks = [
+        { text: "This is task 1" },
+        { text: "This is task 2" },
+        { text: "This is task 3" }
+      ];
+
+	}]);
+}
+```
+
+To write Angular templates, we need to name our files with a `.ng.html` suffix.
+
+Create a new file named `todos-list.ng.html` and place it on the root folder:
+
+```html
+<!-- todos-list.ng.html -->
+<div class="container">
+  <header>
+    <h1>Todo List</h1>
+  </header>
+
+  <ul ng-repeat="task in tasks">
+    <li>{{dstache}}task.text}}</li>
+  </ul>
+</div>
+```
+
+In our browser, the app should look pretty much like this:
+
+> #### Todo List
+> - This is task 1
+> - This is task 2
+> - This is task 3
+
+Now let's find out what all these bits of code are doing!
+
+### Angular templates in Meteor
+
+The [angular-meteor package](http://angular-meteor.com/) parses all of the `.ng.html` files in your app folder and puts them in Angular's template cache with the id of their full path.
+
+So, for example, when a file is named `my-angular-template.ng.html` is placed in the `client` folder, it will be available for `ng-include` or `ui-router` with the name `client/my-angular-template.ng.html`.
+
+### Adding logic and data to templates
+
+All of the code in your `ng.html` files is compiled with Angular. Angular binds the data into our templates just like any other Angular app.
+
+In the next step, we will see how we can use the $meteor service bind our scope data to a database collection.
+
+### HTML files in Meteor define templates
+
+Meteor parses all of the regular .HTML files in your app folder and identifies three top-level tags: **&lt;head>**, **&lt;body>**, and **&lt;template>**.
+
+Everything inside any &lt;head> tags is added to the `head` section of the HTML sent to the client, and everything inside &lt;body> tags is added to the `body` section, just like in a regular HTML file.
+
+Everything inside &lt;template> tags is compiled into Meteor _templates_, which can be included inside HTML with `{{dstache}}> templateName}}` or referenced in your JavaScript with `Template.templateName`.
+
+All of the code in your regular .HTML files is compiled with [Meteor's Spacebars compiler](https://github.com/meteor/meteor/blob/devel/packages/spacebars/README.md).
+
+### Adding CSS
+
+Before we go any further, let's make our app look nice by adding some CSS.
+
+Since this tutorial is focused on working with HTML and JavaScript, just copy all the CSS code below into `simple-todos-angular.css`. This is all the CSS code you will need until the end of the tutorial. The app will still work without the CSS, but it will look much nicer if you add it.
+{{/markdown}}
+
+{{#codeBox "Replace simple-todos-angular.css with this code"}}
+{{#markdown}}
+```css
+/* CSS declarations go here */
+body {
+  font-family: sans-serif;
+  background-color: #315481;
+  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
+  background-attachment: fixed;
+
+  position: absolute;
+  top: 0;
+  bottom: 0;
+  left: 0;
+  right: 0;
+
+  padding: 0;
+  margin: 0;
+
+  font-size: 14px;
+}
+
+.container {
+  max-width: 600px;
+  margin: 0 auto;
+  min-height: 100%;
+  background: white;
+}
+
+header {
+  background: #d2edf4;
+  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
+  padding: 20px 15px 15px 15px;
+  position: relative;
+}
+
+#login-buttons {
+  display: block;
+}
+
+h1 {
+  font-size: 1.5em;
+  margin: 0;
+  margin-bottom: 10px;
+  display: inline-block;
+  margin-right: 1em;
+}
+
+form {
+  margin-top: 10px;
+  margin-bottom: -10px;
+  position: relative;
+}
+
+.new-task input {
+  box-sizing: border-box;
+  padding: 10px 0;
+  background: transparent;
+  border: none;
+  width: 100%;
+  padding-right: 80px;
+  font-size: 1em;
+}
+
+.new-task input:focus{
+  outline: 0;
+}
+
+ul {
+  margin: 0;
+  padding: 0;
+  background: white;
+}
+
+.delete {
+  float: right;
+  font-weight: bold;
+  background: none;
+  font-size: 1em;
+  border: none;
+  position: relative;
+}
+
+li {
+  position: relative;
+  list-style: none;
+  padding: 15px;
+  border-bottom: #eee solid 1px;
+}
+
+li .text {
+  margin-left: 10px;
+}
+
+li.checked {
+  color: #888;
+}
+
+li.checked .text {
+  text-decoration: line-through;
+}
+
+li.private {
+  background: #eee;
+  border-color: #ddd;
+}
+
+header .hide-completed {
+  float: right;
+}
+
+.toggle-private {
+  margin-left: 5px;
+}
+
+@media (max-width: 600px) {
+  li {
+    padding: 12px 15px;
+  }
+
+  .search {
+    width: 150px;
+    clear: both;
+  }
+
+  .new-task input {
+    padding-bottom: 5px;
+  }
+}
+```
+{{/markdown}}
+{{/codeBox}}
+</template>
diff --git a/steps/angular/step03.html b/steps/angular/step03.html
new file mode 100644
index 0000000..ae6344d
--- /dev/null
+++ b/steps/angular/step03.html
@@ -0,0 +1,55 @@
+<template name="angular-step03">
+{{#markdown}}
+
+# Storing tasks in a collection
+
+Collections are Meteor's way of storing persistent data. The special thing about collections in Meteor is that they can be accessed from both the server and the client, making it easy to write view logic without having to write a lot of server code. They also update themselves automatically, so a template backed by a collection will automatically display the most up-to-date data.
+
+Creating a new collection is as easy as calling `MyCollection = new Mongo.Collection("my-collection");` in your JavaScript. On the server, this sets up a MongoDB collection called `my-collection`; on the client, this creates a cache connected to the server collection. We'll learn more about the client/server divide in step 12, but for now we can write our code with the assumption that the entire database is present on the client.
+
+Let's update our JavaScript code to get our tasks from a collection instead of a static array:
+
+```js
+// simple-todos-angular.js
+Tasks = new Mongo.Collection("tasks");
+
+if (Meteor.isClient) {
+
+	// This code only runs on the client
+	angular.module("simple-todos",['angular-meteor']);
+
+	angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
+	  function($scope, $meteor){
+
+	    $scope.tasks = $meteor.collection(Tasks);
+
+	}]);
+}
+```
+
+We are using the `$meteor` service to bind our `Tasks` collection to our `$scope.tasks` variable.
+Now every change that will happen to each of those objects will be synced in real time across our stack.
+
+When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
+
+### Inserting tasks from the console
+
+Items inside collections are called _documents_. Let's use the server database console to insert some documents into our collection. In a new terminal tab, go to your app directory and type:
+
+```bash
+meteor mongo
+```
+
+This opens a console into your app's local development database. Into the prompt, type:
+
+```js
+db.tasks.insert({ text: "Hello world!", createdAt: new Date() });
+```
+
+In your web browser, you will see the UI of your app immediately update to show the new task.
+You can see that we didn't have to write any explicit code to update our front-end code with the server-side database&mdash; it just happened automatically.
+
+Insert a few more tasks from the database console with different text. In the next step, we'll see how to add functionality to our app's UI so that we can add tasks without using the database console.
+
+{{/markdown}}
+</template>
diff --git a/steps/angular/step04.html b/steps/angular/step04.html
new file mode 100644
index 0000000..0978a33
--- /dev/null
+++ b/steps/angular/step04.html
@@ -0,0 +1,68 @@
+<template name="angular-step04">
+{{#markdown}}
+
+# Adding tasks with a form
+
+In this step, we'll add an input field for users to add tasks to the list.
+
+First, let's add a form to our HTML:
+
+```html
+<!-- todos-list.ng.html -->
+<header>
+  <h1>Todo List</h1>
+
+  <!-- add a form below the h1 -->
+  <form class="new-task" ng-submit="addTask(newTask); newTask='';">
+    <input ng-model="newTask" type="text"
+           name="text" placeholder="Type to add new tasks" />
+  </form>
+</header>
+```
+
+Here's the JavaScript code we need to add to listen to the `submit` event on the form:
+
+```js
+// Inside the if (Meteor.isClient) block, right after the definition of $scope.tasks:
+$scope.addTask = function(newTask) {
+  $scope.tasks.push( {
+    text: newTask,
+    createdAt: new Date() }
+  );
+};
+```
+
+Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
+
+### Attaching events to templates
+
+As you can see, this is just a regular Angular application.
+
+In our case above, we are listening to the `submit` event on our form to call the `addTask` scope function and to reset the input field.
+
+### Inserting into a collection
+
+Inside our scope function, we are adding a task to the `tasks` collection by simply calling `$scope.tasks.push()`. We can assign any properties to the task object, such as the time created, since we don't ever have to define a schema for the collection.
+
+Being able to insert anything into the database from the client isn't very secure, but it's okay for now. In step 10 we'll learn how we can make our app secure and restrict how data is inserted into the database.
+
+### Sorting our tasks
+
+Currently, our code displays all new tasks at the bottom of the list. That's not very good for a task list, because we want to see the newest tasks first.
+
+We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code.
+Until now you probably used Angular sort filter to do so. you can still use that here, but we are going to use a different method because it is better for real world use cases.
+
+Replace the `Tasks` collection variable with a function inside our `$meteor.collection` service call.
+The function will return a the result of calling the `find` function with the `sort` parameter on our `Tasks` collection, like that:
+
+```js
+$scope.tasks = $meteor.collection(function() {
+  return Tasks.find({}, { sort: { createdAt: -1 } })
+});
+```
+To better understand the difference between using the sort filter and the collection options, check out the advanced tutorial about [search, sort and pagination](http://angular-meteor.com/tutorial/step_12).
+
+In the next step, we'll add some very important todo list functions: checking off and deleting tasks.
+{{/markdown}}
+</template>
diff --git a/steps/angular/step05.html b/steps/angular/step05.html
new file mode 100644
index 0000000..07e33fe
--- /dev/null
+++ b/steps/angular/step05.html
@@ -0,0 +1,41 @@
+<template name="angular-step05">
+{{#markdown}}
+
+# Checking off and deleting tasks
+
+Until now, we have only interacted with a collection by inserting documents. Now, we will learn how to update and remove them.
+
+Let's add two elements to our `task` template, a checkbox and a delete button:
+
+```html
+<!-- replace the existing task template with this code -->
+<li ng-class="{'checked': task.checked}">
+  <button class="delete" ng-click="tasks.remove(task)">&times;</button>
+
+  <input type="checkbox" ng-model="task.checked" class="toggle-checked" />
+
+  <span class="text">{{dstache}}task.text}}</span>
+</li>
+```
+
+### Update
+
+We simply bind the `checked` state of each task to a checkbox with Angular. Then Meteor takes care of saving and syncing the state across all clients without any extra code.
+
+### Delete
+
+$meteor.collection gives us a simple helper method called `remove`. That method can take an object or an id of an object and will remove it from the database.
+
+### Classes
+
+If you try checking off some tasks after adding all of the above code, you will see that checked off tasks have a line through them.
+
+Here we bind the checked state of a task to a class with `ng-class`:
+
+```html
+<li ng-class="{'checked': task.checked}">
+```
+
+With this code, if the `checked` property of a task is `true`, the `checked` class is added to our list item. Using this class, we can make checked-off tasks look different in our CSS. 
+{{/markdown}}
+</template>
diff --git a/steps/angular/step06.html b/steps/angular/step06.html
new file mode 100644
index 0000000..539c3ea
--- /dev/null
+++ b/steps/angular/step06.html
@@ -0,0 +1,20 @@
+<template name="angular-step06">
+{{#markdown}}
+
+# Deploying your app
+
+Now that we have a working todo list app, we can share it with our friends! Meteor makes it really easy to put an app up on the internet where other people can use it.
+
+Simply go to your app directory, and type:
+
+```bash
+meteor deploy my_app_name.meteor.com
+```
+
+Once you answer all of the prompts and the upload completes, you can go to `http://my_app_name.meteor.com` and use your app from anywhere. 
+
+Try opening the app on multiple devices such as your phone and your friend's computer. Add, remove, and check off some tasks and you will see that the UI of your app is really fast. That's because Meteor doesn't wait for the server to respond before updating the interface - we'll talk about this more in step 11.
+
+Congratulations, you've made a working app that you can now use with your friends! In later steps we will add more functionality involving multiple users, private tasks, and search. First, we'll take a detour to see that while we were building a web app, we also created a pretty nice mobile app along the way.
+{{/markdown}}
+</template>
diff --git a/steps/angular/step07.html b/steps/angular/step07.html
new file mode 100644
index 0000000..5986e9e
--- /dev/null
+++ b/steps/angular/step07.html
@@ -0,0 +1,113 @@
+<template name="angular-step07">
+{{#markdown}}
+
+# Running your app on Android or iOS
+
+So far, we've been building our app and testing only in a web browser, but Meteor has been designed to work across different platforms - your simple todo list website can become an iOS or Android app in just a few commands.
+
+### Bootstraping Angular for mobile
+
+Angular needs the main document to be ready so it can bootstrap, but different devices has different events for `ready`.
+
+To solve this, we need to change the way we bootstrap our Angular app.  Remove the current bootstrap by removing:
+
+    ng-app='simple-todos'
+
+from the BODY tag.
+
+Then add the following code right after `Meteor.isClient`:
+
+```js
+angular.module("simple-todos",['angular-meteor']);
+
+function onReady() {
+  angular.bootstrap(document, ['simple-todos']);
+}
+
+if (Meteor.isCordova)
+  angular.element(document).on("deviceready", onReady);
+else
+  angular.element(document).ready(onReady);
+```
+
+### Installing Tools for Mobile development
+
+Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to [skip to the next step](/tutorials/angular/filtering-collections).
+
+### Running on an Android emulator
+
+In the terminal, go to your app folder and type:
+
+```bash
+meteor install-sdk android
+```
+
+This will help you install all of the necessary tools to build an Android app from your project. When you are done installing everything, type:
+
+```bash
+meteor add-platform android
+```
+
+After you agree to the license terms, type:
+
+```bash
+meteor run android
+```
+
+After some initialization, you will see an Android emulator pop up, running your app inside a native Android wrapper. The emulator can be somewhat slow, so if you want to see what it's really like using your app, you should run it on an actual device.
+
+### Running on an Android device
+
+First, complete all of the steps above to set up the Android tools on your system. Then, make sure you have [USB Debugging enabled on your phone](http://developer.android.com/tools/device.html#developer-device-options) and the phone is plugged into your computer with a USB cable. Also, you must quit the Android emulator before running on a device.
+
+Then, run the following command:
+
+```bash
+meteor run android-device
+```
+
+The app will be built and installed on your device. If you want to point your app to the server you deployed in the previous step, run:
+
+```bash
+meteor run android-device --mobile-server my_app_name.meteor.com
+```
+
+### Running on an iOS simulator (Mac Only)
+
+If you have a Mac, you can run your app inside the iOS simulator.
+
+Go to your app folder and type:
+
+```bash
+meteor install-sdk ios
+```
+
+This will run you through the setup necessary to build an iOS app from your project. When you're done, type:
+
+```bash
+meteor add-platform ios
+meteor run ios
+```
+
+You will see the iOS simulator pop up with your app running inside.
+
+### Running on an iPhone or iPad (Mac Only; requires Apple developer account)
+
+If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
+
+```bash
+meteor run ios-device
+```
+
+This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
+
+If you want to point your app at the previously deployed server, run:
+
+```bash
+meteor run ios-device --mobile-server my_app_name.meteor.com
+```
+
+Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features.
+
+{{/markdown}}
+</template>
diff --git a/steps/angular/step08.html b/steps/angular/step08.html
new file mode 100644
index 0000000..107513b
--- /dev/null
+++ b/steps/angular/step08.html
@@ -0,0 +1,98 @@
+<template name="angular-step08">
+{{#markdown}}
+
+# Filtering collections
+
+In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to see only incomplete tasks.
+
+We're going to learn how to use Mongo's filtering API.
+
+First, we need to add a checkbox to our HTML:
+
+```html
+<!-- add the checkbox to <body> right below the h1 -->
+<label class="hide-completed">
+  <input type="checkbox" ng-model="$parent.hideCompleted"/>
+  Hide Completed Tasks
+</label>
+```
+
+This checkbox binds to the scope's `hideCompleted` variable.
+> We are using `$parent` because it creates a new child scope.
+
+Now, we need to update our `$scope.tasks` query each time `hideCompleted` changes.
+
+### Filtering collection syntax
+
+The query that returns all tasks (the current query looks like that:
+
+```js
+Tasks.find({}, { sort: { createdAt: -1 } })
+```
+
+and the query to return only the not completed todos looks like that:
+
+```js
+Tasks.find({ checked: {$ne: true} }, { sort: { createdAt: -1 } })
+```
+
+### Watching the checkbox
+
+So let's create a scope variable that will hold the wanted query and will change together with the checkbox.
+Inside our controller:
+
+```js
+$scope.$watch('hideCompleted', function() {
+  if ($scope.hideCompleted)
+    $scope.query = {checked: {$ne: true}};
+  else
+    $scope.query = {};
+});
+```
+
+and let's change our `$scope.tasks` definition accordingly:
+```js
+$scope.tasks = $meteor.collection(function() {
+  return Tasks.find($scope.query, {sort: {createdAt: -1}})
+});
+```
+
+**but we are missing one more thing** - The expression we are sending `$meteor.collection` is a Meteor expression and
+**Meteor has to know that the Angular `query` parameter has changed**.
+
+### Connecting Angular bindings to Meteor's reactivity
+
+To make Meteor understand Angular bindings and the other way around, we use [$scope.getReactively](http://angular-meteor.com/api/getReactively) function that turns Angular
+scope variables into [Meteor reactive variables](http://docs.meteor.com/#/full/reactivevar_pkg).
+
+So now our definition should look like that:
+
+```js
+$scope.tasks = $meteor.collection(function() {
+  return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
+});
+```
+
+Now if you check the box, the task list will only show tasks that haven't been completed.
+
+> To learn more about the [getReactively](http://angular-meteor.com/api/getReactively) feature
+> you can try the [advanced tutorial](http://angular-meteor.com/tutorial/step_12).
+
+### One more feature: Showing a count of incomplete tasks
+
+Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a scope function and change one line of the HTML.
+
+```js
+// Add to scope
+$scope.incompleteCount = function () {
+  return Tasks.find({ checked: {$ne: true} }).count();
+};
+```
+
+```html
+<!-- display the count at the end of the <h1> tag -->
+<h1>Todo List ( {{dstache}} incompleteCount() }} )</h1>
+```
+
+{{/markdown}}
+</template>
diff --git a/steps/angular/step09.html b/steps/angular/step09.html
new file mode 100644
index 0000000..58b552a
--- /dev/null
+++ b/steps/angular/step09.html
@@ -0,0 +1,94 @@
+<template name="angular-step09">
+{{#markdown}}
+
+# Adding user accounts
+
+Meteor comes with an accounts system and a drop-in login user interface that lets you add multi-user functionality to your app in minutes.
+
+To enable the accounts system and UI, we need to add the relevant packages. In your app directory, run the following command:
+
+```bash
+meteor add accounts-ui accounts-password
+```
+
+In the HTML, right under the checkbox, include the following code to add a login dropdown:
+
+```html
+<meteor-include src="loginButtons"></meteor-include>
+```
+
+The powerful [meteor-include](http://angular-meteor.com/api/meteor-include) directive let's you add **any Blaze template** into your Angular templates.
+We are adding `loginButtons` which is the Blaze template for user authentication flow supplied with the accounts-ui package.
+
+Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
+
+```js
+// At the bottom of the client code
+Accounts.ui.config({
+  passwordSignupFields: "USERNAME_ONLY"
+});
+```
+
+Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
+
+1. Only display the new task input field to logged in users
+2. Show which user created each task
+
+To do this, we will add two new fields to the `tasks` collection:
+
+1. `owner` - the `_id` of the user that created the task.
+2. `username` - the `username` of the user that created the task. We will save the username directly in the task object so that we don't have to look up the user every time we display the task.
+
+First, let's add some code to save these fields into the `addTask` function:
+
+```js
+$scope.addTask = function(newTask) {
+  $scope.tasks.push({
+    text: newTask,
+    createdAt: new Date(),             // current time
+    owner: Meteor.userId(),            // _id of logged in user
+    username: Meteor.user().username}  // username of logged in user
+  );
+};
+```
+
+Then, in our HTML, add an `ng-show` directive to only show the form when there is a logged in user:
+
+```html
+<form class="new-task"
+      ng-submit="addTask(newTask); newTask='';"
+      ng-show="$root.currentUser">
+  <input ng-model="newTask" type="text"
+         name="text" placeholder="Type to add new tasks" />
+</form>
+```
+
+Finally, add a statement to display the `username` field on each task right before the text:
+
+```html
+<span class="text">
+  <strong>{{dstache}}task.username}}</strong> - {{dstache}}task.text}}
+</span>
+```
+
+Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
+
+### Automatic accounts UI
+
+If our app has the `accounts-ui` package, all we have to do to add a login dropdown is include the `loginButtons` template with [meteor-include](http://angular-meteor.com/api/meteor-include) directive.
+This dropdown detects which login methods have been added to the app and displays the appropriate controls. In our case, the only enabled login method is `accounts-password`, so the dropdown displays a password field. If you are adventurous, you can add the `accounts-facebook` package to enable Facebook login in your app - the Facebook button will automatically appear in the dropdown.
+
+### Getting information about the logged-in user
+
+In your HTML, you can use the built-in `$root.currentUser` variable to check if a user is logged in and get information about them. For example, `{{dstache}}$root.currentUser.username}}` will display the logged in user's username.
+
+In your JavaScript code, you can use `Meteor.userId()` to get the current user's `_id`, or `Meteor.user()` to get the whole user document.
+
+### Custom templates
+
+You can choose not to use the `accounts-ui` package template and create your own Angular login templates.
+You can read more about it in the [chapter about angular-material](http://angular-meteor.com/tutorial/step_18) in the advanced tutorial.
+
+In the next step, we will learn how to make our app more secure by doing all of our data validation on the server instead of the client.
+{{/markdown}}
+</template>
diff --git a/steps/angular/step10.html b/steps/angular/step10.html
new file mode 100644
index 0000000..243b015
--- /dev/null
+++ b/steps/angular/step10.html
@@ -0,0 +1,93 @@
+<template name="angular-step10">
+{{#markdown}}
+
+# Security with methods
+
+Before this step, any user of the app could edit any part of the database. This might be okay for very small internal apps or demos, but any real application needs to control permissions for its data. In Meteor, the best way to do this is by declaring _methods_. Instead of the client code directly calling `insert`, `update`, and `remove`, it will instead call methods that will check if the user is authorized to complete the action and then make any changes to the database on the client's behalf.
+
+### Removing `insecure`
+
+Every newly created Meteor project has the `insecure` package added by default. This is the package that allows us to edit the database from the client. It's useful when prototyping, but now we are taking off the training wheels. To remove this package, go to your app directory and run:
+
+```bash
+meteor remove insecure
+```
+
+If you try to use the app after removing this package, you will notice that none of the inputs or buttons work anymore. This is because all client-side database permissions have been revoked. Now we need to rewrite some parts of our app to use methods.
+
+### Defining methods
+
+First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
+
+```js
+// At the bottom of simple-todos.js, outside of the client-only block
+Meteor.methods({
+  addTask: function (text) {
+    // Make sure the user is logged in before inserting a task
+    if (! Meteor.userId()) {
+      throw new Meteor.Error("not-authorized");
+    }
+
+    Tasks.insert({
+      text: text,
+      createdAt: new Date(),
+      owner: Meteor.userId(),
+      username: Meteor.user().username
+    });
+  },
+  deleteTask: function (taskId) {
+    Tasks.remove(taskId);
+  },
+  setChecked: function (taskId, setChecked) {
+    Tasks.update(taskId, { $set: { checked: setChecked} });
+  }
+});
+```
+
+Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
+
+```js
+$scope.addTask = function(newTask) {
+  $meteor.call("addTask", newTask);
+};
+
+$scope.deleteTask = function(task) {
+  $meteor.call("deleteTask", task._id);
+};
+
+$scope.setChecked = function(task) {
+  $meteor.call("setChecked", task._id, !task.checked);
+};
+```
+
+and the way we handle the changes in the template:
+
+```html
+<button class="delete" ng-click="deleteTask(task)">&times;</button>
+
+<input type="checkbox" ng-checked="task.checked"
+       ng-click="setChecked(task)" class="toggle-checked" />
+```
+
+Now all of our inputs and buttons will start working again. What did we gain from all of this work?
+
+1. When we insert tasks into the database, we can now securely verify that the user is logged in, that the `createdAt` field is correct, and that the `owner` and `username` fields are correct and the user isn't impersonating anyone.
+2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
+3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
+
+### Latency compensation
+
+So why do we want to define our methods on the client and on the server? We do this to enable a feature called _latency compensation_.
+
+When you call a method on the client using `$meteor.call`, two things happen in parallel:
+
+1. The client sends a request to the server to run the method in a secure environment, just like an AJAX request would work
+2. A simulation of the method runs directly on the client to attempt to predict the outcome of the server call using the available information
+
+What this means is that a newly created task actually appears on the screen _before_ the result comes back from the server.
+
+If the result from the server comes back and is consistent with the simulation on the client, everything remains as is. If the result on the server is different from the result of the simulation on the client, the UI is patched to reflect the actual state of the server.
+
+With Meteor methods and latency compensation, you get the best of both worlds &mdash; the security of server code and no round-trip delay.
+{{/markdown}}
+</template>
diff --git a/steps/angular/step11.html b/steps/angular/step11.html
new file mode 100644
index 0000000..0ae8fca
--- /dev/null
+++ b/steps/angular/step11.html
@@ -0,0 +1,111 @@
+<template name="angular-step11">
+{{#markdown}}
+
+# Filtering data with publish and subscribe
+
+Now that we have moved all of our app's sensitive code into methods, we need to learn about the other half of Meteor's security story. Until now, we have worked assuming the entire database is present on the client, meaning if we call `Tasks.find()` we will get every task in the collection. That's not good if users of our application want to store privacy-sensitive data. We need a way of controlling which data Meteor sends to the client-side database.
+
+Just like with `insecure` in the last step, all new Meteor apps start with the `autopublish` package. Let's remove it and see what happens:
+
+```bash
+meteor remove autopublish
+```
+
+When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and [$scope.$meteorSubscribe](http://angular-meteor.com/api/subscribe).
+
+Let's add them now.
+
+```js
+// At the bottom of simple-todos.js
+if (Meteor.isServer) {
+  Meteor.publish("tasks", function () {
+    return Tasks.find();
+  });
+}
+```
+
+```js
+// At the top of our controller code
+$scope.$meteorSubscribe("tasks");
+```
+
+Once you have added this code, all of the tasks will reappear.
+
+Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When [$scope.$meteorSubscribe](http://angular-meteor.com/api/subscribe) is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
+
+### Implementing private tasks
+
+First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
+
+```html
+<!-- add right below the code for the checkbox in the task template -->
+<button class="toggle-private"
+        ng-if="task.owner === $root.currentUser._id"
+        ng-click="setPrivate(task)">
+  {{dstache}}task.private == true ? "Private" : "Public"}}
+</button>
+
+<!-- modify the li tag to have the private class if the item is private -->
+<li ng-class="{'checked': task.checked, 'private': task.private}">
+```
+
+We need to modify our JavaScript code in three places:
+
+```js
+// Add a setPrivate scope function
+$scope.setPrivate = function(task) {
+  $meteor.call("setPrivate", task._id, ! task.private);
+};
+
+// Add a method to Meteor.methods called setPrivate
+setPrivate: function (taskId, setToPrivate) {
+  var task = Tasks.findOne(taskId);
+
+  // Make sure only the task owner can make a task private
+  if (task.owner !== Meteor.userId()) {
+    throw new Meteor.Error("not-authorized");
+  }
+
+  Tasks.update(taskId, { $set: { private: setToPrivate } });
+}
+```
+
+Now that we have a way of setting which tasks are private, we should modify our
+publication function to only send the tasks that a user is authorized to see:
+
+```js
+// Modify the publish statement
+// Only publish tasks that are public or belong to the current user
+Meteor.publish("tasks", function () {
+  return Tasks.find({
+    $or: [
+      { private: {$ne: true} },
+      { owner: this.userId }
+    ]
+  });
+});
+```
+
+To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
+
+In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
+
+```js
+// Inside the deleteTask method
+var task = Tasks.findOne(taskId);
+if (task.private && task.owner !== Meteor.userId()) {
+  // If the task is private, make sure only the owner can delete it
+  throw new Meteor.Error("not-authorized");
+}
+
+// Inside the setChecked method
+var task = Tasks.findOne(taskId);
+if (task.private && task.owner !== Meteor.userId()) {
+  // If the task is private, make sure only the owner can check it off
+  throw new Meteor.Error("not-authorized");
+}
+```
+
+We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
+{{/markdown}}
+</template>
diff --git a/steps/angular/step12.html b/steps/angular/step12.html
new file mode 100644
index 0000000..00d3c46
--- /dev/null
+++ b/steps/angular/step12.html
@@ -0,0 +1,31 @@
+<template name="angular-step12">
+{{#markdown}}
+
+# What's next?
+
+Congratulations on your newly built Meteor app! Don't forget to deploy it again
+so your friends can use the new features.
+
+Your app currently supports collaborating on a single todo list. To see how you
+could add more functionality, check out the [full angular-meteor tutorial](http://angular-meteor.com/).
+
+Here are some options for where you can go next:
+
+1. Read about [the design of the Meteor platform](/projects) to see how all of the parts fit together
+2. Check out the [complete documentation](https://docs.meteor.com)
+3. Continue to the [advanced tutorial](http://angular-meteor.com/tutorial)
+4. Explore this set of [tools]({{pathFor 'tools.info'}}) and [resources]({{pathFor 'tools.resources'}}) to help you build Meteor apps
+
+{{/markdown}}
+
+<div class="row">
+  <hr />
+  <div class="col-md-6">
+    <p>Don't forget to get on the mailing list - Meteor news, new releases, security alerts, and nothing else.</p>
+  </div>
+  <div class="col-md-6">
+    {{> emailForm}}
+  </div>
+</div>
+
+</template>
diff --git a/steps/blaze/step01.html b/steps/blaze/step01.html
new file mode 100644
index 0000000..d6e7482
--- /dev/null
+++ b/steps/blaze/step01.html
@@ -0,0 +1,35 @@
+<template name="blaze-step01">
+{{#markdown}}
+# Creating your first app
+
+In this tutorial, we are going to create a simple app to manage a 'to do' list and collaborate with others on those tasks.
+
+To create the app, open your terminal and type:
+
+```bash
+meteor create simple-todos
+```
+
+This will create a new folder called `simple-todos` with all of the files that a Meteor app needs:
+
+```bash
+simple-todos.js       # a JavaScript file loaded on both client and server
+simple-todos.html     # an HTML file that defines view templates
+simple-todos.css      # a CSS file to define your app's styles
+.meteor               # internal Meteor files
+```
+
+To run the newly created app:
+
+```bash
+cd simple-todos
+meteor
+```
+
+Open your web browser and go to `http://localhost:3000` to see the app running.
+
+You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `simple-todos.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
+
+Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application.
+{{/markdown}}
+</template>
diff --git a/steps/blaze/step02.html b/steps/blaze/step02.html
new file mode 100644
index 0000000..deb63c1
--- /dev/null
+++ b/steps/blaze/step02.html
@@ -0,0 +1,210 @@
+<template name="blaze-step02">
+{{#markdown}}
+# Defining views with templates
+
+To start working on our todo list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
+
+```html
+<!-- simple-todos.html -->
+<head>
+  <title>Todo List</title>
+</head>
+
+<body>
+  <div class="container">
+    <header>
+      <h1>Todo List</h1>
+    </header>
+
+    <ul>
+      {{dstache}}#each tasks}}
+        {{dstache}}> task}}
+      {{dstache}}/each}}
+    </ul>
+  </div>
+</body>
+
+<template name="task">
+  <li>{{dstache}}text}}</li>
+{{lt}}/template>
+```
+
+```js
+// simple-todos.js
+if (Meteor.isClient) {
+  // This code only runs on the client
+  Template.body.helpers({
+    tasks: [
+      { text: "This is task 1" },
+      { text: "This is task 2" },
+      { text: "This is task 3" }
+    ]
+  });
+}
+```
+
+In our browser, the app will now look much like this:
+
+> #### Todo List
+> - This is task 1
+> - This is task 2
+> - This is task 3
+
+Now let's find out what all these bits of code are doing!
+
+### HTML files in Meteor define templates
+
+Meteor parses all of the HTML files in your app folder and identifies three top-level tags: **&lt;head>**, **&lt;body>**, and **&lt;template>**.
+
+Everything inside any &lt;head> tags is added to the `head` section of the HTML sent to the client, and everything inside &lt;body> tags is added to the `body` section, just like in a regular HTML file.
+
+Everything inside &lt;template> tags is compiled into Meteor _templates_, which can be included inside HTML with `{{dstache}}> templateName}}` or referenced in your JavaScript with `Template.templateName`.
+
+### Adding logic and data to templates
+
+All of the code in your HTML files is compiled with [Meteor's Spacebars compiler](https://github.com/meteor/meteor/blob/devel/packages/spacebars/README.md). Spacebars uses statements surrounded by double curly braces such as `{{dstache}}#each}}` and `{{dstache}}#if}}` to let you add logic and data to your views.
+
+You can pass data into templates from your JavaScript code by defining _helpers_. In the code above, we defined a helper called `tasks` on `Template.body` that returns an array. Inside the body tag of the HTML, we can use `{{dstache}}#each tasks}}` to iterate over the array and insert a `task` template for each value. Inside the `#each` block, we can display the `text` property of each array item using `{{dstache}}text}}`.
+
+In the next step, we will see how we can use helpers to make our templates display dynamic data from a database collection.
+
+### Adding CSS
+
+Before we go any further, let's make our app look nice by adding some CSS.
+
+Since this tutorial is focused on working with HTML and JavaScript, just copy all the CSS code below into `simple-todos.css`. This is all the CSS code you will need until the end of the tutorial. The app will still work without the CSS, but it will look much nicer if you add it.
+{{/markdown}}
+
+{{#codeBox "Replace simple-todos.css with this code"}}
+{{#markdown}}
+```css
+/* CSS declarations go here */
+body {
+  font-family: sans-serif;
+  background-color: #315481;
+  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
+  background-attachment: fixed;
+
+  position: absolute;
+  top: 0;
+  bottom: 0;
+  left: 0;
+  right: 0;
+
+  padding: 0;
+  margin: 0;
+
+  font-size: 14px;
+}
+
+.container {
+  max-width: 600px;
+  margin: 0 auto;
+  min-height: 100%;
+  background: white;
+}
+
+header {
+  background: #d2edf4;
+  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
+  padding: 20px 15px 15px 15px;
+  position: relative;
+}
+
+#login-buttons {
+  display: block;
+}
+
+h1 {
+  font-size: 1.5em;
+  margin: 0;
+  margin-bottom: 10px;
+  display: inline-block;
+  margin-right: 1em;
+}
+
+form {
+  margin-top: 10px;
+  margin-bottom: -10px;
+  position: relative;
+}
+
+.new-task input {
+  box-sizing: border-box;
+  padding: 10px 0;
+  background: transparent;
+  border: none;
+  width: 100%;
+  padding-right: 80px;
+  font-size: 1em;
+}
+
+.new-task input:focus{
+  outline: 0;
+}
+
+ul {
+  margin: 0;
+  padding: 0;
+  background: white;
+}
+
+.delete {
+  float: right;
+  font-weight: bold;
+  background: none;
+  font-size: 1em;
+  border: none;
+  position: relative;
+}
+
+li {
+  position: relative;
+  list-style: none;
+  padding: 15px;
+  border-bottom: #eee solid 1px;
+}
+
+li .text {
+  margin-left: 10px;
+}
+
+li.checked {
+  color: #888;
+}
+
+li.checked .text {
+  text-decoration: line-through;
+}
+
+li.private {
+  background: #eee;
+  border-color: #ddd;
+}
+
+header .hide-completed {
+  float: right;
+}
+
+.toggle-private {
+  margin-left: 5px;
+}
+
+@media (max-width: 600px) {
+  li {
+    padding: 12px 15px;
+  }
+
+  .search {
+    width: 150px;
+    clear: both;
+  }
+
+  .new-task input {
+    padding-bottom: 5px;
+  }
+}
+```
+{{/markdown}}
+{{/codeBox}}
+</template>
diff --git a/steps/blaze/step03.html b/steps/blaze/step03.html
new file mode 100644
index 0000000..26e55a7
--- /dev/null
+++ b/steps/blaze/step03.html
@@ -0,0 +1,47 @@
+<template name="blaze-step03">
+{{#markdown}}
+
+# Storing tasks in a collection
+
+Collections are Meteor's way of storing persistent data. The special thing about collections in Meteor is that they can be accessed from both the server and the client, making it easy to write view logic without having to write a lot of server code. They also update themselves automatically, so a template backed by a collection will automatically display the most up-to-date data.
+
+Creating a new collection is as easy as calling `MyCollection = new Mongo.Collection("my-collection");` in your JavaScript. On the server, this sets up a MongoDB collection called `my-collection`; on the client, this creates a cache connected to the server collection. We'll learn more about the client/server divide in step 12, but for now we can write our code with the assumption that the entire database is present on the client.
+
+Let's update our JavaScript code to get our tasks from a collection instead of a static array:
+
+```js
+// simple-todos.js
+Tasks = new Mongo.Collection("tasks");
+
+if (Meteor.isClient) {
+  // This code only runs on the client
+  Template.body.helpers({
+    tasks: function () {
+      return Tasks.find({});
+    }
+  });
+}
+```
+
+When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
+
+### Inserting tasks from the console
+
+Items inside collections are called _documents_. Let's use the server database console to insert some documents into our collection. In a new terminal tab, go to your app directory and type:
+
+```bash
+meteor mongo
+```
+
+This opens a console into your app's local development database. Into the prompt, type:
+
+```js
+db.tasks.insert({ text: "Hello world!", createdAt: new Date() });
+```
+
+In your web browser, you will see the UI of your app immediately update to show the new task. You can see that we didn't have to write any code to connect the server-side database to our front-end code &mdash; it just happened automatically.
+
+Insert a few more tasks from the database console with different text. In the next step, we'll see how to add functionality to our app's UI so that we can add tasks without using the database console.
+
+{{/markdown}}
+</template>
diff --git a/steps/blaze/step04.html b/steps/blaze/step04.html
new file mode 100644
index 0000000..8909dd7
--- /dev/null
+++ b/steps/blaze/step04.html
@@ -0,0 +1,80 @@
+<template name="blaze-step04">
+{{#markdown}}
+
+# Adding tasks with a form
+
+In this step, we'll add an input field for users to add tasks to the list.
+
+First, let's add a form to our HTML:
+
+```html
+<header>
+  <h1>Todo List</h1>
+
+  <!-- add a form below the h1 -->
+  <form class="new-task">
+    <input type="text" name="text" placeholder="Type to add new tasks" />
+  </form>
+</header>
+```
+
+Here's the JavaScript code we need to add to listen to the `submit` event on the form:
+
+```js
+// Inside the if (Meteor.isClient) block, right after Template.body.helpers:
+Template.body.events({
+  "submit .new-task": function (event) {
+    // This function is called when the new task form is submitted
+
+    var text = event.target.text.value;
+
+    Tasks.insert({
+      text: text,
+      createdAt: new Date() // current time
+    });
+
+    // Clear form
+    event.target.text.value = "";
+
+    // Prevent default form submit
+    return false;
+  }
+});
+```
+
+Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
+
+### Attaching events to templates
+
+Event listeners are added to templates in much the same way as helpers are: by calling `Template.templateName.events(...)` with a dictionary. The keys describe the event to listen for, and the values are _event handlers_ that are called when the event happens.
+
+In our case above, we are listening to the `submit` event on any element that matches the CSS selector `.new-task`. When this event is triggered by the user pressing enter inside the input field, our event handler function is called.
+
+The event handler gets an argument called `event` that has some information about the event that was triggered. In this case `event.target` is our form element, and we can get the value of our input with `event.target.text.value`. You can see all of the other properties of the `event` object by adding a `console.log(event)` and inspecting the object in your browser console.
+
+The last two lines of our event handler perform some cleanup &mdash; first we make sure to make the input blank, and then we return `false` to tell the web browser to not do the default form submit action since we have already handled it.
+
+### Inserting into a collection
+
+Inside the event handler, we are adding a task to the `tasks` collection by calling `Tasks.insert()`. We can assign any properties to the task object, such as the time created, since we don't ever have to define a schema for the collection.
+
+Being able to insert anything into the database from the client isn't very secure, but it's okay for now. In step 10 we'll learn how we can make our app secure and restrict how data is inserted into the database.
+
+### Sorting our tasks
+
+Currently, our code displays all new tasks at the bottom of the list. That's not very good for a task list, because we want to see the newest tasks first.
+
+We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code. Just add a sort option to the `find` call inside the `tasks` helper:
+
+```js
+Template.body.helpers({
+  tasks: function () {
+    // Show newest tasks first
+    return Tasks.find({}, {sort: {createdAt: -1}});
+  }
+});
+```
+
+In the next step, we'll add some very important todo list functions: checking off and deleting tasks.
+{{/markdown}}
+</template>
diff --git a/steps/blaze/step05.html b/steps/blaze/step05.html
new file mode 100644
index 0000000..af19b04
--- /dev/null
+++ b/steps/blaze/step05.html
@@ -0,0 +1,62 @@
+<template name="blaze-step05">
+{{#markdown}}
+
+# Checking off and deleting tasks
+
+Until now, we have only interacted with a collection by inserting documents. Now, we will learn how to update and remove them.
+
+Let's add two elements to our `task` template, a checkbox and a delete button:
+
+```html
+<!-- replace the existing task template with this code -->
+<template name="task">
+  <li class="{{dstache}}#if checked}}checked{{dstache}}/if}}">
+    <button class="delete">&times;</button>
+
+    <input type="checkbox" checked="{{dstache}}checked}}" class="toggle-checked" />
+
+    <span class="text">{{dstache}}text}}</span>
+  </li>
+{{lt}}/template>
+```
+
+We have added UI elements, but they don't do anything yet. We should add some event handlers:
+
+```js
+// In the client code, below everything else
+Template.task.events({
+  "click .toggle-checked": function () {
+    // Set the checked property to the opposite of its current value
+    Tasks.update(this._id, {$set: {checked: ! this.checked}});
+  },
+  "click .delete": function () {
+    Tasks.remove(this._id);
+  }
+});
+```
+
+### Getting data in event handlers
+
+Inside the event handlers, `this` refers to an individual task object. In a collection, every inserted document has a unique `_id` field that can be used to refer to that specific document. We can get the `_id` of the current task with `this._id`. Once we have the `_id`, we can use `update` and `remove` to modify the relevant task.
+
+### Update
+
+The `update` function on a collection takes two arguments. The first is a selector that identifies a subset of the collection, and the second is an update parameter that specifies what should be done to the matched objects.
+
+In this case, the selector is just the `_id` of the relevant task. The update parameter uses `$set` to toggle the `checked` field, which will represent whether the task has been completed.
+
+### Remove
+
+The `remove` function takes one argument, a selector that determines which item to remove from the collection.
+
+### Using object properties or helpers to add/remove classes
+
+If you try checking off some tasks after adding all of the above code, you will see that checked off tasks have a line through them. This is enabled by the following snippet:
+
+```html
+<li class="{{dstache}}#if checked}}checked{{dstache}}/if}}">
+```
+
+With this code, if the `checked` property of a task is `true`, the `checked` class is added to our list item. Using this class, we can make checked-off tasks look different in our CSS. 
+{{/markdown}}
+</template>
diff --git a/steps/blaze/step06.html b/steps/blaze/step06.html
new file mode 100644
index 0000000..3f6a1c4
--- /dev/null
+++ b/steps/blaze/step06.html
@@ -0,0 +1,20 @@
+<template name="blaze-step06">
+{{#markdown}}
+
+# Deploying your app
+
+Now that we have a working todo list app, we can share it with our friends! Meteor makes it really easy to put an app up on the internet where other people can use it.
+
+Simply go to your app directory, and type:
+
+```bash
+meteor deploy my_app_name.meteor.com
+```
+
+Once you answer all of the prompts and the upload completes, you can go to `http://my_app_name.meteor.com` and use your app from anywhere. 
+
+Try opening the app on multiple devices such as your phone and your friend's computer. Add, remove, and check off some tasks and you will see that the UI of your app is really fast. That's because Meteor doesn't wait for the server to respond before updating the interface - we'll talk about this more in step 11.
+
+Congratulations, you've made a working app that you can now use with your friends! In later steps we will add more functionality involving multiple users, private tasks, and search. First, we'll take a detour to see that while we were building a web app, we also created a pretty nice mobile app along the way.
+{{/markdown}}
+</template>
diff --git a/steps/blaze/step07.html b/steps/blaze/step07.html
new file mode 100644
index 0000000..6dfde15
--- /dev/null
+++ b/steps/blaze/step07.html
@@ -0,0 +1,86 @@
+<template name="blaze-step07">
+{{#markdown}}
+
+# Running your app on Android or iOS
+
+So far, we've been building our app and testing only in a web browser, but Meteor has been designed to work across different platforms - your simple todo list website can become an iOS or Android app in just a few commands.
+
+Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to [skip to the next step](/tutorials/blaze/temporary-ui-state).
+
+### Running on an Android emulator
+
+In the terminal, go to your app folder and type:
+
+```bash
+meteor install-sdk android
+```
+
+This will help you install all of the necessary tools to build an Android app from your project. When you are done installing everything, type:
+
+```bash
+meteor add-platform android
+```
+
+After you agree to the license terms, type:
+
+```bash
+meteor run android
+```
+
+After some initialization, you will see an Android emulator pop up, running your app inside a native Android wrapper. The emulator can be somewhat slow, so if you want to see what it's really like using your app, you should run it on an actual device.
+
+### Running on an Android device
+
+First, complete all of the steps above to set up the Android tools on your system. Then, make sure you have [USB Debugging enabled on your phone](http://developer.android.com/tools/device.html#developer-device-options) and the phone is plugged into your computer with a USB cable. Also, you must quit the Android emulator before running on a device.
+
+Then, run the following command:
+
+```bash
+meteor run android-device
+```
+
+The app will be built and installed on your device. If you want to point your app to the server you deployed in the previous step, run:
+
+```bash
+meteor run android-device --mobile-server my_app_name.meteor.com
+```
+
+### Running on an iOS simulator (Mac Only)
+
+If you have a Mac, you can run your app inside the iOS simulator.
+
+Go to your app folder and type:
+
+```bash
+meteor install-sdk ios
+```
+
+This will run you through the setup necessary to build an iOS app from your project. When you're done, type:
+
+```bash
+meteor add-platform ios
+meteor run ios
+```
+
+You will see the iOS simulator pop up with your app running inside.
+
+### Running on an iPhone or iPad (Mac Only; requires Apple developer account)
+
+If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
+
+```bash
+meteor run ios-device
+```
+
+This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
+
+If you want to point your app at the previously deployed server, run:
+
+```bash
+meteor run ios-device --mobile-server my_app_name.meteor.com
+```
+
+Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features.
+
+{{/markdown}}
+</template>
diff --git a/steps/blaze/step08.html b/steps/blaze/step08.html
new file mode 100644
index 0000000..87aaacd
--- /dev/null
+++ b/steps/blaze/step08.html
@@ -0,0 +1,74 @@
+<template name="blaze-step08">
+{{#markdown}}
+
+# Storing temporary UI state in Session
+
+In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to only see incomplete tasks. We're going to learn how to use `Session` to store temporary reactive state on the client.
+
+First, we need to add a checkbox to our HTML:
+
+```html
+<!-- add the checkbox to <header> right below the h1 -->
+<label class="hide-completed">
+  <input type="checkbox" checked="{{dstache}}hideCompleted}}" />
+  Hide Completed Tasks
+</label>
+```
+
+Then, we need an event handler to update a `Session` variable when the checkbox
+is checked or unchecked. `Session` is a convenient place to store temporary UI
+state, and can be used in helpers just like a collection.
+
+```js
+// Add to Template.body.events
+"change .hide-completed input": function (event) {
+  Session.set("hideCompleted", event.target.checked);
+}
+```
+
+Now, we need to update `Template.body.helpers`. The code below has a new if
+block to filter the tasks if the checkbox is checked, and a helper to make sure
+the checkbox represents the state of our Session variable.
+
+```js
+// Replace the existing Template.body.helpers
+Template.body.helpers({
+  tasks: function () {
+    if (Session.get("hideCompleted")) {
+      // If hide completed is checked, filter tasks
+      return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});
+    } else {
+      // Otherwise, return all of the tasks
+      return Tasks.find({}, {sort: {createdAt: -1}});
+    }
+  },
+  hideCompleted: function () {
+    return Session.get("hideCompleted");
+  }
+});
+```
+
+Now if you check the box, the task list will only show tasks that haven't been completed.
+
+### Session is a reactive data store for the client
+
+Until now, we have stored all of our state in collections, and the view updated automatically when we modified the data inside these collections. This is because Meteor.Collection is recognized by Meteor as a _reactive data source_, meaning Meteor knows when the data inside has changed. `Session` is the same way, but is not synced with the server like collections are. This makes `Session` a convenient place to store temporary UI state like the checkbox above. Just like with collections, we don't have to write any extra code for the template to update when the `Session` variable changes &mdash; just calling `Session.get(...)` inside the helper is enough.
+
+### One more feature: Showing a count of incomplete tasks
+
+Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a helper and change one line of the HTML.
+
+```js
+// Add to Template.body.helpers
+incompleteCount: function () {
+  return Tasks.find({checked: {$ne: true}}).count();
+}
+```
+
+```html
+<!-- display the count at the end of the <h1> tag -->
+<h1>Todo List ({{dstache}}incompleteCount}})</h1>
+```
+
+{{/markdown}}
+</template>
diff --git a/steps/blaze/step09.html b/steps/blaze/step09.html
new file mode 100644
index 0000000..acf8c9d
--- /dev/null
+++ b/steps/blaze/step09.html
@@ -0,0 +1,80 @@
+<template name="blaze-step09">
+{{#markdown}}
+
+# Adding user accounts
+
+Meteor comes with an accounts system and a drop-in login user interface that lets you add multi-user functionality to your app in minutes.
+
+To enable the accounts system and UI, we need to add the relevant packages. In your app directory, run the following command:
+
+```bash
+meteor add accounts-ui accounts-password
+```
+
+In the HTML, right under the checkbox, include the following code to add a login dropdown:
+
+```html
+{{dstache}}> loginButtons}}
+```
+
+Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
+
+```js
+// At the bottom of the client code
+Accounts.ui.config({
+  passwordSignupFields: "USERNAME_ONLY"
+});
+```
+
+Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
+
+1. Only display the new task input field to logged in users
+2. Show which user created each task
+
+To do this, we will add two new fields to the `tasks` collection:
+
+1. `owner` - the `_id` of the user that created the task.
+2. `username` - the `username` of the user that created the task. We will save the username directly in the task object so that we don't have to look up the user every time we display the task.
+
+First, let's add some code to save these fields into the `submit .new-task` event handler:
+
+```js
+Tasks.insert({
+  text: text,
+  createdAt: new Date(),            // current time
+  owner: Meteor.userId(),           // _id of logged in user
+  username: Meteor.user().username  // username of logged in user
+});
+```
+
+Then, in our HTML, add an `#if` block helper to only show the form when there is a logged in user:
+
+```html
+{{dstache}}#if currentUser}}
+  <form class="new-task">
+    <input type="text" name="text" placeholder="Type to add new tasks" />
+  </form>
+{{dstache}}/if}}
+```
+
+Finally, add a Spacebars statement to display the `username` field on each task right before the text:
+
+```html
+<span class="text"><strong>{{dstache}}username}}</strong> - {{dstache}}text}}</span>
+```
+
+Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
+
+### Automatic accounts UI
+
+If our app has the `accounts-ui` package, all we have to do to add a login dropdown is include the `loginButtons` template with `{{dstache}}> loginButtons}}`. This dropdown detects which login methods have been added to the app and displays the appropriate controls. In our case, the only enabled login method is `accounts-password`, so the dropdown displays a password field. If you are adventurous, you can add the `accounts-facebook` package to enable Facebook login in your app - the Facebook button will automatically appear in the dropdown.
+
+### Getting information about the logged-in user
+
+In your HTML, you can use the built-in `{{dstache}}currentUser}}` helper to check if a user is logged in and get information about them. For example, `{{dstache}}currentUser.username}}` will display the logged in user's username.
+
+In your JavaScript code, you can use `Meteor.userId()` to get the current user's `_id`, or `Meteor.user()` to get the whole user document.
+
+In the next step, we will learn how to make our app more secure by doing all of our data validation on the server instead of the client.
+{{/markdown}}
+</template>
diff --git a/steps/blaze/step10.html b/steps/blaze/step10.html
new file mode 100644
index 0000000..219f488
--- /dev/null
+++ b/steps/blaze/step10.html
@@ -0,0 +1,81 @@
+<template name="blaze-step10">
+{{#markdown}}
+
+# Security with methods
+
+Before this step, any user of the app could edit any part of the database. This might be okay for very small internal apps or demos, but any real application needs to control permissions for its data. In Meteor, the best way to do this is by declaring _methods_. Instead of the client code directly calling `insert`, `update`, and `remove`, it will instead call methods that will check if the user is authorized to complete the action and then make any changes to the database on the client's behalf.
+
+### Removing `insecure`
+
+Every newly created Meteor project has the `insecure` package added by default. This is the package that allows us to edit the database from the client. It's useful when prototyping, but now we are taking off the training wheels. To remove this package, go to your app directory and run:
+
+```bash
+meteor remove insecure
+```
+
+If you try to use the app after removing this package, you will notice that none of the inputs or buttons work anymore. This is because all client-side database permissions have been revoked. Now we need to rewrite some parts of our app to use methods.
+
+### Defining methods
+
+First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
+
+```js
+// At the bottom of simple-todos.js, outside of the client-only block
+Meteor.methods({
+  addTask: function (text) {
+    // Make sure the user is logged in before inserting a task
+    if (! Meteor.userId()) {
+      throw new Meteor.Error("not-authorized");
+    }
+
+    Tasks.insert({
+      text: text,
+      createdAt: new Date(),
+      owner: Meteor.userId(),
+      username: Meteor.user().username
+    });
+  },
+  deleteTask: function (taskId) {
+    Tasks.remove(taskId);
+  },
+  setChecked: function (taskId, setChecked) {
+    Tasks.update(taskId, { $set: { checked: setChecked} });
+  }
+});
+```
+
+Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
+
+```js
+// replace Tasks.insert( ... ) with:
+Meteor.call("addTask", text);
+
+// replace Tasks.update( ... ) with:
+Meteor.call("setChecked", this._id, ! this.checked);
+
+// replace Tasks.remove( ... ) with:
+Meteor.call("deleteTask", this._id);
+```
+
+Now all of our inputs and buttons will start working again. What did we gain from all of this work?
+
+1. When we insert tasks into the database, we can now securely verify that the user is logged in, that the `createdAt` field is correct, and that the `owner` and `username` fields are correct and the user isn't impersonating anyone.
+2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
+3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
+
+### Latency compensation
+
+So why do we want to define our methods on the client and on the server? We do this to enable a feature called _latency compensation_.
+
+When you call a method on the client using `Meteor.call`, two things happen in parallel:
+
+1. The client sends a request to the server to run the method in a secure environment, just like an AJAX request would work
+2. A simulation of the method runs directly on the client to attempt to predict the outcome of the server call using the available information
+
+What this means is that a newly created task actually appears on the screen _before_ the result comes back from the server.
+
+If the result from the server comes back and is consistent with the simulation on the client, everything remains as is. If the result on the server is different from the result of the simulation on the client, the UI is patched to reflect the actual state of the server.
+
+With Meteor methods and latency compensation, you get the best of both worlds &mdash; the security of server code and no round-trip delay.
+{{/markdown}}
+</template>
diff --git a/steps/blaze/step11.html b/steps/blaze/step11.html
new file mode 100644
index 0000000..80563c2
--- /dev/null
+++ b/steps/blaze/step11.html
@@ -0,0 +1,122 @@
+<template name="blaze-step11">
+{{#markdown}}
+
+# Filtering data with publish and subscribe
+
+Now that we have moved all of our app's sensitive code into methods, we need to learn about the other half of Meteor's security story. Until now, we have worked assuming the entire database is present on the client, meaning if we call `Tasks.find()` we will get every task in the collection. That's not good if users of our application want to store privacy-sensitive data. We need a way of controlling which data Meteor sends to the client-side database.
+
+Just like with `insecure` in the last step, all new Meteor apps start with the `autopublish` package. Let's remove it and see what happens:
+
+```bash
+meteor remove autopublish
+```
+
+When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and `Meteor.subscribe`.
+
+Let's add them now.
+
+```js
+// At the bottom of simple-todos.js
+if (Meteor.isServer) {
+  Meteor.publish("tasks", function () {
+    return Tasks.find();
+  });
+}
+```
+
+```js
+// At the top of our client code
+Meteor.subscribe("tasks");
+```
+
+Once you have added this code, all of the tasks will reappear.
+
+Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When `Meteor.subscribe` is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
+
+### Implementing private tasks
+
+First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
+
+```html
+<!-- add right below the code for the checkbox in the task template -->
+{{dstache}}#if isOwner}}
+  <button class="toggle-private">
+    {{dstache}}#if private}}
+      Private
+    {{dstache}}else}}
+      Public
+    {{dstache}}/if}}
+  </button>
+{{dstache}}/if}}
+
+<!-- modify the li tag to have the private class if the item is private -->
+<li class="{{dstache}}#if checked}}checked{{dstache}}/if}} {{dstache}}#if private}}private{{dstache}}/if}}">
+```
+
+We need to modify our JavaScript code in three places:
+
+```js
+// Define a helper to check if the current user is the task owner
+Template.task.helpers({
+  isOwner: function () {
+    return this.owner === Meteor.userId();
+  }
+});
+
+// Add an event for the new button to Template.task.events
+"click .toggle-private": function () {
+  Meteor.call("setPrivate", this._id, ! this.private);
+}
+
+// Add a method to Meteor.methods called setPrivate
+setPrivate: function (taskId, setToPrivate) {
+  var task = Tasks.findOne(taskId);
+
+  // Make sure only the task owner can make a task private
+  if (task.owner !== Meteor.userId()) {
+    throw new Meteor.Error("not-authorized");
+  }
+
+  Tasks.update(taskId, { $set: { private: setToPrivate } });
+}
+```
+
+Now that we have a way of setting which tasks are private, we should modify our
+publication function to only send the tasks that a user is authorized to see:
+
+```js
+// Modify the publish statement
+// Only publish tasks that are public or belong to the current user
+Meteor.publish("tasks", function () {
+  return Tasks.find({
+    $or: [
+      { private: {$ne: true} },
+      { owner: this.userId }
+    ]
+  });
+});
+```
+
+To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
+
+In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
+
+```js
+// Inside the deleteTask method
+var task = Tasks.findOne(taskId);
+if (task.private && task.owner !== Meteor.userId()) {
+  // If the task is private, make sure only the owner can delete it
+  throw new Meteor.Error("not-authorized");
+}
+
+// Inside the setChecked method
+var task = Tasks.findOne(taskId);
+if (task.private && task.owner !== Meteor.userId()) {
+  // If the task is private, make sure only the owner can check it off
+  throw new Meteor.Error("not-authorized");
+}
+```
+
+We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
+{{/markdown}}
+</template>
diff --git a/steps/blaze/step12.html b/steps/blaze/step12.html
new file mode 100644
index 0000000..3229021
--- /dev/null
+++ b/steps/blaze/step12.html
@@ -0,0 +1,40 @@
+<template name="blaze-step12">
+{{#markdown}}
+
+# What's next?
+
+Congratulations on your newly built Meteor app! Don't forget to deploy it again
+so your friends can use the new features.
+
+Your app currently supports collaborating on a single todo list. To see how you
+could add more functionality, check out the Todos example &mdash; a more
+complete app that can handle sharing multiple lists. Also, try Local Market, a
+cross-platform customer engagement app that shows off native hardware
+functionality and social features.
+
+```bash
+meteor create --example todos
+meteor create --example localmarket
+```
+
+Here are some options for where you can go next:
+
+1. Grab a [copy of Discover Meteor](https://www.discovermeteor.com/), the best Meteor book out there
+2. Read about [the design of the Meteor platform](/projects) to see how all of the parts fit together
+3. Check out the [complete documentation](https://docs.meteor.com)
+4. Explore this set of [tools]({{pathFor 'tools.info'}}) and [resources]({{pathFor 'tools.resources'}}) to help you build Meteor apps
+5. Try this tutorial using [AngularJS](/tutorials/angular)
+
+{{/markdown}}
+
+<div class="row">
+  <hr />
+  <div class="col-md-6">
+    <p>Don't forget to get on the mailing list - Meteor news, new releases, security alerts, and nothing else.</p>
+  </div>
+  <div class="col-md-6">
+    {{> emailForm}}
+  </div>
+</div>
+
+</template>
diff --git a/steps/step00.html b/steps/step00.html
new file mode 100644
index 0000000..76e64c1
--- /dev/null
+++ b/steps/step00.html
@@ -0,0 +1,49 @@
+<template name="meteor-step00">
+  <div id="content">
+          <h1 class="header" style="padding-bottom:10px;margin:0px">Installing Meteor on OS X, Linux and Windows</h1>
+          <h3 class="subhead" style="padding-top:0px">Current version: {{meteorVersion}}</h3>
+          <hr/>
+
+{{#markdown}}
+
+  Meteor supports **OS X, Windows, and Linux**, and is simple to install. The command line installer supports Mac OS X
+  10.7 (Lion) and above, and Linux on x86 and x86_64 architectures. The Windows installer supports Windows 7, Windows 8.1, Windows Server 2008, and Windows Server 2012.
+
+### On OS X or Linux?
+
+  Install the latest official Meteor release from
+  your terminal:
+
+```bash
+curl https://install.meteor.com/ | sh
+```
+
+### On Windows?
+
+  [Download the official Meteor installer
+  here](https://install.meteor.com/windows).
+
+
+###What Next?
+
+Now that you've installed Meteor, check out [the tutorial](/tutorials/blaze) that
+teaches you how to build a collaborative todo list app while showing you
+Meteor's most exciting and useful features. You can also read about [the
+design of the Meteor platform](/projects) or check out the
+[complete documentation](https://docs.meteor.com).
+
+{{/markdown}}
+
+<div class="row">
+  <hr />
+  <div class="col-md-6">
+    <p>Get on the mailing list - the latest Meteor news, new releases, critical security alerts, and nothing else.</p>
+  </div>
+  <div class="col-md-6">
+    {{> emailForm}}
+  </div>
+</div>
+
+</div>
+
+</template>
-- 
2.13.6 (Apple Git-96)


From 625fd6630b02fb94478cfaa35085b1b1f3545738 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Wed, 8 Jul 2015 21:57:35 -0700
Subject: [PATCH 002/164] Tutorials is now a package

---
 package.js | 45 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 45 insertions(+)
 create mode 100644 package.js

diff --git a/package.js b/package.js
new file mode 100644
index 0000000..8a0901e
--- /dev/null
+++ b/package.js
@@ -0,0 +1,45 @@
+Package.describe({
+  summary: "Tutorial content, included in meteor.com via package",
+  version: "0.0.1",
+  name: "tutorials"
+});
+
+Package.onUse(function (api) {
+  api.use('templating');
+  api.use('markdown');
+
+  api.addFiles([
+    'steps/angular/step01.html',
+    'steps/angular/step02.html',
+    'steps/angular/step03.html',
+    'steps/angular/step04.html',
+    'steps/angular/step05.html',
+    'steps/angular/step06.html',
+    'steps/angular/step07.html',
+    'steps/angular/step08.html',
+    'steps/angular/step09.html',
+    'steps/angular/step10.html',
+    'steps/angular/step11.html',
+    'steps/angular/step12.html',
+    'steps/blaze/step01.html',
+    'steps/blaze/step02.html',
+    'steps/blaze/step03.html',
+    'steps/blaze/step04.html',
+    'steps/blaze/step05.html',
+    'steps/blaze/step06.html',
+    'steps/blaze/step07.html',
+    'steps/blaze/step08.html',
+    'steps/blaze/step09.html',
+    'steps/blaze/step10.html',
+    'steps/blaze/step11.html',
+    'steps/blaze/step12.html',
+    'steps/step00.html',
+
+    'routes/angularTut.js',
+    'routes/blazeTut.js',
+    'routes/tutorial-pages.js'
+  ], 'client');
+
+  // Also, exports all of the templates from the steps/ directory
+  api.export('TUTORIAL_PAGES');
+});
-- 
2.13.6 (Apple Git-96)


From 545e7bef6cda6c7ff100191804b72cf5a52fbe33 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Wed, 8 Jul 2015 22:04:48 -0700
Subject: [PATCH 003/164] We need the js files on the server

---
 package.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/package.js b/package.js
index 8a0901e..d20000f 100644
--- a/package.js
+++ b/package.js
@@ -38,7 +38,7 @@ Package.onUse(function (api) {
     'routes/angularTut.js',
     'routes/blazeTut.js',
     'routes/tutorial-pages.js'
-  ], 'client');
+  ]);
 
   // Also, exports all of the templates from the steps/ directory
   api.export('TUTORIAL_PAGES');
-- 
2.13.6 (Apple Git-96)


From 81f8e1fb3bf24d58aa1df72b50998a6288561ce2 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 09:49:48 -0700
Subject: [PATCH 004/164] Move all content into real markdown files

---
 package.js                                     | 56 ++++++++++++++------------
 steps/angular/{step01.html => step01.md}       |  6 +--
 steps/angular/{step02.html => step02.md}       |  8 +---
 steps/angular/{step03.html => step03.md}       |  6 +--
 steps/angular/{step04.html => step04.md}       |  6 +--
 steps/angular/{step05.html => step05.md}       |  6 +--
 steps/{blaze/step06.html => angular/step06.md} |  6 +--
 steps/angular/{step07.html => step07.md}       |  6 +--
 steps/angular/{step08.html => step08.md}       |  6 +--
 steps/angular/{step09.html => step09.md}       |  6 +--
 steps/angular/{step10.html => step10.md}       |  6 +--
 steps/angular/{step11.html => step11.md}       |  6 +--
 steps/angular/{step12.html => step12.md}       |  8 +---
 steps/blaze/{step01.html => step01.md}         |  6 +--
 steps/blaze/{step02.html => step02.md}         |  8 +---
 steps/blaze/{step03.html => step03.md}         |  6 +--
 steps/blaze/{step04.html => step04.md}         |  6 +--
 steps/blaze/{step05.html => step05.md}         |  6 +--
 steps/{angular/step06.html => blaze/step06.md} |  6 +--
 steps/blaze/{step07.html => step07.md}         |  6 +--
 steps/blaze/{step08.html => step08.md}         |  6 +--
 steps/blaze/{step09.html => step09.md}         |  6 +--
 steps/blaze/{step10.html => step10.md}         |  6 +--
 steps/blaze/{step11.html => step11.md}         |  6 +--
 steps/blaze/{step12.html => step12.md}         |  7 +---
 25 files changed, 78 insertions(+), 129 deletions(-)
 rename steps/angular/{step01.html => step01.md} (94%)
 rename steps/angular/{step02.html => step02.md} (98%)
 rename steps/angular/{step03.html => step03.md} (97%)
 rename steps/angular/{step04.html => step04.md} (97%)
 rename steps/angular/{step05.html => step05.md} (94%)
 rename steps/{blaze/step06.html => angular/step06.md} (93%)
 rename steps/angular/{step07.html => step07.md} (98%)
 rename steps/angular/{step08.html => step08.md} (97%)
 rename steps/angular/{step09.html => step09.md} (98%)
 rename steps/angular/{step10.html => step10.md} (98%)
 rename steps/angular/{step11.html => step11.md} (98%)
 rename steps/angular/{step12.html => step12.md} (92%)
 rename steps/blaze/{step01.html => step01.md} (94%)
 rename steps/blaze/{step02.html => step02.md} (97%)
 rename steps/blaze/{step03.html => step03.md} (96%)
 rename steps/blaze/{step04.html => step04.md} (97%)
 rename steps/blaze/{step05.html => step05.md} (97%)
 rename steps/{angular/step06.html => blaze/step06.md} (93%)
 rename steps/blaze/{step07.html => step07.md} (97%)
 rename steps/blaze/{step08.html => step08.md} (97%)
 rename steps/blaze/{step09.html => step09.md} (97%)
 rename steps/blaze/{step10.html => step10.md} (98%)
 rename steps/blaze/{step11.html => step11.md} (98%)
 rename steps/blaze/{step12.html => step12.md} (94%)

diff --git a/package.js b/package.js
index d20000f..1518c12 100644
--- a/package.js
+++ b/package.js
@@ -6,35 +6,39 @@ Package.describe({
 
 Package.onUse(function (api) {
   api.use('templating');
-  api.use('markdown');
+  api.use([
+    'simple:markdown-templating@1.2.7'
+  ]);
 
   api.addFiles([
-    'steps/angular/step01.html',
-    'steps/angular/step02.html',
-    'steps/angular/step03.html',
-    'steps/angular/step04.html',
-    'steps/angular/step05.html',
-    'steps/angular/step06.html',
-    'steps/angular/step07.html',
-    'steps/angular/step08.html',
-    'steps/angular/step09.html',
-    'steps/angular/step10.html',
-    'steps/angular/step11.html',
-    'steps/angular/step12.html',
-    'steps/blaze/step01.html',
-    'steps/blaze/step02.html',
-    'steps/blaze/step03.html',
-    'steps/blaze/step04.html',
-    'steps/blaze/step05.html',
-    'steps/blaze/step06.html',
-    'steps/blaze/step07.html',
-    'steps/blaze/step08.html',
-    'steps/blaze/step09.html',
-    'steps/blaze/step10.html',
-    'steps/blaze/step11.html',
-    'steps/blaze/step12.html',
-    'steps/step00.html',
+    'steps/angular/step01.md',
+    'steps/angular/step02.md',
+    'steps/angular/step03.md',
+    'steps/angular/step04.md',
+    'steps/angular/step05.md',
+    'steps/angular/step06.md',
+    'steps/angular/step07.md',
+    'steps/angular/step08.md',
+    'steps/angular/step09.md',
+    'steps/angular/step10.md',
+    'steps/angular/step11.md',
+    'steps/angular/step12.md',
+    'steps/blaze/step01.md',
+    'steps/blaze/step02.md',
+    'steps/blaze/step03.md',
+    'steps/blaze/step04.md',
+    'steps/blaze/step05.md',
+    'steps/blaze/step06.md',
+    'steps/blaze/step07.md',
+    'steps/blaze/step08.md',
+    'steps/blaze/step09.md',
+    'steps/blaze/step10.md',
+    'steps/blaze/step11.md',
+    'steps/blaze/step12.md',
+    'steps/step00.html'
+  ], 'client');
 
+  api.addFiles([
     'routes/angularTut.js',
     'routes/blazeTut.js',
     'routes/tutorial-pages.js'
diff --git a/steps/angular/step01.html b/steps/angular/step01.md
similarity index 94%
rename from steps/angular/step01.html
rename to steps/angular/step01.md
index 7517c37..3bc17c3 100644
--- a/steps/angular/step01.html
+++ b/steps/angular/step01.md
@@ -1,5 +1,4 @@
-<template name="angular-step01">
-{{#markdown}}
+{{#template name="angular-step01"}}
 # Creating your first angular-meteor app
 
 In this tutorial, we are going to create the same 'todo' app as in the other tutorial, but this time using the [angular-meteor](http://angular-meteor.com) package to integrate angular as our reactive front-end.
@@ -31,5 +30,4 @@ Open your web browser and go to `http://localhost:3000` to see the app running.
 You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `simple-todos-angular.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
 
 Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/angular/step02.html b/steps/angular/step02.md
similarity index 98%
rename from steps/angular/step02.html
rename to steps/angular/step02.md
index 589948d..7249f12 100644
--- a/steps/angular/step02.html
+++ b/steps/angular/step02.md
@@ -1,5 +1,4 @@
-<template name="angular-step02">
-{{#markdown}}
+{{#template name="angular-step02"}}
 # Defining views with templates
 
 To turn our Meteor app into Angular compatible, we need to add the [angular-meteor package](http://angular-meteor.com/) by typing the following
@@ -95,10 +94,8 @@ All of the code in your regular .HTML files is compiled with [Meteor's Spacebars
 Before we go any further, let's make our app look nice by adding some CSS.
 
 Since this tutorial is focused on working with HTML and JavaScript, just copy all the CSS code below into `simple-todos-angular.css`. This is all the CSS code you will need until the end of the tutorial. The app will still work without the CSS, but it will look much nicer if you add it.
-{{/markdown}}
 
 {{#codeBox "Replace simple-todos-angular.css with this code"}}
-{{#markdown}}
 ```css
 /* CSS declarations go here */
 body {
@@ -227,6 +224,5 @@ header .hide-completed {
   }
 }
 ```
-{{/markdown}}
 {{/codeBox}}
-</template>
+{{/template}}
diff --git a/steps/angular/step03.html b/steps/angular/step03.md
similarity index 97%
rename from steps/angular/step03.html
rename to steps/angular/step03.md
index ae6344d..5f2e242 100644
--- a/steps/angular/step03.html
+++ b/steps/angular/step03.md
@@ -1,5 +1,4 @@
-<template name="angular-step03">
-{{#markdown}}
+{{#template name="angular-step03"}}
 
 # Storing tasks in a collection
 
@@ -51,5 +50,4 @@ You can see that we didn't have to write any explicit code to update our front-e
 
 Insert a few more tasks from the database console with different text. In the next step, we'll see how to add functionality to our app's UI so that we can add tasks without using the database console.
 
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/angular/step04.html b/steps/angular/step04.md
similarity index 97%
rename from steps/angular/step04.html
rename to steps/angular/step04.md
index 0978a33..6ca7a21 100644
--- a/steps/angular/step04.html
+++ b/steps/angular/step04.md
@@ -1,5 +1,4 @@
-<template name="angular-step04">
-{{#markdown}}
+{{#template name="angular-step04"}}
 
 # Adding tasks with a form
 
@@ -64,5 +63,4 @@ $scope.tasks = $meteor.collection(function() {
 To better understand the difference between using the sort filter and the collection options, check out the advanced tutorial about [search, sort and pagination](http://angular-meteor.com/tutorial/step_12).
 
 In the next step, we'll add some very important todo list functions: checking off and deleting tasks.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/angular/step05.html b/steps/angular/step05.md
similarity index 94%
rename from steps/angular/step05.html
rename to steps/angular/step05.md
index 07e33fe..e1b61cf 100644
--- a/steps/angular/step05.html
+++ b/steps/angular/step05.md
@@ -1,5 +1,4 @@
-<template name="angular-step05">
-{{#markdown}}
+{{#template name="angular-step05"}}
 
 # Checking off and deleting tasks
 
@@ -37,5 +36,4 @@ Here we bind the checked state of a task to a class with `ng-class`:
 ```
 
 With this code, if the `checked` property of a task is `true`, the `checked` class is added to our list item. Using this class, we can make checked-off tasks look different in our CSS. 
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/blaze/step06.html b/steps/angular/step06.md
similarity index 93%
rename from steps/blaze/step06.html
rename to steps/angular/step06.md
index 3f6a1c4..8da058b 100644
--- a/steps/blaze/step06.html
+++ b/steps/angular/step06.md
@@ -1,5 +1,4 @@
-<template name="blaze-step06">
-{{#markdown}}
+{{#template name="angular-step06"}}
 
 # Deploying your app
 
@@ -16,5 +15,4 @@ Once you answer all of the prompts and the upload completes, you can go to `http
 Try opening the app on multiple devices such as your phone and your friend's computer. Add, remove, and check off some tasks and you will see that the UI of your app is really fast. That's because Meteor doesn't wait for the server to respond before updating the interface - we'll talk about this more in step 11.
 
 Congratulations, you've made a working app that you can now use with your friends! In later steps we will add more functionality involving multiple users, private tasks, and search. First, we'll take a detour to see that while we were building a web app, we also created a pretty nice mobile app along the way.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/angular/step07.html b/steps/angular/step07.md
similarity index 98%
rename from steps/angular/step07.html
rename to steps/angular/step07.md
index 5986e9e..f21355a 100644
--- a/steps/angular/step07.html
+++ b/steps/angular/step07.md
@@ -1,5 +1,4 @@
-<template name="angular-step07">
-{{#markdown}}
+{{#template name="angular-step07"}}
 
 # Running your app on Android or iOS
 
@@ -109,5 +108,4 @@ meteor run ios-device --mobile-server my_app_name.meteor.com
 
 Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features.
 
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/angular/step08.html b/steps/angular/step08.md
similarity index 97%
rename from steps/angular/step08.html
rename to steps/angular/step08.md
index 107513b..3e98134 100644
--- a/steps/angular/step08.html
+++ b/steps/angular/step08.md
@@ -1,5 +1,4 @@
-<template name="angular-step08">
-{{#markdown}}
+{{#template name="angular-step08"}}
 
 # Filtering collections
 
@@ -94,5 +93,4 @@ $scope.incompleteCount = function () {
 <h1>Todo List ( {{dstache}} incompleteCount() }} )</h1>
 ```
 
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/angular/step09.html b/steps/angular/step09.md
similarity index 98%
rename from steps/angular/step09.html
rename to steps/angular/step09.md
index 58b552a..364c7a0 100644
--- a/steps/angular/step09.html
+++ b/steps/angular/step09.md
@@ -1,5 +1,4 @@
-<template name="angular-step09">
-{{#markdown}}
+{{#template name="angular-step09"}}
 
 # Adding user accounts
 
@@ -90,5 +89,4 @@ You can choose not to use the `accounts-ui` package template and create your own
 You can read more about it in the [chapter about angular-material](http://angular-meteor.com/tutorial/step_18) in the advanced tutorial.
 
 In the next step, we will learn how to make our app more secure by doing all of our data validation on the server instead of the client.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/angular/step10.html b/steps/angular/step10.md
similarity index 98%
rename from steps/angular/step10.html
rename to steps/angular/step10.md
index 243b015..93936f6 100644
--- a/steps/angular/step10.html
+++ b/steps/angular/step10.md
@@ -1,5 +1,4 @@
-<template name="angular-step10">
-{{#markdown}}
+{{#template name="angular-step10"}}
 
 # Security with methods
 
@@ -89,5 +88,4 @@ What this means is that a newly created task actually appears on the screen _bef
 If the result from the server comes back and is consistent with the simulation on the client, everything remains as is. If the result on the server is different from the result of the simulation on the client, the UI is patched to reflect the actual state of the server.
 
 With Meteor methods and latency compensation, you get the best of both worlds &mdash; the security of server code and no round-trip delay.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/angular/step11.html b/steps/angular/step11.md
similarity index 98%
rename from steps/angular/step11.html
rename to steps/angular/step11.md
index 0ae8fca..e3b5e3f 100644
--- a/steps/angular/step11.html
+++ b/steps/angular/step11.md
@@ -1,5 +1,4 @@
-<template name="angular-step11">
-{{#markdown}}
+{{#template name="angular-step11"}}
 
 # Filtering data with publish and subscribe
 
@@ -107,5 +106,4 @@ if (task.private && task.owner !== Meteor.userId()) {
 ```
 
 We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/angular/step12.html b/steps/angular/step12.md
similarity index 92%
rename from steps/angular/step12.html
rename to steps/angular/step12.md
index 00d3c46..30983de 100644
--- a/steps/angular/step12.html
+++ b/steps/angular/step12.md
@@ -1,5 +1,4 @@
-<template name="angular-step12">
-{{#markdown}}
+{{#template name="angular-step12"}}
 
 # What's next?
 
@@ -16,8 +15,6 @@ Here are some options for where you can go next:
 3. Continue to the [advanced tutorial](http://angular-meteor.com/tutorial)
 4. Explore this set of [tools]({{pathFor 'tools.info'}}) and [resources]({{pathFor 'tools.resources'}}) to help you build Meteor apps
 
-{{/markdown}}
-
 <div class="row">
   <hr />
   <div class="col-md-6">
@@ -27,5 +24,4 @@ Here are some options for where you can go next:
     {{> emailForm}}
   </div>
 </div>
-
-</template>
+{{/template}}
diff --git a/steps/blaze/step01.html b/steps/blaze/step01.md
similarity index 94%
rename from steps/blaze/step01.html
rename to steps/blaze/step01.md
index d6e7482..0cf3a90 100644
--- a/steps/blaze/step01.html
+++ b/steps/blaze/step01.md
@@ -1,5 +1,4 @@
-<template name="blaze-step01">
-{{#markdown}}
+{{#template name="blaze-step01"}}
 # Creating your first app
 
 In this tutorial, we are going to create a simple app to manage a 'to do' list and collaborate with others on those tasks.
@@ -31,5 +30,4 @@ Open your web browser and go to `http://localhost:3000` to see the app running.
 You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `simple-todos.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
 
 Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/blaze/step02.html b/steps/blaze/step02.md
similarity index 97%
rename from steps/blaze/step02.html
rename to steps/blaze/step02.md
index deb63c1..4459380 100644
--- a/steps/blaze/step02.html
+++ b/steps/blaze/step02.md
@@ -1,5 +1,4 @@
-<template name="blaze-step02">
-{{#markdown}}
+{{#template name="blaze-step02"}}
 # Defining views with templates
 
 To start working on our todo list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
@@ -73,10 +72,8 @@ In the next step, we will see how we can use helpers to make our templates displ
 Before we go any further, let's make our app look nice by adding some CSS.
 
 Since this tutorial is focused on working with HTML and JavaScript, just copy all the CSS code below into `simple-todos.css`. This is all the CSS code you will need until the end of the tutorial. The app will still work without the CSS, but it will look much nicer if you add it.
-{{/markdown}}
 
 {{#codeBox "Replace simple-todos.css with this code"}}
-{{#markdown}}
 ```css
 /* CSS declarations go here */
 body {
@@ -205,6 +202,5 @@ header .hide-completed {
   }
 }
 ```
-{{/markdown}}
 {{/codeBox}}
-</template>
+{{/template}}
diff --git a/steps/blaze/step03.html b/steps/blaze/step03.md
similarity index 96%
rename from steps/blaze/step03.html
rename to steps/blaze/step03.md
index 26e55a7..f202e39 100644
--- a/steps/blaze/step03.html
+++ b/steps/blaze/step03.md
@@ -1,5 +1,4 @@
-<template name="blaze-step03">
-{{#markdown}}
+{{#template name="blaze-step03"}}
 
 # Storing tasks in a collection
 
@@ -43,5 +42,4 @@ In your web browser, you will see the UI of your app immediately update to show
 
 Insert a few more tasks from the database console with different text. In the next step, we'll see how to add functionality to our app's UI so that we can add tasks without using the database console.
 
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/blaze/step04.html b/steps/blaze/step04.md
similarity index 97%
rename from steps/blaze/step04.html
rename to steps/blaze/step04.md
index 8909dd7..4547dd5 100644
--- a/steps/blaze/step04.html
+++ b/steps/blaze/step04.md
@@ -1,5 +1,4 @@
-<template name="blaze-step04">
-{{#markdown}}
+{{#template name="blaze-step04"}}
 
 # Adding tasks with a form
 
@@ -76,5 +75,4 @@ Template.body.helpers({
 ```
 
 In the next step, we'll add some very important todo list functions: checking off and deleting tasks.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/blaze/step05.html b/steps/blaze/step05.md
similarity index 97%
rename from steps/blaze/step05.html
rename to steps/blaze/step05.md
index af19b04..1e03044 100644
--- a/steps/blaze/step05.html
+++ b/steps/blaze/step05.md
@@ -1,5 +1,4 @@
-<template name="blaze-step05">
-{{#markdown}}
+{{#template name="blaze-step05"}}
 
 # Checking off and deleting tasks
 
@@ -58,5 +57,4 @@ If you try checking off some tasks after adding all of the above code, you will
 ```
 
 With this code, if the `checked` property of a task is `true`, the `checked` class is added to our list item. Using this class, we can make checked-off tasks look different in our CSS. 
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/angular/step06.html b/steps/blaze/step06.md
similarity index 93%
rename from steps/angular/step06.html
rename to steps/blaze/step06.md
index 539c3ea..f8330f2 100644
--- a/steps/angular/step06.html
+++ b/steps/blaze/step06.md
@@ -1,5 +1,4 @@
-<template name="angular-step06">
-{{#markdown}}
+{{#template name="blaze-step06"}}
 
 # Deploying your app
 
@@ -16,5 +15,4 @@ Once you answer all of the prompts and the upload completes, you can go to `http
 Try opening the app on multiple devices such as your phone and your friend's computer. Add, remove, and check off some tasks and you will see that the UI of your app is really fast. That's because Meteor doesn't wait for the server to respond before updating the interface - we'll talk about this more in step 11.
 
 Congratulations, you've made a working app that you can now use with your friends! In later steps we will add more functionality involving multiple users, private tasks, and search. First, we'll take a detour to see that while we were building a web app, we also created a pretty nice mobile app along the way.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/blaze/step07.html b/steps/blaze/step07.md
similarity index 97%
rename from steps/blaze/step07.html
rename to steps/blaze/step07.md
index 6dfde15..5a51cc3 100644
--- a/steps/blaze/step07.html
+++ b/steps/blaze/step07.md
@@ -1,5 +1,4 @@
-<template name="blaze-step07">
-{{#markdown}}
+{{#template name="blaze-step07"}}
 
 # Running your app on Android or iOS
 
@@ -82,5 +81,4 @@ meteor run ios-device --mobile-server my_app_name.meteor.com
 
 Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features.
 
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/blaze/step08.html b/steps/blaze/step08.md
similarity index 97%
rename from steps/blaze/step08.html
rename to steps/blaze/step08.md
index 87aaacd..ca8ef3d 100644
--- a/steps/blaze/step08.html
+++ b/steps/blaze/step08.md
@@ -1,5 +1,4 @@
-<template name="blaze-step08">
-{{#markdown}}
+{{#template name="blaze-step08"}}
 
 # Storing temporary UI state in Session
 
@@ -70,5 +69,4 @@ incompleteCount: function () {
 <h1>Todo List ({{dstache}}incompleteCount}})</h1>
 ```
 
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/blaze/step09.html b/steps/blaze/step09.md
similarity index 97%
rename from steps/blaze/step09.html
rename to steps/blaze/step09.md
index acf8c9d..4ae3636 100644
--- a/steps/blaze/step09.html
+++ b/steps/blaze/step09.md
@@ -1,5 +1,4 @@
-<template name="blaze-step09">
-{{#markdown}}
+{{#template name="blaze-step09"}}
 
 # Adding user accounts
 
@@ -76,5 +75,4 @@ In your HTML, you can use the built-in `{{dstache}}currentUser}}` helper to chec
 In your JavaScript code, you can use `Meteor.userId()` to get the current user's `_id`, or `Meteor.user()` to get the whole user document.
 
 In the next step, we will learn how to make our app more secure by doing all of our data validation on the server instead of the client.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/blaze/step10.html b/steps/blaze/step10.md
similarity index 98%
rename from steps/blaze/step10.html
rename to steps/blaze/step10.md
index 219f488..120202a 100644
--- a/steps/blaze/step10.html
+++ b/steps/blaze/step10.md
@@ -1,5 +1,4 @@
-<template name="blaze-step10">
-{{#markdown}}
+{{#template name="blaze-step10"}}
 
 # Security with methods
 
@@ -77,5 +76,4 @@ What this means is that a newly created task actually appears on the screen _bef
 If the result from the server comes back and is consistent with the simulation on the client, everything remains as is. If the result on the server is different from the result of the simulation on the client, the UI is patched to reflect the actual state of the server.
 
 With Meteor methods and latency compensation, you get the best of both worlds &mdash; the security of server code and no round-trip delay.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/blaze/step11.html b/steps/blaze/step11.md
similarity index 98%
rename from steps/blaze/step11.html
rename to steps/blaze/step11.md
index 80563c2..8a61038 100644
--- a/steps/blaze/step11.html
+++ b/steps/blaze/step11.md
@@ -1,5 +1,4 @@
-<template name="blaze-step11">
-{{#markdown}}
+{{#template name="blaze-step11"}}
 
 # Filtering data with publish and subscribe
 
@@ -118,5 +117,4 @@ if (task.private && task.owner !== Meteor.userId()) {
 ```
 
 We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
-{{/markdown}}
-</template>
+{{/template}}
diff --git a/steps/blaze/step12.html b/steps/blaze/step12.md
similarity index 94%
rename from steps/blaze/step12.html
rename to steps/blaze/step12.md
index 3229021..96a4542 100644
--- a/steps/blaze/step12.html
+++ b/steps/blaze/step12.md
@@ -1,5 +1,4 @@
-<template name="blaze-step12">
-{{#markdown}}
+{{#template name="blaze-step12"}}
 
 # What's next?
 
@@ -25,8 +24,6 @@ Here are some options for where you can go next:
 4. Explore this set of [tools]({{pathFor 'tools.info'}}) and [resources]({{pathFor 'tools.resources'}}) to help you build Meteor apps
 5. Try this tutorial using [AngularJS](/tutorials/angular)
 
-{{/markdown}}
-
 <div class="row">
   <hr />
   <div class="col-md-6">
@@ -37,4 +34,4 @@ Here are some options for where you can go next:
   </div>
 </div>
 
-</template>
+{{/template}}
-- 
2.13.6 (Apple Git-96)


From b1f94948607a37c86251fccc4a1fa702da418e9e Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 09:58:06 -0700
Subject: [PATCH 005/164] Add React tutorial

---
 routes/reactTut.js    | 107 ++++++++++++++++++++++
 steps/react/step01.md |  33 +++++++
 steps/react/step02.md | 249 ++++++++++++++++++++++++++++++++++++++++++++++++++
 steps/react/step03.md |  58 ++++++++++++
 steps/react/step04.md |  72 +++++++++++++++
 steps/react/step05.md |  64 +++++++++++++
 steps/react/step06.md |  18 ++++
 steps/react/step07.md |  84 +++++++++++++++++
 steps/react/step08.md |  69 ++++++++++++++
 steps/react/step09.md | 115 +++++++++++++++++++++++
 steps/react/step10.md |  79 ++++++++++++++++
 steps/react/step11.md | 159 ++++++++++++++++++++++++++++++++
 steps/react/step12.md |  37 ++++++++
 13 files changed, 1144 insertions(+)
 create mode 100644 routes/reactTut.js
 create mode 100644 steps/react/step01.md
 create mode 100644 steps/react/step02.md
 create mode 100644 steps/react/step03.md
 create mode 100644 steps/react/step04.md
 create mode 100644 steps/react/step05.md
 create mode 100644 steps/react/step06.md
 create mode 100644 steps/react/step07.md
 create mode 100644 steps/react/step08.md
 create mode 100644 steps/react/step09.md
 create mode 100644 steps/react/step10.md
 create mode 100644 steps/react/step11.md
 create mode 100644 steps/react/step12.md

diff --git a/routes/reactTut.js b/routes/reactTut.js
new file mode 100644
index 0000000..7097d07
--- /dev/null
+++ b/routes/reactTut.js
@@ -0,0 +1,107 @@
+REACT_TUT = [
+  {
+    id: "0",
+    title: 'Creating an app',
+    seoTitle: 'Creating an app',
+    route: "tutorials.react.creating-an-app",
+    path: "/tutorials/react/creating-an-app",
+    contentTemplate: 'react-step01',
+    sha: "377a8610c2fa77056d015e6998d5eb894436c99e"
+  },
+  {
+    id: "1",
+    title: 'Components',
+    seoTitle: 'Components',
+    route: "tutorials.react.components",
+    path: "/tutorials/react/components",
+    contentTemplate: 'react-step02',
+    sha: "9f5c65302f1527f25cacaaf275ea5c747d55e405"
+  },
+  {
+    id: "2",
+    title: 'Collections',
+    seoTitle: 'Collections',
+    route: "tutorials.react.collections",
+    path: "/tutorials/react/collections",
+    contentTemplate: 'react-step03',
+    sha: "ab14d317db174a3b2d408f4e24a50c7af13342cd"
+  },
+  {
+    id: "3",
+    title: 'Forms and events',
+    seoTitle: 'Forms and events',
+    route: "tutorials.react.forms-and-events",
+    path: "/tutorials/react/forms-and-events",
+    contentTemplate: 'react-step04',
+    sha: "9c24b998e540848f0dbc241702a4fcfa48fb9087"
+  },
+  {
+    id: "4",
+    title: 'Update and remove',
+    seoTitle: 'Update and remove',
+    route: "tutorials.react.update-and-remove",
+    path: "/tutorials/react/update-and-remove",
+    contentTemplate: 'react-step05',
+    sha: "4e6f9494c895eff43fe26167a7b803a24c35854e"
+  },
+  {
+    id: "5",
+    title: 'Deploying your app',
+    seoTitle: 'Deploying your app',
+    route: "tutorials.react.deploying-your-app",
+    path: "/tutorials/react/deploying-your-app",
+    contentTemplate: 'react-step06'
+  },
+  {
+    id: "6",
+    title: 'Running on mobile',
+    seoTitle: 'Running on mobile',
+    route: "tutorials.react.running-on-mobile",
+    path: "/tutorials/react/running-on-mobile",
+    contentTemplate: 'react-step07'
+  },
+  {
+    id: "7",
+    title: 'Temporary UI state',
+    seoTitle: 'Temporary UI state',
+    route: "tutorials.react.temporary-ui-state",
+    path: "/tutorials/react/temporary-ui-state",
+    contentTemplate: 'react-step08',
+    sha: "ad35c7e02a9f7c40f45f40dbff8d297fba4b13ac"
+  },
+  {
+    id: "8",
+    title: 'Adding user accounts',
+    seoTitle: 'Adding user accounts',
+    route: "tutorials.react.adding-user-accounts",
+    path: "/tutorials/react/adding-user-accounts",
+    contentTemplate: 'react-step09',
+    sha: "bb4a0fc190c44aa8cfd4189a03c2e18f1294074c"
+  },
+  {
+    id: "9",
+    title: 'Security with methods',
+    seoTitle: 'Security with methods',
+    route: "tutorials.react.security-with-methods",
+    path: "/tutorials/react/security-with-methods",
+    contentTemplate: 'react-step10',
+    sha: "e3b7fa8ed373c9e6b96fb3c370d0af238170b89a"
+  },
+  {
+    id: "10",
+    title: 'Publish and subscribe',
+    seoTitle: 'Publish and subscribe',
+    route: "tutorials.react.publish-and-subscribe",
+    path: "/tutorials/react/publish-and-subscribe",
+    contentTemplate: 'react-step11',
+    sha: "44dfd82a9e90cf8600c18b7e9f3c2e742c34285d"
+  },
+  {
+    id: "11",
+    title: 'Next steps',
+    seoTitle: 'Next steps',
+    route: "tutorials.react.next-steps",
+    path: "/tutorials/react/next-steps",
+    contentTemplate: 'react-step12'
+  }
+];
\ No newline at end of file
diff --git a/steps/react/step01.md b/steps/react/step01.md
new file mode 100644
index 0000000..fd24b0d
--- /dev/null
+++ b/steps/react/step01.md
@@ -0,0 +1,33 @@
+{{#template name="react-step01"}}
+# Creating your first app
+
+In this tutorial, we are going to create a simple app to manage a 'to do' list and collaborate with others on those tasks.
+
+To create the app, open your terminal and type:
+
+```bash
+meteor create simple-todos-react
+```
+
+This will create a new folder called `simple-todos-react` with all of the files that a Meteor app needs:
+
+```bash
+simple-todos-react.js     # a JavaScript file loaded on both client and server
+simple-todos-react.html   # an HTML file that defines view templates
+simple-todos-react.css    # a CSS file to define your app's styles
+.meteor                   # internal Meteor files
+```
+
+To run the newly created app:
+
+```bash
+cd simple-todos-react
+meteor
+```
+
+Open your web browser and go to `http://localhost:3000` to see the app running.
+
+You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `simple-todos-react.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
+
+Now that you have some experience editing the files in your Meteor app, let's start working on a simple React todo list application.
+{{/template}}
diff --git a/steps/react/step02.md b/steps/react/step02.md
new file mode 100644
index 0000000..d2c6038
--- /dev/null
+++ b/steps/react/step02.md
@@ -0,0 +1,249 @@
+{{#template name="react-step02"}}
+# Defining views with React components
+
+To start working with React as our view library, let's add the `react` package, which includes everything you need to get started using React in Meteor: the React library itself, automatic compilation of `.jsx` files, and a `ReactMeteorData` mixin for sideloading data.
+
+```sh
+meteor add react
+```
+
+### Replace the starter code
+
+To get started, let's replace the code of the default starter app. Then we'll talk about what it does.
+
+First, replace the content of the initial HTML file:
+
+```html
+<!-- replace simple-todos-react.html with this HTML -->
+<head>
+  <title>Todo List</title>
+</head>
+
+<body>
+  <div id="app"></div>
+</body>
+```
+
+Second, delete `simple-todos-react.js` and create a new file called `simple-todos-react.jsx`:
+
+```js
+// simple-todos-react.jsx
+App = React.createClass({
+  getTasks() {
+    return [
+      { _id: 1, text: "This is task 1" },
+      { _id: 2, text: "This is task 2" },
+      { _id: 3, text: "This is task 3" }
+    ];
+  },
+  render() {
+    const tasks = this.getTasks().map((task) => {
+      return <Task key={task._id} task={task} />;
+    });
+
+    return (
+      <div className="container">
+        <header>
+          <h1>Todo List</h1>
+        </header>
+
+        <ul>
+          {tasks}
+        </ul>
+      </div>
+    );
+  }
+});
+
+Task = React.createClass({
+  propTypes: {
+    task: React.PropTypes.object.isRequired
+  },
+  render() {
+    return (
+      <li>{this.props.task.text}</li>
+    );
+  }
+})
+
+if (Meteor.isClient) {
+  Meteor.startup(function () {
+    React.render(<App />, document.getElementById("app"));
+  });
+}
+```
+
+### Check the result
+
+In our browser, the app should now look much like this:
+
+> #### Todo List
+> - This is task 1
+> - This is task 2
+> - This is task 3
+
+If your app doesn't look like this, use the GitHub links at the bottom of the page to see what each file is supposed to contain. Now let's find out what all these bits of code are doing!
+
+### HTML files define static content
+
+Meteor parses all of the HTML files in your app folder and identifies three top-level tags: **&lt;head>**, **&lt;body>**, and **&lt;template>**.
+
+Everything inside any &lt;head> tags is added to the `head` section of the HTML sent to the client, and everything inside &lt;body> tags is added to the `body` section, just like in a regular HTML file.
+
+Everything inside &lt;template> tags is compiled into Meteor _templates_, which can be included inside HTML with `{{dstache}}> templateName}}` or referenced in your JavaScript with `Template.templateName`. In this tutorial, we won't be using this feature of Meteor because we will be defining all of our view components with React.
+
+### Define view components with React
+
+In React, view components are classes defined with `React.createClass`. Your component can have any methods you like, but there are several methods such as `render` that have special functions. You can read about all of them in the [official React documentation](https://facebook.github.io/react/docs/component-specs.html), but we'll go over some of the most common ones in this tutorial.
+
+### Return markup from the render method with JSX
+
+The most important method in every React component is `render()`, which is called by React to get a description of the HTML that this component should display. The HTML content is written using a JavaScript extension called JSX, which kind of looks like writing HTML inside your JavaScript. An important thing to know about JSX is that it isn't a templating language like Spacebars or Angular - it actually compiles directly to regular JavaScript. Read more about JSX [in the React docs](https://facebook.github.io/react/docs/jsx-in-depth.html).
+
+### JSX files can use ES2015 features
+
+If you haven't tried next-generation JavaScript features yet, some of the syntax in the code snippet might look weird. This is because `.jsx` files compiled with the `react` package also include support for some commonly used features of ES2015, the next version of JavaScript. Some of these features include:
+
+1. Arrow functions: `(arg) => {return result;}`
+2. Shorthand for methods: `render() { ... }`
+3. `const` and `let` instead of `var`
+
+Read more about these features here: XXX
+
+### Adding CSS
+
+Before we go any further, let's make our app look nice by adding some CSS.
+
+Since this tutorial is focused on working with HTML and JavaScript, just copy all the CSS code below into `simple-todos.css`. This is all the CSS code you will need until the end of the tutorial. The app will still work without the CSS, but it will look much nicer if you add it.
+
+{{#codeBox "Replace simple-todos.css with this code"}}
+```css
+/* CSS declarations go here */
+body {
+  font-family: sans-serif;
+  background-color: #315481;
+  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
+  background-attachment: fixed;
+
+  position: absolute;
+  top: 0;
+  bottom: 0;
+  left: 0;
+  right: 0;
+
+  padding: 0;
+  margin: 0;
+
+  font-size: 14px;
+}
+
+.container {
+  max-width: 600px;
+  margin: 0 auto;
+  min-height: 100%;
+  background: white;
+}
+
+header {
+  background: #d2edf4;
+  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
+  padding: 20px 15px 15px 15px;
+  position: relative;
+}
+
+#login-buttons {
+  display: block;
+}
+
+h1 {
+  font-size: 1.5em;
+  margin: 0;
+  margin-bottom: 10px;
+  display: inline-block;
+  margin-right: 1em;
+}
+
+form {
+  margin-top: 10px;
+  margin-bottom: -10px;
+  position: relative;
+}
+
+.new-task input {
+  box-sizing: border-box;
+  padding: 10px 0;
+  background: transparent;
+  border: none;
+  width: 100%;
+  padding-right: 80px;
+  font-size: 1em;
+}
+
+.new-task input:focus{
+  outline: 0;
+}
+
+ul {
+  margin: 0;
+  padding: 0;
+  background: white;
+}
+
+.delete {
+  float: right;
+  font-weight: bold;
+  background: none;
+  font-size: 1em;
+  border: none;
+  position: relative;
+}
+
+li {
+  position: relative;
+  list-style: none;
+  padding: 15px;
+  border-bottom: #eee solid 1px;
+}
+
+li .text {
+  margin-left: 10px;
+}
+
+li.checked {
+  color: #888;
+}
+
+li.checked .text {
+  text-decoration: line-through;
+}
+
+li.private {
+  background: #eee;
+  border-color: #ddd;
+}
+
+header .hide-completed {
+  float: right;
+}
+
+.toggle-private {
+  margin-left: 5px;
+}
+
+@media (max-width: 600px) {
+  li {
+    padding: 12px 15px;
+  }
+
+  .search {
+    width: 150px;
+    clear: both;
+  }
+
+  .new-task input {
+    padding-bottom: 5px;
+  }
+}
+```
+{{/codeBox}}
+{{/template}}
diff --git a/steps/react/step03.md b/steps/react/step03.md
new file mode 100644
index 0000000..2328a58
--- /dev/null
+++ b/steps/react/step03.md
@@ -0,0 +1,58 @@
+{{#template name="react-step03"}}
+
+# Storing tasks in a collection
+
+Collections are Meteor's way of storing persistent data. The special thing about collections in Meteor is that they can be accessed from both the server and the client, making it easy to write view logic without having to write a lot of server code. They also update themselves automatically, so a component backed by a collection will automatically display the most up-to-date data.
+
+Creating a new collection is as easy as calling `MyCollection = new Mongo.Collection("my-collection");` in your JavaScript. On the server, this sets up a MongoDB collection called `my-collection`; on the client, this creates a cache connected to the server collection. We'll learn more about the client/server divide in step 12, but for now we can write our code with the assumption that the entire database is present on the client.
+
+Let's update our code to get our tasks from a collection instead of a static array. We need to define a collection at the top of the file, and update our component to use this collection.
+
+```js
+// simple-todos-react.jsx
+
+// Define a collection to hold our tasks
+Tasks = new Mongo.Collection("tasks");
+
+App = React.createClass({
+  // This mixin makes the getMeteorData method work
+  mixins: [ReactMeteorData],
+
+  // Loads items from the Tasks collection and puts them on this.data.tasks
+  getMeteorData() {
+    return {
+      tasks: Tasks.find({}).fetch()
+    }
+  },
+
+  render() {
+    // Get tasks from this.data.tasks
+    const tasks = this.data.tasks.map((task) => {
+      return <Task key={task._id} task={task} />;
+    });
+
+    // The rest of the file is unchanged
+
+```
+
+When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
+
+### Inserting tasks from the console
+
+Items inside collections are called _documents_. Let's use the server database console to insert some documents into our collection. In a new terminal tab, go to your app directory and type:
+
+```bash
+meteor mongo
+```
+
+This opens a console into your app's local development database. Into the prompt, type:
+
+```js
+db.tasks.insert({ text: "Hello world!", createdAt: new Date() });
+```
+
+In your web browser, you will see the UI of your app immediately update to show the new task. You can see that we didn't have to write any code to connect the server-side database to our front-end code &mdash; it just happened automatically.
+
+Insert a few more tasks from the database console with different text. In the next step, we'll see how to add functionality to our app's UI so that we can add tasks without using the database console.
+
+{{/template}}
diff --git a/steps/react/step04.md b/steps/react/step04.md
new file mode 100644
index 0000000..b06c735
--- /dev/null
+++ b/steps/react/step04.md
@@ -0,0 +1,72 @@
+{{#template name="react-step04"}}
+
+# Adding tasks with a form
+
+In this step, we'll add an input field for users to add tasks to the list.
+
+First, let's add a form to our `App` component:
+
+```
+<header>
+  <h1>Todo List</h1>
+
+  <!-- add a form right below the h1 -->
+  <form className="new-task" onSubmit={this.handleSubmit} >
+    <input
+      type="text"
+      ref="textInput"
+      placeholder="Type to add new tasks" />
+  </form>
+</header>
+```
+
+You can see that the `form` element has an `onSubmit` attribute that references a method on the component called `handleSubmit`. This is how you listen to browser events, like the submit event on the form, in React. The `input` element has a `ref` property which will let us easily access this element later.
+
+Let's add a `handleSubmit` method to our `App` component:
+
+```js
+// Inside the App component, below getMeteorData() and above render()
+handleSubmit(event) {
+  event.preventDefault();
+
+  // Find the text field via the React ref
+  var text = React.findDOMNode(this.refs.textInput).value.trim();
+
+  Tasks.insert({
+    text: text,
+    createdAt: new Date() // current time
+  });
+
+  // Clear form
+  React.findDOMNode(this.refs.textInput).value = "";
+},
+```
+
+Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
+
+### Listening for events in React
+
+...
+
+### Inserting into a collection
+
+Inside the event handler, we are adding a task to the `tasks` collection by calling `Tasks.insert()`. We can assign any properties to the task object, such as the time created, since we don't ever have to define a schema for the collection.
+
+Being able to insert anything into the database from the client isn't very secure, but it's okay for now. In step 10 we'll learn how we can make our app secure and restrict how data is inserted into the database.
+
+### Sorting our tasks
+
+Currently, our code displays all new tasks at the bottom of the list. That's not very good for a task list, because we want to see the newest tasks first.
+
+We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code. Just add a sort option to the `find` call inside `getMeteorData` on the `App` component:
+
+```js
+getMeteorData() {
+  return {
+    tasks: Tasks.find({}, {sort: {createdAt: -1}}).fetch()
+  }
+},
+```
+
+In the next step, we'll add some very important todo list functions: checking off and deleting tasks.
+{{/template}}
diff --git a/steps/react/step05.md b/steps/react/step05.md
new file mode 100644
index 0000000..de86a1d
--- /dev/null
+++ b/steps/react/step05.md
@@ -0,0 +1,64 @@
+{{#template name="react-step05"}}
+
+# Checking off and deleting tasks
+
+Until now, we have only interacted with a collection by inserting documents. Now, we will learn how to update and remove them.
+
+Let's add two new elements to our `task` component, a checkbox and a delete button, with event handlers for both:
+
+```js
+// Replace the Task component with this new one
+// that has a checkbox and a delete button
+Task = React.createClass({
+  propTypes: {
+    task: React.PropTypes.object.isRequired
+  },
+  toggleChecked() {
+    // Set the checked property to the opposite of its current value
+    Tasks.update(this.props.task._id, {
+      $set: {checked: ! this.props.task.checked}
+    });
+  },
+  deleteThisTask() {
+    Tasks.remove(this.props.task._id);
+  },
+  render() {
+    return (
+      <li className={this.props.task.checked ? "checked" : ""}>
+        <button className="delete" onClick={this.deleteThisTask}>
+          &times;
+        </button>
+
+        <input
+          type="checkbox"
+          readOnly={true}
+          checked={this.props.task.checked}
+          onClick={this.toggleChecked} />
+
+        <span className="text">{this.props.task.text}</span>
+      </li>
+    );
+  }
+});
+```
+
+### Update
+
+The `update` function on a collection takes two arguments. The first is a selector that identifies a subset of the collection, and the second is an update parameter that specifies what should be done to the matched objects.
+
+In this case, the selector is just the `_id` of the relevant task. The update parameter uses `$set` to toggle the `checked` field, which will represent whether the task has been completed.
+
+### Remove
+
+The `remove` function takes one argument, a selector that determines which item to remove from the collection.
+
+### Using object properties or helpers to add/remove classes
+
+If you try checking off some tasks after adding all of the above code, you will see that checked off tasks have a line through them. This is enabled by the following snippet:
+
+```html
+<li className={this.props.task.checked ? "checked" : ""}>
+```
+
+With this code, if the `checked` property of a task is `true`, the `checked` class is added to our list item. Using this class, we can make checked-off tasks look different in our CSS. 
+{{/template}}
diff --git a/steps/react/step06.md b/steps/react/step06.md
new file mode 100644
index 0000000..d65fef2
--- /dev/null
+++ b/steps/react/step06.md
@@ -0,0 +1,18 @@
+{{#template name="react-step06"}}
+
+# Deploying your app
+
+Now that we have a working todo list app, we can share it with our friends! Meteor makes it really easy to put an app up on the internet where other people can use it.
+
+Simply go to your app directory, and type:
+
+```bash
+meteor deploy my_app_name.meteor.com
+```
+
+Once you answer all of the prompts and the upload completes, you can go to `http://my_app_name.meteor.com` and use your app from anywhere. 
+
+Try opening the app on multiple devices such as your phone and your friend's computer. Add, remove, and check off some tasks and you will see that the UI of your app is really fast. That's because Meteor doesn't wait for the server to respond before updating the interface - we'll talk about this more in step 11.
+
+Congratulations, you've made a working app that you can now use with your friends! In later steps we will add more functionality involving multiple users, private tasks, and search. First, we'll take a detour to see that while we were building a web app, we also created a pretty nice mobile app along the way.
+{{/template}}
diff --git a/steps/react/step07.md b/steps/react/step07.md
new file mode 100644
index 0000000..cc57e1b
--- /dev/null
+++ b/steps/react/step07.md
@@ -0,0 +1,84 @@
+{{#template name="react-step07"}}
+
+# Running your app on Android or iOS
+
+So far, we've been building our app and testing only in a web browser, but Meteor has been designed to work across different platforms - your simple todo list website can become an iOS or Android app in just a few commands.
+
+Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to [skip to the next step](/tutorials/react/temporary-ui-state).
+
+### Running on an Android emulator
+
+In the terminal, go to your app folder and type:
+
+```bash
+meteor install-sdk android
+```
+
+This will help you install all of the necessary tools to build an Android app from your project. When you are done installing everything, type:
+
+```bash
+meteor add-platform android
+```
+
+After you agree to the license terms, type:
+
+```bash
+meteor run android
+```
+
+After some initialization, you will see an Android emulator pop up, running your app inside a native Android wrapper. The emulator can be somewhat slow, so if you want to see what it's really like using your app, you should run it on an actual device.
+
+### Running on an Android device
+
+First, complete all of the steps above to set up the Android tools on your system. Then, make sure you have [USB Debugging enabled on your phone](http://developer.android.com/tools/device.html#developer-device-options) and the phone is plugged into your computer with a USB cable. Also, you must quit the Android emulator before running on a device.
+
+Then, run the following command:
+
+```bash
+meteor run android-device
+```
+
+The app will be built and installed on your device. If you want to point your app to the server you deployed in the previous step, run:
+
+```bash
+meteor run android-device --mobile-server my_app_name.meteor.com
+```
+
+### Running on an iOS simulator (Mac Only)
+
+If you have a Mac, you can run your app inside the iOS simulator.
+
+Go to your app folder and type:
+
+```bash
+meteor install-sdk ios
+```
+
+This will run you through the setup necessary to build an iOS app from your project. When you're done, type:
+
+```bash
+meteor add-platform ios
+meteor run ios
+```
+
+You will see the iOS simulator pop up with your app running inside.
+
+### Running on an iPhone or iPad (Mac Only; requires Apple developer account)
+
+If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
+
+```bash
+meteor run ios-device
+```
+
+This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
+
+If you want to point your app at the previously deployed server, run:
+
+```bash
+meteor run ios-device --mobile-server my_app_name.meteor.com
+```
+
+Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features.
+
+{{/template}}
diff --git a/steps/react/step08.md b/steps/react/step08.md
new file mode 100644
index 0000000..a93beed
--- /dev/null
+++ b/steps/react/step08.md
@@ -0,0 +1,69 @@
+{{#template name="react-step08"}}
+
+# Storing temporary UI data in component state
+
+In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to only see incomplete tasks. We're going to learn how to use React's component state to store temporary data that is only used on the client.
+
+First, we need to add a checkbox to our `App` component:
+
+```html
+<!-- add the checkbox to <header> right below the <h1> -->
+<label className="hide-completed">
+  <input
+    type="checkbox"
+    readOnly={true}
+    checked={this.state.hideCompleted}
+    onClick={this.toggleHideCompleted} />
+  Hide Completed Tasks
+</label>
+```
+
+You can see that it reads from `this.state.hideCompleted`. React components have a special field called `state` where you can store encapsulated component data. We can update `this.state` from an event handler by calling `this.setState`, which will update the state property asynchronously and then cause the component to re-render:
+
+```js
+// Add this method to the App component, right above render()
+toggleHideCompleted() {
+  this.setState({
+    hideCompleted: ! this.state.hideCompleted
+  });
+},
+```
+
+Now, we need to update `getMeteorData` to filter out completed tasks when `this.state.hideCompleted` is true:
+
+```js
+// Replace getMeteorData on the App component
+getMeteorData() {
+  let query = {};
+
+  if (this.state.hideCompleted) {
+    // If hide completed is checked, filter tasks
+    query = {checked: {$ne: true}};
+  }
+
+  return {
+    tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch()
+  };
+}
+```
+
+Now if you check the box, the task list will only show tasks that haven't been completed.
+
+### One more feature: Showing a count of incomplete tasks
+
+Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to return a count from `getMeteorData` and add a line to our `render` method.
+
+```js
+// Replace return statement in getMeteorData to also return incompleteCount
+return {
+  tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch(),
+  incompleteCount: Tasks.find({checked: {$ne: true}}).count()
+}
+```
+
+```html
+<!-- display the count at the end of the <h1> tag -->
+<h1>Todo List ({this.data.incompleteCount})</h1>
+```
+
+{{/template}}
diff --git a/steps/react/step09.md b/steps/react/step09.md
new file mode 100644
index 0000000..8fc7033
--- /dev/null
+++ b/steps/react/step09.md
@@ -0,0 +1,115 @@
+{{#template name="react-step09"}}
+
+# Adding user accounts
+
+Meteor comes with an accounts system and a drop-in login user interface that lets you add multi-user functionality to your app in minutes.
+
+> Currently, this UI component uses Blaze, Meteor's default UI engine. In the future, there might also be a React-specific component for this.
+
+To enable the accounts system and UI, we need to add the relevant packages. In your app directory, run the following command:
+
+```bash
+meteor add accounts-ui accounts-password
+```
+
+### Wrapping a Blaze component in React
+
+To use the UI component from the `accounts-ui` package, we need to wrap it in a React component. To do so, add this code near the bottom of `simple-todos-react.jsx`, below the `Task` component and above the `if (Meteor.isClient) { ... }` section.
+
+```js
+AccountsUIWrapper = React.createClass({
+  componentDidMount() {
+    // Use Meteor blaze to render login buttons
+    Blaze.render(Template.loginButtons,
+      React.findDOMNode(this.refs.container));
+  },
+  render() {
+    // Just render a placeholder container that will be filled in
+    return <span ref="container" />;
+  }
+});
+```
+
+In the App component `render` method, right under the checkbox and above the new task form, include the component we just defined:
+
+```html
+<AccountsUIWrapper />
+```
+
+Then, at the bottom of the `if (Meteor.isClient) { ... }` block, add the following code to configure the accounts UI to use usernames instead of email addresses:
+
+```js
+// At the bottom of the client code
+Accounts.ui.config({
+  passwordSignupFields: "USERNAME_ONLY"
+});
+```
+
+### Adding user-related functionality
+
+Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
+
+1. Only display the new task input field to logged in users
+2. Show which user created each task
+
+To do this, we will add two new fields to the `tasks` collection:
+
+1. `owner` - the `_id` of the user that created the task.
+2. `username` - the `username` of the user that created the task. We will save the username directly in the task object so that we don't have to look up the user every time we display the task.
+
+First, let's add some code to save these fields into the `handleSubmit` event handler:
+
+```js
+Tasks.insert({
+  text: text,
+  createdAt: new Date(),            // current time
+  owner: Meteor.userId(),           // _id of logged in user
+  username: Meteor.user().username  // username of logged in user
+});
+```
+
+Modify the `return` statement on `getMeteorData` to get information about the currently logged in user:
+
+```js
+// In the getMeteorData method
+return {
+  tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch(),
+  incompleteCount: Tasks.find({checked: {$ne: true}}).count(),
+  currentUser: Meteor.user()
+}
+```
+
+Then, in our render method, add a conditional statement to only show the form when there is a logged in user:
+
+```html
+{ this.data.currentUser ?
+  <form className="new-task" onSubmit={this.handleSubmit} >
+    <input
+      type="text"
+      ref="textInput"
+      placeholder="Type to add new tasks" />
+  </form> : ''
+}
+```
+
+Finally, add a statement to display the `username` field on each task right before the text:
+
+```html
+<!-- in the render method of the Task component -->
+<span className="text">
+  <strong>{this.props.task.username}</strong>: {this.props.task.text}
+</span>
+```
+
+Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
+
+### Automatic accounts UI
+
+If our app has the `accounts-ui` package, all we have to do to add a login dropdown is render the included UI component. This dropdown detects which login methods have been added to the app and displays the appropriate controls. In our case, the only enabled login method is `accounts-password`, so the dropdown displays a password field. If you are adventurous, you can add the `accounts-facebook` package to enable Facebook login in your app - the Facebook button will automatically appear in the dropdown.
+
+### Getting information about the logged-in user
+
+In your `getMeteorData` method, you can use `Meteor.user()` to check if a user is logged in and get information about them. For example, `Meteor.user().username` contains the logged in user's username. You can also use `Meteor.userId()` to just get the current user's `_id`.
+
+In the next step, we will learn how to make our app more secure by doing data validation on the server.
+{{/template}}
diff --git a/steps/react/step10.md b/steps/react/step10.md
new file mode 100644
index 0000000..53e7648
--- /dev/null
+++ b/steps/react/step10.md
@@ -0,0 +1,79 @@
+{{#template name="react-step10"}}
+
+# Security with methods
+
+Before this step, any user of the app could edit any part of the database. This might be okay for very small internal apps or demos, but any real application needs to control permissions for its data. In Meteor, the best way to do this is by declaring _methods_. Instead of the client code directly calling `insert`, `update`, and `remove`, it will instead call methods that will check if the user is authorized to complete the action and then make any changes to the database on the client's behalf.
+
+### Removing `insecure`
+
+Every newly created Meteor project has the `insecure` package added by default. This is the package that allows us to edit the database from the client. It's useful when prototyping, but now we are taking off the training wheels. To remove this package, go to your app directory and run:
+
+```bash
+meteor remove insecure
+```
+
+If you try to use the app after removing this package, you will notice that none of the inputs or buttons work anymore. This is because all client-side database permissions have been revoked. Now we need to rewrite some parts of our app to use methods.
+
+### Defining methods
+
+First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
+
+```js
+// At the bottom of simple-todos.js, outside of the client-only block
+Meteor.methods({
+  addTask(text) {
+    // Make sure the user is logged in before inserting a task
+    if (! Meteor.userId()) {
+      throw new Meteor.Error("not-authorized");
+    }
+
+    Tasks.insert({
+      text: text,
+      createdAt: new Date(),
+      owner: Meteor.userId(),
+      username: Meteor.user().username
+    });
+  },
+  deleteTask(taskId) {
+    Tasks.remove(taskId);
+  },
+  setChecked(taskId, setChecked) {
+    Tasks.update(taskId, { $set: { checked: setChecked} });
+  }
+});
+```
+
+Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
+
+```js
+// replace Tasks.insert( ... ) with:
+Meteor.call("addTask", text);
+
+// replace Tasks.update( ... ) with:
+Meteor.call("setChecked", this._id, ! this.checked);
+
+// replace Tasks.remove( ... ) with:
+Meteor.call("deleteTask", this._id);
+```
+
+Now all of our inputs and buttons will start working again. What did we gain from all of this work?
+
+1. When we insert tasks into the database, we can now securely verify that the user is logged in, that the `createdAt` field is correct, and that the `owner` and `username` fields are correct and the user isn't impersonating anyone.
+2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
+3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
+
+### Latency compensation
+
+So why do we want to define our methods on the client and on the server? We do this to enable a feature called _latency compensation_.
+
+When you call a method on the client using `Meteor.call`, two things happen in parallel:
+
+1. The client sends a request to the server to run the method in a secure environment, just like an AJAX request would work
+2. A simulation of the method runs directly on the client to attempt to predict the outcome of the server call using the available information
+
+What this means is that a newly created task actually appears on the screen _before_ the result comes back from the server.
+
+If the result from the server comes back and is consistent with the simulation on the client, everything remains as is. If the result on the server is different from the result of the simulation on the client, the UI is patched to reflect the actual state of the server.
+
+With Meteor methods and latency compensation, you get the best of both worlds &mdash; the security of server code and no round-trip delay.
+{{/template}}
diff --git a/steps/react/step11.md b/steps/react/step11.md
new file mode 100644
index 0000000..850056c
--- /dev/null
+++ b/steps/react/step11.md
@@ -0,0 +1,159 @@
+{{#template name="react-step11"}}
+
+# Filtering data with publish and subscribe
+
+Now that we have moved all of our app's sensitive code into methods, we need to learn about the other half of Meteor's security story. Until now, we have worked assuming the entire database is present on the client, meaning if we call `Tasks.find()` we will get every task in the collection. That's not good if users of our application want to store privacy-sensitive data. We need a way of controlling which data Meteor sends to the client-side database.
+
+Just like with `insecure` in the last step, all new Meteor apps start with the `autopublish` package. Let's remove it and see what happens:
+
+```bash
+meteor remove autopublish
+```
+
+When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and `Meteor.subscribe`.
+
+Let's add them now.
+
+```js
+// At the bottom of simple-todos-react.jsx
+if (Meteor.isServer) {
+  Meteor.publish("tasks", function () {
+    return Tasks.find();
+  });
+}
+```
+
+```js
+// At the top of the if (Meteor.isClient) { ... } block
+Meteor.subscribe("tasks");
+```
+
+
+Once you have added this code, all of the tasks will reappear.
+
+Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When `Meteor.subscribe` is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
+
+### Adding a button to make tasks private
+
+Let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
+
+First, we need to add a new method that we can call to set a task's private status:
+
+```js
+// Add a method underneath `setChecked`
+setPrivate(taskId, setToPrivate) {
+  var task = Tasks.findOne(taskId);
+
+  // Make sure only the task owner can make a task private
+  if (task.owner !== Meteor.userId()) {
+    throw new Meteor.Error("not-authorized");
+  }
+
+  Tasks.update(taskId, { $set: { private: setToPrivate } });
+}
+``` 
+
+Now, we need to pass a new property to the `Task` to decide whether we want
+to show the private button; the button should show up only if the currently
+logged in user owns this task:
+
+```js
+// New code to generate the tasks array at the top of the render function for
+// the App component
+const tasks = this.data.tasks.map((task) => {
+  const showPrivateButton = task.owner === this.data.currentUser._id;
+  return <Task
+    key={task._id}
+    task={task}
+    showPrivateButton={showPrivateButton} />;
+});
+```
+
+```js
+// Add a new proptype for showPrivateButton
+propTypes: {
+  task: React.PropTypes.object.isRequired,
+  showPrivateButton: React.PropTypes.bool.isRequired
+},
+```
+
+Let's add the button, using this new prop to decide whether it should be displayed:
+
+```html
+<!-- inside the render function of Task, under the checkbox code -->
+{ this.props.showPrivateButton ? (
+  <button className="toggle-private" onClick={this.togglePrivate}>
+    { this.props.task.private ? "Private" : "Public" }
+  </button>
+) : ''}
+```
+
+We need to define the event handler called by the button:
+
+```js
+// Add this method on the Task component right below deleteThisTask()
+togglePrivate() {
+  Meteor.call("setPrivate", this.props.task._id, ! this.props.task.private);
+},
+```
+
+One last thing, let's update the class of the `<li>` element in the `Task` component to reflect it's privacy status:
+
+```js
+// At the top of the render method of the Task component
+render() {
+  // Generate the className property in a separate variable
+  const taskClassName = (this.props.task.checked ? "checked" : "") +
+    (this.props.task.private ? "private" : "");
+
+  // The checkbox is read-only because we are going to manually manage
+  // its state.
+  return (
+    <li className={taskClassName}>
+      <button className="delete" onClick={this.deleteThisTask}>
+        &times;
+      </button>
+
+      // ... rest of render method
+```
+
+### Selectively publishing tasks based on privacy status
+
+Now that we have a way of setting which tasks are private, we should modify our
+publication function to only send the tasks that a user is authorized to see:
+
+```js
+// Modify the publish statement
+// Only publish tasks that are public or belong to the current user
+Meteor.publish("tasks", function () {
+  return Tasks.find({
+    $or: [
+      { private: {$ne: true} },
+      { owner: this.userId }
+    ]
+  });
+});
+```
+
+To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
+
+In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
+
+```js
+// Inside the deleteTask method
+var task = Tasks.findOne(taskId);
+if (task.private && task.owner !== Meteor.userId()) {
+  // If the task is private, make sure only the owner can delete it
+  throw new Meteor.Error("not-authorized");
+}
+
+// Inside the setChecked method
+var task = Tasks.findOne(taskId);
+if (task.private && task.owner !== Meteor.userId()) {
+  // If the task is private, make sure only the owner can check it off
+  throw new Meteor.Error("not-authorized");
+}
+```
+
+We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
+{{/template}}
diff --git a/steps/react/step12.md b/steps/react/step12.md
new file mode 100644
index 0000000..badcf84
--- /dev/null
+++ b/steps/react/step12.md
@@ -0,0 +1,37 @@
+{{#template name="react-step12"}}
+
+# What's next?
+
+Congratulations on your newly built Meteor app! Don't forget to deploy it again
+so your friends can use the new features.
+
+Your app currently supports collaborating on a single todo list. To see how you
+could add more functionality, check out the Todos example &mdash; a more
+complete app that can handle sharing multiple lists. Also, try Local Market, a
+cross-platform customer engagement app that shows off native hardware
+functionality and social features.
+
+```bash
+meteor create --example todos
+meteor create --example localmarket
+```
+
+Here are some options for where you can go next:
+
+1. Grab a [copy of Discover Meteor](https://www.discovermeteor.com/), the best Meteor book out there
+2. Read about [the design of the Meteor platform](/projects) to see how all of the parts fit together
+3. Check out the [complete documentation](https://docs.meteor.com)
+4. Explore this set of [tools]({{pathFor 'tools.info'}}) and [resources]({{pathFor 'tools.resources'}}) to help you build Meteor apps
+5. Try this tutorial using [AngularJS](/tutorials/angular)
+
+<div class="row">
+  <hr />
+  <div class="col-md-6">
+    <p>Don't forget to get on the mailing list - Meteor news, new releases, security alerts, and nothing else.</p>
+  </div>
+  <div class="col-md-6">
+    {{> emailForm}}
+  </div>
+</div>
+
+{{/template}}
-- 
2.13.6 (Apple Git-96)


From ceb5158ff910f33af42269cbf5a16ef5e0f39438 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 09:59:13 -0700
Subject: [PATCH 006/164] Add React to package.js

---
 package.js | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/package.js b/package.js
index 1518c12..7bdaa16 100644
--- a/package.js
+++ b/package.js
@@ -35,6 +35,18 @@ Package.onUse(function (api) {
     'steps/blaze/step10.md',
     'steps/blaze/step11.md',
     'steps/blaze/step12.md',
+    'steps/react/step01.md',
+    'steps/react/step02.md',
+    'steps/react/step03.md',
+    'steps/react/step04.md',
+    'steps/react/step05.md',
+    'steps/react/step06.md',
+    'steps/react/step07.md',
+    'steps/react/step08.md',
+    'steps/react/step09.md',
+    'steps/react/step10.md',
+    'steps/react/step11.md',
+    'steps/react/step12.md',
     'steps/step00.html'
   ], 'client');
 
-- 
2.13.6 (Apple Git-96)


From 4594360de12aad77d6fd5f3bf0c6e42a31873519 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 10:03:41 -0700
Subject: [PATCH 007/164] Improve README

---
 README.md | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/README.md b/README.md
index cf7e385..5c18f1e 100644
--- a/README.md
+++ b/README.md
@@ -1,2 +1,11 @@
-# tutorials
-The Meteor tutorials from meteor.com
+# Official Meteor tutorials
+
+This repository contains the content for the official Meteor tutorials at [meteor.com](https://www.meteor.com/tutorials/blaze/creating-an-app).
+
+Feel free to submit a pull request to improve the content!
+
+### Current contents
+
+1. `/steps/blaze`: [Meteor and Blaze tutorial](https://www.meteor.com/tutorials/blaze/creating-an-app)
+2. `/steps/angular`: [Meteor and Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app)
+3. `/steps/react`: [Meteor and React tutorial](https://www.meteor.com/tutorials/react/creating-an-app)
-- 
2.13.6 (Apple Git-96)


From 56694d76c2e643c76428ecced35a2460724f60ab Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 10:04:04 -0700
Subject: [PATCH 008/164] Note that React is work in progress

---
 README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 5c18f1e..0d451e6 100644
--- a/README.md
+++ b/README.md
@@ -8,4 +8,4 @@ Feel free to submit a pull request to improve the content!
 
 1. `/steps/blaze`: [Meteor and Blaze tutorial](https://www.meteor.com/tutorials/blaze/creating-an-app)
 2. `/steps/angular`: [Meteor and Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app)
-3. `/steps/react`: [Meteor and React tutorial](https://www.meteor.com/tutorials/react/creating-an-app)
+3. `/steps/react`: Meteor and React tutorial, work in progress (not live yet)
-- 
2.13.6 (Apple Git-96)


From 7a4062082634e2c92401a34ce69c43a8fa3d234b Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 10:12:51 -0700
Subject: [PATCH 009/164] Add todo items

---
 README.md | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/README.md b/README.md
index 0d451e6..a89be6a 100644
--- a/README.md
+++ b/README.md
@@ -9,3 +9,9 @@ Feel free to submit a pull request to improve the content!
 1. `/steps/blaze`: [Meteor and Blaze tutorial](https://www.meteor.com/tutorials/blaze/creating-an-app)
 2. `/steps/angular`: [Meteor and Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app)
 3. `/steps/react`: Meteor and React tutorial, work in progress (not live yet)
+
+### To do
+
+1. Improve maintainability of the step-by-step git repositories
+2. Create a simple app in this repo to view the tutorials as a standalone thing
+3. Factor out common content into templates to DRY things up
\ No newline at end of file
-- 
2.13.6 (Apple Git-96)


From e66749bad76c76afab942d4d7a31d396a6480624 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 11:25:20 -0700
Subject: [PATCH 010/164] Export some extra stuff

---
 package.js | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/package.js b/package.js
index 7bdaa16..4f6307e 100644
--- a/package.js
+++ b/package.js
@@ -5,9 +5,10 @@ Package.describe({
 });
 
 Package.onUse(function (api) {
-  api.use('templating');
+  api.versionsFrom("1.1.0.2");
   api.use([
-    'simple:markdown-templating@1.2.7'
+    'simple:markdown-templating@1.2.7',
+    'templating'
   ]);
 
   api.addFiles([
@@ -53,9 +54,14 @@ Package.onUse(function (api) {
   api.addFiles([
     'routes/angularTut.js',
     'routes/blazeTut.js',
+    'routes/reactTut.js',
     'routes/tutorial-pages.js'
   ]);
 
   // Also, exports all of the templates from the steps/ directory
   api.export('TUTORIAL_PAGES');
+
+  api.export('REACT_TUT');
+  api.export('ANGULAR_TUT');
+  api.export('BLAZE_TUT');
 });
-- 
2.13.6 (Apple Git-96)


From 0a5431b68cdb8a388dfd9641202b2e73ccc7a01a Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 13:58:37 -0700
Subject: [PATCH 011/164] Edits

---
 steps/react/step01.md |  2 +-
 steps/react/step02.md | 18 +++++++++++-------
 steps/react/step03.md |  8 ++++----
 steps/react/step04.md |  4 ++--
 steps/react/step05.md | 15 +++++----------
 steps/react/step08.md |  4 ++--
 steps/react/step09.md |  7 ++++---
 steps/react/step10.md |  6 +++---
 steps/react/step11.md | 41 +++++++++++++++++++----------------------
 9 files changed, 51 insertions(+), 54 deletions(-)

diff --git a/steps/react/step01.md b/steps/react/step01.md
index fd24b0d..9809d82 100644
--- a/steps/react/step01.md
+++ b/steps/react/step01.md
@@ -1,7 +1,7 @@
 {{#template name="react-step01"}}
 # Creating your first app
 
-In this tutorial, we are going to create a simple app to manage a 'to do' list and collaborate with others on those tasks.
+In this tutorial, we are going to create a simple app to manage a todo list and collaborate with others on those tasks.
 
 To create the app, open your terminal and type:
 
diff --git a/steps/react/step02.md b/steps/react/step02.md
index d2c6038..e197be7 100644
--- a/steps/react/step02.md
+++ b/steps/react/step02.md
@@ -1,7 +1,7 @@
 {{#template name="react-step02"}}
 # Defining views with React components
 
-To start working with React as our view library, let's add the `react` package, which includes everything you need to get started using React in Meteor: the React library itself, automatic compilation of `.jsx` files, and a `ReactMeteorData` mixin for sideloading data.
+To start working with React as our view library, let's add the `react` package, which includes everything you need to get started using React in Meteor: the React library itself, automatic compilation of `.jsx` files, and a `ReactMeteorData` mixin for loading data.
 
 ```sh
 meteor add react
@@ -36,11 +36,12 @@ App = React.createClass({
       { _id: 3, text: "This is task 3" }
     ];
   },
-  render() {
-    const tasks = this.getTasks().map((task) => {
+  renderTasks() {
+    return this.getTasks().map((task) => {
       return <Task key={task._id} task={task} />;
     });
-
+  },
+  render() {
     return (
       <div className="container">
         <header>
@@ -48,7 +49,7 @@ App = React.createClass({
         </header>
 
         <ul>
-          {tasks}
+          {this.renderTasks()}
         </ul>
       </div>
     );
@@ -57,6 +58,8 @@ App = React.createClass({
 
 Task = React.createClass({
   propTypes: {
+    // This component gets the task to display through a React prop.
+    // We can use propTypes to indicate it is required
     task: React.PropTypes.object.isRequired
   },
   render() {
@@ -68,6 +71,7 @@ Task = React.createClass({
 
 if (Meteor.isClient) {
   Meteor.startup(function () {
+    // Use Meteor.startup to render the component after the page is ready
     React.render(<App />, document.getElementById("app"));
   });
 }
@@ -94,11 +98,11 @@ Everything inside &lt;template> tags is compiled into Meteor _templates_, which
 
 ### Define view components with React
 
-In React, view components are classes defined with `React.createClass`. Your component can have any methods you like, but there are several methods such as `render` that have special functions. You can read about all of them in the [official React documentation](https://facebook.github.io/react/docs/component-specs.html), but we'll go over some of the most common ones in this tutorial.
+In React, view components are classes defined with `React.createClass`. Your component can have any methods you like, but there are several methods such as `render` that have special functions. Components can also receive data from their parents through attributes called `props`. We'll go over some of the more common features of React in this tutorial; you can also check out [Facebook's React tutorial](https://facebook.github.io/react/docs/tutorial.html).
 
 ### Return markup from the render method with JSX
 
-The most important method in every React component is `render()`, which is called by React to get a description of the HTML that this component should display. The HTML content is written using a JavaScript extension called JSX, which kind of looks like writing HTML inside your JavaScript. An important thing to know about JSX is that it isn't a templating language like Spacebars or Angular - it actually compiles directly to regular JavaScript. Read more about JSX [in the React docs](https://facebook.github.io/react/docs/jsx-in-depth.html).
+The most important method in every React component is `render()`, which is called by React to get a description of the HTML that this component should display. The HTML content is written using a JavaScript extension called JSX, which kind of looks like writing HTML inside your JavaScript. You can see some obvious differences already: in JSX, you use the `className` attribute instead of `class`. An important thing to know about JSX is that it isn't a templating language like Spacebars or Angular - it actually compiles directly to regular JavaScript. Read more about JSX [in the React docs](https://facebook.github.io/react/docs/jsx-in-depth.html).
 
 ### JSX files can use ES2015 features
 
diff --git a/steps/react/step03.md b/steps/react/step03.md
index 2328a58..2b8125d 100644
--- a/steps/react/step03.md
+++ b/steps/react/step03.md
@@ -25,14 +25,14 @@ App = React.createClass({
     }
   },
 
-  render() {
+  renderTasks() {
     // Get tasks from this.data.tasks
-    const tasks = this.data.tasks.map((task) => {
+    return this.data.tasks.map((task) => {
       return <Task key={task._id} task={task} />;
     });
+  },
 
-    // The rest of the file is unchanged
-
+  // ... rest of the methods are unchanged
 ```
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
diff --git a/steps/react/step04.md b/steps/react/step04.md
index b06c735..d8c5632 100644
--- a/steps/react/step04.md
+++ b/steps/react/step04.md
@@ -46,7 +46,7 @@ Now your app has a new input field. To add a task, just type into the input fiel
 
 ### Listening for events in React
 
-...
+As you can see, in React you handle DOM events by directly referencing a method on the component. Inside the event handler, you can reference elements from the component by giving them a `ref` property and using `React.findDOMNode`. Read more about the different kinds of events React supports, and how the event system works, in the [React docs](https://facebook.github.io/react/docs/events.html).
 
 ### Inserting into a collection
 
@@ -68,5 +68,5 @@ getMeteorData() {
 },
 ```
 
-In the next step, we'll add some very important todo list functions: checking off and deleting tasks.
+In the next step, we'll add some very important todo list features: checking off and deleting tasks.
 {{/template}}
diff --git a/steps/react/step05.md b/steps/react/step05.md
index de86a1d..75143fc 100644
--- a/steps/react/step05.md
+++ b/steps/react/step05.md
@@ -23,8 +23,12 @@ Task = React.createClass({
     Tasks.remove(this.props.task._id);
   },
   render() {
+    // Give tasks a different className when they are checked off,
+    // so that we can style them nicely in CSS
+    const taskClassName = {this.props.task.checked ? "checked" : ""};
+
     return (
-      <li className={this.props.task.checked ? "checked" : ""}>
+      <li className={taskClassName}>
         <button className="delete" onClick={this.deleteThisTask}>
           &times;
         </button>
@@ -52,13 +56,4 @@ In this case, the selector is just the `_id` of the relevant task. The update pa
 
 The `remove` function takes one argument, a selector that determines which item to remove from the collection.
 
-### Using object properties or helpers to add/remove classes
-
-If you try checking off some tasks after adding all of the above code, you will see that checked off tasks have a line through them. This is enabled by the following snippet:
-
-```html
-<li className={this.props.task.checked ? "checked" : ""}>
-```
-
-With this code, if the `checked` property of a task is `true`, the `checked` class is added to our list item. Using this class, we can make checked-off tasks look different in our CSS. 
 {{/template}}
diff --git a/steps/react/step08.md b/steps/react/step08.md
index a93beed..31b48b4 100644
--- a/steps/react/step08.md
+++ b/steps/react/step08.md
@@ -2,7 +2,7 @@
 
 # Storing temporary UI data in component state
 
-In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to only see incomplete tasks. We're going to learn how to use React's component state to store temporary data that is only used on the client.
+In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to only see incomplete tasks. We're going to learn how to use React's component state to store temporary information that is only used on the client.
 
 First, we need to add a checkbox to our `App` component:
 
@@ -51,7 +51,7 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 ### One more feature: Showing a count of incomplete tasks
 
-Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to return a count from `getMeteorData` and add a line to our `render` method.
+Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to return a count from `getMeteorData` and add a line to our `render` method. Since we already have the data in the client-side Minimongo collection, adding this extra count doesn't involve asking the server for anything.
 
 ```js
 // Replace return statement in getMeteorData to also return incompleteCount
diff --git a/steps/react/step09.md b/steps/react/step09.md
index 8fc7033..c240533 100644
--- a/steps/react/step09.md
+++ b/steps/react/step09.md
@@ -14,12 +14,12 @@ meteor add accounts-ui accounts-password
 
 ### Wrapping a Blaze component in React
 
-To use the UI component from the `accounts-ui` package, we need to wrap it in a React component. To do so, add this code near the bottom of `simple-todos-react.jsx`, below the `Task` component and above the `if (Meteor.isClient) { ... }` section.
+To use the Blaze UI component from the `accounts-ui` package, we need to wrap it in a React component. To do so, add this code near the bottom of `simple-todos-react.jsx`, below the `Task` component and above the `if (Meteor.isClient) { ... }` section.
 
 ```js
 AccountsUIWrapper = React.createClass({
   componentDidMount() {
-    // Use Meteor blaze to render login buttons
+    // Use Meteor Blaze to render login buttons
     Blaze.render(Template.loginButtons,
       React.findDOMNode(this.refs.container));
   },
@@ -47,7 +47,7 @@ Accounts.ui.config({
 
 ### Adding user-related functionality
 
-Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
+Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two features:
 
 1. Only display the new task input field to logged in users
 2. Show which user created each task
@@ -60,6 +60,7 @@ To do this, we will add two new fields to the `tasks` collection:
 First, let's add some code to save these fields into the `handleSubmit` event handler:
 
 ```js
+// Replace the existing insert inside the handleSubmit method
 Tasks.insert({
   text: text,
   createdAt: new Date(),            // current time
diff --git a/steps/react/step10.md b/steps/react/step10.md
index 53e7648..f275ce1 100644
--- a/steps/react/step10.md
+++ b/steps/react/step10.md
@@ -62,9 +62,9 @@ Now all of our inputs and buttons will start working again. What did we gain fro
 2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
 3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
 
-### Latency compensation
+### Optimistic UI
 
-So why do we want to define our methods on the client and on the server? We do this to enable a feature called _latency compensation_.
+So why do we want to define our methods on the client and on the server? We do this to enable a feature we call _optimistic UI_.
 
 When you call a method on the client using `Meteor.call`, two things happen in parallel:
 
@@ -75,5 +75,5 @@ What this means is that a newly created task actually appears on the screen _bef
 
 If the result from the server comes back and is consistent with the simulation on the client, everything remains as is. If the result on the server is different from the result of the simulation on the client, the UI is patched to reflect the actual state of the server.
 
-With Meteor methods and latency compensation, you get the best of both worlds &mdash; the security of server code and no round-trip delay.
+With Meteor methods and optimistic UI, you get the best of both worlds &mdash; the security of server code and no round-trip delay. Read more in our [blog post about optimistic UI](http://info.meteor.com/blog/optimistic-ui-with-meteor-latency-compensation).
 {{/template}}
diff --git a/steps/react/step11.md b/steps/react/step11.md
index 850056c..e665e19 100644
--- a/steps/react/step11.md
+++ b/steps/react/step11.md
@@ -35,7 +35,7 @@ Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`
 
 ### Adding a button to make tasks private
 
-Let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
+Let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. We want the label to indicate the current status: public or private.
 
 First, we need to add a new method that we can call to set a task's private status:
 
@@ -58,19 +58,22 @@ to show the private button; the button should show up only if the currently
 logged in user owns this task:
 
 ```js
-// New code to generate the tasks array at the top of the render function for
-// the App component
-const tasks = this.data.tasks.map((task) => {
-  const showPrivateButton = task.owner === this.data.currentUser._id;
-  return <Task
-    key={task._id}
-    task={task}
-    showPrivateButton={showPrivateButton} />;
-});
+// Update the renderTasks method to pass in showPrivateButton
+renderTasks() {
+  // Get tasks from this.data.tasks
+  return this.data.tasks.map((task) => {
+    const showPrivateButton = task.owner === this.data.currentUser._id;
+
+    return <Task
+      key={task._id}
+      task={task}
+      showPrivateButton={showPrivateButton} />;
+  });
+},
 ```
 
 ```js
-// Add a new proptype for showPrivateButton
+// Add a new prop type for showPrivateButton
 propTypes: {
   task: React.PropTypes.object.isRequired,
   showPrivateButton: React.PropTypes.bool.isRequired
@@ -102,19 +105,11 @@ One last thing, let's update the class of the `<li>` element in the `Task` compo
 ```js
 // At the top of the render method of the Task component
 render() {
-  // Generate the className property in a separate variable
-  const taskClassName = (this.props.task.checked ? "checked" : "") +
+  // Add checked and/or private to the className when needed
+  const taskClassName = (this.props.task.checked ? "checked" : "") + " " +
     (this.props.task.private ? "private" : "");
 
-  // The checkbox is read-only because we are going to manually manage
-  // its state.
-  return (
-    <li className={taskClassName}>
-      <button className="delete" onClick={this.deleteThisTask}>
-        &times;
-      </button>
-
-      // ... rest of render method
+  // ... rest of method
 ```
 
 ### Selectively publishing tasks based on privacy status
@@ -155,5 +150,7 @@ if (task.private && task.owner !== Meteor.userId()) {
 }
 ```
 
+> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
+
 We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
 {{/template}}
-- 
2.13.6 (Apple Git-96)


From aac2f1e3df981388413dbf9c57c7d663b79ecbce Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 14:03:19 -0700
Subject: [PATCH 012/164] Factor out part of publish step and CSS code

---
 package.js              |   5 +-
 shared/code.md          | 140 ++++++++++++++++++++++++++++++++++++++++++++++++
 shared/explanations.md  |  45 ++++++++++++++++
 steps/angular/step02.md | 136 +---------------------------------------------
 steps/angular/step11.md |  37 +------------
 steps/blaze/step02.md   | 136 +---------------------------------------------
 steps/blaze/step11.md   |  37 +------------
 steps/react/step02.md   | 136 +---------------------------------------------
 steps/react/step11.md   |  41 +-------------
 9 files changed, 195 insertions(+), 518 deletions(-)
 create mode 100644 shared/code.md
 create mode 100644 shared/explanations.md

diff --git a/package.js b/package.js
index 4f6307e..52669dc 100644
--- a/package.js
+++ b/package.js
@@ -48,7 +48,10 @@ Package.onUse(function (api) {
     'steps/react/step10.md',
     'steps/react/step11.md',
     'steps/react/step12.md',
-    'steps/step00.html'
+    'steps/step00.html',
+
+    'shared/explanations.md',
+    'shared/code.md'
   ], 'client');
 
   api.addFiles([
diff --git a/shared/code.md b/shared/code.md
new file mode 100644
index 0000000..afe9aea
--- /dev/null
+++ b/shared/code.md
@@ -0,0 +1,140 @@
+{{#template name="addingCSS"}}
+
+### Adding CSS
+
+Before we go any further, let's make our app look nice by adding some CSS.
+
+Since this tutorial is focused on working with HTML and JavaScript, just copy all the CSS code below into `simple-todos.css`. This is all the CSS code you will need until the end of the tutorial. The app will still work without the CSS, but it will look much nicer if you add it.
+
+{{#codeBox "Replace simple-todos.css with this code"}}
+```css
+/* CSS declarations go here */
+body {
+  font-family: sans-serif;
+  background-color: #315481;
+  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
+  background-attachment: fixed;
+
+  position: absolute;
+  top: 0;
+  bottom: 0;
+  left: 0;
+  right: 0;
+
+  padding: 0;
+  margin: 0;
+
+  font-size: 14px;
+}
+
+.container {
+  max-width: 600px;
+  margin: 0 auto;
+  min-height: 100%;
+  background: white;
+}
+
+header {
+  background: #d2edf4;
+  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
+  padding: 20px 15px 15px 15px;
+  position: relative;
+}
+
+#login-buttons {
+  display: block;
+}
+
+h1 {
+  font-size: 1.5em;
+  margin: 0;
+  margin-bottom: 10px;
+  display: inline-block;
+  margin-right: 1em;
+}
+
+form {
+  margin-top: 10px;
+  margin-bottom: -10px;
+  position: relative;
+}
+
+.new-task input {
+  box-sizing: border-box;
+  padding: 10px 0;
+  background: transparent;
+  border: none;
+  width: 100%;
+  padding-right: 80px;
+  font-size: 1em;
+}
+
+.new-task input:focus{
+  outline: 0;
+}
+
+ul {
+  margin: 0;
+  padding: 0;
+  background: white;
+}
+
+.delete {
+  float: right;
+  font-weight: bold;
+  background: none;
+  font-size: 1em;
+  border: none;
+  position: relative;
+}
+
+li {
+  position: relative;
+  list-style: none;
+  padding: 15px;
+  border-bottom: #eee solid 1px;
+}
+
+li .text {
+  margin-left: 10px;
+}
+
+li.checked {
+  color: #888;
+}
+
+li.checked .text {
+  text-decoration: line-through;
+}
+
+li.private {
+  background: #eee;
+  border-color: #ddd;
+}
+
+header .hide-completed {
+  float: right;
+}
+
+.toggle-private {
+  margin-left: 5px;
+}
+
+@media (max-width: 600px) {
+  li {
+    padding: 12px 15px;
+  }
+
+  .search {
+    width: 150px;
+    clear: both;
+  }
+
+  .new-task input {
+    padding-bottom: 5px;
+  }
+}
+```
+{{/codeBox}}
+
+{{/template}}
diff --git a/shared/explanations.md b/shared/explanations.md
new file mode 100644
index 0000000..8d7e4de
--- /dev/null
+++ b/shared/explanations.md
@@ -0,0 +1,45 @@
+{{#template name="step11SelectivelyPublish"}}
+
+### Selectively publishing tasks based on privacy status
+
+Now that we have a way of setting which tasks are private, we should modify our
+publication function to only send the tasks that a user is authorized to see:
+
+```js
+// Modify the publish statement
+// Only publish tasks that are public or belong to the current user
+Meteor.publish("tasks", function () {
+  return Tasks.find({
+    $or: [
+      { private: {$ne: true} },
+      { owner: this.userId }
+    ]
+  });
+});
+```
+
+To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
+
+In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
+
+```js
+// Inside the deleteTask method
+var task = Tasks.findOne(taskId);
+if (task.private && task.owner !== Meteor.userId()) {
+  // If the task is private, make sure only the owner can delete it
+  throw new Meteor.Error("not-authorized");
+}
+
+// Inside the setChecked method
+var task = Tasks.findOne(taskId);
+if (task.private && task.owner !== Meteor.userId()) {
+  // If the task is private, make sure only the owner can check it off
+  throw new Meteor.Error("not-authorized");
+}
+```
+
+> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
+
+We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
+
+{{/template}}
diff --git a/steps/angular/step02.md b/steps/angular/step02.md
index 7249f12..0b27dbe 100644
--- a/steps/angular/step02.md
+++ b/steps/angular/step02.md
@@ -89,140 +89,6 @@ Everything inside &lt;template> tags is compiled into Meteor _templates_, which
 
 All of the code in your regular .HTML files is compiled with [Meteor's Spacebars compiler](https://github.com/meteor/meteor/blob/devel/packages/spacebars/README.md).
 
-### Adding CSS
+{{> addingCSS}}
 
-Before we go any further, let's make our app look nice by adding some CSS.
-
-Since this tutorial is focused on working with HTML and JavaScript, just copy all the CSS code below into `simple-todos-angular.css`. This is all the CSS code you will need until the end of the tutorial. The app will still work without the CSS, but it will look much nicer if you add it.
-
-{{#codeBox "Replace simple-todos-angular.css with this code"}}
-```css
-/* CSS declarations go here */
-body {
-  font-family: sans-serif;
-  background-color: #315481;
-  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
-  background-attachment: fixed;
-
-  position: absolute;
-  top: 0;
-  bottom: 0;
-  left: 0;
-  right: 0;
-
-  padding: 0;
-  margin: 0;
-
-  font-size: 14px;
-}
-
-.container {
-  max-width: 600px;
-  margin: 0 auto;
-  min-height: 100%;
-  background: white;
-}
-
-header {
-  background: #d2edf4;
-  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
-  padding: 20px 15px 15px 15px;
-  position: relative;
-}
-
-#login-buttons {
-  display: block;
-}
-
-h1 {
-  font-size: 1.5em;
-  margin: 0;
-  margin-bottom: 10px;
-  display: inline-block;
-  margin-right: 1em;
-}
-
-form {
-  margin-top: 10px;
-  margin-bottom: -10px;
-  position: relative;
-}
-
-.new-task input {
-  box-sizing: border-box;
-  padding: 10px 0;
-  background: transparent;
-  border: none;
-  width: 100%;
-  padding-right: 80px;
-  font-size: 1em;
-}
-
-.new-task input:focus{
-  outline: 0;
-}
-
-ul {
-  margin: 0;
-  padding: 0;
-  background: white;
-}
-
-.delete {
-  float: right;
-  font-weight: bold;
-  background: none;
-  font-size: 1em;
-  border: none;
-  position: relative;
-}
-
-li {
-  position: relative;
-  list-style: none;
-  padding: 15px;
-  border-bottom: #eee solid 1px;
-}
-
-li .text {
-  margin-left: 10px;
-}
-
-li.checked {
-  color: #888;
-}
-
-li.checked .text {
-  text-decoration: line-through;
-}
-
-li.private {
-  background: #eee;
-  border-color: #ddd;
-}
-
-header .hide-completed {
-  float: right;
-}
-
-.toggle-private {
-  margin-left: 5px;
-}
-
-@media (max-width: 600px) {
-  li {
-    padding: 12px 15px;
-  }
-
-  .search {
-    width: 150px;
-    clear: both;
-  }
-
-  .new-task input {
-    padding-bottom: 5px;
-  }
-}
-```
-{{/codeBox}}
 {{/template}}
diff --git a/steps/angular/step11.md b/steps/angular/step11.md
index e3b5e3f..94ebec2 100644
--- a/steps/angular/step11.md
+++ b/steps/angular/step11.md
@@ -69,41 +69,6 @@ setPrivate: function (taskId, setToPrivate) {
 }
 ```
 
-Now that we have a way of setting which tasks are private, we should modify our
-publication function to only send the tasks that a user is authorized to see:
+{{> step11SelectivelyPublish}}
 
-```js
-// Modify the publish statement
-// Only publish tasks that are public or belong to the current user
-Meteor.publish("tasks", function () {
-  return Tasks.find({
-    $or: [
-      { private: {$ne: true} },
-      { owner: this.userId }
-    ]
-  });
-});
-```
-
-To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
-
-In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
-
-```js
-// Inside the deleteTask method
-var task = Tasks.findOne(taskId);
-if (task.private && task.owner !== Meteor.userId()) {
-  // If the task is private, make sure only the owner can delete it
-  throw new Meteor.Error("not-authorized");
-}
-
-// Inside the setChecked method
-var task = Tasks.findOne(taskId);
-if (task.private && task.owner !== Meteor.userId()) {
-  // If the task is private, make sure only the owner can check it off
-  throw new Meteor.Error("not-authorized");
-}
-```
-
-We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
 {{/template}}
diff --git a/steps/blaze/step02.md b/steps/blaze/step02.md
index 4459380..3acdeb4 100644
--- a/steps/blaze/step02.md
+++ b/steps/blaze/step02.md
@@ -67,140 +67,6 @@ You can pass data into templates from your JavaScript code by defining _helpers_
 
 In the next step, we will see how we can use helpers to make our templates display dynamic data from a database collection.
 
-### Adding CSS
+{{> addingCSS}}
 
-Before we go any further, let's make our app look nice by adding some CSS.
-
-Since this tutorial is focused on working with HTML and JavaScript, just copy all the CSS code below into `simple-todos.css`. This is all the CSS code you will need until the end of the tutorial. The app will still work without the CSS, but it will look much nicer if you add it.
-
-{{#codeBox "Replace simple-todos.css with this code"}}
-```css
-/* CSS declarations go here */
-body {
-  font-family: sans-serif;
-  background-color: #315481;
-  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
-  background-attachment: fixed;
-
-  position: absolute;
-  top: 0;
-  bottom: 0;
-  left: 0;
-  right: 0;
-
-  padding: 0;
-  margin: 0;
-
-  font-size: 14px;
-}
-
-.container {
-  max-width: 600px;
-  margin: 0 auto;
-  min-height: 100%;
-  background: white;
-}
-
-header {
-  background: #d2edf4;
-  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
-  padding: 20px 15px 15px 15px;
-  position: relative;
-}
-
-#login-buttons {
-  display: block;
-}
-
-h1 {
-  font-size: 1.5em;
-  margin: 0;
-  margin-bottom: 10px;
-  display: inline-block;
-  margin-right: 1em;
-}
-
-form {
-  margin-top: 10px;
-  margin-bottom: -10px;
-  position: relative;
-}
-
-.new-task input {
-  box-sizing: border-box;
-  padding: 10px 0;
-  background: transparent;
-  border: none;
-  width: 100%;
-  padding-right: 80px;
-  font-size: 1em;
-}
-
-.new-task input:focus{
-  outline: 0;
-}
-
-ul {
-  margin: 0;
-  padding: 0;
-  background: white;
-}
-
-.delete {
-  float: right;
-  font-weight: bold;
-  background: none;
-  font-size: 1em;
-  border: none;
-  position: relative;
-}
-
-li {
-  position: relative;
-  list-style: none;
-  padding: 15px;
-  border-bottom: #eee solid 1px;
-}
-
-li .text {
-  margin-left: 10px;
-}
-
-li.checked {
-  color: #888;
-}
-
-li.checked .text {
-  text-decoration: line-through;
-}
-
-li.private {
-  background: #eee;
-  border-color: #ddd;
-}
-
-header .hide-completed {
-  float: right;
-}
-
-.toggle-private {
-  margin-left: 5px;
-}
-
-@media (max-width: 600px) {
-  li {
-    padding: 12px 15px;
-  }
-
-  .search {
-    width: 150px;
-    clear: both;
-  }
-
-  .new-task input {
-    padding-bottom: 5px;
-  }
-}
-```
-{{/codeBox}}
 {{/template}}
diff --git a/steps/blaze/step11.md b/steps/blaze/step11.md
index 8a61038..ec568ee 100644
--- a/steps/blaze/step11.md
+++ b/steps/blaze/step11.md
@@ -80,41 +80,6 @@ setPrivate: function (taskId, setToPrivate) {
 }
 ```
 
-Now that we have a way of setting which tasks are private, we should modify our
-publication function to only send the tasks that a user is authorized to see:
+{{> step11SelectivelyPublish}}
 
-```js
-// Modify the publish statement
-// Only publish tasks that are public or belong to the current user
-Meteor.publish("tasks", function () {
-  return Tasks.find({
-    $or: [
-      { private: {$ne: true} },
-      { owner: this.userId }
-    ]
-  });
-});
-```
-
-To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
-
-In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
-
-```js
-// Inside the deleteTask method
-var task = Tasks.findOne(taskId);
-if (task.private && task.owner !== Meteor.userId()) {
-  // If the task is private, make sure only the owner can delete it
-  throw new Meteor.Error("not-authorized");
-}
-
-// Inside the setChecked method
-var task = Tasks.findOne(taskId);
-if (task.private && task.owner !== Meteor.userId()) {
-  // If the task is private, make sure only the owner can check it off
-  throw new Meteor.Error("not-authorized");
-}
-```
-
-We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
 {{/template}}
diff --git a/steps/react/step02.md b/steps/react/step02.md
index e197be7..8a105c7 100644
--- a/steps/react/step02.md
+++ b/steps/react/step02.md
@@ -114,140 +114,6 @@ If you haven't tried next-generation JavaScript features yet, some of the syntax
 
 Read more about these features here: XXX
 
-### Adding CSS
+{{> addingCSS}}
 
-Before we go any further, let's make our app look nice by adding some CSS.
-
-Since this tutorial is focused on working with HTML and JavaScript, just copy all the CSS code below into `simple-todos.css`. This is all the CSS code you will need until the end of the tutorial. The app will still work without the CSS, but it will look much nicer if you add it.
-
-{{#codeBox "Replace simple-todos.css with this code"}}
-```css
-/* CSS declarations go here */
-body {
-  font-family: sans-serif;
-  background-color: #315481;
-  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
-  background-attachment: fixed;
-
-  position: absolute;
-  top: 0;
-  bottom: 0;
-  left: 0;
-  right: 0;
-
-  padding: 0;
-  margin: 0;
-
-  font-size: 14px;
-}
-
-.container {
-  max-width: 600px;
-  margin: 0 auto;
-  min-height: 100%;
-  background: white;
-}
-
-header {
-  background: #d2edf4;
-  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
-  padding: 20px 15px 15px 15px;
-  position: relative;
-}
-
-#login-buttons {
-  display: block;
-}
-
-h1 {
-  font-size: 1.5em;
-  margin: 0;
-  margin-bottom: 10px;
-  display: inline-block;
-  margin-right: 1em;
-}
-
-form {
-  margin-top: 10px;
-  margin-bottom: -10px;
-  position: relative;
-}
-
-.new-task input {
-  box-sizing: border-box;
-  padding: 10px 0;
-  background: transparent;
-  border: none;
-  width: 100%;
-  padding-right: 80px;
-  font-size: 1em;
-}
-
-.new-task input:focus{
-  outline: 0;
-}
-
-ul {
-  margin: 0;
-  padding: 0;
-  background: white;
-}
-
-.delete {
-  float: right;
-  font-weight: bold;
-  background: none;
-  font-size: 1em;
-  border: none;
-  position: relative;
-}
-
-li {
-  position: relative;
-  list-style: none;
-  padding: 15px;
-  border-bottom: #eee solid 1px;
-}
-
-li .text {
-  margin-left: 10px;
-}
-
-li.checked {
-  color: #888;
-}
-
-li.checked .text {
-  text-decoration: line-through;
-}
-
-li.private {
-  background: #eee;
-  border-color: #ddd;
-}
-
-header .hide-completed {
-  float: right;
-}
-
-.toggle-private {
-  margin-left: 5px;
-}
-
-@media (max-width: 600px) {
-  li {
-    padding: 12px 15px;
-  }
-
-  .search {
-    width: 150px;
-    clear: both;
-  }
-
-  .new-task input {
-    padding-bottom: 5px;
-  }
-}
-```
-{{/codeBox}}
 {{/template}}
diff --git a/steps/react/step11.md b/steps/react/step11.md
index e665e19..fa5d63e 100644
--- a/steps/react/step11.md
+++ b/steps/react/step11.md
@@ -112,45 +112,6 @@ render() {
   // ... rest of method
 ```
 
-### Selectively publishing tasks based on privacy status
+{{> step11SelectivelyPublish}}
 
-Now that we have a way of setting which tasks are private, we should modify our
-publication function to only send the tasks that a user is authorized to see:
-
-```js
-// Modify the publish statement
-// Only publish tasks that are public or belong to the current user
-Meteor.publish("tasks", function () {
-  return Tasks.find({
-    $or: [
-      { private: {$ne: true} },
-      { owner: this.userId }
-    ]
-  });
-});
-```
-
-To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
-
-In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
-
-```js
-// Inside the deleteTask method
-var task = Tasks.findOne(taskId);
-if (task.private && task.owner !== Meteor.userId()) {
-  // If the task is private, make sure only the owner can delete it
-  throw new Meteor.Error("not-authorized");
-}
-
-// Inside the setChecked method
-var task = Tasks.findOne(taskId);
-if (task.private && task.owner !== Meteor.userId()) {
-  // If the task is private, make sure only the owner can check it off
-  throw new Meteor.Error("not-authorized");
-}
-```
-
-> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
-
-We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
 {{/template}}
-- 
2.13.6 (Apple Git-96)


From 5932719a4f7f8cb7e75dde649c962a16e33050b8 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 14:16:10 -0700
Subject: [PATCH 013/164] Deduplicate more stuff

---
 package.js                        |  6 ++---
 routes/angularTut.js              |  2 +-
 routes/blazeTut.js                |  2 +-
 routes/reactTut.js                |  2 +-
 shared/explanations.md            | 51 +++++++++++++++++++++++++++++++++++++++
 {steps/blaze => shared}/step06.md |  2 +-
 steps/angular/step03.md           | 23 ++----------------
 steps/angular/step06.md           | 18 --------------
 steps/angular/step10.md           | 14 +----------
 steps/blaze/step03.md             | 22 ++---------------
 steps/blaze/step10.md             | 14 +----------
 steps/react/step03.md             | 22 ++---------------
 steps/react/step06.md             | 18 --------------
 steps/react/step10.md             | 14 +----------
 steps/react/step11.md             |  1 -
 15 files changed, 66 insertions(+), 145 deletions(-)
 rename {steps/blaze => shared}/step06.md (96%)
 delete mode 100644 steps/angular/step06.md
 delete mode 100644 steps/react/step06.md

diff --git a/package.js b/package.js
index 52669dc..2b839dc 100644
--- a/package.js
+++ b/package.js
@@ -17,7 +17,6 @@ Package.onUse(function (api) {
     'steps/angular/step03.md',
     'steps/angular/step04.md',
     'steps/angular/step05.md',
-    'steps/angular/step06.md',
     'steps/angular/step07.md',
     'steps/angular/step08.md',
     'steps/angular/step09.md',
@@ -29,7 +28,6 @@ Package.onUse(function (api) {
     'steps/blaze/step03.md',
     'steps/blaze/step04.md',
     'steps/blaze/step05.md',
-    'steps/blaze/step06.md',
     'steps/blaze/step07.md',
     'steps/blaze/step08.md',
     'steps/blaze/step09.md',
@@ -41,7 +39,6 @@ Package.onUse(function (api) {
     'steps/react/step03.md',
     'steps/react/step04.md',
     'steps/react/step05.md',
-    'steps/react/step06.md',
     'steps/react/step07.md',
     'steps/react/step08.md',
     'steps/react/step09.md',
@@ -51,7 +48,8 @@ Package.onUse(function (api) {
     'steps/step00.html',
 
     'shared/explanations.md',
-    'shared/code.md'
+    'shared/code.md',
+    'shared/step06.md'
   ], 'client');
 
   api.addFiles([
diff --git a/routes/angularTut.js b/routes/angularTut.js
index 3b70561..b67d582 100644
--- a/routes/angularTut.js
+++ b/routes/angularTut.js
@@ -50,7 +50,7 @@ ANGULAR_TUT = [
     seoTitle: 'Deploying your app',
     route: "tutorials.angular.deploying-your-app",
     path: "/tutorials/angular/deploying-your-app",
-    contentTemplate: 'angular-step06'
+    contentTemplate: 'shared-step06'
   },
   {
     id: "6",
diff --git a/routes/blazeTut.js b/routes/blazeTut.js
index 616cbc6..49da372 100644
--- a/routes/blazeTut.js
+++ b/routes/blazeTut.js
@@ -50,7 +50,7 @@ BLAZE_TUT = [
     seoTitle: 'Deploying your app',
     route: "tutorials.blaze.deploying-your-app",
     path: "/tutorials/blaze/deploying-your-app",
-    contentTemplate: 'blaze-step06'
+    contentTemplate: 'shared-step06'
   },
   {
     id: "6",
diff --git a/routes/reactTut.js b/routes/reactTut.js
index 7097d07..33ca6b7 100644
--- a/routes/reactTut.js
+++ b/routes/reactTut.js
@@ -50,7 +50,7 @@ REACT_TUT = [
     seoTitle: 'Deploying your app',
     route: "tutorials.react.deploying-your-app",
     path: "/tutorials/react/deploying-your-app",
-    contentTemplate: 'react-step06'
+    contentTemplate: 'shared-step06'
   },
   {
     id: "6",
diff --git a/shared/explanations.md b/shared/explanations.md
index 8d7e4de..7ea1f2c 100644
--- a/shared/explanations.md
+++ b/shared/explanations.md
@@ -20,6 +20,8 @@ Meteor.publish("tasks", function () {
 
 To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
 
+### Extra method security
+
 In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
 
 ```js
@@ -43,3 +45,52 @@ if (task.private && task.owner !== Meteor.userId()) {
 We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
 
 {{/template}}
+
+{{#template name="step03CollectionsIntro"}}
+
+Collections are Meteor's way of storing persistent data. The special thing about collections in Meteor is that they can be accessed from both the server and the client, making it easy to write view logic without having to write a lot of server code. They also update themselves automatically, so a view component backed by a collection will automatically display the most up-to-date data.
+
+Creating a new collection is as easy as calling `MyCollection = new Mongo.Collection("my-collection");` in your JavaScript. On the server, this sets up a MongoDB collection called `my-collection`; on the client, this creates a cache connected to the server collection. We'll learn more about the client/server divide in step 12, but for now we can write our code with the assumption that the entire database is present on the client.
+
+{{/template}}
+
+{{#template name="step03InsertingTasksFromConsole"}}
+
+### Inserting tasks from the console
+
+Items inside collections are called _documents_. Let's use the server database console to insert some documents into our collection. In a new terminal tab, go to your app directory and type:
+
+```bash
+meteor mongo
+```
+
+This opens a console into your app's local development database. Into the prompt, type:
+
+```js
+db.tasks.insert({ text: "Hello world!", createdAt: new Date() });
+```
+
+In your web browser, you will see the UI of your app immediately update to show the new task. You can see that we didn't have to write any code to connect the server-side database to our front-end code &mdash; it just happened automatically.
+
+Insert a few more tasks from the database console with different text. In the next step, we'll see how to add functionality to our app's UI so that we can add tasks without using the database console.
+
+{{/template}}
+
+{{#template name="step10OptimisticUI"}}
+
+### Optimistic UI
+
+So why do we want to define our methods on the client and on the server? We do this to enable a feature we call _optimistic UI_.
+
+When you call a method on the client using `Meteor.call`, two things happen in parallel:
+
+1. The client sends a request to the server to run the method in a secure environment, just like an AJAX request would work
+2. A simulation of the method runs directly on the client to attempt to predict the outcome of the server call using the available information
+
+What this means is that a newly created task actually appears on the screen _before_ the result comes back from the server.
+
+If the result from the server comes back and is consistent with the simulation on the client, everything remains as is. If the result on the server is different from the result of the simulation on the client, the UI is patched to reflect the actual state of the server.
+
+With Meteor methods and optimistic UI, you get the best of both worlds &mdash; the security of server code and no round-trip delay. Read more in our [blog post about optimistic UI](http://info.meteor.com/blog/optimistic-ui-with-meteor-latency-compensation).
+
+{{/template}}
diff --git a/steps/blaze/step06.md b/shared/step06.md
similarity index 96%
rename from steps/blaze/step06.md
rename to shared/step06.md
index f8330f2..e2216d7 100644
--- a/steps/blaze/step06.md
+++ b/shared/step06.md
@@ -1,4 +1,4 @@
-{{#template name="blaze-step06"}}
+{{#template name="shared-step06"}}
 
 # Deploying your app
 
diff --git a/steps/angular/step03.md b/steps/angular/step03.md
index 5f2e242..13d51f2 100644
--- a/steps/angular/step03.md
+++ b/steps/angular/step03.md
@@ -2,9 +2,7 @@
 
 # Storing tasks in a collection
 
-Collections are Meteor's way of storing persistent data. The special thing about collections in Meteor is that they can be accessed from both the server and the client, making it easy to write view logic without having to write a lot of server code. They also update themselves automatically, so a template backed by a collection will automatically display the most up-to-date data.
-
-Creating a new collection is as easy as calling `MyCollection = new Mongo.Collection("my-collection");` in your JavaScript. On the server, this sets up a MongoDB collection called `my-collection`; on the client, this creates a cache connected to the server collection. We'll learn more about the client/server divide in step 12, but for now we can write our code with the assumption that the entire database is present on the client.
+{{> step03CollectionsIntro}}
 
 Let's update our JavaScript code to get our tasks from a collection instead of a static array:
 
@@ -31,23 +29,6 @@ Now every change that will happen to each of those objects will be synced in rea
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
-### Inserting tasks from the console
-
-Items inside collections are called _documents_. Let's use the server database console to insert some documents into our collection. In a new terminal tab, go to your app directory and type:
-
-```bash
-meteor mongo
-```
-
-This opens a console into your app's local development database. Into the prompt, type:
-
-```js
-db.tasks.insert({ text: "Hello world!", createdAt: new Date() });
-```
-
-In your web browser, you will see the UI of your app immediately update to show the new task.
-You can see that we didn't have to write any explicit code to update our front-end code with the server-side database&mdash; it just happened automatically.
-
-Insert a few more tasks from the database console with different text. In the next step, we'll see how to add functionality to our app's UI so that we can add tasks without using the database console.
+{{> step03InsertingTasksFromConsole}}
 
 {{/template}}
diff --git a/steps/angular/step06.md b/steps/angular/step06.md
deleted file mode 100644
index 8da058b..0000000
--- a/steps/angular/step06.md
+++ /dev/null
@@ -1,18 +0,0 @@
-{{#template name="angular-step06"}}
-
-# Deploying your app
-
-Now that we have a working todo list app, we can share it with our friends! Meteor makes it really easy to put an app up on the internet where other people can use it.
-
-Simply go to your app directory, and type:
-
-```bash
-meteor deploy my_app_name.meteor.com
-```
-
-Once you answer all of the prompts and the upload completes, you can go to `http://my_app_name.meteor.com` and use your app from anywhere. 
-
-Try opening the app on multiple devices such as your phone and your friend's computer. Add, remove, and check off some tasks and you will see that the UI of your app is really fast. That's because Meteor doesn't wait for the server to respond before updating the interface - we'll talk about this more in step 11.
-
-Congratulations, you've made a working app that you can now use with your friends! In later steps we will add more functionality involving multiple users, private tasks, and search. First, we'll take a detour to see that while we were building a web app, we also created a pretty nice mobile app along the way.
-{{/template}}
diff --git a/steps/angular/step10.md b/steps/angular/step10.md
index 93936f6..06259d4 100644
--- a/steps/angular/step10.md
+++ b/steps/angular/step10.md
@@ -74,18 +74,6 @@ Now all of our inputs and buttons will start working again. What did we gain fro
 2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
 3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
 
-### Latency compensation
+{{> step10OptimisticUI}}
 
-So why do we want to define our methods on the client and on the server? We do this to enable a feature called _latency compensation_.
-
-When you call a method on the client using `$meteor.call`, two things happen in parallel:
-
-1. The client sends a request to the server to run the method in a secure environment, just like an AJAX request would work
-2. A simulation of the method runs directly on the client to attempt to predict the outcome of the server call using the available information
-
-What this means is that a newly created task actually appears on the screen _before_ the result comes back from the server.
-
-If the result from the server comes back and is consistent with the simulation on the client, everything remains as is. If the result on the server is different from the result of the simulation on the client, the UI is patched to reflect the actual state of the server.
-
-With Meteor methods and latency compensation, you get the best of both worlds &mdash; the security of server code and no round-trip delay.
 {{/template}}
diff --git a/steps/blaze/step03.md b/steps/blaze/step03.md
index f202e39..06cf813 100644
--- a/steps/blaze/step03.md
+++ b/steps/blaze/step03.md
@@ -2,9 +2,7 @@
 
 # Storing tasks in a collection
 
-Collections are Meteor's way of storing persistent data. The special thing about collections in Meteor is that they can be accessed from both the server and the client, making it easy to write view logic without having to write a lot of server code. They also update themselves automatically, so a template backed by a collection will automatically display the most up-to-date data.
-
-Creating a new collection is as easy as calling `MyCollection = new Mongo.Collection("my-collection");` in your JavaScript. On the server, this sets up a MongoDB collection called `my-collection`; on the client, this creates a cache connected to the server collection. We'll learn more about the client/server divide in step 12, but for now we can write our code with the assumption that the entire database is present on the client.
+{{> step03CollectionsIntro}}
 
 Let's update our JavaScript code to get our tasks from a collection instead of a static array:
 
@@ -24,22 +22,6 @@ if (Meteor.isClient) {
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
-### Inserting tasks from the console
-
-Items inside collections are called _documents_. Let's use the server database console to insert some documents into our collection. In a new terminal tab, go to your app directory and type:
-
-```bash
-meteor mongo
-```
-
-This opens a console into your app's local development database. Into the prompt, type:
-
-```js
-db.tasks.insert({ text: "Hello world!", createdAt: new Date() });
-```
-
-In your web browser, you will see the UI of your app immediately update to show the new task. You can see that we didn't have to write any code to connect the server-side database to our front-end code &mdash; it just happened automatically.
-
-Insert a few more tasks from the database console with different text. In the next step, we'll see how to add functionality to our app's UI so that we can add tasks without using the database console.
+{{> step03InsertingTasksFromConsole}}
 
 {{/template}}
diff --git a/steps/blaze/step10.md b/steps/blaze/step10.md
index 120202a..cf91c82 100644
--- a/steps/blaze/step10.md
+++ b/steps/blaze/step10.md
@@ -62,18 +62,6 @@ Now all of our inputs and buttons will start working again. What did we gain fro
 2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
 3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
 
-### Latency compensation
+{{> step10OptimisticUI}}
 
-So why do we want to define our methods on the client and on the server? We do this to enable a feature called _latency compensation_.
-
-When you call a method on the client using `Meteor.call`, two things happen in parallel:
-
-1. The client sends a request to the server to run the method in a secure environment, just like an AJAX request would work
-2. A simulation of the method runs directly on the client to attempt to predict the outcome of the server call using the available information
-
-What this means is that a newly created task actually appears on the screen _before_ the result comes back from the server.
-
-If the result from the server comes back and is consistent with the simulation on the client, everything remains as is. If the result on the server is different from the result of the simulation on the client, the UI is patched to reflect the actual state of the server.
-
-With Meteor methods and latency compensation, you get the best of both worlds &mdash; the security of server code and no round-trip delay.
 {{/template}}
diff --git a/steps/react/step03.md b/steps/react/step03.md
index 2b8125d..01aaa92 100644
--- a/steps/react/step03.md
+++ b/steps/react/step03.md
@@ -2,9 +2,7 @@
 
 # Storing tasks in a collection
 
-Collections are Meteor's way of storing persistent data. The special thing about collections in Meteor is that they can be accessed from both the server and the client, making it easy to write view logic without having to write a lot of server code. They also update themselves automatically, so a component backed by a collection will automatically display the most up-to-date data.
-
-Creating a new collection is as easy as calling `MyCollection = new Mongo.Collection("my-collection");` in your JavaScript. On the server, this sets up a MongoDB collection called `my-collection`; on the client, this creates a cache connected to the server collection. We'll learn more about the client/server divide in step 12, but for now we can write our code with the assumption that the entire database is present on the client.
+{{> step03CollectionsIntro}}
 
 Let's update our code to get our tasks from a collection instead of a static array. We need to define a collection at the top of the file, and update our component to use this collection.
 
@@ -37,22 +35,6 @@ App = React.createClass({
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
-### Inserting tasks from the console
-
-Items inside collections are called _documents_. Let's use the server database console to insert some documents into our collection. In a new terminal tab, go to your app directory and type:
-
-```bash
-meteor mongo
-```
-
-This opens a console into your app's local development database. Into the prompt, type:
-
-```js
-db.tasks.insert({ text: "Hello world!", createdAt: new Date() });
-```
-
-In your web browser, you will see the UI of your app immediately update to show the new task. You can see that we didn't have to write any code to connect the server-side database to our front-end code &mdash; it just happened automatically.
-
-Insert a few more tasks from the database console with different text. In the next step, we'll see how to add functionality to our app's UI so that we can add tasks without using the database console.
+{{> step03InsertingTasksFromConsole}}
 
 {{/template}}
diff --git a/steps/react/step06.md b/steps/react/step06.md
deleted file mode 100644
index d65fef2..0000000
--- a/steps/react/step06.md
+++ /dev/null
@@ -1,18 +0,0 @@
-{{#template name="react-step06"}}
-
-# Deploying your app
-
-Now that we have a working todo list app, we can share it with our friends! Meteor makes it really easy to put an app up on the internet where other people can use it.
-
-Simply go to your app directory, and type:
-
-```bash
-meteor deploy my_app_name.meteor.com
-```
-
-Once you answer all of the prompts and the upload completes, you can go to `http://my_app_name.meteor.com` and use your app from anywhere. 
-
-Try opening the app on multiple devices such as your phone and your friend's computer. Add, remove, and check off some tasks and you will see that the UI of your app is really fast. That's because Meteor doesn't wait for the server to respond before updating the interface - we'll talk about this more in step 11.
-
-Congratulations, you've made a working app that you can now use with your friends! In later steps we will add more functionality involving multiple users, private tasks, and search. First, we'll take a detour to see that while we were building a web app, we also created a pretty nice mobile app along the way.
-{{/template}}
diff --git a/steps/react/step10.md b/steps/react/step10.md
index f275ce1..3b53705 100644
--- a/steps/react/step10.md
+++ b/steps/react/step10.md
@@ -62,18 +62,6 @@ Now all of our inputs and buttons will start working again. What did we gain fro
 2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
 3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
 
-### Optimistic UI
+{{> step10OptimisticUI}}
 
-So why do we want to define our methods on the client and on the server? We do this to enable a feature we call _optimistic UI_.
-
-When you call a method on the client using `Meteor.call`, two things happen in parallel:
-
-1. The client sends a request to the server to run the method in a secure environment, just like an AJAX request would work
-2. A simulation of the method runs directly on the client to attempt to predict the outcome of the server call using the available information
-
-What this means is that a newly created task actually appears on the screen _before_ the result comes back from the server.
-
-If the result from the server comes back and is consistent with the simulation on the client, everything remains as is. If the result on the server is different from the result of the simulation on the client, the UI is patched to reflect the actual state of the server.
-
-With Meteor methods and optimistic UI, you get the best of both worlds &mdash; the security of server code and no round-trip delay. Read more in our [blog post about optimistic UI](http://info.meteor.com/blog/optimistic-ui-with-meteor-latency-compensation).
 {{/template}}
diff --git a/steps/react/step11.md b/steps/react/step11.md
index fa5d63e..eaaf849 100644
--- a/steps/react/step11.md
+++ b/steps/react/step11.md
@@ -28,7 +28,6 @@ if (Meteor.isServer) {
 Meteor.subscribe("tasks");
 ```
 
-
 Once you have added this code, all of the tasks will reappear.
 
 Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When `Meteor.subscribe` is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
-- 
2.13.6 (Apple Git-96)


From 2cbf9af35f91eb44800be6ff9a8320acea70c583 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 16:06:27 -0700
Subject: [PATCH 014/164] Step 1: Test the script

---
 scripts/map-commits-to-steps.rb | 37 +++++++++++++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)
 create mode 100755 scripts/map-commits-to-steps.rb

diff --git a/scripts/map-commits-to-steps.rb b/scripts/map-commits-to-steps.rb
new file mode 100755
index 0000000..495e681
--- /dev/null
+++ b/scripts/map-commits-to-steps.rb
@@ -0,0 +1,37 @@
+#! /usr/bin/env ruby
+
+# Goal: go through a repository, parse titles of the form:
+# Step 8.2: Step content
+# 
+# Generate a dictionary where the keys are step numbers,
+# and the values are the title of the commit and the sha of the commit
+# 
+# Next step: somehow put that code into the package...
+
+# Usage: ./map-commits-to-steps.rb <repo path>
+
+# Methodology: calls git log and parses output
+
+if ARGV.length < 1
+  puts "Please pass the path to a Git repository"
+end
+
+Dir.chdir ARGV[0]
+
+log_output = `git log --pretty=oneline`
+
+log_output.each_line do |line|
+  parts = line.split
+
+  sha = parts[0]
+
+  maybe_step = parts[1]
+  if maybe_step == "Step"
+    step_number = parts[2].sub ":", ""
+    message = parts.drop(3).join " "
+    puts "sha: " + sha
+    puts "step: " + step_number
+    puts "message: " + message
+  end
+end
+
-- 
2.13.6 (Apple Git-96)


From c874fe69ad3f88bbfa972bd58b79fa7f675de2df Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 16:14:09 -0700
Subject: [PATCH 015/164] Output JSON from script to file

---
 scripts/map-commits-to-steps.rb | 21 +++++++++++++++++----
 1 file changed, 17 insertions(+), 4 deletions(-)

diff --git a/scripts/map-commits-to-steps.rb b/scripts/map-commits-to-steps.rb
index 495e681..8e86d09 100755
--- a/scripts/map-commits-to-steps.rb
+++ b/scripts/map-commits-to-steps.rb
@@ -1,5 +1,7 @@
 #! /usr/bin/env ruby
 
+require 'json'
+
 # Goal: go through a repository, parse titles of the form:
 # Step 8.2: Step content
 # 
@@ -12,19 +14,22 @@
 
 # Methodology: calls git log and parses output
 
-if ARGV.length < 1
-  puts "Please pass the path to a Git repository"
+if ARGV.length < 2
+  puts "Please pass the path to a Git repository and an output file"
+  exit 1
 end
 
+out_file = File.join Dir.pwd, ARGV[1]
+
 Dir.chdir ARGV[0]
 
 log_output = `git log --pretty=oneline`
 
+hash = {}
+
 log_output.each_line do |line|
   parts = line.split
-
   sha = parts[0]
-
   maybe_step = parts[1]
   if maybe_step == "Step"
     step_number = parts[2].sub ":", ""
@@ -32,6 +37,14 @@ log_output.each_line do |line|
     puts "sha: " + sha
     puts "step: " + step_number
     puts "message: " + message
+
+    hash[step_number] = {
+      "sha" => sha,
+      "message" => message
+    }
   end
 end
 
+File.open out_file, "w" do |file|
+  file.write JSON.pretty_generate hash
+end
-- 
2.13.6 (Apple Git-96)


From 5e4c779fa233ac306599a625788900d4e450c195 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 16:17:16 -0700
Subject: [PATCH 016/164] Take a variable name as well

---
 scripts/map-commits-to-steps.rb | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/scripts/map-commits-to-steps.rb b/scripts/map-commits-to-steps.rb
index 8e86d09..010d3db 100755
--- a/scripts/map-commits-to-steps.rb
+++ b/scripts/map-commits-to-steps.rb
@@ -10,12 +10,13 @@ require 'json'
 # 
 # Next step: somehow put that code into the package...
 
-# Usage: ./map-commits-to-steps.rb <repo path>
+# Usage: ./map-commits-to-steps.rb <repo path> <output path> <var name>
 
 # Methodology: calls git log and parses output
 
-if ARGV.length < 2
-  puts "Please pass the path to a Git repository and an output file"
+if ARGV.length < 3
+  puts "Please pass the path to a Git repository, \
+an output file, and a variable name"
   exit 1
 end
 
@@ -46,5 +47,5 @@ log_output.each_line do |line|
 end
 
 File.open out_file, "w" do |file|
-  file.write JSON.pretty_generate hash
+  file.write(ARGV[2] + " = " + JSON.pretty_generate(hash))
 end
-- 
2.13.6 (Apple Git-96)


From 5eaa7c770509837cbe0cbe81477e0ea6976a6684 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 16:27:17 -0700
Subject: [PATCH 017/164] Improve

---
 scripts/map-commits-to-steps.rb | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/scripts/map-commits-to-steps.rb b/scripts/map-commits-to-steps.rb
index 010d3db..c6e8245 100755
--- a/scripts/map-commits-to-steps.rb
+++ b/scripts/map-commits-to-steps.rb
@@ -8,7 +8,8 @@ require 'json'
 # Generate a dictionary where the keys are step numbers,
 # and the values are the title of the commit and the sha of the commit
 # 
-# Next step: somehow put that code into the package...
+# Output a file with VAR_NAME = <JSON blob> that can be included in this
+# package
 
 # Usage: ./map-commits-to-steps.rb <repo path> <output path> <var name>
 
-- 
2.13.6 (Apple Git-96)


From 71a0d61a2868d46effdceef20529ac0c6e89b62a Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 16:41:28 -0700
Subject: [PATCH 018/164] Generate routes from commits

---
 package.js                      |  3 ++-
 routes/blazeTut.js              | 18 +++++++++---------
 routes/commits/blaze.js         | 39 +++++++++++++++++++++++++++++++++++++++
 scripts/map-commits-to-steps.rb |  1 +
 4 files changed, 51 insertions(+), 10 deletions(-)
 create mode 100644 routes/commits/blaze.js

diff --git a/package.js b/package.js
index 2b839dc..35e97b9 100644
--- a/package.js
+++ b/package.js
@@ -56,7 +56,8 @@ Package.onUse(function (api) {
     'routes/angularTut.js',
     'routes/blazeTut.js',
     'routes/reactTut.js',
-    'routes/tutorial-pages.js'
+    'routes/tutorial-pages.js',
+    'routes/commits/blaze.js'
   ]);
 
   // Also, exports all of the templates from the steps/ directory
diff --git a/routes/blazeTut.js b/routes/blazeTut.js
index 49da372..d61b6ae 100644
--- a/routes/blazeTut.js
+++ b/routes/blazeTut.js
@@ -6,7 +6,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.creating-an-app",
     path: "/tutorials/blaze/creating-an-app",
     contentTemplate: 'blaze-step01',
-    sha: "377a8610c2fa77056d015e6998d5eb894436c99e"
+    sha: BLAZE_COMMITS["1"]
   },
   {
     id: "1",
@@ -15,7 +15,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.templates",
     path: "/tutorials/blaze/templates",
     contentTemplate: 'blaze-step02',
-    sha: "9f5c65302f1527f25cacaaf275ea5c747d55e405"
+    sha: BLAZE_COMMITS["2"]
   },
   {
     id: "2",
@@ -24,7 +24,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.collections",
     path: "/tutorials/blaze/collections",
     contentTemplate: 'blaze-step03',
-    sha: "ab14d317db174a3b2d408f4e24a50c7af13342cd"
+    sha: BLAZE_COMMITS["3"]
   },
   {
     id: "3",
@@ -33,7 +33,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.forms-and-events",
     path: "/tutorials/blaze/forms-and-events",
     contentTemplate: 'blaze-step04',
-    sha: "9c24b998e540848f0dbc241702a4fcfa48fb9087"
+    sha: BLAZE_COMMITS["4"]
   },
   {
     id: "4",
@@ -42,7 +42,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.update-and-remove",
     path: "/tutorials/blaze/update-and-remove",
     contentTemplate: 'blaze-step05',
-    sha: "4e6f9494c895eff43fe26167a7b803a24c35854e"
+    sha: BLAZE_COMMITS["5"]
   },
   {
     id: "5",
@@ -67,7 +67,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.temporary-ui-state",
     path: "/tutorials/blaze/temporary-ui-state",
     contentTemplate: 'blaze-step08',
-    sha: "ad35c7e02a9f7c40f45f40dbff8d297fba4b13ac"
+    sha: BLAZE_COMMITS["8"]
   },
   {
     id: "8",
@@ -76,7 +76,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.adding-user-accounts",
     path: "/tutorials/blaze/adding-user-accounts",
     contentTemplate: 'blaze-step09',
-    sha: "bb4a0fc190c44aa8cfd4189a03c2e18f1294074c"
+    sha: BLAZE_COMMITS["9"]
   },
   {
     id: "9",
@@ -85,7 +85,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.security-with-methods",
     path: "/tutorials/blaze/security-with-methods",
     contentTemplate: 'blaze-step10',
-    sha: "e3b7fa8ed373c9e6b96fb3c370d0af238170b89a"
+    sha: BLAZE_COMMITS["10"]
   },
   {
     id: "10",
@@ -94,7 +94,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.publish-and-subscribe",
     path: "/tutorials/blaze/publish-and-subscribe",
     contentTemplate: 'blaze-step11',
-    sha: "44dfd82a9e90cf8600c18b7e9f3c2e742c34285d"
+    sha: BLAZE_COMMITS["11"]
   },
   {
     id: "11",
diff --git a/routes/commits/blaze.js b/routes/commits/blaze.js
new file mode 100644
index 0000000..6d2c9f7
--- /dev/null
+++ b/routes/commits/blaze.js
@@ -0,0 +1,39 @@
+// This file auto-generated by scripts/map-commits-to-steps.rb
+BLAZE_COMMITS = {
+  "11": {
+    "sha": "10bdbc7434b913c85c156ae6e27fdbea4b2e27bb",
+    "message": "Add private task feature, remove the autopublish package"
+  },
+  "10": {
+    "sha": "9a1a392a6e3ed81434c68114dc5f31e418bec308",
+    "message": "Move logic into Meteor.methods, remove insecure package"
+  },
+  "9": {
+    "sha": "556826bbf72a3025e5afe00d79de98af4fff86c2",
+    "message": "Add users and login; display which user created a task"
+  },
+  "8": {
+    "sha": "a89c298a25d532bd771ae6e6c35d8f579f837670",
+    "message": "Add option to hide completed tasks, show incomplete task count"
+  },
+  "5": {
+    "sha": "ea5beb34103e48dbd58848de8455479f4061393e",
+    "message": "Make it possible to check off and delete tasks"
+  },
+  "4": {
+    "sha": "40eac55b0a6678d1560a8ff804871b0fae115a22",
+    "message": "A form to add tasks, sort to make newest tasks at the top"
+  },
+  "3": {
+    "sha": "519fa970161a46755765b3884c32f435252bc862",
+    "message": "Replace the static array with a Collection"
+  },
+  "2": {
+    "sha": "e998be2ddf735d361f560b8d8bf9631b1151fee7",
+    "message": "Add templates backed by a static array and all of the CSS"
+  },
+  "1": {
+    "sha": "6d14a8cd5ec233ea6714dce2a5e92560438dcf3c",
+    "message": "Run `meteor create`"
+  }
+}
\ No newline at end of file
diff --git a/scripts/map-commits-to-steps.rb b/scripts/map-commits-to-steps.rb
index c6e8245..4d9f290 100755
--- a/scripts/map-commits-to-steps.rb
+++ b/scripts/map-commits-to-steps.rb
@@ -48,5 +48,6 @@ log_output.each_line do |line|
 end
 
 File.open out_file, "w" do |file|
+  file.write "// This file auto-generated by scripts/map-commits-to-steps.rb\n"
   file.write(ARGV[2] + " = " + JSON.pretty_generate(hash))
 end
-- 
2.13.6 (Apple Git-96)


From 9b94e621770bfb49ece8f9d375d14726192935b3 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 16:54:46 -0700
Subject: [PATCH 019/164] Fix loading issues

---
 package.js         |  4 ++--
 routes/blazeTut.js | 18 +++++++++---------
 2 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/package.js b/package.js
index 35e97b9..1950171 100644
--- a/package.js
+++ b/package.js
@@ -53,11 +53,11 @@ Package.onUse(function (api) {
   ], 'client');
 
   api.addFiles([
+    'routes/commits/blaze.js',
     'routes/angularTut.js',
     'routes/blazeTut.js',
     'routes/reactTut.js',
-    'routes/tutorial-pages.js',
-    'routes/commits/blaze.js'
+    'routes/tutorial-pages.js'
   ]);
 
   // Also, exports all of the templates from the steps/ directory
diff --git a/routes/blazeTut.js b/routes/blazeTut.js
index d61b6ae..bf33b14 100644
--- a/routes/blazeTut.js
+++ b/routes/blazeTut.js
@@ -6,7 +6,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.creating-an-app",
     path: "/tutorials/blaze/creating-an-app",
     contentTemplate: 'blaze-step01',
-    sha: BLAZE_COMMITS["1"]
+    sha: BLAZE_COMMITS["1"].sha
   },
   {
     id: "1",
@@ -15,7 +15,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.templates",
     path: "/tutorials/blaze/templates",
     contentTemplate: 'blaze-step02',
-    sha: BLAZE_COMMITS["2"]
+    sha: BLAZE_COMMITS["2"].sha
   },
   {
     id: "2",
@@ -24,7 +24,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.collections",
     path: "/tutorials/blaze/collections",
     contentTemplate: 'blaze-step03',
-    sha: BLAZE_COMMITS["3"]
+    sha: BLAZE_COMMITS["3"].sha
   },
   {
     id: "3",
@@ -33,7 +33,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.forms-and-events",
     path: "/tutorials/blaze/forms-and-events",
     contentTemplate: 'blaze-step04',
-    sha: BLAZE_COMMITS["4"]
+    sha: BLAZE_COMMITS["4"].sha
   },
   {
     id: "4",
@@ -42,7 +42,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.update-and-remove",
     path: "/tutorials/blaze/update-and-remove",
     contentTemplate: 'blaze-step05',
-    sha: BLAZE_COMMITS["5"]
+    sha: BLAZE_COMMITS["5"].sha
   },
   {
     id: "5",
@@ -67,7 +67,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.temporary-ui-state",
     path: "/tutorials/blaze/temporary-ui-state",
     contentTemplate: 'blaze-step08',
-    sha: BLAZE_COMMITS["8"]
+    sha: BLAZE_COMMITS["8"].sha
   },
   {
     id: "8",
@@ -76,7 +76,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.adding-user-accounts",
     path: "/tutorials/blaze/adding-user-accounts",
     contentTemplate: 'blaze-step09',
-    sha: BLAZE_COMMITS["9"]
+    sha: BLAZE_COMMITS["9"].sha
   },
   {
     id: "9",
@@ -85,7 +85,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.security-with-methods",
     path: "/tutorials/blaze/security-with-methods",
     contentTemplate: 'blaze-step10',
-    sha: BLAZE_COMMITS["10"]
+    sha: BLAZE_COMMITS["10"].sha
   },
   {
     id: "10",
@@ -94,7 +94,7 @@ BLAZE_TUT = [
     route: "tutorials.blaze.publish-and-subscribe",
     path: "/tutorials/blaze/publish-and-subscribe",
     contentTemplate: 'blaze-step11',
-    sha: BLAZE_COMMITS["11"]
+    sha: BLAZE_COMMITS["11"].sha
   },
   {
     id: "11",
-- 
2.13.6 (Apple Git-96)


From 6df71a4630314c77b41e4d538d6be162eddaaf6b Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 17:05:18 -0700
Subject: [PATCH 020/164] Add auto-generated commits for Angular

---
 package.js                |  1 +
 routes/angularTut.js      | 20 ++++++++++----------
 routes/commits/angular.js | 43 +++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 54 insertions(+), 10 deletions(-)
 create mode 100644 routes/commits/angular.js

diff --git a/package.js b/package.js
index 1950171..07ab9ff 100644
--- a/package.js
+++ b/package.js
@@ -54,6 +54,7 @@ Package.onUse(function (api) {
 
   api.addFiles([
     'routes/commits/blaze.js',
+    'routes/commits/angular.js',
     'routes/angularTut.js',
     'routes/blazeTut.js',
     'routes/reactTut.js',
diff --git a/routes/angularTut.js b/routes/angularTut.js
index b67d582..d8679d6 100644
--- a/routes/angularTut.js
+++ b/routes/angularTut.js
@@ -6,7 +6,7 @@ ANGULAR_TUT = [
     route: "tutorials.angular.creating-an-app",
     path: "/tutorials/angular/creating-an-app",
     contentTemplate: 'angular-step01',
-    sha: "fc766519b453d3d57820a6fe8839dae173f49941"
+    sha: ANGULAR_COMMITS["1"].sha
   },
   {
     id: "1",
@@ -15,7 +15,7 @@ ANGULAR_TUT = [
     route: "tutorials.angular.templates",
     path: "/tutorials/angular/templates",
     contentTemplate: 'angular-step02',
-    sha: "7eea17a2de2c45031b7f345e4db7ec1152d6386f"
+    sha: ANGULAR_COMMITS["2"].sha
   },
   {
     id: "2",
@@ -24,7 +24,7 @@ ANGULAR_TUT = [
     route: "tutorials.angular.collections",
     path: "/tutorials/angular/collections",
     contentTemplate: 'angular-step03',
-    sha: "8bc939ece149a547e1130c056853b13f89519627"
+    sha: ANGULAR_COMMITS["3"].sha
   },
   {
     id: "3",
@@ -33,7 +33,7 @@ ANGULAR_TUT = [
     route: "tutorials.angular.forms-and-events",
     path: "/tutorials/angular/forms-and-events",
     contentTemplate: 'angular-step04',
-    sha: "785d5fa76b32ba37e2a73bccea2cebfe27b79c94"
+    sha: ANGULAR_COMMITS["4"].sha
   },
   {
     id: "4",
@@ -42,7 +42,7 @@ ANGULAR_TUT = [
     route: "tutorials.angular.update-and-remove",
     path: "/tutorials/angular/update-and-remove",
     contentTemplate: 'angular-step05',
-    sha: "2c5420e51ca2d0177d83befad0730adea8e75c4a"
+    sha: ANGULAR_COMMITS["5"].sha
   },
   {
     id: "5",
@@ -59,7 +59,7 @@ ANGULAR_TUT = [
     route: "tutorials.angular.running-on-mobile",
     path: "/tutorials/angular/running-on-mobile",
     contentTemplate: 'angular-step07',
-    sha: "f285fe5d508411b1aed368a818263eb23239f024"
+    sha: ANGULAR_COMMITS["7"].sha
   },
   {
     id: "7",
@@ -68,7 +68,7 @@ ANGULAR_TUT = [
     route: "tutorials.angular.filtering-collections",
     path: "/tutorials/angular/filtering-collections",
     contentTemplate: 'angular-step08',
-    sha: "f11a875b19ccf321e62fd5494d8de5d03df0c55e"
+    sha: ANGULAR_COMMITS["8"].sha
   },
   {
     id: "8",
@@ -77,7 +77,7 @@ ANGULAR_TUT = [
     route: "tutorials.angular.adding-user-accounts",
     path: "/tutorials/angular/adding-user-accounts",
     contentTemplate: 'angular-step09',
-    sha: "85b6b6606e8a0742250614041455784d8455810c"
+    sha: ANGULAR_COMMITS["9"].sha
   },
   {
     id: "9",
@@ -86,7 +86,7 @@ ANGULAR_TUT = [
     route: "tutorials.angular.security-with-methods",
     path: "/tutorials/angular/security-with-methods",
     contentTemplate: 'angular-step10',
-    sha: "75b8328206dc9a6a0f8ce019da35446c63b5b5d1"
+    sha: ANGULAR_COMMITS["10"].sha
   },
   {
     id: "10",
@@ -95,7 +95,7 @@ ANGULAR_TUT = [
     route: "tutorials.angular.publish-and-subscribe",
     path: "/tutorials/angular/publish-and-subscribe",
     contentTemplate: 'angular-step11',
-    sha: "a85b2f031fa08fb1ae09bdc69d55ce760d44bf72"
+    sha: ANGULAR_COMMITS["11"].sha
   },
   {
     id: "11",
diff --git a/routes/commits/angular.js b/routes/commits/angular.js
new file mode 100644
index 0000000..9f6f2e4
--- /dev/null
+++ b/routes/commits/angular.js
@@ -0,0 +1,43 @@
+// This file auto-generated by scripts/map-commits-to-steps.rb
+ANGULAR_COMMITS = {
+  "11": {
+    "sha": "0ca238c099dbf17aa66873f813e8fed43b9b694d",
+    "message": "Add a private task feature, remove the autopublish package"
+  },
+  "10": {
+    "sha": "05d534ee034fea7ea0471033882acd32a4508fa4",
+    "message": "Move database logic into Meteor.methods, remove insecure package"
+  },
+  "9": {
+    "sha": "947d9a7761f5800f8189287752080157c4e125f3",
+    "message": "Add users and login; display which user created a task"
+  },
+  "8": {
+    "sha": "d6229448a5e63137ddaa67ee9e7431466d4e796c",
+    "message": "Add an option to hide completed tasks, and show incomplete task count"
+  },
+  "7": {
+    "sha": "bbcc31b5304fe95df6fe94cfe05229d75e1ce29f",
+    "message": "Make Angular initialize on mobile devices"
+  },
+  "5": {
+    "sha": "a7ca2a6d3ff099d1253604619395b4ed6a46e691",
+    "message": "Make it possible to check off and delete tasks"
+  },
+  "4": {
+    "sha": "7037614aa24edbf7f2f5f1b8b44b8d813d604695",
+    "message": "A form to add tasks, sort to make newest tasks at the top"
+  },
+  "3": {
+    "sha": "3ccf55d5ffa976ebf849c4e16a2505e92c07fff0",
+    "message": "Replace the static array with a Collection"
+  },
+  "2": {
+    "sha": "2b4394e49f1345e5e106781831759454841cda73",
+    "message": "Add templates backed by a static array and all of the CSS"
+  },
+  "1": {
+    "sha": "c72debff708d1f5ed2ce9e2ca824cee2aec38277",
+    "message": "Run `meteor create`"
+  }
+}
\ No newline at end of file
-- 
2.13.6 (Apple Git-96)


From 2a7c9e78bb1774ea3342df0c320d0246a331d0b0 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 17:09:18 -0700
Subject: [PATCH 021/164] Add links to git repos

---
 README.md | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/README.md b/README.md
index a89be6a..39bc122 100644
--- a/README.md
+++ b/README.md
@@ -10,6 +10,14 @@ Feel free to submit a pull request to improve the content!
 2. `/steps/angular`: [Meteor and Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app)
 3. `/steps/react`: Meteor and React tutorial, work in progress (not live yet)
 
+### Tutorial step-by-step code
+
+We also maintain all of the tutorials as step-by-step git repositories here:
+
+1. [Blaze](https://github.com/meteor/simple-todos)
+2. [Angular](https://github.com/meteor/simple-todos-angular)
+3. [React](https://github.com/meteor/simple-todos-react)
+
 ### To do
 
 1. Improve maintainability of the step-by-step git repositories
-- 
2.13.6 (Apple Git-96)


From faee8b84dc063dad44023c502cda643fde5901b6 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 17:10:01 -0700
Subject: [PATCH 022/164] Update README

---
 README.md | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/README.md b/README.md
index 39bc122..588ea71 100644
--- a/README.md
+++ b/README.md
@@ -6,9 +6,9 @@ Feel free to submit a pull request to improve the content!
 
 ### Current contents
 
-1. `/steps/blaze`: [Meteor and Blaze tutorial](https://www.meteor.com/tutorials/blaze/creating-an-app)
-2. `/steps/angular`: [Meteor and Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app)
-3. `/steps/react`: Meteor and React tutorial, work in progress (not live yet)
+1. [Meteor and Blaze tutorial](https://www.meteor.com/tutorials/blaze/creating-an-app): `/steps/blaze`
+2. [Meteor and Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app): `/steps/angular`
+3. Meteor and React tutorial, work in progress (not live yet): `/steps/react`
 
 ### Tutorial step-by-step code
 
-- 
2.13.6 (Apple Git-96)


From 335ab41732a77f5ece713f4ce47727bacd25cfd3 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 17:11:06 -0700
Subject: [PATCH 023/164] Add links

---
 README.md | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/README.md b/README.md
index 588ea71..2c4a13d 100644
--- a/README.md
+++ b/README.md
@@ -6,9 +6,9 @@ Feel free to submit a pull request to improve the content!
 
 ### Current contents
 
-1. [Meteor and Blaze tutorial](https://www.meteor.com/tutorials/blaze/creating-an-app): `/steps/blaze`
-2. [Meteor and Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app): `/steps/angular`
-3. Meteor and React tutorial, work in progress (not live yet): `/steps/react`
+1. [Blaze tutorial](https://www.meteor.com/tutorials/blaze/creating-an-app): [`/steps/blaze`](https://github.com/meteor/tutorials/tree/master/steps/blaze)
+2. [Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app): [`/steps/angular`](https://github.com/meteor/tutorials/tree/master/steps/angular)
+3. React tutorial, work in progress (not live yet): [`/steps/react`](https://github.com/meteor/tutorials/tree/master/steps/react)
 
 ### Tutorial step-by-step code
 
-- 
2.13.6 (Apple Git-96)


From 41d6b8244921c5294dbe72d1e25d7f6f64c6d7a3 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 17:11:47 -0700
Subject: [PATCH 024/164] Check off todo

---
 README.md | 1 -
 1 file changed, 1 deletion(-)

diff --git a/README.md b/README.md
index 2c4a13d..01f3cab 100644
--- a/README.md
+++ b/README.md
@@ -22,4 +22,3 @@ We also maintain all of the tutorials as step-by-step git repositories here:
 
 1. Improve maintainability of the step-by-step git repositories
 2. Create a simple app in this repo to view the tutorials as a standalone thing
-3. Factor out common content into templates to DRY things up
\ No newline at end of file
-- 
2.13.6 (Apple Git-96)


From c3b9150424f1b0e576f555fac52cf99fe1c1160c Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 9 Jul 2015 17:12:59 -0700
Subject: [PATCH 025/164] Document script

---
 README.md | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/README.md b/README.md
index 01f3cab..fc3ea64 100644
--- a/README.md
+++ b/README.md
@@ -22,3 +22,8 @@ We also maintain all of the tutorials as step-by-step git repositories here:
 
 1. Improve maintainability of the step-by-step git repositories
 2. Create a simple app in this repo to view the tutorials as a standalone thing
+
+### Updating Git SHAs for the tutorial
+
+Run the script:
+`./scripts/map-commits-to-steps.rb ~/git/simple-todos ~/git/tutorials/routes/commits/blaze.js BLAZE_COMMITS`
-- 
2.13.6 (Apple Git-96)


From dfd4116a12898b0a43cd8b6c6a21e8b1b6108d14 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Fri, 10 Jul 2015 14:51:00 -0700
Subject: [PATCH 026/164] Edits based on Anubhav's run through

---
 shared/explanations.md |  4 ++--
 steps/react/step02.md  | 17 ++++++++++++++---
 steps/react/step03.md  | 11 +++++++++--
 steps/react/step04.md  | 11 ++++++++---
 steps/react/step05.md  | 17 ++++++++++++++++-
 steps/react/step08.md  | 19 +++++++++++++++----
 steps/react/step09.md  |  5 ++++-
 steps/react/step10.md  |  2 +-
 steps/react/step11.md  |  5 +++--
 9 files changed, 72 insertions(+), 19 deletions(-)

diff --git a/shared/explanations.md b/shared/explanations.md
index 7ea1f2c..2ca083a 100644
--- a/shared/explanations.md
+++ b/shared/explanations.md
@@ -25,14 +25,14 @@ To test that this functionality works, you can use your browser's private browsi
 In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
 
 ```js
-// Inside the deleteTask method
+// At the top of the deleteTask method
 var task = Tasks.findOne(taskId);
 if (task.private && task.owner !== Meteor.userId()) {
   // If the task is private, make sure only the owner can delete it
   throw new Meteor.Error("not-authorized");
 }
 
-// Inside the setChecked method
+// At the top of the setChecked method
 var task = Tasks.findOne(taskId);
 if (task.private && task.owner !== Meteor.userId()) {
   // If the task is private, make sure only the owner can check it off
diff --git a/steps/react/step02.md b/steps/react/step02.md
index 8a105c7..eaf4540 100644
--- a/steps/react/step02.md
+++ b/steps/react/step02.md
@@ -1,7 +1,9 @@
 {{#template name="react-step02"}}
 # Defining views with React components
 
-To start working with React as our view library, let's add the `react` package, which includes everything you need to get started using React in Meteor: the React library itself, automatic compilation of `.jsx` files, and a `ReactMeteorData` mixin for loading data.
+To start working with React as our view library, let's add the `react` package, which includes everything you need to get started using React in Meteor: the React library itself, automatic compilation of `.jsx` files, and a `ReactMeteorData` mixin for loading data. We'll see how to use all of these parts in the coming steps.
+
+Open a new terminal in the same directory as your running app, and type:
 
 ```sh
 meteor add react
@@ -20,7 +22,7 @@ First, replace the content of the initial HTML file:
 </head>
 
 <body>
-  <div id="app"></div>
+  <div id="render-target"></div>
 </body>
 ```
 
@@ -28,6 +30,8 @@ Second, delete `simple-todos-react.js` and create a new file called `simple-todo
 
 ```js
 // simple-todos-react.jsx
+
+// App component - represents the whole app
 App = React.createClass({
   getTasks() {
     return [
@@ -56,6 +60,7 @@ App = React.createClass({
   }
 });
 
+// Task component - represents a single todo item
 Task = React.createClass({
   propTypes: {
     // This component gets the task to display through a React prop.
@@ -70,13 +75,17 @@ Task = React.createClass({
 })
 
 if (Meteor.isClient) {
+  // This code is executed on the client only
+
   Meteor.startup(function () {
     // Use Meteor.startup to render the component after the page is ready
-    React.render(<App />, document.getElementById("app"));
+    React.render(<App />, document.getElementById("render-target"));
   });
 }
 ```
 
+In this new file, there are three important parts: an `App` React component, a `Task` React component, and a block inside `if (Meteor.isClient) { ... }`, which defines code to execute in the browser. Later in the tutorial, we will refer to these components when adding or changing code.
+
 ### Check the result
 
 In our browser, the app should now look much like this:
@@ -116,4 +125,6 @@ Read more about these features here: XXX
 
 {{> addingCSS}}
 
+Now that you've added the CSS, the app should look a lot nicer. Check in your browser to see that the new styles have loaded.
+
 {{/template}}
diff --git a/steps/react/step03.md b/steps/react/step03.md
index 01aaa92..4ba63e3 100644
--- a/steps/react/step03.md
+++ b/steps/react/step03.md
@@ -4,15 +4,22 @@
 
 {{> step03CollectionsIntro}}
 
-Let's update our code to get our tasks from a collection instead of a static array. We need to define a collection at the top of the file, and update our component to use this collection.
+Let's update our code to get our tasks from a collection instead of a static array. A summary of the changes, all are inside `simple-todos-react.jsx`:
+
+1. Define a collection at the top of the file
+2. Add a `mixins:` property to the `App` component definition
+3. Add a `getMeteorData` method to the `App` component
+4. Modify `renderTasks` to get task data from `this.data.tasks`
 
 ```js
 // simple-todos-react.jsx
 
-// Define a collection to hold our tasks
+// Define a collection at the top of the file to hold our tasks
 Tasks = new Mongo.Collection("tasks");
 
+// App component - represents the whole app
 App = React.createClass({
+
   // This mixin makes the getMeteorData method work
   mixins: [ReactMeteorData],
 
diff --git a/steps/react/step04.md b/steps/react/step04.md
index d8c5632..d5c3d99 100644
--- a/steps/react/step04.md
+++ b/steps/react/step04.md
@@ -7,10 +7,11 @@ In this step, we'll add an input field for users to add tasks to the list.
 First, let's add a form to our `App` component:
 
 ```
+{/* Inside simple-todos-react.jsx, in the App component */}
 <header>
   <h1>Todo List</h1>
 
-  <!-- add a form right below the h1 -->
+  {/* Add a form element right below the h1 */}
   <form className="new-task" onSubmit={this.handleSubmit} >
     <input
       type="text"
@@ -20,12 +21,14 @@ First, let's add a form to our `App` component:
 </header>
 ```
 
-You can see that the `form` element has an `onSubmit` attribute that references a method on the component called `handleSubmit`. This is how you listen to browser events, like the submit event on the form, in React. The `input` element has a `ref` property which will let us easily access this element later.
+> Tip: You can add comments to your JSX code by wrapping them in `{/* ... */}`
+
+You can see that the `form` element has an `onSubmit` attribute that references a method on the component called `handleSubmit`. In React, this is how you listen to browser events, like the submit event on the form. The `input` element has a `ref` property which will let us easily access this element later.
 
 Let's add a `handleSubmit` method to our `App` component:
 
 ```js
-// Inside the App component, below getMeteorData() and above render()
+// Inside the App component, below renderTasks() and above render()
 handleSubmit(event) {
   event.preventDefault();
 
@@ -68,5 +71,7 @@ getMeteorData() {
 },
 ```
 
+Let's go back to the browser and make sure this worked: any new tasks that you add should appear at the top of the list, rather than at the bottom.
+
 In the next step, we'll add some very important todo list features: checking off and deleting tasks.
 {{/template}}
diff --git a/steps/react/step05.md b/steps/react/step05.md
index 75143fc..0d3ff56 100644
--- a/steps/react/step05.md
+++ b/steps/react/step05.md
@@ -25,7 +25,7 @@ Task = React.createClass({
   render() {
     // Give tasks a different className when they are checked off,
     // so that we can style them nicely in CSS
-    const taskClassName = {this.props.task.checked ? "checked" : ""};
+    const taskClassName = this.props.task.checked ? "checked" : "";
 
     return (
       <li className={taskClassName}>
@@ -48,12 +48,27 @@ Task = React.createClass({
 
 ### Update
 
+In the code above, we have:
+
+```js
+// Set the checked property to the opposite of its current value
+Tasks.update(this.props.task._id, {
+  $set: {checked: ! this.props.task.checked}
+});
+```
+
 The `update` function on a collection takes two arguments. The first is a selector that identifies a subset of the collection, and the second is an update parameter that specifies what should be done to the matched objects.
 
 In this case, the selector is just the `_id` of the relevant task. The update parameter uses `$set` to toggle the `checked` field, which will represent whether the task has been completed.
 
 ### Remove
 
+This code from above removes a task:
+
+```js
+Tasks.remove(this.props.task._id);
+```
+
 The `remove` function takes one argument, a selector that determines which item to remove from the collection.
 
 {{/template}}
diff --git a/steps/react/step08.md b/steps/react/step08.md
index 31b48b4..518984a 100644
--- a/steps/react/step08.md
+++ b/steps/react/step08.md
@@ -7,7 +7,7 @@ In this step, we'll add a client-side data filtering feature to our app, so that
 First, we need to add a checkbox to our `App` component:
 
 ```html
-<!-- add the checkbox to <header> right below the <h1> -->
+{/* add a checkbox to <header> right below the <h1> inside App */}
 <label className="hide-completed">
   <input
     type="checkbox"
@@ -18,7 +18,18 @@ First, we need to add a checkbox to our `App` component:
 </label>
 ```
 
-You can see that it reads from `this.state.hideCompleted`. React components have a special field called `state` where you can store encapsulated component data. We can update `this.state` from an event handler by calling `this.setState`, which will update the state property asynchronously and then cause the component to re-render:
+You can see that it reads from `this.state.hideCompleted`. React components have a special field called `state` where you can store encapsulated component data. We need to define a `getInitialState` method on our component to initialize this field:
+
+```js
+// Inside the App component, at the top right under the mixin property
+getInitialState() {
+  return {
+    hideCompleted: false
+  }
+},
+```
+
+We can update `this.state` from an event handler by calling `this.setState`, which will update the state property asynchronously and then cause the component to re-render:
 
 ```js
 // Add this method to the App component, right above render()
@@ -44,7 +55,7 @@ getMeteorData() {
   return {
     tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch()
   };
-}
+},
 ```
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
@@ -58,7 +69,7 @@ Now that we have written a query that filters out completed tasks, we can use th
 return {
   tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch(),
   incompleteCount: Tasks.find({checked: {$ne: true}}).count()
-}
+};
 ```
 
 ```html
diff --git a/steps/react/step09.md b/steps/react/step09.md
index c240533..5e00278 100644
--- a/steps/react/step09.md
+++ b/steps/react/step09.md
@@ -39,7 +39,8 @@ In the App component `render` method, right under the checkbox and above the new
 Then, at the bottom of the `if (Meteor.isClient) { ... }` block, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
 ```js
-// At the bottom of the client code
+// At the beginning of the client code, right under the comment that says
+// "This code is executed on the client only"
 Accounts.ui.config({
   passwordSignupFields: "USERNAME_ONLY"
 });
@@ -102,6 +103,8 @@ Finally, add a statement to display the `username` field on each task right befo
 </span>
 ```
 
+In your browser, add some tasks and notice that your username shows up. Old tasks that we added before this step won't have usernames attached; you can just delete them.
+
 Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
 
 ### Automatic accounts UI
diff --git a/steps/react/step10.md b/steps/react/step10.md
index 3b53705..0517990 100644
--- a/steps/react/step10.md
+++ b/steps/react/step10.md
@@ -19,7 +19,7 @@ If you try to use the app after removing this package, you will notice that none
 First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
 
 ```js
-// At the bottom of simple-todos.js, outside of the client-only block
+// At the bottom of simple-todos-react.jsx, outside of the client-only block
 Meteor.methods({
   addTask(text) {
     // Make sure the user is logged in before inserting a task
diff --git a/steps/react/step11.md b/steps/react/step11.md
index eaaf849..e88adc2 100644
--- a/steps/react/step11.md
+++ b/steps/react/step11.md
@@ -4,7 +4,7 @@
 
 Now that we have moved all of our app's sensitive code into methods, we need to learn about the other half of Meteor's security story. Until now, we have worked assuming the entire database is present on the client, meaning if we call `Tasks.find()` we will get every task in the collection. That's not good if users of our application want to store privacy-sensitive data. We need a way of controlling which data Meteor sends to the client-side database.
 
-Just like with `insecure` in the last step, all new Meteor apps start with the `autopublish` package. Let's remove it and see what happens:
+Just like with `insecure` in the last step, all new Meteor apps start with the `autopublish` package, which automatically synchronizes all of the database contents to the client. Let's remove it and see what happens:
 
 ```bash
 meteor remove autopublish
@@ -61,7 +61,8 @@ logged in user owns this task:
 renderTasks() {
   // Get tasks from this.data.tasks
   return this.data.tasks.map((task) => {
-    const showPrivateButton = task.owner === this.data.currentUser._id;
+    const currentUserId = this.data.currentUser && this.data.currentUser._id;
+    const showPrivateButton = task.owner === currentUserId;
 
     return <Task
       key={task._id}
-- 
2.13.6 (Apple Git-96)


From d904857302239027a29c7bbcf2837c1dc3d5b0fc Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Fri, 10 Jul 2015 17:20:02 -0700
Subject: [PATCH 027/164] Deduplicate mobile step

---
 package.js                        |  5 +--
 routes/blazeTut.js                |  2 +-
 routes/reactTut.js                |  2 +-
 {steps/react => shared}/step07.md |  6 ++-
 steps/angular/step07.md           | 89 ++-------------------------------------
 steps/blaze/step07.md             | 84 ------------------------------------
 6 files changed, 13 insertions(+), 175 deletions(-)
 rename {steps/react => shared}/step07.md (96%)
 delete mode 100644 steps/blaze/step07.md

diff --git a/package.js b/package.js
index 07ab9ff..9b2af66 100644
--- a/package.js
+++ b/package.js
@@ -28,7 +28,6 @@ Package.onUse(function (api) {
     'steps/blaze/step03.md',
     'steps/blaze/step04.md',
     'steps/blaze/step05.md',
-    'steps/blaze/step07.md',
     'steps/blaze/step08.md',
     'steps/blaze/step09.md',
     'steps/blaze/step10.md',
@@ -39,7 +38,6 @@ Package.onUse(function (api) {
     'steps/react/step03.md',
     'steps/react/step04.md',
     'steps/react/step05.md',
-    'steps/react/step07.md',
     'steps/react/step08.md',
     'steps/react/step09.md',
     'steps/react/step10.md',
@@ -49,7 +47,8 @@ Package.onUse(function (api) {
 
     'shared/explanations.md',
     'shared/code.md',
-    'shared/step06.md'
+    'shared/step06.md',
+    'shared/step07.md'
   ], 'client');
 
   api.addFiles([
diff --git a/routes/blazeTut.js b/routes/blazeTut.js
index bf33b14..bbb7a50 100644
--- a/routes/blazeTut.js
+++ b/routes/blazeTut.js
@@ -58,7 +58,7 @@ BLAZE_TUT = [
     seoTitle: 'Running on mobile',
     route: "tutorials.blaze.running-on-mobile",
     path: "/tutorials/blaze/running-on-mobile",
-    contentTemplate: 'blaze-step07'
+    contentTemplate: 'sharedStep07'
   },
   {
     id: "7",
diff --git a/routes/reactTut.js b/routes/reactTut.js
index 33ca6b7..ff26c46 100644
--- a/routes/reactTut.js
+++ b/routes/reactTut.js
@@ -58,7 +58,7 @@ REACT_TUT = [
     seoTitle: 'Running on mobile',
     route: "tutorials.react.running-on-mobile",
     path: "/tutorials/react/running-on-mobile",
-    contentTemplate: 'react-step07'
+    contentTemplate: 'sharedStep07'
   },
   {
     id: "7",
diff --git a/steps/react/step07.md b/shared/step07.md
similarity index 96%
rename from steps/react/step07.md
rename to shared/step07.md
index cc57e1b..10179aa 100644
--- a/steps/react/step07.md
+++ b/shared/step07.md
@@ -1,4 +1,4 @@
-{{#template name="react-step07"}}
+{{#template name="sharedStep07"}}
 
 # Running your app on Android or iOS
 
@@ -6,6 +6,10 @@ So far, we've been building our app and testing only in a web browser, but Meteo
 
 Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to [skip to the next step](/tutorials/react/temporary-ui-state).
 
+{{#if specialContent}}
+  {{> Template.dynamic template=specialContent}}
+{{/if}}
+
 ### Running on an Android emulator
 
 In the terminal, go to your app folder and type:
diff --git a/steps/angular/step07.md b/steps/angular/step07.md
index f21355a..0929e34 100644
--- a/steps/angular/step07.md
+++ b/steps/angular/step07.md
@@ -1,9 +1,4 @@
-{{#template name="angular-step07"}}
-
-# Running your app on Android or iOS
-
-So far, we've been building our app and testing only in a web browser, but Meteor has been designed to work across different platforms - your simple todo list website can become an iOS or Android app in just a few commands.
-
+{{#template name="angularSpecialPart07"}}
 ### Bootstraping Angular for mobile
 
 Angular needs the main document to be ready so it can bootstrap, but different devices has different events for `ready`.
@@ -28,84 +23,8 @@ if (Meteor.isCordova)
 else
   angular.element(document).ready(onReady);
 ```
+{{/template}}
 
-### Installing Tools for Mobile development
-
-Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to [skip to the next step](/tutorials/angular/filtering-collections).
-
-### Running on an Android emulator
-
-In the terminal, go to your app folder and type:
-
-```bash
-meteor install-sdk android
-```
-
-This will help you install all of the necessary tools to build an Android app from your project. When you are done installing everything, type:
-
-```bash
-meteor add-platform android
-```
-
-After you agree to the license terms, type:
-
-```bash
-meteor run android
-```
-
-After some initialization, you will see an Android emulator pop up, running your app inside a native Android wrapper. The emulator can be somewhat slow, so if you want to see what it's really like using your app, you should run it on an actual device.
-
-### Running on an Android device
-
-First, complete all of the steps above to set up the Android tools on your system. Then, make sure you have [USB Debugging enabled on your phone](http://developer.android.com/tools/device.html#developer-device-options) and the phone is plugged into your computer with a USB cable. Also, you must quit the Android emulator before running on a device.
-
-Then, run the following command:
-
-```bash
-meteor run android-device
-```
-
-The app will be built and installed on your device. If you want to point your app to the server you deployed in the previous step, run:
-
-```bash
-meteor run android-device --mobile-server my_app_name.meteor.com
-```
-
-### Running on an iOS simulator (Mac Only)
-
-If you have a Mac, you can run your app inside the iOS simulator.
-
-Go to your app folder and type:
-
-```bash
-meteor install-sdk ios
-```
-
-This will run you through the setup necessary to build an iOS app from your project. When you're done, type:
-
-```bash
-meteor add-platform ios
-meteor run ios
-```
-
-You will see the iOS simulator pop up with your app running inside.
-
-### Running on an iPhone or iPad (Mac Only; requires Apple developer account)
-
-If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
-
-```bash
-meteor run ios-device
-```
-
-This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
-
-If you want to point your app at the previously deployed server, run:
-
-```bash
-meteor run ios-device --mobile-server my_app_name.meteor.com
-```
-
-Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features.
-
+{{#template name="angular-step07"}}
+{{> sharedStep07 specialContent="angularSpecialPart07"}}
 {{/template}}
diff --git a/steps/blaze/step07.md b/steps/blaze/step07.md
deleted file mode 100644
index 5a51cc3..0000000
--- a/steps/blaze/step07.md
+++ /dev/null
@@ -1,84 +0,0 @@
-{{#template name="blaze-step07"}}
-
-# Running your app on Android or iOS
-
-So far, we've been building our app and testing only in a web browser, but Meteor has been designed to work across different platforms - your simple todo list website can become an iOS or Android app in just a few commands.
-
-Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to [skip to the next step](/tutorials/blaze/temporary-ui-state).
-
-### Running on an Android emulator
-
-In the terminal, go to your app folder and type:
-
-```bash
-meteor install-sdk android
-```
-
-This will help you install all of the necessary tools to build an Android app from your project. When you are done installing everything, type:
-
-```bash
-meteor add-platform android
-```
-
-After you agree to the license terms, type:
-
-```bash
-meteor run android
-```
-
-After some initialization, you will see an Android emulator pop up, running your app inside a native Android wrapper. The emulator can be somewhat slow, so if you want to see what it's really like using your app, you should run it on an actual device.
-
-### Running on an Android device
-
-First, complete all of the steps above to set up the Android tools on your system. Then, make sure you have [USB Debugging enabled on your phone](http://developer.android.com/tools/device.html#developer-device-options) and the phone is plugged into your computer with a USB cable. Also, you must quit the Android emulator before running on a device.
-
-Then, run the following command:
-
-```bash
-meteor run android-device
-```
-
-The app will be built and installed on your device. If you want to point your app to the server you deployed in the previous step, run:
-
-```bash
-meteor run android-device --mobile-server my_app_name.meteor.com
-```
-
-### Running on an iOS simulator (Mac Only)
-
-If you have a Mac, you can run your app inside the iOS simulator.
-
-Go to your app folder and type:
-
-```bash
-meteor install-sdk ios
-```
-
-This will run you through the setup necessary to build an iOS app from your project. When you're done, type:
-
-```bash
-meteor add-platform ios
-meteor run ios
-```
-
-You will see the iOS simulator pop up with your app running inside.
-
-### Running on an iPhone or iPad (Mac Only; requires Apple developer account)
-
-If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
-
-```bash
-meteor run ios-device
-```
-
-This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
-
-If you want to point your app at the previously deployed server, run:
-
-```bash
-meteor run ios-device --mobile-server my_app_name.meteor.com
-```
-
-Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features.
-
-{{/template}}
-- 
2.13.6 (Apple Git-96)


From 7d066cc4322d6a94d09fc777f17613acf4164bf0 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Fri, 10 Jul 2015 17:22:27 -0700
Subject: [PATCH 028/164] Move iOS to top, add warning about Windows

---
 shared/step07.md        | 42 ++++++++++++++++++++++--------------------
 steps/angular/step07.md |  2 +-
 2 files changed, 23 insertions(+), 21 deletions(-)

diff --git a/shared/step07.md b/shared/step07.md
index 10179aa..b50f258 100644
--- a/shared/step07.md
+++ b/shared/step07.md
@@ -2,14 +2,35 @@
 
 # Running your app on Android or iOS
 
+> Currently, Meteor on Windows does not support mobile builds. If you are using Meteor on Windows, you should skip this step.
+
 So far, we've been building our app and testing only in a web browser, but Meteor has been designed to work across different platforms - your simple todo list website can become an iOS or Android app in just a few commands.
 
-Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to [skip to the next step](/tutorials/react/temporary-ui-state).
+Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to skip to the next step.
 
 {{#if specialContent}}
   {{> Template.dynamic template=specialContent}}
 {{/if}}
 
+### Running on an iOS simulator (Mac Only)
+
+If you have a Mac, you can run your app inside the iOS simulator.
+
+Go to your app folder and type:
+
+```bash
+meteor install-sdk ios
+```
+
+This will run you through the setup necessary to build an iOS app from your project. When you're done, type:
+
+```bash
+meteor add-platform ios
+meteor run ios
+```
+
+You will see the iOS simulator pop up with your app running inside.
+
 ### Running on an Android emulator
 
 In the terminal, go to your app folder and type:
@@ -48,25 +69,6 @@ The app will be built and installed on your device. If you want to point your ap
 meteor run android-device --mobile-server my_app_name.meteor.com
 ```
 
-### Running on an iOS simulator (Mac Only)
-
-If you have a Mac, you can run your app inside the iOS simulator.
-
-Go to your app folder and type:
-
-```bash
-meteor install-sdk ios
-```
-
-This will run you through the setup necessary to build an iOS app from your project. When you're done, type:
-
-```bash
-meteor add-platform ios
-meteor run ios
-```
-
-You will see the iOS simulator pop up with your app running inside.
-
 ### Running on an iPhone or iPad (Mac Only; requires Apple developer account)
 
 If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
diff --git a/steps/angular/step07.md b/steps/angular/step07.md
index 0929e34..827af94 100644
--- a/steps/angular/step07.md
+++ b/steps/angular/step07.md
@@ -1,5 +1,5 @@
 {{#template name="angularSpecialPart07"}}
-### Bootstraping Angular for mobile
+### Bootstrapping Angular for mobile
 
 Angular needs the main document to be ready so it can bootstrap, but different devices has different events for `ready`.
 
-- 
2.13.6 (Apple Git-96)


From d2abab9a5411c4764bbf296e15dcc749d6e60f03 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Fri, 10 Jul 2015 17:26:38 -0700
Subject: [PATCH 029/164] Update comments

---
 steps/react/step11.md | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/steps/react/step11.md b/steps/react/step11.md
index e88adc2..b4f06c2 100644
--- a/steps/react/step11.md
+++ b/steps/react/step11.md
@@ -39,7 +39,7 @@ Let's add another property to tasks called "private" and a button for users to m
 First, we need to add a new method that we can call to set a task's private status:
 
 ```js
-// Add a method underneath `setChecked`
+// Inside Meteor.methods, add a method underneath `setChecked`
 setPrivate(taskId, setToPrivate) {
   var task = Tasks.findOne(taskId);
 
@@ -57,7 +57,7 @@ to show the private button; the button should show up only if the currently
 logged in user owns this task:
 
 ```js
-// Update the renderTasks method to pass in showPrivateButton
+// Update renderTasks method on the App component to pass in showPrivateButton
 renderTasks() {
   // Get tasks from this.data.tasks
   return this.data.tasks.map((task) => {
@@ -73,7 +73,7 @@ renderTasks() {
 ```
 
 ```js
-// Add a new prop type for showPrivateButton
+// Add a new prop type for showPrivateButton on the Task component
 propTypes: {
   task: React.PropTypes.object.isRequired,
   showPrivateButton: React.PropTypes.bool.isRequired
@@ -83,7 +83,7 @@ propTypes: {
 Let's add the button, using this new prop to decide whether it should be displayed:
 
 ```html
-<!-- inside the render function of Task, under the checkbox code -->
+{/* inside the render function of Task, under the checkbox code */}
 { this.props.showPrivateButton ? (
   <button className="toggle-private" onClick={this.togglePrivate}>
     { this.props.task.private ? "Private" : "Public" }
-- 
2.13.6 (Apple Git-96)


From 4604e6cd74acf4de27e07a3478020e9110c65ecf Mon Sep 17 00:00:00 2001
From: lizunlong <lizunlong@gmail.com>
Date: Sat, 11 Jul 2015 16:17:43 +0800
Subject: [PATCH 030/164] this.props.task

---
 steps/react/step10.md | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/steps/react/step10.md b/steps/react/step10.md
index 0517990..082dc79 100644
--- a/steps/react/step10.md
+++ b/steps/react/step10.md
@@ -50,10 +50,10 @@ Now that we have defined our methods, we need to update the places we were opera
 Meteor.call("addTask", text);
 
 // replace Tasks.update( ... ) with:
-Meteor.call("setChecked", this._id, ! this.checked);
+Meteor.call("setChecked", this.props.task._id, ! this.props.task.checked);
 
 // replace Tasks.remove( ... ) with:
-Meteor.call("deleteTask", this._id);
+Meteor.call("deleteTask", this.props.task._id);
 ```
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
-- 
2.13.6 (Apple Git-96)


From c9d98f321b1da5c39223c26f836020e3b25a2516 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Sat, 11 Jul 2015 18:57:46 -0700
Subject: [PATCH 031/164] Update README.md

---
 README.md | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/README.md b/README.md
index fc3ea64..8b87eb3 100644
--- a/README.md
+++ b/README.md
@@ -18,10 +18,15 @@ We also maintain all of the tutorials as step-by-step git repositories here:
 2. [Angular](https://github.com/meteor/simple-todos-angular)
 3. [React](https://github.com/meteor/simple-todos-react)
 
+### Tutorial viewer
+
+If you are editing the tutorials, use this simple app to view them: https://github.com/meteor/tutorial-viewer
+
 ### To do
 
 1. Improve maintainability of the step-by-step git repositories
-2. Create a simple app in this repo to view the tutorials as a standalone thing
+2. Generate code snippets automatically from git
+3. Improve code snippet context
 
 ### Updating Git SHAs for the tutorial
 
-- 
2.13.6 (Apple Git-96)


From dfa71071c23e013e16924ae5ec41ad8822fe5deb Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 11:51:28 -0700
Subject: [PATCH 032/164] Add Blaze.remove

---
 steps/react/step09.md | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/steps/react/step09.md b/steps/react/step09.md
index 5e00278..7354e8d 100644
--- a/steps/react/step09.md
+++ b/steps/react/step09.md
@@ -20,9 +20,13 @@ To use the Blaze UI component from the `accounts-ui` package, we need to wrap it
 AccountsUIWrapper = React.createClass({
   componentDidMount() {
     // Use Meteor Blaze to render login buttons
-    Blaze.render(Template.loginButtons,
+    this.view = Blaze.render(Template.loginButtons,
       React.findDOMNode(this.refs.container));
   },
+  componentWillUnmount() {
+    // Clean up Blaze view
+    Blaze.remove(this.view);
+  },
   render() {
     // Just render a placeholder container that will be filled in
     return <span ref="container" />;
-- 
2.13.6 (Apple Git-96)


From 515a2b9a78d626b44e6467f31c12d22e178e10c7 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 13:17:16 -0700
Subject: [PATCH 033/164] Add submodule, update README

---
 .gitmodules | 3 +++
 README.md   | 8 ++++++++
 repos/react | 1 +
 3 files changed, 12 insertions(+)
 create mode 100644 .gitmodules
 create mode 160000 repos/react

diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 0000000..8127c87
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,3 @@
+[submodule "repos/react"]
+	path = repos/react
+	url = git@github.com:meteor/simple-todos-react.git
diff --git a/README.md b/README.md
index 8b87eb3..2b5eeaa 100644
--- a/README.md
+++ b/README.md
@@ -32,3 +32,11 @@ If you are editing the tutorials, use this simple app to view them: https://gith
 
 Run the script:
 `./scripts/map-commits-to-steps.rb ~/git/simple-todos ~/git/tutorials/routes/commits/blaze.js BLAZE_COMMITS`
+
+### Updating tutorial
+
+#### Commit message format
+
+```
+Step 3.1: Add some feature
+```
diff --git a/repos/react b/repos/react
new file mode 160000
index 0000000..aa8e37f
--- /dev/null
+++ b/repos/react
@@ -0,0 +1 @@
+Subproject commit aa8e37fa3724552a75f0c6795a80839df3e978e8
-- 
2.13.6 (Apple Git-96)


From 95e062d955a75e295e8d2e53679727ed4afed312 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 13:21:10 -0700
Subject: [PATCH 034/164] Add submodules for angular/blaze

---
 .gitmodules                                          | 6 ++++++
 README.md                                            | 2 +-
 repos/angular                                        | 1 +
 repos/blaze                                          | 1 +
 scripts/{map-commits-to-steps.rb => process-repo.rb} | 0
 5 files changed, 9 insertions(+), 1 deletion(-)
 create mode 160000 repos/angular
 create mode 160000 repos/blaze
 rename scripts/{map-commits-to-steps.rb => process-repo.rb} (100%)

diff --git a/.gitmodules b/.gitmodules
index 8127c87..c931be3 100644
--- a/.gitmodules
+++ b/.gitmodules
@@ -1,3 +1,9 @@
 [submodule "repos/react"]
 	path = repos/react
 	url = git@github.com:meteor/simple-todos-react.git
+[submodule "repos/blaze"]
+	path = repos/blaze
+	url = git@github.com:meteor/simple-todos.git
+[submodule "repos/angular"]
+	path = repos/angular
+	url = git@github.com:meteor/simple-todos-angular.git
diff --git a/README.md b/README.md
index 2b5eeaa..ca69507 100644
--- a/README.md
+++ b/README.md
@@ -31,7 +31,7 @@ If you are editing the tutorials, use this simple app to view them: https://gith
 ### Updating Git SHAs for the tutorial
 
 Run the script:
-`./scripts/map-commits-to-steps.rb ~/git/simple-todos ~/git/tutorials/routes/commits/blaze.js BLAZE_COMMITS`
+`./scripts/process-repo.rb repos/blaze routes/commits/blaze.js BLAZE_COMMITS`
 
 ### Updating tutorial
 
diff --git a/repos/angular b/repos/angular
new file mode 160000
index 0000000..0ca238c
--- /dev/null
+++ b/repos/angular
@@ -0,0 +1 @@
+Subproject commit 0ca238c099dbf17aa66873f813e8fed43b9b694d
diff --git a/repos/blaze b/repos/blaze
new file mode 160000
index 0000000..10bdbc7
--- /dev/null
+++ b/repos/blaze
@@ -0,0 +1 @@
+Subproject commit 10bdbc7434b913c85c156ae6e27fdbea4b2e27bb
diff --git a/scripts/map-commits-to-steps.rb b/scripts/process-repo.rb
similarity index 100%
rename from scripts/map-commits-to-steps.rb
rename to scripts/process-repo.rb
-- 
2.13.6 (Apple Git-96)


From ad7348e4df10faa8f2972fb0f62cc29719681ced Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 14:33:32 -0700
Subject: [PATCH 035/164] Add first working code box

---
 package.js                |   30 +-
 patches/react.multi.patch | 1766 +++++++++++++++++++++++++++++++++++++++++++++
 routes/commits/react.js   |  167 +++++
 scripts/process-repo.rb   |   13 +-
 shared/code-box.html      |    7 +
 shared/code-box.js        |   66 ++
 steps/react/step02.md     |   11 +-
 7 files changed, 2036 insertions(+), 24 deletions(-)
 create mode 100644 patches/react.multi.patch
 create mode 100644 routes/commits/react.js
 create mode 100644 shared/code-box.html
 create mode 100644 shared/code-box.js

diff --git a/package.js b/package.js
index 9b2af66..4d55f2a 100644
--- a/package.js
+++ b/package.js
@@ -8,7 +8,19 @@ Package.onUse(function (api) {
   api.versionsFrom("1.1.0.2");
   api.use([
     'simple:markdown-templating@1.2.7',
-    'templating'
+    'templating',
+    'mdg:git-patch-viewer@0.1.3',
+    'underscore'
+  ]);
+
+  api.addFiles([
+    'routes/commits/blaze.js',
+    'routes/commits/angular.js',
+    'routes/commits/react.js',
+    'routes/angularTut.js',
+    'routes/blazeTut.js',
+    'routes/reactTut.js',
+    'routes/tutorial-pages.js'
   ]);
 
   api.addFiles([
@@ -48,17 +60,13 @@ Package.onUse(function (api) {
     'shared/explanations.md',
     'shared/code.md',
     'shared/step06.md',
-    'shared/step07.md'
-  ], 'client');
+    'shared/step07.md',
 
-  api.addFiles([
-    'routes/commits/blaze.js',
-    'routes/commits/angular.js',
-    'routes/angularTut.js',
-    'routes/blazeTut.js',
-    'routes/reactTut.js',
-    'routes/tutorial-pages.js'
-  ]);
+    'shared/code-box.html',
+    'shared/code-box.js',
+
+    'patches/react.multi.patch'
+  ], 'client');
 
   // Also, exports all of the templates from the steps/ directory
   api.export('TUTORIAL_PAGES');
diff --git a/patches/react.multi.patch b/patches/react.multi.patch
new file mode 100644
index 0000000..78df02c
--- /dev/null
+++ b/patches/react.multi.patch
@@ -0,0 +1,1766 @@
+From ec18d9c416ce36418de3c07d40ecdab53ae9fd69 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:00:51 -0700
+Subject: [PATCH 01/41] Step 1: Run `meteor create`
+
+---
+ .meteor/.finished-upgraders |  8 ++++++++
+ .meteor/.gitignore          |  1 +
+ .meteor/.id                 |  7 +++++++
+ .meteor/packages            |  9 +++++++++
+ .meteor/platforms           |  2 ++
+ .meteor/release             |  1 +
+ .meteor/versions            | 48 +++++++++++++++++++++++++++++++++++++++++++++
+ simple-todos-react.css      |  1 +
+ simple-todos-react.html     | 14 +++++++++++++
+ simple-todos-react.js       | 23 ++++++++++++++++++++++
+ 10 files changed, 114 insertions(+)
+ create mode 100644 .meteor/.finished-upgraders
+ create mode 100644 .meteor/.gitignore
+ create mode 100644 .meteor/.id
+ create mode 100644 .meteor/packages
+ create mode 100644 .meteor/platforms
+ create mode 100644 .meteor/release
+ create mode 100644 .meteor/versions
+ create mode 100644 simple-todos-react.css
+ create mode 100644 simple-todos-react.html
+ create mode 100644 simple-todos-react.js
+
+diff --git a/.meteor/.finished-upgraders b/.meteor/.finished-upgraders
+new file mode 100644
+index 0000000..8a76103
+--- /dev/null
++++ b/.meteor/.finished-upgraders
+@@ -0,0 +1,8 @@
++# This file contains information which helps Meteor properly upgrade your
++# app when you run 'meteor update'. You should check it into version control
++# with your project.
++
++notices-for-0.9.0
++notices-for-0.9.1
++0.9.4-platform-file
++notices-for-facebook-graph-api-2
+diff --git a/.meteor/.gitignore b/.meteor/.gitignore
+new file mode 100644
+index 0000000..4083037
+--- /dev/null
++++ b/.meteor/.gitignore
+@@ -0,0 +1 @@
++local
+diff --git a/.meteor/.id b/.meteor/.id
+new file mode 100644
+index 0000000..3bab3ba
+--- /dev/null
++++ b/.meteor/.id
+@@ -0,0 +1,7 @@
++# This file contains a token that is unique to your project.
++# Check it into your repository along with the rest of this directory.
++# It can be used for purposes such as:
++#   - ensuring you don't accidentally deploy one app on top of another
++#   - providing package authors with aggregated statistics
++
++ucqipf8prm38bs7dxj
+diff --git a/.meteor/packages b/.meteor/packages
+new file mode 100644
+index 0000000..99704e0
+--- /dev/null
++++ b/.meteor/packages
+@@ -0,0 +1,9 @@
++# Meteor packages used by this project, one per line.
++# Check this file (and the other files in this directory) into your repository.
++#
++# 'meteor add' and 'meteor remove' will edit this file for you,
++# but you can also edit it by hand.
++
++meteor-platform
++autopublish
++insecure
+diff --git a/.meteor/platforms b/.meteor/platforms
+new file mode 100644
+index 0000000..efeba1b
+--- /dev/null
++++ b/.meteor/platforms
+@@ -0,0 +1,2 @@
++server
++browser
+diff --git a/.meteor/release b/.meteor/release
+new file mode 100644
+index 0000000..dab6b55
+--- /dev/null
++++ b/.meteor/release
+@@ -0,0 +1 @@
++METEOR@1.1.0.2
+diff --git a/.meteor/versions b/.meteor/versions
+new file mode 100644
+index 0000000..410e1d9
+--- /dev/null
++++ b/.meteor/versions
+@@ -0,0 +1,48 @@
++autopublish@1.0.3
++autoupdate@1.2.1
++base64@1.0.3
++binary-heap@1.0.3
++blaze@2.1.2
++blaze-tools@1.0.3
++boilerplate-generator@1.0.3
++callback-hook@1.0.3
++check@1.0.5
++ddp@1.1.0
++deps@1.0.7
++ejson@1.0.6
++fastclick@1.0.3
++geojson-utils@1.0.3
++html-tools@1.0.4
++htmljs@1.0.4
++http@1.1.0
++id-map@1.0.3
++insecure@1.0.3
++jquery@1.11.3_2
++json@1.0.3
++launch-screen@1.0.2
++livedata@1.0.13
++logging@1.0.7
++meteor@1.1.6
++meteor-platform@1.2.2
++minifiers@1.1.5
++minimongo@1.0.8
++mobile-status-bar@1.0.3
++mongo@1.1.0
++observe-sequence@1.0.6
++ordered-dict@1.0.3
++random@1.0.3
++reactive-dict@1.1.0
++reactive-var@1.0.5
++reload@1.1.3
++retry@1.0.3
++routepolicy@1.0.5
++session@1.1.0
++spacebars@1.0.6
++spacebars-compiler@1.0.6
++templating@1.1.1
++tracker@1.0.7
++ui@1.0.6
++underscore@1.0.3
++url@1.0.4
++webapp@1.2.0
++webapp-hashing@1.0.3
+diff --git a/simple-todos-react.css b/simple-todos-react.css
+new file mode 100644
+index 0000000..b6b4052
+--- /dev/null
++++ b/simple-todos-react.css
+@@ -0,0 +1 @@
++/* CSS declarations go here */
+diff --git a/simple-todos-react.html b/simple-todos-react.html
+new file mode 100644
+index 0000000..e296a58
+--- /dev/null
++++ b/simple-todos-react.html
+@@ -0,0 +1,14 @@
++<head>
++  <title>simple-todos-react</title>
++</head>
++
++<body>
++  <h1>Welcome to Meteor!</h1>
++
++  {{> hello}}
++</body>
++
++<template name="hello">
++  <button>Click Me</button>
++  <p>You've pressed the button {{counter}} times.</p>
++</template>
+diff --git a/simple-todos-react.js b/simple-todos-react.js
+new file mode 100644
+index 0000000..4f8c65d
+--- /dev/null
++++ b/simple-todos-react.js
+@@ -0,0 +1,23 @@
++if (Meteor.isClient) {
++  // counter starts at 0
++  Session.setDefault('counter', 0);
++
++  Template.hello.helpers({
++    counter: function () {
++      return Session.get('counter');
++    }
++  });
++
++  Template.hello.events({
++    'click button': function () {
++      // increment the counter when button is clicked
++      Session.set('counter', Session.get('counter') + 1);
++    }
++  });
++}
++
++if (Meteor.isServer) {
++  Meteor.startup(function () {
++    // code to run on server at startup
++  });
++}
+-- 
+2.2.1
+
+
+From e23e1c9902bfc05fd21f709a8c6b0de58f05bb5f Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:02:01 -0700
+Subject: [PATCH 02/41] Step 2.1: Add the React package
+
+---
+ .meteor/packages |  1 +
+ .meteor/versions | 10 ++++++++++
+ 2 files changed, 11 insertions(+)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index 99704e0..10cd8b0 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -7,3 +7,4 @@
+ meteor-platform
+ autopublish
+ insecure
++react
+diff --git a/.meteor/versions b/.meteor/versions
+index 410e1d9..288ee5f 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -1,5 +1,7 @@
+ autopublish@1.0.3
+ autoupdate@1.2.1
++babel-compiler@5.6.15
++babel-runtime@0.1.1
+ base64@1.0.3
+ binary-heap@1.0.3
+ blaze@2.1.2
+@@ -7,6 +9,8 @@ blaze-tools@1.0.3
+ boilerplate-generator@1.0.3
+ callback-hook@1.0.3
+ check@1.0.5
++coffeescript@1.0.6
++cosmos:browserify@0.4.0
+ ddp@1.1.0
+ deps@1.0.7
+ ejson@1.0.6
+@@ -19,6 +23,7 @@ id-map@1.0.3
+ insecure@1.0.3
+ jquery@1.11.3_2
+ json@1.0.3
++jsx@0.1.1
+ launch-screen@1.0.2
+ livedata@1.0.13
+ logging@1.0.7
+@@ -31,6 +36,11 @@ mongo@1.1.0
+ observe-sequence@1.0.6
+ ordered-dict@1.0.3
+ random@1.0.3
++react@0.1.2
++react-meteor-data@0.1.0
++react-runtime@0.13.3_2
++react-runtime-dev@0.13.3_2
++react-runtime-prod@0.13.3_1
+ reactive-dict@1.1.0
+ reactive-var@1.0.5
+ reload@1.1.3
+-- 
+2.2.1
+
+
+From fec7e5aa905b7e0642af3ec1049f9f42d0459265 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:03:54 -0700
+Subject: [PATCH 03/41] Step 2.2: Replace starter HTML code
+
+---
+ simple-todos-react.html | 11 ++---------
+ 1 file changed, 2 insertions(+), 9 deletions(-)
+
+diff --git a/simple-todos-react.html b/simple-todos-react.html
+index e296a58..1aae2d4 100644
+--- a/simple-todos-react.html
++++ b/simple-todos-react.html
+@@ -1,14 +1,7 @@
+ <head>
+-  <title>simple-todos-react</title>
++  <title>Todo List</title>
+ </head>
+ 
+ <body>
+-  <h1>Welcome to Meteor!</h1>
+-
+-  {{> hello}}
++  <div id="render-target"></div>
+ </body>
+-
+-<template name="hello">
+-  <button>Click Me</button>
+-  <p>You've pressed the button {{counter}} times.</p>
+-</template>
+-- 
+2.2.1
+
+
+From 9e8020b66d1fa467b6fb00fc3541f9e0bfae98eb Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:05:08 -0700
+Subject: [PATCH 04/41] Step 2.3: Replace starter JS
+
+---
+ simple-todos-react.js  | 23 -----------------------
+ simple-todos-react.jsx |  8 ++++++++
+ 2 files changed, 8 insertions(+), 23 deletions(-)
+ delete mode 100644 simple-todos-react.js
+ create mode 100644 simple-todos-react.jsx
+
+diff --git a/simple-todos-react.js b/simple-todos-react.js
+deleted file mode 100644
+index 4f8c65d..0000000
+--- a/simple-todos-react.js
++++ /dev/null
+@@ -1,23 +0,0 @@
+-if (Meteor.isClient) {
+-  // counter starts at 0
+-  Session.setDefault('counter', 0);
+-
+-  Template.hello.helpers({
+-    counter: function () {
+-      return Session.get('counter');
+-    }
+-  });
+-
+-  Template.hello.events({
+-    'click button': function () {
+-      // increment the counter when button is clicked
+-      Session.set('counter', Session.get('counter') + 1);
+-    }
+-  });
+-}
+-
+-if (Meteor.isServer) {
+-  Meteor.startup(function () {
+-    // code to run on server at startup
+-  });
+-}
+diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
+new file mode 100644
+index 0000000..a7e2d2f
+--- /dev/null
++++ b/simple-todos-react.jsx
+@@ -0,0 +1,8 @@
++if (Meteor.isClient) {
++  // This code is executed on the client only
++
++  Meteor.startup(function () {
++    // Use Meteor.startup to render the component after the page is ready
++    React.render(<App />, document.getElementById("render-target"));
++  });
++}
+-- 
+2.2.1
+
+
+From f26af2fb34333dfde00589bb0a65cf38e3cb3390 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:05:58 -0700
+Subject: [PATCH 05/41] Step 2.4: Create App component
+
+---
+ App.jsx | 28 ++++++++++++++++++++++++++++
+ 1 file changed, 28 insertions(+)
+ create mode 100644 App.jsx
+
+diff --git a/App.jsx b/App.jsx
+new file mode 100644
+index 0000000..1ff73a4
+--- /dev/null
++++ b/App.jsx
+@@ -0,0 +1,28 @@
++// App component - represents the whole app
++App = React.createClass({
++  getTasks() {
++    return [
++      { _id: 1, text: "This is task 1" },
++      { _id: 2, text: "This is task 2" },
++      { _id: 3, text: "This is task 3" }
++    ];
++  },
++  renderTasks() {
++    return this.getTasks().map((task) => {
++      return <Task key={task._id} task={task} />;
++    });
++  },
++  render() {
++    return (
++      <div className="container">
++        <header>
++          <h1>Todo List</h1>
++        </header>
++
++        <ul>
++          {this.renderTasks()}
++        </ul>
++      </div>
++    );
++  }
++});
+-- 
+2.2.1
+
+
+From 197c54dd37419b5bcb9dc045ae4791deaddcbde4 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:06:31 -0700
+Subject: [PATCH 06/41] Step 2.5: Create Task component
+
+---
+ Task.jsx | 13 +++++++++++++
+ 1 file changed, 13 insertions(+)
+ create mode 100644 Task.jsx
+
+diff --git a/Task.jsx b/Task.jsx
+new file mode 100644
+index 0000000..c49e7ac
+--- /dev/null
++++ b/Task.jsx
+@@ -0,0 +1,13 @@
++// Task component - represents a single todo item
++Task = React.createClass({
++  propTypes: {
++    // This component gets the task to display through a React prop.
++    // We can use propTypes to indicate it is required
++    task: React.PropTypes.object.isRequired
++  },
++  render() {
++    return (
++      <li>{this.props.task.text}</li>
++    );
++  }
++});
+-- 
+2.2.1
+
+
+From e66de095331e3390c2684f5080d7f11e45c7c8fc Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:07:02 -0700
+Subject: [PATCH 07/41] Step 2.6: Add CSS
+
+---
+ simple-todos-react.css | 125 +++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 125 insertions(+)
+
+diff --git a/simple-todos-react.css b/simple-todos-react.css
+index b6b4052..cec3ae6 100644
+--- a/simple-todos-react.css
++++ b/simple-todos-react.css
+@@ -1 +1,126 @@
+ /* CSS declarations go here */
++body {
++  font-family: sans-serif;
++  background-color: #315481;
++  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
++  background-attachment: fixed;
++
++  position: absolute;
++  top: 0;
++  bottom: 0;
++  left: 0;
++  right: 0;
++
++  padding: 0;
++  margin: 0;
++
++  font-size: 14px;
++}
++
++.container {
++  max-width: 600px;
++  margin: 0 auto;
++  min-height: 100%;
++  background: white;
++}
++
++header {
++  background: #d2edf4;
++  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
++  padding: 20px 15px 15px 15px;
++  position: relative;
++}
++
++#login-buttons {
++  display: block;
++}
++
++h1 {
++  font-size: 1.5em;
++  margin: 0;
++  margin-bottom: 10px;
++  display: inline-block;
++  margin-right: 1em;
++}
++
++form {
++  margin-top: 10px;
++  margin-bottom: -10px;
++  position: relative;
++}
++
++.new-task input {
++  box-sizing: border-box;
++  padding: 10px 0;
++  background: transparent;
++  border: none;
++  width: 100%;
++  padding-right: 80px;
++  font-size: 1em;
++}
++
++.new-task input:focus{
++  outline: 0;
++}
++
++ul {
++  margin: 0;
++  padding: 0;
++  background: white;
++}
++
++.delete {
++  float: right;
++  font-weight: bold;
++  background: none;
++  font-size: 1em;
++  border: none;
++  position: relative;
++}
++
++li {
++  position: relative;
++  list-style: none;
++  padding: 15px;
++  border-bottom: #eee solid 1px;
++}
++
++li .text {
++  margin-left: 10px;
++}
++
++li.checked {
++  color: #888;
++}
++
++li.checked .text {
++  text-decoration: line-through;
++}
++
++li.private {
++  background: #eee;
++  border-color: #ddd;
++}
++
++header .hide-completed {
++  float: right;
++}
++
++.toggle-private {
++  margin-left: 5px;
++}
++
++@media (max-width: 600px) {
++  li {
++    padding: 12px 15px;
++  }
++
++  .search {
++    width: 150px;
++    clear: both;
++  }
++
++  .new-task input {
++    padding-bottom: 5px;
++  }
++}
+\ No newline at end of file
+-- 
+2.2.1
+
+
+From 2190d7d87b177541bdc28b6011e0282810362bcc Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:08:08 -0700
+Subject: [PATCH 08/41] Step 3.1: Define tasks collection
+
+---
+ simple-todos-react.jsx | 3 +++
+ 1 file changed, 3 insertions(+)
+
+diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
+index a7e2d2f..a67b030 100644
+--- a/simple-todos-react.jsx
++++ b/simple-todos-react.jsx
+@@ -1,3 +1,6 @@
++// Define a collection to hold our tasks
++Tasks = new Mongo.Collection("tasks");
++
+ if (Meteor.isClient) {
+   // This code is executed on the client only
+ 
+-- 
+2.2.1
+
+
+From b96965e36191a6071c279e1e86262be6587909f4 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:08:44 -0700
+Subject: [PATCH 09/41] Step 3.2: Modify App component to get tasks from
+ collection
+
+---
+ App.jsx | 20 +++++++++++++-------
+ 1 file changed, 13 insertions(+), 7 deletions(-)
+
+diff --git a/App.jsx b/App.jsx
+index 1ff73a4..60f1400 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -1,17 +1,23 @@
+ // App component - represents the whole app
+ App = React.createClass({
+-  getTasks() {
+-    return [
+-      { _id: 1, text: "This is task 1" },
+-      { _id: 2, text: "This is task 2" },
+-      { _id: 3, text: "This is task 3" }
+-    ];
++
++  // This mixin makes the getMeteorData method work
++  mixins: [ReactMeteorData],
++
++  // Loads items from the Tasks collection and puts them on this.data.tasks
++  getMeteorData() {
++    return {
++      tasks: Tasks.find({}).fetch()
++    }
+   },
++
+   renderTasks() {
+-    return this.getTasks().map((task) => {
++    // Get tasks from this.data.tasks
++    return this.data.tasks.map((task) => {
+       return <Task key={task._id} task={task} />;
+     });
+   },
++
+   render() {
+     return (
+       <div className="container">
+-- 
+2.2.1
+
+
+From 00f681c51a39366c387af94615dbb4d818056178 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:13:37 -0700
+Subject: [PATCH 10/41] Step 4.1: Add form for new tasks
+
+---
+ App.jsx | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+diff --git a/App.jsx b/App.jsx
+index 60f1400..7b798bb 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -23,6 +23,13 @@ App = React.createClass({
+       <div className="container">
+         <header>
+           <h1>Todo List</h1>
++
++          <form className="new-task" onSubmit={this.handleSubmit} >
++            <input
++              type="text"
++              ref="textInput"
++              placeholder="Type to add new tasks" />
++          </form>
+         </header>
+ 
+         <ul>
+-- 
+2.2.1
+
+
+From 7814c907ba3b19f71222892db8a75d69be15c3c8 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:14:08 -0700
+Subject: [PATCH 11/41] Step 4.2: Add handleSubmit method to App component
+
+---
+ App.jsx | 15 +++++++++++++++
+ 1 file changed, 15 insertions(+)
+
+diff --git a/App.jsx b/App.jsx
+index 7b798bb..67184cc 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -18,6 +18,21 @@ App = React.createClass({
+     });
+   },
+ 
++  handleSubmit(event) {
++    event.preventDefault();
++
++    // Find the text field via the React ref
++    var text = React.findDOMNode(this.refs.textInput).value.trim();
++
++    Tasks.insert({
++      text: text,
++      createdAt: new Date() // current time
++    });
++
++    // Clear form
++    React.findDOMNode(this.refs.textInput).value = "";
++  },
++
+   render() {
+     return (
+       <div className="container">
+-- 
+2.2.1
+
+
+From 102b5b14357856f2125abf0978fac242bc6f68d4 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:14:40 -0700
+Subject: [PATCH 12/41] Step 4.3: Update getMeteorData to sort tasks by time
+
+---
+ App.jsx | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/App.jsx b/App.jsx
+index 67184cc..64197bd 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -7,7 +7,7 @@ App = React.createClass({
+   // Loads items from the Tasks collection and puts them on this.data.tasks
+   getMeteorData() {
+     return {
+-      tasks: Tasks.find({}).fetch()
++      tasks: Tasks.find({}, {sort: {createdAt: -1}}).fetch()
+     }
+   },
+ 
+-- 
+2.2.1
+
+
+From 7fc3e783e846828b0d4a3d9bb7a27e01ce395809 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:17:06 -0700
+Subject: [PATCH 13/41] Step 5.1: Update Task component to add features
+
+---
+ Task.jsx | 32 +++++++++++++++++++++++++++++---
+ 1 file changed, 29 insertions(+), 3 deletions(-)
+
+diff --git a/Task.jsx b/Task.jsx
+index c49e7ac..d1c618b 100644
+--- a/Task.jsx
++++ b/Task.jsx
+@@ -1,13 +1,39 @@
+ // Task component - represents a single todo item
+ Task = React.createClass({
+   propTypes: {
+-    // This component gets the task to display through a React prop.
+-    // We can use propTypes to indicate it is required
+     task: React.PropTypes.object.isRequired
+   },
++
++  toggleChecked() {
++    // Set the checked property to the opposite of its current value
++    Tasks.update(this.props.task._id, {
++      $set: {checked: ! this.props.task.checked}
++    });
++  },
++
++  deleteThisTask() {
++    Tasks.remove(this.props.task._id);
++  },
++
+   render() {
++    // Give tasks a different className when they are checked off,
++    // so that we can style them nicely in CSS
++    const taskClassName = this.props.task.checked ? "checked" : "";
++
+     return (
+-      <li>{this.props.task.text}</li>
++      <li className={taskClassName}>
++        <button className="delete" onClick={this.deleteThisTask}>
++          &times;
++        </button>
++
++        <input
++          type="checkbox"
++          readOnly={true}
++          checked={this.props.task.checked}
++          onClick={this.toggleChecked} />
++
++        <span className="text">{this.props.task.text}</span>
++      </li>
+     );
+   }
+ });
+-- 
+2.2.1
+
+
+From 0897d01b349735fdeddff6cde09a7f630c976890 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:21:30 -0700
+Subject: [PATCH 14/41] Step 8.1: Add hide completed checkbox to App component
+
+---
+ App.jsx | 9 +++++++++
+ 1 file changed, 9 insertions(+)
+
+diff --git a/App.jsx b/App.jsx
+index 64197bd..ef39e73 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -39,6 +39,15 @@ App = React.createClass({
+         <header>
+           <h1>Todo List</h1>
+ 
++          <label className="hide-completed">
++            <input
++              type="checkbox"
++              readOnly={true}
++              checked={this.state.hideCompleted}
++              onClick={this.toggleHideCompleted} />
++            Hide Completed Tasks
++          </label>
++
+           <form className="new-task" onSubmit={this.handleSubmit} >
+             <input
+               type="text"
+-- 
+2.2.1
+
+
+From 0abf8e9a5745c0ed72fe56547e4b30e67deab5a0 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:22:07 -0700
+Subject: [PATCH 15/41] Step 8.2: Add getInitialState to App component
+
+---
+ App.jsx | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+diff --git a/App.jsx b/App.jsx
+index ef39e73..144582d 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -4,6 +4,12 @@ App = React.createClass({
+   // This mixin makes the getMeteorData method work
+   mixins: [ReactMeteorData],
+ 
++  getInitialState() {
++    return {
++      hideCompleted: false
++    }
++  },
++
+   // Loads items from the Tasks collection and puts them on this.data.tasks
+   getMeteorData() {
+     return {
+-- 
+2.2.1
+
+
+From 37f39a8c2c81d01d3bc438e79cb8edf5dc23391f Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:22:32 -0700
+Subject: [PATCH 16/41] Step 8.3: Add toggleHideCompleted handler to App
+
+---
+ App.jsx | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+diff --git a/App.jsx b/App.jsx
+index 144582d..6799fca 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -39,6 +39,12 @@ App = React.createClass({
+     React.findDOMNode(this.refs.textInput).value = "";
+   },
+ 
++  toggleHideCompleted() {
++    this.setState({
++      hideCompleted: ! this.state.hideCompleted
++    });
++  },
++
+   render() {
+     return (
+       <div className="container">
+-- 
+2.2.1
+
+
+From 2364ea342e26daef71c78186d88bcd09aee17483 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:23:02 -0700
+Subject: [PATCH 17/41] Step 8.4: Replace getMeteorData to filter tasks
+
+---
+ App.jsx | 11 +++++++++--
+ 1 file changed, 9 insertions(+), 2 deletions(-)
+
+diff --git a/App.jsx b/App.jsx
+index 6799fca..105577e 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -12,9 +12,16 @@ App = React.createClass({
+ 
+   // Loads items from the Tasks collection and puts them on this.data.tasks
+   getMeteorData() {
+-    return {
+-      tasks: Tasks.find({}, {sort: {createdAt: -1}}).fetch()
++    let query = {};
++
++    if (this.state.hideCompleted) {
++      // If hide completed is checked, filter tasks
++      query = {checked: {$ne: true}};
+     }
++
++    return {
++      tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch()
++    };
+   },
+ 
+   renderTasks() {
+-- 
+2.2.1
+
+
+From 8e56c9854433546590e5ea6173cc74a0456e53eb Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:23:44 -0700
+Subject: [PATCH 18/41] Step 8.5: Update getMeteorData to return
+ incompleteCount
+
+---
+ App.jsx | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+diff --git a/App.jsx b/App.jsx
+index 105577e..09415f3 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -20,7 +20,8 @@ App = React.createClass({
+     }
+ 
+     return {
+-      tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch()
++      tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch(),
++      incompleteCount: Tasks.find({checked: {$ne: true}}).count()
+     };
+   },
+ 
+-- 
+2.2.1
+
+
+From f0d790f05e0f3e0466392d97bd6900861100b561 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:24:09 -0700
+Subject: [PATCH 19/41] Step 8.6: Display incompleteCount in the header
+
+---
+ App.jsx | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/App.jsx b/App.jsx
+index 09415f3..f5b8224 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -57,7 +57,7 @@ App = React.createClass({
+     return (
+       <div className="container">
+         <header>
+-          <h1>Todo List</h1>
++          <h1>Todo List ({this.data.incompleteCount})</h1>
+ 
+           <label className="hide-completed">
+             <input
+-- 
+2.2.1
+
+
+From b8a8d27d0f2808c18b7160a088ee56772ec29e77 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:26:02 -0700
+Subject: [PATCH 20/41] Step 9.1: Add accounts-ui and accounts-password
+ packages
+
+---
+ .meteor/packages |  2 ++
+ .meteor/versions | 11 +++++++++++
+ 2 files changed, 13 insertions(+)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index 10cd8b0..b08108a 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -8,3 +8,5 @@ meteor-platform
+ autopublish
+ insecure
+ react
++accounts-ui
++accounts-password
+diff --git a/.meteor/versions b/.meteor/versions
+index 288ee5f..e964910 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -1,3 +1,7 @@
++accounts-base@1.2.0
++accounts-password@1.1.1
++accounts-ui@1.1.5
++accounts-ui-unstyled@1.1.7
+ autopublish@1.0.3
+ autoupdate@1.2.1
+ babel-compiler@5.6.15
+@@ -14,6 +18,7 @@ cosmos:browserify@0.4.0
+ ddp@1.1.0
+ deps@1.0.7
+ ejson@1.0.6
++email@1.0.6
+ fastclick@1.0.3
+ geojson-utils@1.0.3
+ html-tools@1.0.4
+@@ -25,7 +30,9 @@ jquery@1.11.3_2
+ json@1.0.3
+ jsx@0.1.1
+ launch-screen@1.0.2
++less@1.0.14
+ livedata@1.0.13
++localstorage@1.0.3
+ logging@1.0.7
+ meteor@1.1.6
+ meteor-platform@1.2.2
+@@ -33,6 +40,7 @@ minifiers@1.1.5
+ minimongo@1.0.8
+ mobile-status-bar@1.0.3
+ mongo@1.1.0
++npm-bcrypt@0.7.8_2
+ observe-sequence@1.0.6
+ ordered-dict@1.0.3
+ random@1.0.3
+@@ -46,9 +54,12 @@ reactive-var@1.0.5
+ reload@1.1.3
+ retry@1.0.3
+ routepolicy@1.0.5
++service-configuration@1.0.4
+ session@1.1.0
++sha@1.0.3
+ spacebars@1.0.6
+ spacebars-compiler@1.0.6
++srp@1.0.3
+ templating@1.1.1
+ tracker@1.0.7
+ ui@1.0.6
+-- 
+2.2.1
+
+
+From 3ffdac0480183c849ad8cbbfa8e84079596b6db5 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:26:59 -0700
+Subject: [PATCH 21/41] Step 9.2: Create Accounts UI wrapper component
+
+---
+ AccountsUIWrapper.jsx | 15 +++++++++++++++
+ 1 file changed, 15 insertions(+)
+ create mode 100644 AccountsUIWrapper.jsx
+
+diff --git a/AccountsUIWrapper.jsx b/AccountsUIWrapper.jsx
+new file mode 100644
+index 0000000..87fd3b3
+--- /dev/null
++++ b/AccountsUIWrapper.jsx
+@@ -0,0 +1,15 @@
++AccountsUIWrapper = React.createClass({
++  componentDidMount() {
++    // Use Meteor Blaze to render login buttons
++    this.view = Blaze.render(Template.loginButtons,
++      React.findDOMNode(this.refs.container));
++  },
++  componentWillUnmount() {
++    // Clean up Blaze view
++    Blaze.remove(this.view);
++  },
++  render() {
++    // Just render a placeholder container that will be filled in
++    return <span ref="container" />;
++  }
++});
+-- 
+2.2.1
+
+
+From a5ab9b8f2147dbc77b64c94b5369fb478f20bd92 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:27:36 -0700
+Subject: [PATCH 22/41] Step 9.3: Include sign in form
+
+---
+ App.jsx | 2 ++
+ 1 file changed, 2 insertions(+)
+
+diff --git a/App.jsx b/App.jsx
+index f5b8224..e829c27 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -68,6 +68,8 @@ App = React.createClass({
+             Hide Completed Tasks
+           </label>
+ 
++          <AccountsUIWrapper />
++
+           <form className="new-task" onSubmit={this.handleSubmit} >
+             <input
+               type="text"
+-- 
+2.2.1
+
+
+From c1c9fd68243fbfbb9fa24a5924c2c4af5c097fa6 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:28:08 -0700
+Subject: [PATCH 23/41] Step 9.4: Configure accounts-ui to only require
+ username
+
+---
+ simple-todos-react.jsx | 3 +++
+ 1 file changed, 3 insertions(+)
+
+diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
+index a67b030..36ce4bc 100644
+--- a/simple-todos-react.jsx
++++ b/simple-todos-react.jsx
+@@ -3,6 +3,9 @@ Tasks = new Mongo.Collection("tasks");
+ 
+ if (Meteor.isClient) {
+   // This code is executed on the client only
++  Accounts.ui.config({
++    passwordSignupFields: "USERNAME_ONLY"
++  });
+ 
+   Meteor.startup(function () {
+     // Use Meteor.startup to render the component after the page is ready
+-- 
+2.2.1
+
+
+From 2519198dfd053b036463dc6e026484342df47f7e Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:28:46 -0700
+Subject: [PATCH 24/41] Step 9.5: Update insert to save username and owner
+
+---
+ App.jsx | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/App.jsx b/App.jsx
+index e829c27..dd7862f 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -40,7 +40,9 @@ App = React.createClass({
+ 
+     Tasks.insert({
+       text: text,
+-      createdAt: new Date() // current time
++      createdAt: new Date(),            // current time
++      owner: Meteor.userId(),           // _id of logged in user
++      username: Meteor.user().username  // username of logged in user
+     });
+ 
+     // Clear form
+-- 
+2.2.1
+
+
+From aca9333e69ffdeb31eea7e89a666801d733a8e34 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:29:16 -0700
+Subject: [PATCH 25/41] Step 9.6: Update getMeteorData to return data about
+ user
+
+---
+ App.jsx | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+diff --git a/App.jsx b/App.jsx
+index dd7862f..dfedd85 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -21,7 +21,8 @@ App = React.createClass({
+ 
+     return {
+       tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch(),
+-      incompleteCount: Tasks.find({checked: {$ne: true}}).count()
++      incompleteCount: Tasks.find({checked: {$ne: true}}).count(),
++      currentUser: Meteor.user()
+     };
+   },
+ 
+-- 
+2.2.1
+
+
+From 14326f789ec20b89796978a6b20956e9cb4fc4e7 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:30:06 -0700
+Subject: [PATCH 26/41] Step 9.7: Wrap new task form to only show when logged
+ in
+
+---
+ App.jsx | 14 ++++++++------
+ 1 file changed, 8 insertions(+), 6 deletions(-)
+
+diff --git a/App.jsx b/App.jsx
+index dfedd85..b8824a4 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -73,12 +73,14 @@ App = React.createClass({
+ 
+           <AccountsUIWrapper />
+ 
+-          <form className="new-task" onSubmit={this.handleSubmit} >
+-            <input
+-              type="text"
+-              ref="textInput"
+-              placeholder="Type to add new tasks" />
+-          </form>
++          { this.data.currentUser ?
++            <form className="new-task" onSubmit={this.handleSubmit} >
++              <input
++                type="text"
++                ref="textInput"
++                placeholder="Type to add new tasks" />
++            </form> : ''
++          }
+         </header>
+ 
+         <ul>
+-- 
+2.2.1
+
+
+From d8b57eb7e511cb32bb1d07cc3aed3fc318e0592a Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:30:48 -0700
+Subject: [PATCH 27/41] Step 9.8: Update Task component to show username
+
+---
+ Task.jsx | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/Task.jsx b/Task.jsx
+index d1c618b..2caead7 100644
+--- a/Task.jsx
++++ b/Task.jsx
+@@ -32,7 +32,9 @@ Task = React.createClass({
+           checked={this.props.task.checked}
+           onClick={this.toggleChecked} />
+ 
+-        <span className="text">{this.props.task.text}</span>
++        <span className="text">
++          <strong>{this.props.task.username}</strong>: {this.props.task.text}
++        </span>
+       </li>
+     );
+   }
+-- 
+2.2.1
+
+
+From 8b6a3d7f7ab2e3972ad0d70bb1b5a049c4d04380 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:31:22 -0700
+Subject: [PATCH 28/41] Step 10.1: Remove insecure package
+
+---
+ .meteor/packages | 1 -
+ .meteor/versions | 1 -
+ 2 files changed, 2 deletions(-)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index b08108a..6f2b627 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -6,7 +6,6 @@
+ 
+ meteor-platform
+ autopublish
+-insecure
+ react
+ accounts-ui
+ accounts-password
+diff --git a/.meteor/versions b/.meteor/versions
+index e964910..0d54bf9 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -25,7 +25,6 @@ html-tools@1.0.4
+ htmljs@1.0.4
+ http@1.1.0
+ id-map@1.0.3
+-insecure@1.0.3
+ jquery@1.11.3_2
+ json@1.0.3
+ jsx@0.1.1
+-- 
+2.2.1
+
+
+From 9a1ed5dc970b163fdeb38191e3c895601bb921e7 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:32:21 -0700
+Subject: [PATCH 29/41] Step 10.2: Add methods for add, remove, update task
+
+---
+ simple-todos-react.jsx | 24 ++++++++++++++++++++++++
+ 1 file changed, 24 insertions(+)
+
+diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
+index 36ce4bc..b1aa692 100644
+--- a/simple-todos-react.jsx
++++ b/simple-todos-react.jsx
+@@ -12,3 +12,27 @@ if (Meteor.isClient) {
+     React.render(<App />, document.getElementById("render-target"));
+   });
+ }
++
++Meteor.methods({
++  addTask(text) {
++    // Make sure the user is logged in before inserting a task
++    if (! Meteor.userId()) {
++      throw new Meteor.Error("not-authorized");
++    }
++
++    Tasks.insert({
++      text: text,
++      createdAt: new Date(),
++      owner: Meteor.userId(),
++      username: Meteor.user().username
++    });
++  },
++
++  removeTask(taskId) {
++    Tasks.remove(taskId);
++  },
++
++  setChecked(taskId, setChecked) {
++    Tasks.update(taskId, { $set: { checked: setChecked} });
++  }
++});
+-- 
+2.2.1
+
+
+From 8ab8d4a9d7988fbf38e07c0f6b1b9fb1380a2317 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:32:59 -0700
+Subject: [PATCH 30/41] Step 10.3: Update App component to use addTask method
+
+---
+ App.jsx | 7 +------
+ 1 file changed, 1 insertion(+), 6 deletions(-)
+
+diff --git a/App.jsx b/App.jsx
+index b8824a4..858f96b 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -39,12 +39,7 @@ App = React.createClass({
+     // Find the text field via the React ref
+     var text = React.findDOMNode(this.refs.textInput).value.trim();
+ 
+-    Tasks.insert({
+-      text: text,
+-      createdAt: new Date(),            // current time
+-      owner: Meteor.userId(),           // _id of logged in user
+-      username: Meteor.user().username  // username of logged in user
+-    });
++    Meteor.call("addTask", text);
+ 
+     // Clear form
+     React.findDOMNode(this.refs.textInput).value = "";
+-- 
+2.2.1
+
+
+From cdf35b47a601eb5df5d5af4027885b820b203b15 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:33:38 -0700
+Subject: [PATCH 31/41] Step 10.4: Update Task to use setChecked and removeTask
+ methods
+
+---
+ Task.jsx | 6 ++----
+ 1 file changed, 2 insertions(+), 4 deletions(-)
+
+diff --git a/Task.jsx b/Task.jsx
+index 2caead7..32577ed 100644
+--- a/Task.jsx
++++ b/Task.jsx
+@@ -6,13 +6,11 @@ Task = React.createClass({
+ 
+   toggleChecked() {
+     // Set the checked property to the opposite of its current value
+-    Tasks.update(this.props.task._id, {
+-      $set: {checked: ! this.props.task.checked}
+-    });
++    Meteor.call("setChecked", this.props.task._id, ! this.props.task.checked);
+   },
+ 
+   deleteThisTask() {
+-    Tasks.remove(this.props.task._id);
++    Meteor.call("removeTask", this.props.task._id);
+   },
+ 
+   render() {
+-- 
+2.2.1
+
+
+From 669ec22d48db6e0d305a9ad0dab4ec9be6696b7f Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:34:33 -0700
+Subject: [PATCH 32/41] Step 11.1: Remove autopublish package
+
+---
+ .meteor/packages | 1 -
+ .meteor/versions | 1 -
+ 2 files changed, 2 deletions(-)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index 6f2b627..81dd35c 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -5,7 +5,6 @@
+ # but you can also edit it by hand.
+ 
+ meteor-platform
+-autopublish
+ react
+ accounts-ui
+ accounts-password
+diff --git a/.meteor/versions b/.meteor/versions
+index 0d54bf9..777cca4 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -2,7 +2,6 @@ accounts-base@1.2.0
+ accounts-password@1.1.1
+ accounts-ui@1.1.5
+ accounts-ui-unstyled@1.1.7
+-autopublish@1.0.3
+ autoupdate@1.2.1
+ babel-compiler@5.6.15
+ babel-runtime@0.1.1
+-- 
+2.2.1
+
+
+From 942c9c66d8de46cfa8f47bc4edb5038a063dfcbb Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:35:03 -0700
+Subject: [PATCH 33/41] Step 11.2: Add publish to server and subscribe to
+ client
+
+---
+ simple-todos-react.jsx | 8 ++++++++
+ 1 file changed, 8 insertions(+)
+
+diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
+index b1aa692..f62ed9e 100644
+--- a/simple-todos-react.jsx
++++ b/simple-todos-react.jsx
+@@ -7,12 +7,20 @@ if (Meteor.isClient) {
+     passwordSignupFields: "USERNAME_ONLY"
+   });
+ 
++  Meteor.subscribe("tasks");
++
+   Meteor.startup(function () {
+     // Use Meteor.startup to render the component after the page is ready
+     React.render(<App />, document.getElementById("render-target"));
+   });
+ }
+ 
++if (Meteor.isServer) {
++  Meteor.publish("tasks", function () {
++    return Tasks.find();
++  });
++}
++
+ Meteor.methods({
+   addTask(text) {
+     // Make sure the user is logged in before inserting a task
+-- 
+2.2.1
+
+
+From a9299cb9ce21e06ff5de739c483df04e2ba850ff Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:36:29 -0700
+Subject: [PATCH 34/41] Step 11.3: Add setPrivate method
+
+---
+ simple-todos-react.jsx | 11 +++++++++++
+ 1 file changed, 11 insertions(+)
+
+diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
+index f62ed9e..c2a3196 100644
+--- a/simple-todos-react.jsx
++++ b/simple-todos-react.jsx
+@@ -42,5 +42,16 @@ Meteor.methods({
+ 
+   setChecked(taskId, setChecked) {
+     Tasks.update(taskId, { $set: { checked: setChecked} });
++  },
++
++  setPrivate(taskId, setToPrivate) {
++    const task = Tasks.findOne(taskId);
++
++    // Make sure only the task owner can make a task private
++    if (task.owner !== Meteor.userId()) {
++      throw new Meteor.Error("not-authorized");
++    }
++
++    Tasks.update(taskId, { $set: { private: setToPrivate } });
+   }
+ });
+-- 
+2.2.1
+
+
+From da1e2194308465f9a307c8b69a6b743baf5f680c Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:36:59 -0700
+Subject: [PATCH 35/41] Step 11.4: Update renderTasks to pass in
+ showPrivateButton
+
+---
+ App.jsx | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
+
+diff --git a/App.jsx b/App.jsx
+index 858f96b..82915ec 100644
+--- a/App.jsx
++++ b/App.jsx
+@@ -29,7 +29,13 @@ App = React.createClass({
+   renderTasks() {
+     // Get tasks from this.data.tasks
+     return this.data.tasks.map((task) => {
+-      return <Task key={task._id} task={task} />;
++      const currentUserId = this.data.currentUser && this.data.currentUser._id;
++      const showPrivateButton = task.owner === currentUserId;
++
++      return <Task
++        key={task._id}
++        task={task}
++        showPrivateButton={showPrivateButton} />;
+     });
+   },
+ 
+-- 
+2.2.1
+
+
+From ecd603a0f8a8f9f646ebf7a52264fce8ccccefbd Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:37:28 -0700
+Subject: [PATCH 36/41] Step 11.5: Add a new prop type for Task component
+
+---
+ Task.jsx | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+diff --git a/Task.jsx b/Task.jsx
+index 32577ed..c85416a 100644
+--- a/Task.jsx
++++ b/Task.jsx
+@@ -1,7 +1,8 @@
+ // Task component - represents a single todo item
+ Task = React.createClass({
+   propTypes: {
+-    task: React.PropTypes.object.isRequired
++    task: React.PropTypes.object.isRequired,
++    showPrivateButton: React.PropTypes.bool.isRequired
+   },
+ 
+   toggleChecked() {
+-- 
+2.2.1
+
+
+From dbae4bbbbaf26876cb2757dbe6f9a5c9503df535 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:38:04 -0700
+Subject: [PATCH 37/41] Step 11.6: Add private button, shown only to owner
+
+---
+ Task.jsx | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+diff --git a/Task.jsx b/Task.jsx
+index c85416a..1bbd4fb 100644
+--- a/Task.jsx
++++ b/Task.jsx
+@@ -31,6 +31,12 @@ Task = React.createClass({
+           checked={this.props.task.checked}
+           onClick={this.toggleChecked} />
+ 
++        { this.props.showPrivateButton ? (
++          <button className="toggle-private" onClick={this.togglePrivate}>
++            { this.props.task.private ? "Private" : "Public" }
++          </button>
++        ) : ''}
++
+         <span className="text">
+           <strong>{this.props.task.username}</strong>: {this.props.task.text}
+         </span>
+-- 
+2.2.1
+
+
+From c7dd2497633a214f2940ac14dddfab0a6239b858 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:38:33 -0700
+Subject: [PATCH 38/41] Step 11.7: Add private button event handler to Task
+
+---
+ Task.jsx | 4 ++++
+ 1 file changed, 4 insertions(+)
+
+diff --git a/Task.jsx b/Task.jsx
+index 1bbd4fb..75827dd 100644
+--- a/Task.jsx
++++ b/Task.jsx
+@@ -14,6 +14,10 @@ Task = React.createClass({
+     Meteor.call("removeTask", this.props.task._id);
+   },
+ 
++  togglePrivate() {
++    Meteor.call("setPrivate", this.props.task._id, ! this.props.task.private);
++  },
++
+   render() {
+     // Give tasks a different className when they are checked off,
+     // so that we can style them nicely in CSS
+-- 
+2.2.1
+
+
+From 0c4c3c080b5934afca5d6eee6b15036e0df348f2 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:39:22 -0700
+Subject: [PATCH 39/41] Step 11.8: Add private className to Task when needed
+
+---
+ Task.jsx | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/Task.jsx b/Task.jsx
+index 75827dd..37eadd3 100644
+--- a/Task.jsx
++++ b/Task.jsx
+@@ -21,7 +21,9 @@ Task = React.createClass({
+   render() {
+     // Give tasks a different className when they are checked off,
+     // so that we can style them nicely in CSS
+-    const taskClassName = this.props.task.checked ? "checked" : "";
++    // Add "checked" and/or "private" to the className when needed
++    const taskClassName = (this.props.task.checked ? "checked" : "") + " " +
++      (this.props.task.private ? "private" : "");
+ 
+     return (
+       <li className={taskClassName}>
+-- 
+2.2.1
+
+
+From d9ae927fab1193fa87b177ffa276859ddccc7ad4 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:39:58 -0700
+Subject: [PATCH 40/41] Step 11.9: Only publish tasks the current user can see
+
+---
+ simple-todos-react.jsx | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
+
+diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
+index c2a3196..24849d5 100644
+--- a/simple-todos-react.jsx
++++ b/simple-todos-react.jsx
+@@ -16,8 +16,14 @@ if (Meteor.isClient) {
+ }
+ 
+ if (Meteor.isServer) {
++  // Only publish tasks that are public or belong to the current user
+   Meteor.publish("tasks", function () {
+-    return Tasks.find();
++    return Tasks.find({
++      $or: [
++        { private: {$ne: true} },
++        { owner: this.userId }
++      ]
++    });
+   });
+ }
+ 
+-- 
+2.2.1
+
+
+From aa8e37fa3724552a75f0c6795a80839df3e978e8 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Mon, 13 Jul 2015 12:40:55 -0700
+Subject: [PATCH 41/41] Step 11.10: Add extra security to methods
+
+---
+ simple-todos-react.jsx | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
+
+diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
+index 24849d5..2b4ada2 100644
+--- a/simple-todos-react.jsx
++++ b/simple-todos-react.jsx
+@@ -43,10 +43,22 @@ Meteor.methods({
+   },
+ 
+   removeTask(taskId) {
++    const task = Tasks.findOne(taskId);
++    if (task.private && task.owner !== Meteor.userId()) {
++      // If the task is private, make sure only the owner can delete it
++      throw new Meteor.Error("not-authorized");
++    }
++
+     Tasks.remove(taskId);
+   },
+ 
+   setChecked(taskId, setChecked) {
++    const task = Tasks.findOne(taskId);
++    if (task.private && task.owner !== Meteor.userId()) {
++      // If the task is private, make sure only the owner can check it off
++      throw new Meteor.Error("not-authorized");
++    }
++
+     Tasks.update(taskId, { $set: { checked: setChecked} });
+   },
+ 
+-- 
+2.2.1
+
diff --git a/routes/commits/react.js b/routes/commits/react.js
new file mode 100644
index 0000000..cdb08f9
--- /dev/null
+++ b/routes/commits/react.js
@@ -0,0 +1,167 @@
+// This file auto-generated by scripts/map-commits-to-steps.rb
+REACT_COMMITS = {
+  "11.10": {
+    "sha": "aa8e37fa3724552a75f0c6795a80839df3e978e8",
+    "message": "Add extra security to methods"
+  },
+  "11.9": {
+    "sha": "d9ae927fab1193fa87b177ffa276859ddccc7ad4",
+    "message": "Only publish tasks the current user can see"
+  },
+  "11.8": {
+    "sha": "0c4c3c080b5934afca5d6eee6b15036e0df348f2",
+    "message": "Add private className to Task when needed"
+  },
+  "11.7": {
+    "sha": "c7dd2497633a214f2940ac14dddfab0a6239b858",
+    "message": "Add private button event handler to Task"
+  },
+  "11.6": {
+    "sha": "dbae4bbbbaf26876cb2757dbe6f9a5c9503df535",
+    "message": "Add private button, shown only to owner"
+  },
+  "11.5": {
+    "sha": "ecd603a0f8a8f9f646ebf7a52264fce8ccccefbd",
+    "message": "Add a new prop type for Task component"
+  },
+  "11.4": {
+    "sha": "da1e2194308465f9a307c8b69a6b743baf5f680c",
+    "message": "Update renderTasks to pass in showPrivateButton"
+  },
+  "11.3": {
+    "sha": "a9299cb9ce21e06ff5de739c483df04e2ba850ff",
+    "message": "Add setPrivate method"
+  },
+  "11.2": {
+    "sha": "942c9c66d8de46cfa8f47bc4edb5038a063dfcbb",
+    "message": "Add publish to server and subscribe to client"
+  },
+  "11.1": {
+    "sha": "669ec22d48db6e0d305a9ad0dab4ec9be6696b7f",
+    "message": "Remove autopublish package"
+  },
+  "10.4": {
+    "sha": "cdf35b47a601eb5df5d5af4027885b820b203b15",
+    "message": "Update Task to use setChecked and removeTask methods"
+  },
+  "10.3": {
+    "sha": "8ab8d4a9d7988fbf38e07c0f6b1b9fb1380a2317",
+    "message": "Update App component to use addTask method"
+  },
+  "10.2": {
+    "sha": "9a1ed5dc970b163fdeb38191e3c895601bb921e7",
+    "message": "Add methods for add, remove, update task"
+  },
+  "10.1": {
+    "sha": "8b6a3d7f7ab2e3972ad0d70bb1b5a049c4d04380",
+    "message": "Remove insecure package"
+  },
+  "9.8": {
+    "sha": "d8b57eb7e511cb32bb1d07cc3aed3fc318e0592a",
+    "message": "Update Task component to show username"
+  },
+  "9.7": {
+    "sha": "14326f789ec20b89796978a6b20956e9cb4fc4e7",
+    "message": "Wrap new task form to only show when logged in"
+  },
+  "9.6": {
+    "sha": "aca9333e69ffdeb31eea7e89a666801d733a8e34",
+    "message": "Update getMeteorData to return data about user"
+  },
+  "9.5": {
+    "sha": "2519198dfd053b036463dc6e026484342df47f7e",
+    "message": "Update insert to save username and owner"
+  },
+  "9.4": {
+    "sha": "c1c9fd68243fbfbb9fa24a5924c2c4af5c097fa6",
+    "message": "Configure accounts-ui to only require username"
+  },
+  "9.3": {
+    "sha": "a5ab9b8f2147dbc77b64c94b5369fb478f20bd92",
+    "message": "Include sign in form"
+  },
+  "9.2": {
+    "sha": "3ffdac0480183c849ad8cbbfa8e84079596b6db5",
+    "message": "Create Accounts UI wrapper component"
+  },
+  "9.1": {
+    "sha": "b8a8d27d0f2808c18b7160a088ee56772ec29e77",
+    "message": "Add accounts-ui and accounts-password packages"
+  },
+  "8.6": {
+    "sha": "f0d790f05e0f3e0466392d97bd6900861100b561",
+    "message": "Display incompleteCount in the header"
+  },
+  "8.5": {
+    "sha": "8e56c9854433546590e5ea6173cc74a0456e53eb",
+    "message": "Update getMeteorData to return incompleteCount"
+  },
+  "8.4": {
+    "sha": "2364ea342e26daef71c78186d88bcd09aee17483",
+    "message": "Replace getMeteorData to filter tasks"
+  },
+  "8.3": {
+    "sha": "37f39a8c2c81d01d3bc438e79cb8edf5dc23391f",
+    "message": "Add toggleHideCompleted handler to App"
+  },
+  "8.2": {
+    "sha": "0abf8e9a5745c0ed72fe56547e4b30e67deab5a0",
+    "message": "Add getInitialState to App component"
+  },
+  "8.1": {
+    "sha": "0897d01b349735fdeddff6cde09a7f630c976890",
+    "message": "Add hide completed checkbox to App component"
+  },
+  "5.1": {
+    "sha": "7fc3e783e846828b0d4a3d9bb7a27e01ce395809",
+    "message": "Update Task component to add features"
+  },
+  "4.3": {
+    "sha": "102b5b14357856f2125abf0978fac242bc6f68d4",
+    "message": "Update getMeteorData to sort tasks by time"
+  },
+  "4.2": {
+    "sha": "7814c907ba3b19f71222892db8a75d69be15c3c8",
+    "message": "Add handleSubmit method to App component"
+  },
+  "4.1": {
+    "sha": "00f681c51a39366c387af94615dbb4d818056178",
+    "message": "Add form for new tasks"
+  },
+  "3.2": {
+    "sha": "b96965e36191a6071c279e1e86262be6587909f4",
+    "message": "Modify App component to get tasks from collection"
+  },
+  "3.1": {
+    "sha": "2190d7d87b177541bdc28b6011e0282810362bcc",
+    "message": "Define tasks collection"
+  },
+  "2.6": {
+    "sha": "e66de095331e3390c2684f5080d7f11e45c7c8fc",
+    "message": "Add CSS"
+  },
+  "2.5": {
+    "sha": "197c54dd37419b5bcb9dc045ae4791deaddcbde4",
+    "message": "Create Task component"
+  },
+  "2.4": {
+    "sha": "f26af2fb34333dfde00589bb0a65cf38e3cb3390",
+    "message": "Create App component"
+  },
+  "2.3": {
+    "sha": "9e8020b66d1fa467b6fb00fc3541f9e0bfae98eb",
+    "message": "Replace starter JS"
+  },
+  "2.2": {
+    "sha": "fec7e5aa905b7e0642af3ec1049f9f42d0459265",
+    "message": "Replace starter HTML code"
+  },
+  "2.1": {
+    "sha": "e23e1c9902bfc05fd21f709a8c6b0de58f05bb5f",
+    "message": "Add the React package"
+  },
+  "1": {
+    "sha": "ec18d9c416ce36418de3c07d40ecdab53ae9fd69",
+    "message": "Run `meteor create`"
+  }
+}
\ No newline at end of file
diff --git a/scripts/process-repo.rb b/scripts/process-repo.rb
index 4d9f290..52f63e9 100755
--- a/scripts/process-repo.rb
+++ b/scripts/process-repo.rb
@@ -11,17 +11,18 @@ require 'json'
 # Output a file with VAR_NAME = <JSON blob> that can be included in this
 # package
 
-# Usage: ./map-commits-to-steps.rb <repo path> <output path> <var name>
+# Usage: ./map-commits-to-steps.rb <repo path> <output path> <var name> <patch output>
 
 # Methodology: calls git log and parses output
 
-if ARGV.length < 3
+if ARGV.length < 4
   puts "Please pass the path to a Git repository, \
-an output file, and a variable name"
+an output file, a variable name, and a patch file name"
   exit 1
 end
 
 out_file = File.join Dir.pwd, ARGV[1]
+out_patch_file = File.join Dir.pwd, ARGV[3]
 
 Dir.chdir ARGV[0]
 
@@ -51,3 +52,9 @@ File.open out_file, "w" do |file|
   file.write "// This file auto-generated by scripts/map-commits-to-steps.rb\n"
   file.write(ARGV[2] + " = " + JSON.pretty_generate(hash))
 end
+
+first_commit = log_output.lines.last.split[0]
+puts "first commit: " + first_commit
+puts "writing patches to: " + out_patch_file
+
+`git format-patch --stdout #{first_commit} > #{out_patch_file}`
diff --git a/shared/code-box.html b/shared/code-box.html
new file mode 100644
index 0000000..57c71fd
--- /dev/null
+++ b/shared/code-box.html
@@ -0,0 +1,7 @@
+<template name="CodeBox">
+  {{> GitPatch
+    repoName=repoName
+    commit=commit
+    fileName=fileName
+    caption=caption}}
+</template>
diff --git a/shared/code-box.js b/shared/code-box.js
new file mode 100644
index 0000000..ec087a2
--- /dev/null
+++ b/shared/code-box.js
@@ -0,0 +1,66 @@
+// This is a wrapper around the GitPatch template for the tutorial
+Template.CodeBox.onCreated(function () {
+  if (! Template.currentData()) {
+    throw new Error("Must pass arguments to CodeBox");
+  }
+
+  var data = Template.currentData();
+
+  if (! (data.view && data.step)) {
+    throw new Error("Must pass view and step args to CodeBox");
+  }
+});
+
+Template.CodeBox.helpers({
+  repoName: function () {
+    var view = Template.currentData().view;
+
+    if (view === "react") {
+      return "meteor/simple-todos-react";
+    } else if (view === "angular") {
+      return "meteor/simple-todos-angular";
+    } else if (view === "blaze") {
+      return "meteor/simple-todos";
+    } else {
+      throw Error("Unrecognized view option: " + view);
+    }
+  },
+  commit: function () {
+    return getCommitData()[Template.currentData().step].sha;
+  },
+  caption: function () {
+    return getCommitData()[Template.currentData().step].message;
+  },
+  fileName: function () {
+    if (Template.currentData().fileName) {
+      return Template.currentData().fileName;
+    }
+
+    var gitSha = getCommitData()[Template.currentData().step].sha;
+    var patch = GitPatches[gitSha];
+    var fileNames = _.keys(patch);
+
+    if (fileNames.length === 1) {
+      return fileNames[0];
+    }
+
+    throw new Error("Multiple files in patch. Must specify fileName.");
+  }
+});
+
+function getCommitData() {
+  var view = Template.currentData().view;
+
+  var commitData = null;
+  if (view === "react") {
+    commitData = REACT_COMMITS;
+  } else if (view === "angular") {
+    commitData = ANGULAR_COMMITS;
+  } else if (view === "blaze") {
+    commitData = BLAZE_COMMITS;
+  } else {
+    throw Error("Unrecognized view option: " + view);
+  }
+
+  return commitData;
+}
diff --git a/steps/react/step02.md b/steps/react/step02.md
index eaf4540..4e0f446 100644
--- a/steps/react/step02.md
+++ b/steps/react/step02.md
@@ -15,16 +15,7 @@ To get started, let's replace the code of the default starter app. Then we'll ta
 
 First, replace the content of the initial HTML file:
 
-```html
-<!-- replace simple-todos-react.html with this HTML -->
-<head>
-  <title>Todo List</title>
-</head>
-
-<body>
-  <div id="render-target"></div>
-</body>
-```
+{{> CodeBox view="react" step="2.2"}}
 
 Second, delete `simple-todos-react.js` and create a new file called `simple-todos-react.jsx`:
 
-- 
2.13.6 (Apple Git-96)


From c416b424ea7e4b0333a1c9c84805ec5db902a63a Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 15:20:08 -0700
Subject: [PATCH 036/164] Replace code snippets for first few steps with
 CodeBox

---
 package.js            |  2 +-
 shared/code-box.html  |  6 +++--
 shared/code-box.js    |  5 +++--
 steps/react/step02.md | 62 +++++----------------------------------------------
 steps/react/step03.md | 29 +-----------------------
 steps/react/step04.md | 41 +++-------------------------------
 steps/react/step05.md | 40 +--------------------------------
 7 files changed, 18 insertions(+), 167 deletions(-)

diff --git a/package.js b/package.js
index 4d55f2a..834a87d 100644
--- a/package.js
+++ b/package.js
@@ -9,7 +9,7 @@ Package.onUse(function (api) {
   api.use([
     'simple:markdown-templating@1.2.7',
     'templating',
-    'mdg:git-patch-viewer@0.1.3',
+    'mdg:git-patch-viewer@0.1.4',
     'underscore'
   ]);
 
diff --git a/shared/code-box.html b/shared/code-box.html
index 57c71fd..b5fc3ba 100644
--- a/shared/code-box.html
+++ b/shared/code-box.html
@@ -1,7 +1,9 @@
 <template name="CodeBox">
-  {{> GitPatch
+  {{# GitPatch
     repoName=repoName
     commit=commit
     fileName=fileName
-    caption=caption}}
+    summary=summary}}
+    {{> Template.contentBlock}}
+  {{/GitPatch}}
 </template>
diff --git a/shared/code-box.js b/shared/code-box.js
index ec087a2..0ebf2ff 100644
--- a/shared/code-box.js
+++ b/shared/code-box.js
@@ -28,8 +28,9 @@ Template.CodeBox.helpers({
   commit: function () {
     return getCommitData()[Template.currentData().step].sha;
   },
-  caption: function () {
-    return getCommitData()[Template.currentData().step].message;
+  summary: function () {
+    var step = Template.currentData().step;
+    return step + ": " + getCommitData()[step].message;
   },
   fileName: function () {
     if (Template.currentData().fileName) {
diff --git a/steps/react/step02.md b/steps/react/step02.md
index 4e0f446..1a89bab 100644
--- a/steps/react/step02.md
+++ b/steps/react/step02.md
@@ -17,63 +17,11 @@ First, replace the content of the initial HTML file:
 
 {{> CodeBox view="react" step="2.2"}}
 
-Second, delete `simple-todos-react.js` and create a new file called `simple-todos-react.jsx`:
-
-```js
-// simple-todos-react.jsx
-
-// App component - represents the whole app
-App = React.createClass({
-  getTasks() {
-    return [
-      { _id: 1, text: "This is task 1" },
-      { _id: 2, text: "This is task 2" },
-      { _id: 3, text: "This is task 3" }
-    ];
-  },
-  renderTasks() {
-    return this.getTasks().map((task) => {
-      return <Task key={task._id} task={task} />;
-    });
-  },
-  render() {
-    return (
-      <div className="container">
-        <header>
-          <h1>Todo List</h1>
-        </header>
-
-        <ul>
-          {this.renderTasks()}
-        </ul>
-      </div>
-    );
-  }
-});
-
-// Task component - represents a single todo item
-Task = React.createClass({
-  propTypes: {
-    // This component gets the task to display through a React prop.
-    // We can use propTypes to indicate it is required
-    task: React.PropTypes.object.isRequired
-  },
-  render() {
-    return (
-      <li>{this.props.task.text}</li>
-    );
-  }
-})
-
-if (Meteor.isClient) {
-  // This code is executed on the client only
-
-  Meteor.startup(function () {
-    // Use Meteor.startup to render the component after the page is ready
-    React.render(<App />, document.getElementById("render-target"));
-  });
-}
-```
+Second, delete `simple-todos-react.js` and create three new files:
+
+{{> CodeBox view="react" step="2.3"}}
+{{> CodeBox view="react" step="2.4"}}
+{{> CodeBox view="react" step="2.5"}}
 
 In this new file, there are three important parts: an `App` React component, a `Task` React component, and a block inside `if (Meteor.isClient) { ... }`, which defines code to execute in the browser. Later in the tutorial, we will refer to these components when adding or changing code.
 
diff --git a/steps/react/step03.md b/steps/react/step03.md
index 4ba63e3..4602c9a 100644
--- a/steps/react/step03.md
+++ b/steps/react/step03.md
@@ -11,34 +11,7 @@ Let's update our code to get our tasks from a collection instead of a static arr
 3. Add a `getMeteorData` method to the `App` component
 4. Modify `renderTasks` to get task data from `this.data.tasks`
 
-```js
-// simple-todos-react.jsx
-
-// Define a collection at the top of the file to hold our tasks
-Tasks = new Mongo.Collection("tasks");
-
-// App component - represents the whole app
-App = React.createClass({
-
-  // This mixin makes the getMeteorData method work
-  mixins: [ReactMeteorData],
-
-  // Loads items from the Tasks collection and puts them on this.data.tasks
-  getMeteorData() {
-    return {
-      tasks: Tasks.find({}).fetch()
-    }
-  },
-
-  renderTasks() {
-    // Get tasks from this.data.tasks
-    return this.data.tasks.map((task) => {
-      return <Task key={task._id} task={task} />;
-    });
-  },
-
-  // ... rest of the methods are unchanged
-```
+{{> CodeBox step="3.1" view="react"}}
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
diff --git a/steps/react/step04.md b/steps/react/step04.md
index d5c3d99..656b349 100644
--- a/steps/react/step04.md
+++ b/steps/react/step04.md
@@ -6,20 +6,7 @@ In this step, we'll add an input field for users to add tasks to the list.
 
 First, let's add a form to our `App` component:
 
-```
-{/* Inside simple-todos-react.jsx, in the App component */}
-<header>
-  <h1>Todo List</h1>
-
-  {/* Add a form element right below the h1 */}
-  <form className="new-task" onSubmit={this.handleSubmit} >
-    <input
-      type="text"
-      ref="textInput"
-      placeholder="Type to add new tasks" />
-  </form>
-</header>
-```
+{{> CodeBox step="4.1" view="react"}}
 
 > Tip: You can add comments to your JSX code by wrapping them in `{/* ... */}`
 
@@ -27,23 +14,7 @@ You can see that the `form` element has an `onSubmit` attribute that references
 
 Let's add a `handleSubmit` method to our `App` component:
 
-```js
-// Inside the App component, below renderTasks() and above render()
-handleSubmit(event) {
-  event.preventDefault();
-
-  // Find the text field via the React ref
-  var text = React.findDOMNode(this.refs.textInput).value.trim();
-
-  Tasks.insert({
-    text: text,
-    createdAt: new Date() // current time
-  });
-
-  // Clear form
-  React.findDOMNode(this.refs.textInput).value = "";
-},
-```
+{{> CodeBox step="4.2" view="react"}}
 
 Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
 
@@ -63,13 +34,7 @@ Currently, our code displays all new tasks at the bottom of the list. That's not
 
 We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code. Just add a sort option to the `find` call inside `getMeteorData` on the `App` component:
 
-```js
-getMeteorData() {
-  return {
-    tasks: Tasks.find({}, {sort: {createdAt: -1}}).fetch()
-  }
-},
-```
+{{> CodeBox step="4.3" view="react"}}
 
 Let's go back to the browser and make sure this worked: any new tasks that you add should appear at the top of the list, rather than at the bottom.
 
diff --git a/steps/react/step05.md b/steps/react/step05.md
index 0d3ff56..aea94a8 100644
--- a/steps/react/step05.md
+++ b/steps/react/step05.md
@@ -6,45 +6,7 @@ Until now, we have only interacted with a collection by inserting documents. Now
 
 Let's add two new elements to our `task` component, a checkbox and a delete button, with event handlers for both:
 
-```js
-// Replace the Task component with this new one
-// that has a checkbox and a delete button
-Task = React.createClass({
-  propTypes: {
-    task: React.PropTypes.object.isRequired
-  },
-  toggleChecked() {
-    // Set the checked property to the opposite of its current value
-    Tasks.update(this.props.task._id, {
-      $set: {checked: ! this.props.task.checked}
-    });
-  },
-  deleteThisTask() {
-    Tasks.remove(this.props.task._id);
-  },
-  render() {
-    // Give tasks a different className when they are checked off,
-    // so that we can style them nicely in CSS
-    const taskClassName = this.props.task.checked ? "checked" : "";
-
-    return (
-      <li className={taskClassName}>
-        <button className="delete" onClick={this.deleteThisTask}>
-          &times;
-        </button>
-
-        <input
-          type="checkbox"
-          readOnly={true}
-          checked={this.props.task.checked}
-          onClick={this.toggleChecked} />
-
-        <span className="text">{this.props.task.text}</span>
-      </li>
-    );
-  }
-});
-```
+{{> CodeBox step="5.1" view="react"}}
 
 ### Update
 
-- 
2.13.6 (Apple Git-96)


From 3966616a47dab55906b325d0f1f077ea3434a247 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 17:12:48 -0700
Subject: [PATCH 037/164] Update stuff

---
 shared/code-box.html  | 7 +++----
 shared/code-box.js    | 2 +-
 steps/react/step02.md | 2 ++
 3 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/shared/code-box.html b/shared/code-box.html
index b5fc3ba..dcf6ff4 100644
--- a/shared/code-box.html
+++ b/shared/code-box.html
@@ -1,9 +1,8 @@
 <template name="CodeBox">
-  {{# GitPatch
+  {{> GitPatch
     repoName=repoName
     commit=commit
     fileName=fileName
-    summary=summary}}
-    {{> Template.contentBlock}}
-  {{/GitPatch}}
+    summary=summary
+    step=step}}
 </template>
diff --git a/shared/code-box.js b/shared/code-box.js
index 0ebf2ff..5a8d063 100644
--- a/shared/code-box.js
+++ b/shared/code-box.js
@@ -30,7 +30,7 @@ Template.CodeBox.helpers({
   },
   summary: function () {
     var step = Template.currentData().step;
-    return step + ": " + getCommitData()[step].message;
+    return getCommitData()[step].message;
   },
   fileName: function () {
     if (Template.currentData().fileName) {
diff --git a/steps/react/step02.md b/steps/react/step02.md
index 1a89bab..709a9d5 100644
--- a/steps/react/step02.md
+++ b/steps/react/step02.md
@@ -20,7 +20,9 @@ First, replace the content of the initial HTML file:
 Second, delete `simple-todos-react.js` and create three new files:
 
 {{> CodeBox view="react" step="2.3"}}
+
 {{> CodeBox view="react" step="2.4"}}
+
 {{> CodeBox view="react" step="2.5"}}
 
 In this new file, there are three important parts: an `App` React component, a `Task` React component, and a block inside `if (Meteor.isClient) { ... }`, which defines code to execute in the browser. Later in the tutorial, we will refer to these components when adding or changing code.
-- 
2.13.6 (Apple Git-96)


From c1099bd9fdfa8f00edf0348f69b946def577d73c Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 17:16:52 -0700
Subject: [PATCH 038/164] Update step

---
 steps/react/step03.md | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/steps/react/step03.md b/steps/react/step03.md
index 4602c9a..956a119 100644
--- a/steps/react/step03.md
+++ b/steps/react/step03.md
@@ -4,14 +4,13 @@
 
 {{> step03CollectionsIntro}}
 
-Let's update our code to get our tasks from a collection instead of a static array. A summary of the changes, all are inside `simple-todos-react.jsx`:
+{{> CodeBox step="3.1" view="react"}}
 
-1. Define a collection at the top of the file
-2. Add a `mixins:` property to the `App` component definition
-3. Add a `getMeteorData` method to the `App` component
-4. Modify `renderTasks` to get task data from `this.data.tasks`
+### Using data from a collection inside a React component
 
-{{> CodeBox step="3.1" view="react"}}
+To use data from a Meteor collection inside a React component, include the `ReactMeteorData` mixin. With this mixin in your component, you can define a method called `getMeteorData` which knows how to keep track of changes in data. The object you return from `getMeteorData` can be accessed on `this.data` inside the `render` method.
+
+{{> CodeBox step="3.2" view="react"}}
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
-- 
2.13.6 (Apple Git-96)


From 6cbd3945bed9d5a5260b9339537ae9396965cdc5 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 17:18:33 -0700
Subject: [PATCH 039/164] Update dep

---
 package.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/package.js b/package.js
index 834a87d..49d84c4 100644
--- a/package.js
+++ b/package.js
@@ -9,7 +9,7 @@ Package.onUse(function (api) {
   api.use([
     'simple:markdown-templating@1.2.7',
     'templating',
-    'mdg:git-patch-viewer@0.1.4',
+    'mdg:git-patch-viewer@0.1.5',
     'underscore'
   ]);
 
-- 
2.13.6 (Apple Git-96)


From 7bb8ba8ca7827e277ccc577dab93ad7160f35508 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 22:50:23 -0700
Subject: [PATCH 040/164] Merge in git patch viewer

---
 git-patch-viewer/README.md         |  16 ++++++
 git-patch-viewer/patch-plugin.jsx  | 105 +++++++++++++++++++++++++++++++++
 git-patch-viewer/patch-viewer.html |  29 ++++++++++
 git-patch-viewer/patch-viewer.jsx  | 115 +++++++++++++++++++++++++++++++++++++
 git-patch-viewer/patch-viewer.less |  74 ++++++++++++++++++++++++
 package.js                         |  22 ++++++-
 6 files changed, 359 insertions(+), 2 deletions(-)
 create mode 100644 git-patch-viewer/README.md
 create mode 100644 git-patch-viewer/patch-plugin.jsx
 create mode 100644 git-patch-viewer/patch-viewer.html
 create mode 100644 git-patch-viewer/patch-viewer.jsx
 create mode 100644 git-patch-viewer/patch-viewer.less

diff --git a/git-patch-viewer/README.md b/git-patch-viewer/README.md
new file mode 100644
index 0000000..caf2104
--- /dev/null
+++ b/git-patch-viewer/README.md
@@ -0,0 +1,16 @@
+# git-patch-viewer
+
+### View component
+
+```html
+{{> GitPatch
+  repoName="meteor/simple-todos"
+  commit="10bdbc7434b913c85c156ae6e27fdbea4b2e27bb"
+  fileName="simple-todos.html"
+  caption="This is how we can display diffs inside the tutorial."}}
+```
+
+### Build plugin
+
+1. Name your file either `asdf.patch` or `asdf.multi.patch`
+2. Access data from `GitPatches[sha]`
diff --git a/git-patch-viewer/patch-plugin.jsx b/git-patch-viewer/patch-plugin.jsx
new file mode 100644
index 0000000..3f774a1
--- /dev/null
+++ b/git-patch-viewer/patch-plugin.jsx
@@ -0,0 +1,105 @@
+function multiPatchHandler(compileStep) {
+  const file = compileStep.read().toString();
+
+  const patchStart = /^From /gm;
+
+  let match = null;
+  const patchIndices = [];
+  while ((match = patchStart.exec(file)) != null) {
+    patchIndices.push(match.index);
+  }
+
+  const patches = [];
+  _.range(patchIndices.length).forEach((i) => {
+    let patchContent = "";
+
+    if (i + 1 < patchIndices.length) {
+      patchContent = file.slice(patchIndices[i], patchIndices[i + 1]);
+    } else {
+      patchContent = file.slice(patchIndices[i]);
+    }
+
+    // Remove the weird -- 2.2.1 part at the end of every patch
+    patchContent = patchContent.split(/^-- $/m)[0];
+
+    patches.push(patchContent);
+  });
+
+  const datas = patches.map(parsePatch);
+
+  const GitPatches = {};
+  datas.forEach((data) => {
+    const sha = data.sha;
+    delete data.sha;
+    GitPatches[sha] = data;
+  });
+
+  const jsonData = JSON.stringify(GitPatches);
+
+  const code = `GitPatches = GitPatches || {};
+_.extend(GitPatches, ${jsonData})`;
+
+  compileStep.addJavaScript({
+    data: code,
+    sourcePath: compileStep.inputPath,
+    path: compileStep.inputPath + ".js"
+  });
+}
+
+function patchHandler(compileStep) {
+  const file = compileStep.read().toString();
+  const data = parsePatch(file);
+  const sha = data.sha;
+  delete data.sha;
+  const jsonData = JSON.stringify({[sha]: data});
+
+  const code = `GitPatches = GitPatches || {};
+_.extend(GitPatches, ${jsonData})`;
+
+  compileStep.addJavaScript({
+    data: code,
+    sourcePath: compileStep.inputPath,
+    path: compileStep.inputPath + ".js"
+  });
+}
+
+/**
+ * Parse a string that represents a git patch
+ * @param  {String} contents The contents of the patch to parse
+ * @return {Object}          An object where the keys are filenames, and the
+ * values are the contents of the diff
+ */
+function parsePatch(contents) {
+  const sha = contents.split(" ")[1];
+  const fileParts = contents.split(/^diff --git /m).slice(1);
+  const data = {};
+
+  _.each(fileParts, (part) => {
+    const start = part.indexOf("@@");
+    const diffContents = part.slice(start);
+
+    // XXX won't work with spaces in filenames
+    const fileNameMatch = /^\+\+\+ b\/(.+)$/m.exec(part);
+
+    if (! fileNameMatch) {
+      // This was probably a deleted file
+      return;
+    }
+
+    const fileName = fileNameMatch[1]
+
+    const fileData = {
+      fileName: fileName,
+      diff: diffContents
+    };
+
+    data[fileName] = fileData;
+  });
+
+  data.sha = sha;
+
+  return data;
+}
+
+Plugin.registerSourceHandler("multi.patch", {isTemplate: true}, multiPatchHandler);
+Plugin.registerSourceHandler("patch", {isTemplate: true}, patchHandler);
\ No newline at end of file
diff --git a/git-patch-viewer/patch-viewer.html b/git-patch-viewer/patch-viewer.html
new file mode 100644
index 0000000..16ad12b
--- /dev/null
+++ b/git-patch-viewer/patch-viewer.html
@@ -0,0 +1,29 @@
+<template name="GitPatch">
+  <div class="github-diff-container">
+    <div class="title-panel">
+      {{#if step}}
+        <strong>{{step}}</strong>&nbsp;
+      {{/if}}
+      {{summary}}
+      <a class="on-github" href="{{gitHubLink}}">
+        {{fileName}} &raquo;
+      </a>
+    </div>
+    <div class="code-window">
+      <div class="inside-scroll-container">
+        <div class="line-numbers">
+          {{#each lineNumbers}}
+            <pre class="line-number">{{this}}</pre>
+          {{/each}}
+        </div>
+        <div class="line-content">
+          {{#each lines}}
+            {{#unless equals type "removed"}}
+              <pre class="{{type}}">{{{content}}}</pre>
+            {{/unless}}
+          {{/each}}
+        </div>
+      </div>
+    </div>
+  </div>
+</template>
\ No newline at end of file
diff --git a/git-patch-viewer/patch-viewer.jsx b/git-patch-viewer/patch-viewer.jsx
new file mode 100644
index 0000000..766b0ed
--- /dev/null
+++ b/git-patch-viewer/patch-viewer.jsx
@@ -0,0 +1,115 @@
+GitPatches = {};
+
+Template.GitPatch.onCreated(function () {
+  this.fileName = new ReactiveVar(null);
+  this.fileData = new ReactiveVar(null);
+  this.ready = new ReactiveVar(false);
+
+  let argsPassed = false;
+
+  this.autorun(() => {
+    if (! Template.currentData()) {
+      // No arguments provided
+      return;
+    }
+
+    const {
+      commit,
+      repoName,
+      fileName,
+      summary
+    } = Template.currentData();
+
+    if (! (commit && repoName && fileName && summary)) {
+      // Not all arguments were provided
+      return;
+    }
+
+    argsPassed = true;
+    this.fileName.set(fileName);
+    this.fileData.set(GitPatches[commit][fileName]);
+  });
+
+  if (! argsPassed) {
+    console.info("GitPatch template needs four arguments: repoName, commit, summary, and fileName");
+  }
+});
+
+Template.GitPatch.helpers({
+  fileName() {
+    return Template.instance().fileName.get();
+  },
+  lineNumbers() {
+    const fileData = Template.instance().fileData.get();
+
+    if (! fileData) {
+      return null;
+    }
+
+    const patchLines = fileData.diff.split("\n");
+    const lineNumbers = patchLines[0];
+
+    const firstLineNumber = parseInt(
+      lineNumbers.split(" ")[2].split(",")[0].slice(1), 10);
+
+    const numLines = parseInt(
+      lineNumbers.split(" ")[2].split(",")[1], 10);
+
+    return _.range(firstLineNumber, firstLineNumber + numLines);
+  },
+  lines() {
+    const fileData = Template.instance().fileData.get();
+
+    if (! fileData) {
+      return null;
+    }
+
+    const patchLines = fileData.diff.split("\n");
+    const lineNumbers = patchLines[0];
+
+    // Take off first line which is just line numbers, and last line which
+    // is just empty
+    const contentPatchLines = patchLines.slice(1, patchLines.length - 1);
+
+    const firstLineNumber = parseInt(
+      lineNumbers.split(" ")[2].split(",")[0].slice(1), 10);
+
+    return _.map(contentPatchLines, (line) => {
+      if (! line) {
+        // The last line ends up being an empty string
+        return null;
+      }
+
+      let type = "context";
+
+      if (/^\+/.test(line)) {
+        type = "added";
+      } else if (/^-/.test(line)) {
+        type = "removed";
+      }
+
+      const content = line.slice(1);
+      let highlightedContent = null;
+      if (content) {
+        const ext = _.last(fileData.fileName.split("."));
+        let fileType = ext;
+        if (ext === "jsx") {
+          fileType = "js";
+        }
+
+        highlightedContent = hljs.highlight(fileType, content, true).value;
+      }
+
+      return {
+        type,
+        content: highlightedContent || " "
+      };
+    });
+  },
+  equals(a, b) {
+    return a === b;
+  },
+  gitHubLink() {
+    return `https://github.com/${this.repoName}/commit/${this.commit}`;
+  }
+});
diff --git a/git-patch-viewer/patch-viewer.less b/git-patch-viewer/patch-viewer.less
new file mode 100644
index 0000000..be22cf5
--- /dev/null
+++ b/git-patch-viewer/patch-viewer.less
@@ -0,0 +1,74 @@
+.github-diff-container {
+  border: 1px solid #eee;
+
+  margin: 1.5em 0;
+
+  pre {
+    background: transparent;
+    border: none;
+  }
+
+  .title-panel {
+    padding: 5px 12px;
+    background: #eee;
+    border-bottom: solid 1px #eee;
+    color: #333;
+
+    .on-github {
+      float: right;
+      color: black;
+      text-decoration: none;
+      border-bottom: none !important;
+    }
+  }
+
+  .code-window {
+    overflow-x: auto;
+    position: relative;
+    padding: 9px 3px 3px 0;
+    background: #f8f8f8;
+
+    /* I am not good enough at CSS to achieve the scrolling behavior I want
+    without dirty tricks... */
+    .inside-scroll-container {
+      display: inline-block;
+      min-width: 100%;
+      overflow: hidden;
+    }
+
+    pre {
+      margin: 0;
+      padding: 0;
+
+      background-color: transparent;
+
+      &.added {
+        background: #eaffea;
+      }
+    }
+
+    .line-content {
+      padding-left: 36px;
+      overflow: hidden;
+
+      .hljs-comment {
+        color: #777;
+      }
+    }
+
+    .line-numbers {
+      text-align: right;
+      -moz-user-select: none;
+      -khtml-user-select: none;
+      -webkit-user-select: none;
+      -o-user-select: none;
+      position: absolute;
+      width: 25px;
+
+      .line-number {
+        color: #aaa;
+        font-style: italic;
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/package.js b/package.js
index 49d84c4..538cf49 100644
--- a/package.js
+++ b/package.js
@@ -4,16 +4,34 @@ Package.describe({
   name: "tutorials"
 });
 
+Package.registerBuildPlugin({
+  name: "Git patch compiler",
+  sources: ["git-patch-viewer/patch-plugin.jsx"],
+  use: [
+    "jsx@0.1.1",
+    "underscore@1.0.3"
+  ]
+})
+
 Package.onUse(function (api) {
   api.versionsFrom("1.1.0.2");
   api.use([
     'simple:markdown-templating@1.2.7',
     'templating',
-    'mdg:git-patch-viewer@0.1.5',
-    'underscore'
+    'underscore',
+    'jsx@0.1.1',
+    'simple:highlight.js@1.0.9',
+    'reactive-var',
+    'less'
   ]);
 
   api.addFiles([
+    "git-patch-viewer/patch-viewer.html",
+    "git-patch-viewer/patch-viewer.jsx",
+    "git-patch-viewer/patch-viewer.less"
+  ], "client");
+
+  api.addFiles([
     'routes/commits/blaze.js',
     'routes/commits/angular.js',
     'routes/commits/react.js',
-- 
2.13.6 (Apple Git-96)


From 2dc86ee6f45f9804be829d5d6541e07f5e363035 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 23:21:16 -0700
Subject: [PATCH 041/164] Update README

Man, I should really refactor this junk
---
 README.md                  | 75 ++++++++++++++++++++++++++++++++++++++--------
 git-patch-viewer/README.md | 16 ----------
 2 files changed, 62 insertions(+), 29 deletions(-)
 delete mode 100644 git-patch-viewer/README.md

diff --git a/README.md b/README.md
index ca69507..8ade74b 100644
--- a/README.md
+++ b/README.md
@@ -1,16 +1,16 @@
 # Official Meteor tutorials
 
-This repository contains the content for the official Meteor tutorials at [meteor.com](https://www.meteor.com/tutorials/blaze/creating-an-app).
+This repository contains the content and view code for the official Meteor tutorials at [meteor.com](https://www.meteor.com/tutorials/blaze/creating-an-app).
 
 Feel free to submit a pull request to improve the content!
 
-### Current contents
+### Tutorial content
 
 1. [Blaze tutorial](https://www.meteor.com/tutorials/blaze/creating-an-app): [`/steps/blaze`](https://github.com/meteor/tutorials/tree/master/steps/blaze)
 2. [Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app): [`/steps/angular`](https://github.com/meteor/tutorials/tree/master/steps/angular)
 3. React tutorial, work in progress (not live yet): [`/steps/react`](https://github.com/meteor/tutorials/tree/master/steps/react)
 
-### Tutorial step-by-step code
+### Tutorial step-by-step repositories
 
 We also maintain all of the tutorials as step-by-step git repositories here:
 
@@ -22,21 +22,70 @@ We also maintain all of the tutorials as step-by-step git repositories here:
 
 If you are editing the tutorials, use this simple app to view them: https://github.com/meteor/tutorial-viewer
 
-### To do
+## Tutorial workflow
 
-1. Improve maintainability of the step-by-step git repositories
-2. Generate code snippets automatically from git
-3. Improve code snippet context
+### Editing the prose
 
-### Updating Git SHAs for the tutorial
+Just edit the markdown files in `/steps/`.
 
-Run the script:
-`./scripts/process-repo.rb repos/blaze routes/commits/blaze.js BLAZE_COMMITS`
+### Editing code snippets
 
-### Updating tutorial
-
-#### Commit message format
+The code snippets are generated from the step-by-step git repositories. Each code snippet is its own commit. Commit messages follow the following format:
 
 ```
 Step 3.1: Add some feature
 ```
+
+After using `git rebase` to massage the repository into the desired state, run the script to update the relevant files:
+
+```sh
+./scripts/process-repo.rb repos/blaze routes/commits/blaze.js BLAZE_COMMITS patches/blaze.multi.patch
+```
+
+The commit with this message can be included with the following code snippet:
+
+```html
+{{> CodeBox step="3.1" view="blaze"}}
+```
+
+You should replace `blaze` with the correct repository (currently this string is transformed to refer to the correct data structures).
+
+You're done! Make sure to commit the changes to all of the generated files.
+
+## Repository layout
+
+This repository is a Meteor package; it's currently not published, but you can clone it and use it as a local package in an app.
+
+The different parts of the repository have quite different responsibilities, but they are somewhat tightly coupled so it doesn't make sense to split them into separate packages at this point.
+
+#### /git-patch-viewer/
+
+This directory contains a Blaze component and build plugin for viewing git patches, tailored specifically to the needs of these tutorials. The build plugin reads files with `.patch` and `.multi.patch` file extensions, and puts data on a package-local object named `GitPatches`. You can access the data for a specific commit on `GitPatches[commitSha]`. The Blaze view component reads this data structure and displays a diff with context and a link to GitHub. Don't use the `GitPatch` component directly; use it by calling the more convenient `CodeBox` component from the `/shared` directory, as described below.
+
+### /patches/ (don't edit manually)
+
+This directory contains `.multi.patch` files of the step-by-step tutorial repositories. Don't edit these files manually; they are generated by `/scripts/process-repo.rb`. The patch files are in the same format as the result of `git format-patch --stdout`, meaning they are the patch files for all commits in a repo concatenated into one. The build plugin in `/git-patch-viewer/patch-plugin.jsx` knows how to read these files.
+
+### /repos/
+
+This directory contains git submodules of all three step-by-step tutorial repositories.
+
+### /routes/
+
+This directory contains JavaScript data structures describing the different tutorial steps. These are exported from the package; the meteor.com website and tutorial-viewer app know how to read them.
+
+#### /routes/commits/ (don't edit manually)
+
+This directory contains files also generated by `/scripts/process-repo.rb`; they are lists of commits keyed by the number of the step in the tutorial, with a parsed commit message.
+
+### /scripts/
+
+This contains a script that is used to update `/patches/` and `/routes/commits/` from the repositories in `/repos/`.
+
+### /shared/
+
+Tutorial-specific templates. Some of them are shared content for the different tutorials in markdown format, others are useful UI widgets. Includes the useful `CodeBox` template, which wraps the `GitPatch` template with more convenient inputs.
+
+### /steps/
+
+The actual tutorial prose content, in Markdown format.
\ No newline at end of file
diff --git a/git-patch-viewer/README.md b/git-patch-viewer/README.md
deleted file mode 100644
index caf2104..0000000
--- a/git-patch-viewer/README.md
+++ /dev/null
@@ -1,16 +0,0 @@
-# git-patch-viewer
-
-### View component
-
-```html
-{{> GitPatch
-  repoName="meteor/simple-todos"
-  commit="10bdbc7434b913c85c156ae6e27fdbea4b2e27bb"
-  fileName="simple-todos.html"
-  caption="This is how we can display diffs inside the tutorial."}}
-```
-
-### Build plugin
-
-1. Name your file either `asdf.patch` or `asdf.multi.patch`
-2. Access data from `GitPatches[sha]`
-- 
2.13.6 (Apple Git-96)


From da8a3f8cf6f7bc03cb98252662cd83a9fda65f14 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 23:33:17 -0700
Subject: [PATCH 042/164] Simplify how to run script

---
 patches/react.multi.patch | 106 +++++++++++++++++++++++-----------------------
 repos/react               |   2 +-
 routes/commits/react.js   |  82 +++++++++++++++++------------------
 scripts/process-repo.rb   |  24 ++++++++---
 4 files changed, 111 insertions(+), 103 deletions(-)

diff --git a/patches/react.multi.patch b/patches/react.multi.patch
index 78df02c..133c6cb 100644
--- a/patches/react.multi.patch
+++ b/patches/react.multi.patch
@@ -1,4 +1,4 @@
-From ec18d9c416ce36418de3c07d40ecdab53ae9fd69 Mon Sep 17 00:00:00 2001
+From 0aa691766c1c76cfab3436e0507f33ad27e23962 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:00:51 -0700
 Subject: [PATCH 01/41] Step 1: Run `meteor create`
@@ -204,7 +204,7 @@ index 0000000..4f8c65d
 2.2.1
 
 
-From e23e1c9902bfc05fd21f709a8c6b0de58f05bb5f Mon Sep 17 00:00:00 2001
+From 7ba04da80922a977448359e5eaef88f6d2f28ea0 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:02:01 -0700
 Subject: [PATCH 02/41] Step 2.1: Add the React package
@@ -268,7 +268,7 @@ index 410e1d9..288ee5f 100644
 2.2.1
 
 
-From fec7e5aa905b7e0642af3ec1049f9f42d0459265 Mon Sep 17 00:00:00 2001
+From 54289ae4946acb191d1f153aa4e8cfb938970811 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:03:54 -0700
 Subject: [PATCH 03/41] Step 2.2: Replace starter HTML code
@@ -302,7 +302,7 @@ index e296a58..1aae2d4 100644
 2.2.1
 
 
-From 9e8020b66d1fa467b6fb00fc3541f9e0bfae98eb Mon Sep 17 00:00:00 2001
+From 676c35859282935e8c2cb81ff12b2b27135ae33e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:05:08 -0700
 Subject: [PATCH 04/41] Step 2.3: Replace starter JS
@@ -361,22 +361,22 @@ index 0000000..a7e2d2f
 2.2.1
 
 
-From f26af2fb34333dfde00589bb0a65cf38e3cb3390 Mon Sep 17 00:00:00 2001
+From 1f2cc89f74f801642f4bc0e3d2ff14c569765ca0 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:05:58 -0700
 Subject: [PATCH 05/41] Step 2.4: Create App component
 
 ---
- App.jsx | 28 ++++++++++++++++++++++++++++
- 1 file changed, 28 insertions(+)
+ App.jsx | 30 ++++++++++++++++++++++++++++++
+ 1 file changed, 30 insertions(+)
  create mode 100644 App.jsx
 
 diff --git a/App.jsx b/App.jsx
 new file mode 100644
-index 0000000..1ff73a4
+index 0000000..27ac66e
 --- /dev/null
 +++ b/App.jsx
-@@ -0,0 +1,28 @@
+@@ -0,0 +1,30 @@
 +// App component - represents the whole app
 +App = React.createClass({
 +  getTasks() {
@@ -386,11 +386,13 @@ index 0000000..1ff73a4
 +      { _id: 3, text: "This is task 3" }
 +    ];
 +  },
++
 +  renderTasks() {
 +    return this.getTasks().map((task) => {
 +      return <Task key={task._id} task={task} />;
 +    });
 +  },
++
 +  render() {
 +    return (
 +      <div className="container">
@@ -409,7 +411,7 @@ index 0000000..1ff73a4
 2.2.1
 
 
-From 197c54dd37419b5bcb9dc045ae4791deaddcbde4 Mon Sep 17 00:00:00 2001
+From 8aa85a45acb1ffcc7f94c141a3563556236b9b1c Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:06:31 -0700
 Subject: [PATCH 06/41] Step 2.5: Create Task component
@@ -442,7 +444,7 @@ index 0000000..c49e7ac
 2.2.1
 
 
-From e66de095331e3390c2684f5080d7f11e45c7c8fc Mon Sep 17 00:00:00 2001
+From c5f475a98824525922a32e69ac5eca7de0316957 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:07:02 -0700
 Subject: [PATCH 07/41] Step 2.6: Add CSS
@@ -587,7 +589,7 @@ index b6b4052..cec3ae6 100644
 2.2.1
 
 
-From 2190d7d87b177541bdc28b6011e0282810362bcc Mon Sep 17 00:00:00 2001
+From 33dd1dab78f3c09ddd6f24664e042f2ddbf8ce01 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:08:08 -0700
 Subject: [PATCH 08/41] Step 3.1: Define tasks collection
@@ -611,21 +613,21 @@ index a7e2d2f..a67b030 100644
 2.2.1
 
 
-From b96965e36191a6071c279e1e86262be6587909f4 Mon Sep 17 00:00:00 2001
+From 9276239ccfca511667a61cdad7182a9a95681216 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:08:44 -0700
 Subject: [PATCH 09/41] Step 3.2: Modify App component to get tasks from
  collection
 
 ---
- App.jsx | 20 +++++++++++++-------
- 1 file changed, 13 insertions(+), 7 deletions(-)
+ App.jsx | 18 +++++++++++-------
+ 1 file changed, 11 insertions(+), 7 deletions(-)
 
 diff --git a/App.jsx b/App.jsx
-index 1ff73a4..60f1400 100644
+index 27ac66e..60f1400 100644
 --- a/App.jsx
 +++ b/App.jsx
-@@ -1,17 +1,23 @@
+@@ -1,15 +1,19 @@
  // App component - represents the whole app
  App = React.createClass({
 -  getTasks() {
@@ -644,7 +646,7 @@ index 1ff73a4..60f1400 100644
 +      tasks: Tasks.find({}).fetch()
 +    }
    },
-+
+ 
    renderTasks() {
 -    return this.getTasks().map((task) => {
 +    // Get tasks from this.data.tasks
@@ -652,15 +654,11 @@ index 1ff73a4..60f1400 100644
        return <Task key={task._id} task={task} />;
      });
    },
-+
-   render() {
-     return (
-       <div className="container">
 -- 
 2.2.1
 
 
-From 00f681c51a39366c387af94615dbb4d818056178 Mon Sep 17 00:00:00 2001
+From 6a9590b6ad0b3a8aee577d5ce33b4df759f2acba Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:13:37 -0700
 Subject: [PATCH 10/41] Step 4.1: Add form for new tasks
@@ -691,7 +689,7 @@ index 60f1400..7b798bb 100644
 2.2.1
 
 
-From 7814c907ba3b19f71222892db8a75d69be15c3c8 Mon Sep 17 00:00:00 2001
+From 595556f61f3ba902a055bd310df9ffbd4576dc6b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:14:08 -0700
 Subject: [PATCH 11/41] Step 4.2: Add handleSubmit method to App component
@@ -730,7 +728,7 @@ index 7b798bb..67184cc 100644
 2.2.1
 
 
-From 102b5b14357856f2125abf0978fac242bc6f68d4 Mon Sep 17 00:00:00 2001
+From 5c4ba0f7864e0a2cbf0bcb03b6a7df22586d5e68 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:14:40 -0700
 Subject: [PATCH 12/41] Step 4.3: Update getMeteorData to sort tasks by time
@@ -756,7 +754,7 @@ index 67184cc..64197bd 100644
 2.2.1
 
 
-From 7fc3e783e846828b0d4a3d9bb7a27e01ce395809 Mon Sep 17 00:00:00 2001
+From d9b4770a22e1a99eac80e95fe0510cbc8648f9b1 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:17:06 -0700
 Subject: [PATCH 13/41] Step 5.1: Update Task component to add features
@@ -816,7 +814,7 @@ index c49e7ac..d1c618b 100644
 2.2.1
 
 
-From 0897d01b349735fdeddff6cde09a7f630c976890 Mon Sep 17 00:00:00 2001
+From ef6891054dfa0c797e0dd95761f2966c16efcf8f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:21:30 -0700
 Subject: [PATCH 14/41] Step 8.1: Add hide completed checkbox to App component
@@ -849,7 +847,7 @@ index 64197bd..ef39e73 100644
 2.2.1
 
 
-From 0abf8e9a5745c0ed72fe56547e4b30e67deab5a0 Mon Sep 17 00:00:00 2001
+From 958c0d75290e64d006305f2dd03dede162e2f527 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:07 -0700
 Subject: [PATCH 15/41] Step 8.2: Add getInitialState to App component
@@ -879,7 +877,7 @@ index ef39e73..144582d 100644
 2.2.1
 
 
-From 37f39a8c2c81d01d3bc438e79cb8edf5dc23391f Mon Sep 17 00:00:00 2001
+From 8c602b47086cb8d5e3ea23812811dbe97941ba01 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:32 -0700
 Subject: [PATCH 16/41] Step 8.3: Add toggleHideCompleted handler to App
@@ -909,7 +907,7 @@ index 144582d..6799fca 100644
 2.2.1
 
 
-From 2364ea342e26daef71c78186d88bcd09aee17483 Mon Sep 17 00:00:00 2001
+From a1694b147586aec4cb1c7537600b6b503412670d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:02 -0700
 Subject: [PATCH 17/41] Step 8.4: Replace getMeteorData to filter tasks
@@ -945,7 +943,7 @@ index 6799fca..105577e 100644
 2.2.1
 
 
-From 8e56c9854433546590e5ea6173cc74a0456e53eb Mon Sep 17 00:00:00 2001
+From 0dce33f22620717927a9c45046554fb0af0fc5b4 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:44 -0700
 Subject: [PATCH 18/41] Step 8.5: Update getMeteorData to return
@@ -973,7 +971,7 @@ index 105577e..09415f3 100644
 2.2.1
 
 
-From f0d790f05e0f3e0466392d97bd6900861100b561 Mon Sep 17 00:00:00 2001
+From 2786f6c52923459e83212a1ea9b0b0a809f410d9 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:24:09 -0700
 Subject: [PATCH 19/41] Step 8.6: Display incompleteCount in the header
@@ -999,7 +997,7 @@ index 09415f3..f5b8224 100644
 2.2.1
 
 
-From b8a8d27d0f2808c18b7160a088ee56772ec29e77 Mon Sep 17 00:00:00 2001
+From 6f0c0b03ed3f6e084572fa12de678123c45f28b2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:02 -0700
 Subject: [PATCH 20/41] Step 9.1: Add accounts-ui and accounts-password
@@ -1075,7 +1073,7 @@ index 288ee5f..e964910 100644
 2.2.1
 
 
-From 3ffdac0480183c849ad8cbbfa8e84079596b6db5 Mon Sep 17 00:00:00 2001
+From dab17acf27046daafcabc4e29c05ffd911ad5291 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:59 -0700
 Subject: [PATCH 21/41] Step 9.2: Create Accounts UI wrapper component
@@ -1110,7 +1108,7 @@ index 0000000..87fd3b3
 2.2.1
 
 
-From a5ab9b8f2147dbc77b64c94b5369fb478f20bd92 Mon Sep 17 00:00:00 2001
+From 7af1c6780234736bb8f442c5cbf206ee53246263 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:27:36 -0700
 Subject: [PATCH 22/41] Step 9.3: Include sign in form
@@ -1136,7 +1134,7 @@ index f5b8224..e829c27 100644
 2.2.1
 
 
-From c1c9fd68243fbfbb9fa24a5924c2c4af5c097fa6 Mon Sep 17 00:00:00 2001
+From 2e167dbdf1654a04f002771edecd0ff0a00c0557 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:28:08 -0700
 Subject: [PATCH 23/41] Step 9.4: Configure accounts-ui to only require
@@ -1164,7 +1162,7 @@ index a67b030..36ce4bc 100644
 2.2.1
 
 
-From 2519198dfd053b036463dc6e026484342df47f7e Mon Sep 17 00:00:00 2001
+From 3f4b411ff42e6f82f4d43d28fdf5cfb1b1197682 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:28:46 -0700
 Subject: [PATCH 24/41] Step 9.5: Update insert to save username and owner
@@ -1192,7 +1190,7 @@ index e829c27..dd7862f 100644
 2.2.1
 
 
-From aca9333e69ffdeb31eea7e89a666801d733a8e34 Mon Sep 17 00:00:00 2001
+From 4fff683816569ab5f5654251f6dd77527b9a59b5 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:29:16 -0700
 Subject: [PATCH 25/41] Step 9.6: Update getMeteorData to return data about
@@ -1220,7 +1218,7 @@ index dd7862f..dfedd85 100644
 2.2.1
 
 
-From 14326f789ec20b89796978a6b20956e9cb4fc4e7 Mon Sep 17 00:00:00 2001
+From 199ef1827ecc472723946d7c2ffa25216d40a793 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:06 -0700
 Subject: [PATCH 26/41] Step 9.7: Wrap new task form to only show when logged
@@ -1259,7 +1257,7 @@ index dfedd85..b8824a4 100644
 2.2.1
 
 
-From d8b57eb7e511cb32bb1d07cc3aed3fc318e0592a Mon Sep 17 00:00:00 2001
+From 50e06b33c4e05ebe111cd855b5ab015ec743be5c Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:48 -0700
 Subject: [PATCH 27/41] Step 9.8: Update Task component to show username
@@ -1287,7 +1285,7 @@ index d1c618b..2caead7 100644
 2.2.1
 
 
-From 8b6a3d7f7ab2e3972ad0d70bb1b5a049c4d04380 Mon Sep 17 00:00:00 2001
+From 0a8e5501bd5c1bedb7ccb3c251722ff84972f922 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:31:22 -0700
 Subject: [PATCH 28/41] Step 10.1: Remove insecure package
@@ -1325,7 +1323,7 @@ index e964910..0d54bf9 100644
 2.2.1
 
 
-From 9a1ed5dc970b163fdeb38191e3c895601bb921e7 Mon Sep 17 00:00:00 2001
+From 6e735ca97ff876c4ac4c75b2ae374ddeb86abb8d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:21 -0700
 Subject: [PATCH 29/41] Step 10.2: Add methods for add, remove, update task
@@ -1370,7 +1368,7 @@ index 36ce4bc..b1aa692 100644
 2.2.1
 
 
-From 8ab8d4a9d7988fbf38e07c0f6b1b9fb1380a2317 Mon Sep 17 00:00:00 2001
+From d0803ad5673e8fae47b9ff7fed850a80d5f2d64e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:59 -0700
 Subject: [PATCH 30/41] Step 10.3: Update App component to use addTask method
@@ -1401,7 +1399,7 @@ index b8824a4..858f96b 100644
 2.2.1
 
 
-From cdf35b47a601eb5df5d5af4027885b820b203b15 Mon Sep 17 00:00:00 2001
+From 570c42f724a873d7d2a2c71bd0581522f8f2e23f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:33:38 -0700
 Subject: [PATCH 31/41] Step 10.4: Update Task to use setChecked and removeTask
@@ -1435,7 +1433,7 @@ index 2caead7..32577ed 100644
 2.2.1
 
 
-From 669ec22d48db6e0d305a9ad0dab4ec9be6696b7f Mon Sep 17 00:00:00 2001
+From e9da4141e5deed48e6ef079e3867e70aba388583 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:34:33 -0700
 Subject: [PATCH 32/41] Step 11.1: Remove autopublish package
@@ -1473,7 +1471,7 @@ index 0d54bf9..777cca4 100644
 2.2.1
 
 
-From 942c9c66d8de46cfa8f47bc4edb5038a063dfcbb Mon Sep 17 00:00:00 2001
+From a1ad699753dbd4730d2d34ac50e810e573c52a99 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:35:03 -0700
 Subject: [PATCH 33/41] Step 11.2: Add publish to server and subscribe to
@@ -1512,7 +1510,7 @@ index b1aa692..f62ed9e 100644
 2.2.1
 
 
-From a9299cb9ce21e06ff5de739c483df04e2ba850ff Mon Sep 17 00:00:00 2001
+From 2347589fa6cd3b885929ea430dc9024bf12f8482 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:29 -0700
 Subject: [PATCH 34/41] Step 11.3: Add setPrivate method
@@ -1546,7 +1544,7 @@ index f62ed9e..c2a3196 100644
 2.2.1
 
 
-From da1e2194308465f9a307c8b69a6b743baf5f680c Mon Sep 17 00:00:00 2001
+From 96a833da5b09ddf5b279027a383ba8593bef06b6 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:59 -0700
 Subject: [PATCH 35/41] Step 11.4: Update renderTasks to pass in
@@ -1579,7 +1577,7 @@ index 858f96b..82915ec 100644
 2.2.1
 
 
-From ecd603a0f8a8f9f646ebf7a52264fce8ccccefbd Mon Sep 17 00:00:00 2001
+From 20cf428657fbb42ec937d319e0d7a993226fe551 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:37:28 -0700
 Subject: [PATCH 36/41] Step 11.5: Add a new prop type for Task component
@@ -1606,7 +1604,7 @@ index 32577ed..c85416a 100644
 2.2.1
 
 
-From dbae4bbbbaf26876cb2757dbe6f9a5c9503df535 Mon Sep 17 00:00:00 2001
+From 7049ced6d9fdbcdded6c9a0e5dc9b6260255f2a8 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:04 -0700
 Subject: [PATCH 37/41] Step 11.6: Add private button, shown only to owner
@@ -1636,7 +1634,7 @@ index c85416a..1bbd4fb 100644
 2.2.1
 
 
-From c7dd2497633a214f2940ac14dddfab0a6239b858 Mon Sep 17 00:00:00 2001
+From 2603b34a2809af83f48c80f22b37f812df15f9ea Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:33 -0700
 Subject: [PATCH 38/41] Step 11.7: Add private button event handler to Task
@@ -1664,7 +1662,7 @@ index 1bbd4fb..75827dd 100644
 2.2.1
 
 
-From 0c4c3c080b5934afca5d6eee6b15036e0df348f2 Mon Sep 17 00:00:00 2001
+From 6eafb3a49a126f0a10db9c5f524ab2e74ba9880d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:22 -0700
 Subject: [PATCH 39/41] Step 11.8: Add private className to Task when needed
@@ -1692,7 +1690,7 @@ index 75827dd..37eadd3 100644
 2.2.1
 
 
-From d9ae927fab1193fa87b177ffa276859ddccc7ad4 Mon Sep 17 00:00:00 2001
+From b3d376a377d8a57135ea67f10b81fdcc566765ff Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:58 -0700
 Subject: [PATCH 40/41] Step 11.9: Only publish tasks the current user can see
@@ -1725,7 +1723,7 @@ index c2a3196..24849d5 100644
 2.2.1
 
 
-From aa8e37fa3724552a75f0c6795a80839df3e978e8 Mon Sep 17 00:00:00 2001
+From e53e739f4b2586bf2f3e9786403bb57438194ffc Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:40:55 -0700
 Subject: [PATCH 41/41] Step 11.10: Add extra security to methods
diff --git a/repos/react b/repos/react
index aa8e37f..e53e739 160000
--- a/repos/react
+++ b/repos/react
@@ -1 +1 @@
-Subproject commit aa8e37fa3724552a75f0c6795a80839df3e978e8
+Subproject commit e53e739f4b2586bf2f3e9786403bb57438194ffc
diff --git a/routes/commits/react.js b/routes/commits/react.js
index cdb08f9..5ad7b0d 100644
--- a/routes/commits/react.js
+++ b/routes/commits/react.js
@@ -1,167 +1,167 @@
 // This file auto-generated by scripts/map-commits-to-steps.rb
 REACT_COMMITS = {
   "11.10": {
-    "sha": "aa8e37fa3724552a75f0c6795a80839df3e978e8",
+    "sha": "e53e739f4b2586bf2f3e9786403bb57438194ffc",
     "message": "Add extra security to methods"
   },
   "11.9": {
-    "sha": "d9ae927fab1193fa87b177ffa276859ddccc7ad4",
+    "sha": "b3d376a377d8a57135ea67f10b81fdcc566765ff",
     "message": "Only publish tasks the current user can see"
   },
   "11.8": {
-    "sha": "0c4c3c080b5934afca5d6eee6b15036e0df348f2",
+    "sha": "6eafb3a49a126f0a10db9c5f524ab2e74ba9880d",
     "message": "Add private className to Task when needed"
   },
   "11.7": {
-    "sha": "c7dd2497633a214f2940ac14dddfab0a6239b858",
+    "sha": "2603b34a2809af83f48c80f22b37f812df15f9ea",
     "message": "Add private button event handler to Task"
   },
   "11.6": {
-    "sha": "dbae4bbbbaf26876cb2757dbe6f9a5c9503df535",
+    "sha": "7049ced6d9fdbcdded6c9a0e5dc9b6260255f2a8",
     "message": "Add private button, shown only to owner"
   },
   "11.5": {
-    "sha": "ecd603a0f8a8f9f646ebf7a52264fce8ccccefbd",
+    "sha": "20cf428657fbb42ec937d319e0d7a993226fe551",
     "message": "Add a new prop type for Task component"
   },
   "11.4": {
-    "sha": "da1e2194308465f9a307c8b69a6b743baf5f680c",
+    "sha": "96a833da5b09ddf5b279027a383ba8593bef06b6",
     "message": "Update renderTasks to pass in showPrivateButton"
   },
   "11.3": {
-    "sha": "a9299cb9ce21e06ff5de739c483df04e2ba850ff",
+    "sha": "2347589fa6cd3b885929ea430dc9024bf12f8482",
     "message": "Add setPrivate method"
   },
   "11.2": {
-    "sha": "942c9c66d8de46cfa8f47bc4edb5038a063dfcbb",
+    "sha": "a1ad699753dbd4730d2d34ac50e810e573c52a99",
     "message": "Add publish to server and subscribe to client"
   },
   "11.1": {
-    "sha": "669ec22d48db6e0d305a9ad0dab4ec9be6696b7f",
+    "sha": "e9da4141e5deed48e6ef079e3867e70aba388583",
     "message": "Remove autopublish package"
   },
   "10.4": {
-    "sha": "cdf35b47a601eb5df5d5af4027885b820b203b15",
+    "sha": "570c42f724a873d7d2a2c71bd0581522f8f2e23f",
     "message": "Update Task to use setChecked and removeTask methods"
   },
   "10.3": {
-    "sha": "8ab8d4a9d7988fbf38e07c0f6b1b9fb1380a2317",
+    "sha": "d0803ad5673e8fae47b9ff7fed850a80d5f2d64e",
     "message": "Update App component to use addTask method"
   },
   "10.2": {
-    "sha": "9a1ed5dc970b163fdeb38191e3c895601bb921e7",
+    "sha": "6e735ca97ff876c4ac4c75b2ae374ddeb86abb8d",
     "message": "Add methods for add, remove, update task"
   },
   "10.1": {
-    "sha": "8b6a3d7f7ab2e3972ad0d70bb1b5a049c4d04380",
+    "sha": "0a8e5501bd5c1bedb7ccb3c251722ff84972f922",
     "message": "Remove insecure package"
   },
   "9.8": {
-    "sha": "d8b57eb7e511cb32bb1d07cc3aed3fc318e0592a",
+    "sha": "50e06b33c4e05ebe111cd855b5ab015ec743be5c",
     "message": "Update Task component to show username"
   },
   "9.7": {
-    "sha": "14326f789ec20b89796978a6b20956e9cb4fc4e7",
+    "sha": "199ef1827ecc472723946d7c2ffa25216d40a793",
     "message": "Wrap new task form to only show when logged in"
   },
   "9.6": {
-    "sha": "aca9333e69ffdeb31eea7e89a666801d733a8e34",
+    "sha": "4fff683816569ab5f5654251f6dd77527b9a59b5",
     "message": "Update getMeteorData to return data about user"
   },
   "9.5": {
-    "sha": "2519198dfd053b036463dc6e026484342df47f7e",
+    "sha": "3f4b411ff42e6f82f4d43d28fdf5cfb1b1197682",
     "message": "Update insert to save username and owner"
   },
   "9.4": {
-    "sha": "c1c9fd68243fbfbb9fa24a5924c2c4af5c097fa6",
+    "sha": "2e167dbdf1654a04f002771edecd0ff0a00c0557",
     "message": "Configure accounts-ui to only require username"
   },
   "9.3": {
-    "sha": "a5ab9b8f2147dbc77b64c94b5369fb478f20bd92",
+    "sha": "7af1c6780234736bb8f442c5cbf206ee53246263",
     "message": "Include sign in form"
   },
   "9.2": {
-    "sha": "3ffdac0480183c849ad8cbbfa8e84079596b6db5",
+    "sha": "dab17acf27046daafcabc4e29c05ffd911ad5291",
     "message": "Create Accounts UI wrapper component"
   },
   "9.1": {
-    "sha": "b8a8d27d0f2808c18b7160a088ee56772ec29e77",
+    "sha": "6f0c0b03ed3f6e084572fa12de678123c45f28b2",
     "message": "Add accounts-ui and accounts-password packages"
   },
   "8.6": {
-    "sha": "f0d790f05e0f3e0466392d97bd6900861100b561",
+    "sha": "2786f6c52923459e83212a1ea9b0b0a809f410d9",
     "message": "Display incompleteCount in the header"
   },
   "8.5": {
-    "sha": "8e56c9854433546590e5ea6173cc74a0456e53eb",
+    "sha": "0dce33f22620717927a9c45046554fb0af0fc5b4",
     "message": "Update getMeteorData to return incompleteCount"
   },
   "8.4": {
-    "sha": "2364ea342e26daef71c78186d88bcd09aee17483",
+    "sha": "a1694b147586aec4cb1c7537600b6b503412670d",
     "message": "Replace getMeteorData to filter tasks"
   },
   "8.3": {
-    "sha": "37f39a8c2c81d01d3bc438e79cb8edf5dc23391f",
+    "sha": "8c602b47086cb8d5e3ea23812811dbe97941ba01",
     "message": "Add toggleHideCompleted handler to App"
   },
   "8.2": {
-    "sha": "0abf8e9a5745c0ed72fe56547e4b30e67deab5a0",
+    "sha": "958c0d75290e64d006305f2dd03dede162e2f527",
     "message": "Add getInitialState to App component"
   },
   "8.1": {
-    "sha": "0897d01b349735fdeddff6cde09a7f630c976890",
+    "sha": "ef6891054dfa0c797e0dd95761f2966c16efcf8f",
     "message": "Add hide completed checkbox to App component"
   },
   "5.1": {
-    "sha": "7fc3e783e846828b0d4a3d9bb7a27e01ce395809",
+    "sha": "d9b4770a22e1a99eac80e95fe0510cbc8648f9b1",
     "message": "Update Task component to add features"
   },
   "4.3": {
-    "sha": "102b5b14357856f2125abf0978fac242bc6f68d4",
+    "sha": "5c4ba0f7864e0a2cbf0bcb03b6a7df22586d5e68",
     "message": "Update getMeteorData to sort tasks by time"
   },
   "4.2": {
-    "sha": "7814c907ba3b19f71222892db8a75d69be15c3c8",
+    "sha": "595556f61f3ba902a055bd310df9ffbd4576dc6b",
     "message": "Add handleSubmit method to App component"
   },
   "4.1": {
-    "sha": "00f681c51a39366c387af94615dbb4d818056178",
+    "sha": "6a9590b6ad0b3a8aee577d5ce33b4df759f2acba",
     "message": "Add form for new tasks"
   },
   "3.2": {
-    "sha": "b96965e36191a6071c279e1e86262be6587909f4",
+    "sha": "9276239ccfca511667a61cdad7182a9a95681216",
     "message": "Modify App component to get tasks from collection"
   },
   "3.1": {
-    "sha": "2190d7d87b177541bdc28b6011e0282810362bcc",
+    "sha": "33dd1dab78f3c09ddd6f24664e042f2ddbf8ce01",
     "message": "Define tasks collection"
   },
   "2.6": {
-    "sha": "e66de095331e3390c2684f5080d7f11e45c7c8fc",
+    "sha": "c5f475a98824525922a32e69ac5eca7de0316957",
     "message": "Add CSS"
   },
   "2.5": {
-    "sha": "197c54dd37419b5bcb9dc045ae4791deaddcbde4",
+    "sha": "8aa85a45acb1ffcc7f94c141a3563556236b9b1c",
     "message": "Create Task component"
   },
   "2.4": {
-    "sha": "f26af2fb34333dfde00589bb0a65cf38e3cb3390",
+    "sha": "1f2cc89f74f801642f4bc0e3d2ff14c569765ca0",
     "message": "Create App component"
   },
   "2.3": {
-    "sha": "9e8020b66d1fa467b6fb00fc3541f9e0bfae98eb",
+    "sha": "676c35859282935e8c2cb81ff12b2b27135ae33e",
     "message": "Replace starter JS"
   },
   "2.2": {
-    "sha": "fec7e5aa905b7e0642af3ec1049f9f42d0459265",
+    "sha": "54289ae4946acb191d1f153aa4e8cfb938970811",
     "message": "Replace starter HTML code"
   },
   "2.1": {
-    "sha": "e23e1c9902bfc05fd21f709a8c6b0de58f05bb5f",
+    "sha": "7ba04da80922a977448359e5eaef88f6d2f28ea0",
     "message": "Add the React package"
   },
   "1": {
-    "sha": "ec18d9c416ce36418de3c07d40ecdab53ae9fd69",
+    "sha": "0aa691766c1c76cfab3436e0507f33ad27e23962",
     "message": "Run `meteor create`"
   }
 }
\ No newline at end of file
diff --git a/scripts/process-repo.rb b/scripts/process-repo.rb
index 52f63e9..abb8dff 100755
--- a/scripts/process-repo.rb
+++ b/scripts/process-repo.rb
@@ -15,16 +15,26 @@ require 'json'
 
 # Methodology: calls git log and parses output
 
-if ARGV.length < 4
-  puts "Please pass the path to a Git repository, \
-an output file, a variable name, and a patch file name"
+if ARGV.length < 1
+  puts "Please pass the name of a view layer: blaze, angular, or react"
   exit 1
 end
 
-out_file = File.join Dir.pwd, ARGV[1]
-out_patch_file = File.join Dir.pwd, ARGV[3]
+unless ["angular", "blaze", "react"].include? ARGV[0]
+  puts "Please pass the name of a view layer: blaze, angular, or react"
+  exit 1
+end
+
+view_type = ARGV[0]
+
+tutorial_root = File.realpath(File.join File.dirname(__FILE__), "..")
+
+repo = File.join tutorial_root, "repos", view_type
+out_file = File.join tutorial_root, "routes", "commits", (view_type + ".js")
+out_patch_file = File.join tutorial_root, "patches", (view_type + ".multi.patch")
+var_name = view_type.upcase + "_COMMITS"
 
-Dir.chdir ARGV[0]
+Dir.chdir repo
 
 log_output = `git log --pretty=oneline`
 
@@ -50,7 +60,7 @@ end
 
 File.open out_file, "w" do |file|
   file.write "// This file auto-generated by scripts/map-commits-to-steps.rb\n"
-  file.write(ARGV[2] + " = " + JSON.pretty_generate(hash))
+  file.write(var_name + " = " + JSON.pretty_generate(hash))
 end
 
 first_commit = log_output.lines.last.split[0]
-- 
2.13.6 (Apple Git-96)


From 7865b5cccab6cdbfb12170d344b3b0f9c7e5097d Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 23:33:40 -0700
Subject: [PATCH 043/164] Update docs

---
 README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 8ade74b..221c111 100644
--- a/README.md
+++ b/README.md
@@ -39,7 +39,7 @@ Step 3.1: Add some feature
 After using `git rebase` to massage the repository into the desired state, run the script to update the relevant files:
 
 ```sh
-./scripts/process-repo.rb repos/blaze routes/commits/blaze.js BLAZE_COMMITS patches/blaze.multi.patch
+./scripts/process-repo.rb blaze
 ```
 
 The commit with this message can be included with the following code snippet:
-- 
2.13.6 (Apple Git-96)


From 6412967e02daf226f8cf370e24fcde72a2980346 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 23:38:47 -0700
Subject: [PATCH 044/164] Move generated content to generated

---
 README.md                                          |    9 +-
 .../angular.js => generated/angular-commits.js     |    0
 generated/angular.multi.patch                      | 1080 ++++++++++++++++++++
 .../commits/blaze.js => generated/blaze-commits.js |    0
 generated/blaze.multi.patch                        | 1020 ++++++++++++++++++
 .../commits/react.js => generated/react-commits.js |    0
 {patches => generated}/react.multi.patch           |    0
 package.js                                         |    8 +-
 scripts/process-repo.rb                            |    4 +-
 9 files changed, 2112 insertions(+), 9 deletions(-)
 rename routes/commits/angular.js => generated/angular-commits.js (100%)
 create mode 100644 generated/angular.multi.patch
 rename routes/commits/blaze.js => generated/blaze-commits.js (100%)
 create mode 100644 generated/blaze.multi.patch
 rename routes/commits/react.js => generated/react-commits.js (100%)
 rename {patches => generated}/react.multi.patch (100%)

diff --git a/README.md b/README.md
index 221c111..60635ef 100644
--- a/README.md
+++ b/README.md
@@ -62,9 +62,12 @@ The different parts of the repository have quite different responsibilities, but
 
 This directory contains a Blaze component and build plugin for viewing git patches, tailored specifically to the needs of these tutorials. The build plugin reads files with `.patch` and `.multi.patch` file extensions, and puts data on a package-local object named `GitPatches`. You can access the data for a specific commit on `GitPatches[commitSha]`. The Blaze view component reads this data structure and displays a diff with context and a link to GitHub. Don't use the `GitPatch` component directly; use it by calling the more convenient `CodeBox` component from the `/shared` directory, as described below.
 
-### /patches/ (don't edit manually)
+### /generated/ (don't edit manually)
 
-This directory contains `.multi.patch` files of the step-by-step tutorial repositories. Don't edit these files manually; they are generated by `/scripts/process-repo.rb`. The patch files are in the same format as the result of `git format-patch --stdout`, meaning they are the patch files for all commits in a repo concatenated into one. The build plugin in `/git-patch-viewer/patch-plugin.jsx` knows how to read these files.
+This directory contains files generated by `/scripts/process-repo.rb`:
+
+1. `*-commits.js` are lists of commits keyed by the number of the step in the tutorial, with a parsed commit message.
+2. `*.multi.patch` are concatenated patch files of the step-by-step tutorial repositories. The patch files are in the same format as the result of `git format-patch --stdout`. The build plugin in `/git-patch-viewer/patch-plugin.jsx` knows how to read these files.
 
 ### /repos/
 
@@ -76,7 +79,7 @@ This directory contains JavaScript data structures describing the different tuto
 
 #### /routes/commits/ (don't edit manually)
 
-This directory contains files also generated by `/scripts/process-repo.rb`; they are lists of commits keyed by the number of the step in the tutorial, with a parsed commit message.
+
 
 ### /scripts/
 
diff --git a/routes/commits/angular.js b/generated/angular-commits.js
similarity index 100%
rename from routes/commits/angular.js
rename to generated/angular-commits.js
diff --git a/generated/angular.multi.patch b/generated/angular.multi.patch
new file mode 100644
index 0000000..9287d7c
--- /dev/null
+++ b/generated/angular.multi.patch
@@ -0,0 +1,1080 @@
+From c72debff708d1f5ed2ce9e2ca824cee2aec38277 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Wed, 13 May 2015 14:45:15 -0700
+Subject: [PATCH 01/10] Step 1: Run `meteor create`
+
+---
+ .meteor/.finished-upgraders |  8 ++++++++
+ .meteor/.gitignore          |  1 +
+ .meteor/.id                 |  7 +++++++
+ .meteor/packages            |  9 +++++++++
+ .meteor/platforms           |  2 ++
+ .meteor/release             |  1 +
+ .meteor/versions            | 48 +++++++++++++++++++++++++++++++++++++++++++++
+ simple-todos-angular.css    |  1 +
+ simple-todos-angular.html   | 14 +++++++++++++
+ simple-todos-angular.js     | 23 ++++++++++++++++++++++
+ 10 files changed, 114 insertions(+)
+ create mode 100644 .meteor/.finished-upgraders
+ create mode 100644 .meteor/.gitignore
+ create mode 100644 .meteor/.id
+ create mode 100644 .meteor/packages
+ create mode 100644 .meteor/platforms
+ create mode 100644 .meteor/release
+ create mode 100644 .meteor/versions
+ create mode 100644 simple-todos-angular.css
+ create mode 100644 simple-todos-angular.html
+ create mode 100644 simple-todos-angular.js
+
+diff --git a/.meteor/.finished-upgraders b/.meteor/.finished-upgraders
+new file mode 100644
+index 0000000..8a76103
+--- /dev/null
++++ b/.meteor/.finished-upgraders
+@@ -0,0 +1,8 @@
++# This file contains information which helps Meteor properly upgrade your
++# app when you run 'meteor update'. You should check it into version control
++# with your project.
++
++notices-for-0.9.0
++notices-for-0.9.1
++0.9.4-platform-file
++notices-for-facebook-graph-api-2
+diff --git a/.meteor/.gitignore b/.meteor/.gitignore
+new file mode 100644
+index 0000000..4083037
+--- /dev/null
++++ b/.meteor/.gitignore
+@@ -0,0 +1 @@
++local
+diff --git a/.meteor/.id b/.meteor/.id
+new file mode 100644
+index 0000000..efd78f0
+--- /dev/null
++++ b/.meteor/.id
+@@ -0,0 +1,7 @@
++# This file contains a token that is unique to your project.
++# Check it into your repository along with the rest of this directory.
++# It can be used for purposes such as:
++#   - ensuring you don't accidentally deploy one app on top of another
++#   - providing package authors with aggregated statistics
++
++1b8dzlr112p5wug6xm9d
+diff --git a/.meteor/packages b/.meteor/packages
+new file mode 100644
+index 0000000..99704e0
+--- /dev/null
++++ b/.meteor/packages
+@@ -0,0 +1,9 @@
++# Meteor packages used by this project, one per line.
++# Check this file (and the other files in this directory) into your repository.
++#
++# 'meteor add' and 'meteor remove' will edit this file for you,
++# but you can also edit it by hand.
++
++meteor-platform
++autopublish
++insecure
+diff --git a/.meteor/platforms b/.meteor/platforms
+new file mode 100644
+index 0000000..efeba1b
+--- /dev/null
++++ b/.meteor/platforms
+@@ -0,0 +1,2 @@
++server
++browser
+diff --git a/.meteor/release b/.meteor/release
+new file mode 100644
+index 0000000..dab6b55
+--- /dev/null
++++ b/.meteor/release
+@@ -0,0 +1 @@
++METEOR@1.1.0.2
+diff --git a/.meteor/versions b/.meteor/versions
+new file mode 100644
+index 0000000..410e1d9
+--- /dev/null
++++ b/.meteor/versions
+@@ -0,0 +1,48 @@
++autopublish@1.0.3
++autoupdate@1.2.1
++base64@1.0.3
++binary-heap@1.0.3
++blaze@2.1.2
++blaze-tools@1.0.3
++boilerplate-generator@1.0.3
++callback-hook@1.0.3
++check@1.0.5
++ddp@1.1.0
++deps@1.0.7
++ejson@1.0.6
++fastclick@1.0.3
++geojson-utils@1.0.3
++html-tools@1.0.4
++htmljs@1.0.4
++http@1.1.0
++id-map@1.0.3
++insecure@1.0.3
++jquery@1.11.3_2
++json@1.0.3
++launch-screen@1.0.2
++livedata@1.0.13
++logging@1.0.7
++meteor@1.1.6
++meteor-platform@1.2.2
++minifiers@1.1.5
++minimongo@1.0.8
++mobile-status-bar@1.0.3
++mongo@1.1.0
++observe-sequence@1.0.6
++ordered-dict@1.0.3
++random@1.0.3
++reactive-dict@1.1.0
++reactive-var@1.0.5
++reload@1.1.3
++retry@1.0.3
++routepolicy@1.0.5
++session@1.1.0
++spacebars@1.0.6
++spacebars-compiler@1.0.6
++templating@1.1.1
++tracker@1.0.7
++ui@1.0.6
++underscore@1.0.3
++url@1.0.4
++webapp@1.2.0
++webapp-hashing@1.0.3
+diff --git a/simple-todos-angular.css b/simple-todos-angular.css
+new file mode 100644
+index 0000000..b6b4052
+--- /dev/null
++++ b/simple-todos-angular.css
+@@ -0,0 +1 @@
++/* CSS declarations go here */
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+new file mode 100644
+index 0000000..30ca9b0
+--- /dev/null
++++ b/simple-todos-angular.html
+@@ -0,0 +1,14 @@
++<head>
++  <title>simple-todos-angular</title>
++</head>
++
++<body>
++  <h1>Welcome to Meteor!</h1>
++
++  {{> hello}}
++</body>
++
++<template name="hello">
++  <button>Click Me</button>
++  <p>You've pressed the button {{counter}} times.</p>
++</template>
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+new file mode 100644
+index 0000000..4f8c65d
+--- /dev/null
++++ b/simple-todos-angular.js
+@@ -0,0 +1,23 @@
++if (Meteor.isClient) {
++  // counter starts at 0
++  Session.setDefault('counter', 0);
++
++  Template.hello.helpers({
++    counter: function () {
++      return Session.get('counter');
++    }
++  });
++
++  Template.hello.events({
++    'click button': function () {
++      // increment the counter when button is clicked
++      Session.set('counter', Session.get('counter') + 1);
++    }
++  });
++}
++
++if (Meteor.isServer) {
++  Meteor.startup(function () {
++    // code to run on server at startup
++  });
++}
+-- 
+2.2.1
+
+
+From 2b4394e49f1345e5e106781831759454841cda73 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Wed, 13 May 2015 15:12:54 -0700
+Subject: [PATCH 02/10] Step 2: Add templates backed by a static array and all
+ of the CSS
+
+---
+ .meteor/packages          |   1 +
+ .meteor/versions          |   4 ++
+ simple-todos-angular.css  | 125 ++++++++++++++++++++++++++++++++++++++++++++++
+ simple-todos-angular.html |  12 +----
+ simple-todos-angular.js   |  31 +++++-------
+ todos-list.ng.html        |   9 ++++
+ 6 files changed, 153 insertions(+), 29 deletions(-)
+ create mode 100644 todos-list.ng.html
+
+diff --git a/.meteor/packages b/.meteor/packages
+index 99704e0..fa5ef7a 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -7,3 +7,4 @@
+ meteor-platform
+ autopublish
+ insecure
++urigo:angular
+diff --git a/.meteor/versions b/.meteor/versions
+index 410e1d9..4404870 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -1,3 +1,4 @@
++angular:angular@1.4.0
+ autopublish@1.0.3
+ autoupdate@1.2.1
+ base64@1.0.3
+@@ -7,6 +8,7 @@ blaze-tools@1.0.3
+ boilerplate-generator@1.0.3
+ callback-hook@1.0.3
+ check@1.0.5
++dburles:mongo-collection-instances@0.3.3
+ ddp@1.1.0
+ deps@1.0.7
+ ejson@1.0.6
+@@ -19,6 +21,7 @@ id-map@1.0.3
+ insecure@1.0.3
+ jquery@1.11.3_2
+ json@1.0.3
++lai:collection-extensions@0.1.3
+ launch-screen@1.0.2
+ livedata@1.0.13
+ logging@1.0.7
+@@ -43,6 +46,7 @@ templating@1.1.1
+ tracker@1.0.7
+ ui@1.0.6
+ underscore@1.0.3
++urigo:angular@0.9.0
+ url@1.0.4
+ webapp@1.2.0
+ webapp-hashing@1.0.3
+diff --git a/simple-todos-angular.css b/simple-todos-angular.css
+index b6b4052..cec3ae6 100644
+--- a/simple-todos-angular.css
++++ b/simple-todos-angular.css
+@@ -1 +1,126 @@
+ /* CSS declarations go here */
++body {
++  font-family: sans-serif;
++  background-color: #315481;
++  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
++  background-attachment: fixed;
++
++  position: absolute;
++  top: 0;
++  bottom: 0;
++  left: 0;
++  right: 0;
++
++  padding: 0;
++  margin: 0;
++
++  font-size: 14px;
++}
++
++.container {
++  max-width: 600px;
++  margin: 0 auto;
++  min-height: 100%;
++  background: white;
++}
++
++header {
++  background: #d2edf4;
++  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
++  padding: 20px 15px 15px 15px;
++  position: relative;
++}
++
++#login-buttons {
++  display: block;
++}
++
++h1 {
++  font-size: 1.5em;
++  margin: 0;
++  margin-bottom: 10px;
++  display: inline-block;
++  margin-right: 1em;
++}
++
++form {
++  margin-top: 10px;
++  margin-bottom: -10px;
++  position: relative;
++}
++
++.new-task input {
++  box-sizing: border-box;
++  padding: 10px 0;
++  background: transparent;
++  border: none;
++  width: 100%;
++  padding-right: 80px;
++  font-size: 1em;
++}
++
++.new-task input:focus{
++  outline: 0;
++}
++
++ul {
++  margin: 0;
++  padding: 0;
++  background: white;
++}
++
++.delete {
++  float: right;
++  font-weight: bold;
++  background: none;
++  font-size: 1em;
++  border: none;
++  position: relative;
++}
++
++li {
++  position: relative;
++  list-style: none;
++  padding: 15px;
++  border-bottom: #eee solid 1px;
++}
++
++li .text {
++  margin-left: 10px;
++}
++
++li.checked {
++  color: #888;
++}
++
++li.checked .text {
++  text-decoration: line-through;
++}
++
++li.private {
++  background: #eee;
++  border-color: #ddd;
++}
++
++header .hide-completed {
++  float: right;
++}
++
++.toggle-private {
++  margin-left: 5px;
++}
++
++@media (max-width: 600px) {
++  li {
++    padding: 12px 15px;
++  }
++
++  .search {
++    width: 150px;
++    clear: both;
++  }
++
++  .new-task input {
++    padding-bottom: 5px;
++  }
++}
+\ No newline at end of file
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index 30ca9b0..b6625d9 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -1,14 +1,6 @@
+ <head>
+-  <title>simple-todos-angular</title>
++  <title>Todo List</title>
+ </head>
+ 
+-<body>
+-  <h1>Welcome to Meteor!</h1>
+-
+-  {{> hello}}
++<body ng-app='simple-todos' ng-include="'todos-list.ng.html'"  ng-controller="TodosListCtrl">
+ </body>
+-
+-<template name="hello">
+-  <button>Click Me</button>
+-  <p>You've pressed the button {{counter}} times.</p>
+-</template>
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 4f8c65d..53ebac1 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -1,23 +1,16 @@
+ if (Meteor.isClient) {
+-  // counter starts at 0
+-  Session.setDefault('counter', 0);
+ 
+-  Template.hello.helpers({
+-    counter: function () {
+-      return Session.get('counter');
+-    }
+-  });
++  // This code only runs on the client
++  angular.module("simple-todos",['angular-meteor']);
+ 
+-  Template.hello.events({
+-    'click button': function () {
+-      // increment the counter when button is clicked
+-      Session.set('counter', Session.get('counter') + 1);
+-    }
+-  });
+-}
++  angular.module("simple-todos").controller("TodosListCtrl", ['$scope',
++    function($scope){
+ 
+-if (Meteor.isServer) {
+-  Meteor.startup(function () {
+-    // code to run on server at startup
+-  });
+-}
++      $scope.tasks = [
++        { text: "This is task 1" },
++        { text: "This is task 2" },
++        { text: "This is task 3" }
++      ];
++
++    }]);
++}
+\ No newline at end of file
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+new file mode 100644
+index 0000000..176ffec
+--- /dev/null
++++ b/todos-list.ng.html
+@@ -0,0 +1,9 @@
++<div class="container">
++	<header>
++		<h1>Todo List</h1>
++	</header>
++
++	<ul ng-repeat="task in tasks">
++		<li>{{task.text}}</li>
++	</ul>
++</div>
+\ No newline at end of file
+-- 
+2.2.1
+
+
+From 3ccf55d5ffa976ebf849c4e16a2505e92c07fff0 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Wed, 13 May 2015 15:27:45 -0700
+Subject: [PATCH 03/10] Step 3: Replace the static array with a Collection
+
+---
+ simple-todos-angular.js | 12 +++++-------
+ 1 file changed, 5 insertions(+), 7 deletions(-)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 53ebac1..d9f076b 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -1,16 +1,14 @@
++Tasks = new Mongo.Collection("tasks");
++
+ if (Meteor.isClient) {
+ 
+   // This code only runs on the client
+   angular.module("simple-todos",['angular-meteor']);
+ 
+-  angular.module("simple-todos").controller("TodosListCtrl", ['$scope',
+-    function($scope){
++  angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
++    function($scope, $meteor){
+ 
+-      $scope.tasks = [
+-        { text: "This is task 1" },
+-        { text: "This is task 2" },
+-        { text: "This is task 3" }
+-      ];
++      $scope.tasks = $meteor.collection(Tasks);
+ 
+     }]);
+ }
+\ No newline at end of file
+-- 
+2.2.1
+
+
+From 7037614aa24edbf7f2f5f1b8b44b8d813d604695 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Wed, 13 May 2015 16:03:07 -0700
+Subject: [PATCH 04/10] Step 4: A form to add tasks, sort to make newest tasks
+ at the top
+
+---
+ simple-todos-angular.js | 11 ++++++++++-
+ todos-list.ng.html      |  4 ++++
+ 2 files changed, 14 insertions(+), 1 deletion(-)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index d9f076b..7e2d724 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -8,7 +8,16 @@ if (Meteor.isClient) {
+   angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
+     function($scope, $meteor){
+ 
+-      $scope.tasks = $meteor.collection(Tasks);
++      $scope.tasks = $meteor.collection(function(){
++        return Tasks.find({}, {sort: {createdAt: -1}})
++      });
++
++      $scope.addTask = function(newTask){
++        $scope.tasks.push({
++            text: newTask,
++            createdAt: new Date()}
++        );
++      };
+ 
+     }]);
+ }
+\ No newline at end of file
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index 176ffec..cf49025 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -1,6 +1,10 @@
+ <div class="container">
+ 	<header>
+ 		<h1>Todo List</h1>
++
++		<form class="new-task" ng-submit="addTask(newTask); newTask='';">
++			<input ng-model="newTask" type="text" name="text" placeholder="Type to add new tasks" />
++		</form>
+ 	</header>
+ 
+ 	<ul ng-repeat="task in tasks">
+-- 
+2.2.1
+
+
+From a7ca2a6d3ff099d1253604619395b4ed6a46e691 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Wed, 13 May 2015 16:27:56 -0700
+Subject: [PATCH 05/10] Step 5: Make it possible to check off and delete tasks
+
+---
+ todos-list.ng.html | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
+
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index cf49025..7186cdb 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -8,6 +8,12 @@
+ 	</header>
+ 
+ 	<ul ng-repeat="task in tasks">
+-		<li>{{task.text}}</li>
++		<li ng-class="{'checked': task.checked}">
++			<button class="delete" ng-click="tasks.remove(task)">&times;</button>
++
++			<input type="checkbox" ng-model="task.checked" class="toggle-checked" />
++
++			<span class="text">{{task.text}}</span>
++		</li>
+ 	</ul>
+ </div>
+\ No newline at end of file
+-- 
+2.2.1
+
+
+From bbcc31b5304fe95df6fe94cfe05229d75e1ce29f Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Wed, 13 May 2015 16:43:16 -0700
+Subject: [PATCH 06/10] Step 7: Make Angular initialize on mobile devices
+
+---
+ simple-todos-angular.html | 2 +-
+ simple-todos-angular.js   | 9 +++++++++
+ 2 files changed, 10 insertions(+), 1 deletion(-)
+
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index b6625d9..13799ce 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -2,5 +2,5 @@
+   <title>Todo List</title>
+ </head>
+ 
+-<body ng-app='simple-todos' ng-include="'todos-list.ng.html'"  ng-controller="TodosListCtrl">
++<body ng-include="'todos-list.ng.html'"  ng-controller="TodosListCtrl">
+ </body>
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 7e2d724..9fe3be0 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -5,6 +5,15 @@ if (Meteor.isClient) {
+   // This code only runs on the client
+   angular.module("simple-todos",['angular-meteor']);
+ 
++  function onReady() {
++    angular.bootstrap(document, ['simple-todos']);
++  }
++
++  if (Meteor.isCordova)
++    angular.element(document).on("deviceready", onReady);
++  else
++    angular.element(document).ready(onReady);
++
+   angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
+     function($scope, $meteor){
+ 
+-- 
+2.2.1
+
+
+From d6229448a5e63137ddaa67ee9e7431466d4e796c Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Wed, 13 May 2015 17:18:24 -0700
+Subject: [PATCH 07/10] Step 8: Add an option to hide completed tasks, and show
+ incomplete task count
+
+---
+ simple-todos-angular.js | 15 +++++++++++++--
+ todos-list.ng.html      |  7 ++++++-
+ 2 files changed, 19 insertions(+), 3 deletions(-)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 9fe3be0..68a40f5 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -17,8 +17,8 @@ if (Meteor.isClient) {
+   angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
+     function($scope, $meteor){
+ 
+-      $scope.tasks = $meteor.collection(function(){
+-        return Tasks.find({}, {sort: {createdAt: -1}})
++      $scope.tasks = $meteor.collection(function() {
++        return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
+       });
+ 
+       $scope.addTask = function(newTask){
+@@ -28,5 +28,16 @@ if (Meteor.isClient) {
+         );
+       };
+ 
++      $scope.$watch('hideCompleted', function() {
++        if ($scope.hideCompleted)
++          $scope.query = {checked: {$ne: true}};
++        else
++          $scope.query = {};
++      });
++
++      $scope.incompleteCount = function () {
++        return Tasks.find({checked: {$ne: true}}).count();
++      };
++
+     }]);
+ }
+\ No newline at end of file
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index 7186cdb..2af2f0e 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -1,6 +1,11 @@
+ <div class="container">
+ 	<header>
+-		<h1>Todo List</h1>
++		<h1>Todo List ({{incompleteCount()}})</h1>
++
++		<label class="hide-completed">
++			<input type="checkbox" ng-model="$parent.hideCompleted"/>
++			Hide Completed Tasks
++		</label>
+ 
+ 		<form class="new-task" ng-submit="addTask(newTask); newTask='';">
+ 			<input ng-model="newTask" type="text" name="text" placeholder="Type to add new tasks" />
+-- 
+2.2.1
+
+
+From 947d9a7761f5800f8189287752080157c4e125f3 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Wed, 13 May 2015 18:17:11 -0700
+Subject: [PATCH 08/10] Step 9: Add users and login; display which user created
+ a task
+
+---
+ .meteor/packages        |  2 ++
+ .meteor/versions        | 11 +++++++++++
+ simple-todos-angular.js |  8 +++++++-
+ todos-list.ng.html      |  6 ++++--
+ 4 files changed, 24 insertions(+), 3 deletions(-)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index fa5ef7a..703dc2c 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -8,3 +8,5 @@ meteor-platform
+ autopublish
+ insecure
+ urigo:angular
++accounts-ui
++accounts-password
+diff --git a/.meteor/versions b/.meteor/versions
+index 4404870..85ccb98 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -1,3 +1,7 @@
++accounts-base@1.2.0
++accounts-password@1.1.1
++accounts-ui@1.1.5
++accounts-ui-unstyled@1.1.7
+ angular:angular@1.4.0
+ autopublish@1.0.3
+ autoupdate@1.2.1
+@@ -12,6 +16,7 @@ dburles:mongo-collection-instances@0.3.3
+ ddp@1.1.0
+ deps@1.0.7
+ ejson@1.0.6
++email@1.0.6
+ fastclick@1.0.3
+ geojson-utils@1.0.3
+ html-tools@1.0.4
+@@ -23,7 +28,9 @@ jquery@1.11.3_2
+ json@1.0.3
+ lai:collection-extensions@0.1.3
+ launch-screen@1.0.2
++less@1.0.14
+ livedata@1.0.13
++localstorage@1.0.3
+ logging@1.0.7
+ meteor@1.1.6
+ meteor-platform@1.2.2
+@@ -31,6 +38,7 @@ minifiers@1.1.5
+ minimongo@1.0.8
+ mobile-status-bar@1.0.3
+ mongo@1.1.0
++npm-bcrypt@0.7.8_2
+ observe-sequence@1.0.6
+ ordered-dict@1.0.3
+ random@1.0.3
+@@ -39,9 +47,12 @@ reactive-var@1.0.5
+ reload@1.1.3
+ retry@1.0.3
+ routepolicy@1.0.5
++service-configuration@1.0.4
+ session@1.1.0
++sha@1.0.3
+ spacebars@1.0.6
+ spacebars-compiler@1.0.6
++srp@1.0.3
+ templating@1.1.1
+ tracker@1.0.7
+ ui@1.0.6
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 68a40f5..6edc64e 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -24,7 +24,9 @@ if (Meteor.isClient) {
+       $scope.addTask = function(newTask){
+         $scope.tasks.push({
+             text: newTask,
+-            createdAt: new Date()}
++            createdAt: new Date(),
++            owner: Meteor.userId(),
++            username: Meteor.user().username}
+         );
+       };
+ 
+@@ -40,4 +42,8 @@ if (Meteor.isClient) {
+       };
+ 
+     }]);
++
++  Accounts.ui.config({
++    passwordSignupFields: "USERNAME_ONLY"
++  });
+ }
+\ No newline at end of file
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index 2af2f0e..ceb5b07 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -7,7 +7,9 @@
+ 			Hide Completed Tasks
+ 		</label>
+ 
+-		<form class="new-task" ng-submit="addTask(newTask); newTask='';">
++		<meteor-include src="loginButtons"></meteor-include>
++
++		<form class="new-task" ng-submit="addTask(newTask); newTask='';" ng-show="$root.currentUser">
+ 			<input ng-model="newTask" type="text" name="text" placeholder="Type to add new tasks" />
+ 		</form>
+ 	</header>
+@@ -18,7 +20,7 @@
+ 
+ 			<input type="checkbox" ng-model="task.checked" class="toggle-checked" />
+ 
+-			<span class="text">{{task.text}}</span>
++			<span class="text"><strong>{{task.username}}</strong> - {{task.text}}</span>
+ 		</li>
+ 	</ul>
+ </div>
+\ No newline at end of file
+-- 
+2.2.1
+
+
+From 05d534ee034fea7ea0471033882acd32a4508fa4 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 14 May 2015 01:03:28 -0700
+Subject: [PATCH 09/10] Step 10: Move database logic into Meteor.methods,
+ remove insecure package
+
+---
+ .meteor/packages        |  1 -
+ .meteor/versions        |  1 -
+ simple-todos-angular.js | 39 ++++++++++++++++++++++++++++++++-------
+ todos-list.ng.html      |  4 ++--
+ 4 files changed, 34 insertions(+), 11 deletions(-)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index 703dc2c..8798f9d 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -6,7 +6,6 @@
+ 
+ meteor-platform
+ autopublish
+-insecure
+ urigo:angular
+ accounts-ui
+ accounts-password
+diff --git a/.meteor/versions b/.meteor/versions
+index 85ccb98..9acf6b2 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -23,7 +23,6 @@ html-tools@1.0.4
+ htmljs@1.0.4
+ http@1.1.0
+ id-map@1.0.3
+-insecure@1.0.3
+ jquery@1.11.3_2
+ json@1.0.3
+ lai:collection-extensions@0.1.3
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 6edc64e..0912cb1 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -22,12 +22,15 @@ if (Meteor.isClient) {
+       });
+ 
+       $scope.addTask = function(newTask){
+-        $scope.tasks.push({
+-            text: newTask,
+-            createdAt: new Date(),
+-            owner: Meteor.userId(),
+-            username: Meteor.user().username}
+-        );
++        $meteor.call("addTask", newTask);
++      };
++
++      $scope.deleteTask = function(task){
++        $meteor.call("deleteTask", task._id);
++      };
++
++      $scope.setChecked = function(task){
++        $meteor.call("setChecked", task._id, !task.checked);
+       };
+ 
+       $scope.$watch('hideCompleted', function() {
+@@ -46,4 +49,26 @@ if (Meteor.isClient) {
+   Accounts.ui.config({
+     passwordSignupFields: "USERNAME_ONLY"
+   });
+-}
+\ No newline at end of file
++}
++
++Meteor.methods({
++  addTask: function (text) {
++    // Make sure the user is logged in before inserting a task
++    if (! Meteor.userId()) {
++      throw new Meteor.Error("not-authorized");
++    }
++
++    Tasks.insert({
++      text: text,
++      createdAt: new Date(),
++      owner: Meteor.userId(),
++      username: Meteor.user().username
++    });
++  },
++  deleteTask: function (taskId) {
++    Tasks.remove(taskId);
++  },
++  setChecked: function (taskId, setChecked) {
++    Tasks.update(taskId, { $set: { checked: setChecked} });
++  }
++});
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index ceb5b07..958ab39 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -16,9 +16,9 @@
+ 
+ 	<ul ng-repeat="task in tasks">
+ 		<li ng-class="{'checked': task.checked}">
+-			<button class="delete" ng-click="tasks.remove(task)">&times;</button>
++			<button class="delete" ng-click="deleteTask(task)">&times;</button>
+ 
+-			<input type="checkbox" ng-model="task.checked" class="toggle-checked" />
++			<input type="checkbox" ng-checked="task.checked" ng-click="setChecked(task)" class="toggle-checked" />
+ 
+ 			<span class="text"><strong>{{task.username}}</strong> - {{task.text}}</span>
+ 		</li>
+-- 
+2.2.1
+
+
+From 0ca238c099dbf17aa66873f813e8fed43b9b694d Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 14 May 2015 01:29:29 -0700
+Subject: [PATCH 10/10] Step 11: Add a private task feature, remove the
+ autopublish package
+
+---
+ .meteor/packages        |  1 -
+ .meteor/versions        |  1 -
+ simple-todos-angular.js | 37 +++++++++++++++++++++++++++++++++++++
+ todos-list.ng.html      |  6 +++++-
+ 4 files changed, 42 insertions(+), 3 deletions(-)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index 8798f9d..2d0433a 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -5,7 +5,6 @@
+ # but you can also edit it by hand.
+ 
+ meteor-platform
+-autopublish
+ urigo:angular
+ accounts-ui
+ accounts-password
+diff --git a/.meteor/versions b/.meteor/versions
+index 9acf6b2..e2b08b8 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -3,7 +3,6 @@ accounts-password@1.1.1
+ accounts-ui@1.1.5
+ accounts-ui-unstyled@1.1.7
+ angular:angular@1.4.0
+-autopublish@1.0.3
+ autoupdate@1.2.1
+ base64@1.0.3
+ binary-heap@1.0.3
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 0912cb1..3937a29 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -17,6 +17,8 @@ if (Meteor.isClient) {
+   angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
+     function($scope, $meteor){
+ 
++      $scope.$meteorSubscribe("tasks");
++      
+       $scope.tasks = $meteor.collection(function() {
+         return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
+       });
+@@ -33,6 +35,10 @@ if (Meteor.isClient) {
+         $meteor.call("setChecked", task._id, !task.checked);
+       };
+ 
++      $scope.setPrivate = function(task){
++        $meteor.call("setPrivate", task._id, ! task.private);
++      };
++
+       $scope.$watch('hideCompleted', function() {
+         if ($scope.hideCompleted)
+           $scope.query = {checked: {$ne: true}};
+@@ -66,9 +72,40 @@ Meteor.methods({
+     });
+   },
+   deleteTask: function (taskId) {
++    var task = Tasks.findOne(taskId);
++    if (task.private && task.owner !== Meteor.userId()) {
++      // If the task is private, make sure only the owner can delete it
++      throw new Meteor.Error("not-authorized");
++    }
+     Tasks.remove(taskId);
+   },
+   setChecked: function (taskId, setChecked) {
++    var task = Tasks.findOne(taskId);
++    if (task.private && task.owner !== Meteor.userId()) {
++      // If the task is private, make sure only the owner can check it off
++      throw new Meteor.Error("not-authorized");
++    }
+     Tasks.update(taskId, { $set: { checked: setChecked} });
++  },
++  setPrivate: function (taskId, setToPrivate) {
++    var task = Tasks.findOne(taskId);
++
++    // Make sure only the task owner can make a task private
++    if (task.owner !== Meteor.userId()) {
++      throw new Meteor.Error("not-authorized");
++    }
++
++    Tasks.update(taskId, { $set: { private: setToPrivate } });
+   }
+ });
++
++if (Meteor.isServer) {
++  Meteor.publish("tasks", function () {
++    return Tasks.find({
++      $or: [
++        { private: {$ne: true} },
++        { owner: this.userId }
++      ]
++    });
++  });
++}
+\ No newline at end of file
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index 958ab39..62299df 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -15,11 +15,15 @@
+ 	</header>
+ 
+ 	<ul ng-repeat="task in tasks">
+-		<li ng-class="{'checked': task.checked}">
++		<li ng-class="{'checked': task.checked, 'private': task.private}">
+ 			<button class="delete" ng-click="deleteTask(task)">&times;</button>
+ 
+ 			<input type="checkbox" ng-checked="task.checked" ng-click="setChecked(task)" class="toggle-checked" />
+ 
++			<button class="toggle-private" ng-if="task.owner === $root.currentUser._id" ng-click="setPrivate(task)">
++				{{task.private == true ? "Private" : "Public"}}
++			</button>
++
+ 			<span class="text"><strong>{{task.username}}</strong> - {{task.text}}</span>
+ 		</li>
+ 	</ul>
+-- 
+2.2.1
+
diff --git a/routes/commits/blaze.js b/generated/blaze-commits.js
similarity index 100%
rename from routes/commits/blaze.js
rename to generated/blaze-commits.js
diff --git a/generated/blaze.multi.patch b/generated/blaze.multi.patch
new file mode 100644
index 0000000..a91a1e9
--- /dev/null
+++ b/generated/blaze.multi.patch
@@ -0,0 +1,1020 @@
+From 6d14a8cd5ec233ea6714dce2a5e92560438dcf3c Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@mit.edu>
+Date: Wed, 22 Oct 2014 11:10:43 -0700
+Subject: [PATCH 1/9] Step 1: Run `meteor create`
+
+---
+ .meteor/.finished-upgraders |  7 +++++++
+ .meteor/.gitignore          |  1 +
+ .meteor/.id                 |  7 +++++++
+ .meteor/packages            |  8 +++++++
+ .meteor/platforms           |  2 ++
+ .meteor/release             |  1 +
+ .meteor/versions            | 51 +++++++++++++++++++++++++++++++++++++++++++++
+ simple-todos.css            |  1 +
+ simple-todos.html           | 14 +++++++++++++
+ simple-todos.js             | 23 ++++++++++++++++++++
+ 10 files changed, 115 insertions(+)
+ create mode 100644 .meteor/.finished-upgraders
+ create mode 100644 .meteor/.gitignore
+ create mode 100644 .meteor/.id
+ create mode 100644 .meteor/packages
+ create mode 100644 .meteor/platforms
+ create mode 100644 .meteor/release
+ create mode 100644 .meteor/versions
+ create mode 100644 simple-todos.css
+ create mode 100644 simple-todos.html
+ create mode 100644 simple-todos.js
+
+diff --git a/.meteor/.finished-upgraders b/.meteor/.finished-upgraders
+new file mode 100644
+index 0000000..68df3d8
+--- /dev/null
++++ b/.meteor/.finished-upgraders
+@@ -0,0 +1,7 @@
++# This file contains information which helps Meteor properly upgrade your
++# app when you run 'meteor update'. You should check it into version control
++# with your project.
++
++notices-for-0.9.0
++notices-for-0.9.1
++0.9.4-platform-file
+diff --git a/.meteor/.gitignore b/.meteor/.gitignore
+new file mode 100644
+index 0000000..4083037
+--- /dev/null
++++ b/.meteor/.gitignore
+@@ -0,0 +1 @@
++local
+diff --git a/.meteor/.id b/.meteor/.id
+new file mode 100644
+index 0000000..4083db2
+--- /dev/null
++++ b/.meteor/.id
+@@ -0,0 +1,7 @@
++# This file contains a token that is unique to your project.
++# Check it into your repository along with the rest of this directory.
++# It can be used for purposes such as:
++#   - ensuring you don't accidentally deploy one app on top of another
++#   - providing package authors with aggregated statistics
++
++1i530y1aqmxpd1pq5mnl
+diff --git a/.meteor/packages b/.meteor/packages
+new file mode 100644
+index 0000000..e893668
+--- /dev/null
++++ b/.meteor/packages
+@@ -0,0 +1,8 @@
++# Meteor packages used by this project, one per line.
++#
++# 'meteor add' and 'meteor remove' will edit this file for you,
++# but you can also edit it by hand.
++
++meteor-platform
++autopublish
++insecure
+diff --git a/.meteor/platforms b/.meteor/platforms
+new file mode 100644
+index 0000000..efeba1b
+--- /dev/null
++++ b/.meteor/platforms
+@@ -0,0 +1,2 @@
++server
++browser
+diff --git a/.meteor/release b/.meteor/release
+new file mode 100644
+index 0000000..7057f80
+--- /dev/null
++++ b/.meteor/release
+@@ -0,0 +1 @@
++METEOR@0.9.4
+diff --git a/.meteor/versions b/.meteor/versions
+new file mode 100644
+index 0000000..8f169db
+--- /dev/null
++++ b/.meteor/versions
+@@ -0,0 +1,51 @@
++application-configuration@1.0.3
++autopublish@1.0.1
++autoupdate@1.1.2
++base64@1.0.1
++binary-heap@1.0.1
++blaze-tools@1.0.1
++blaze@2.0.2
++boilerplate-generator@1.0.1
++callback-hook@1.0.1
++check@1.0.2
++ctl-helper@1.0.4
++ctl@1.0.2
++ddp@1.0.10
++deps@1.0.5
++ejson@1.0.4
++fastclick@1.0.1
++follower-livedata@1.0.2
++geojson-utils@1.0.1
++html-tools@1.0.2
++htmljs@1.0.2
++http@1.0.7
++id-map@1.0.1
++insecure@1.0.1
++jquery@1.0.1
++json@1.0.1
++livedata@1.0.11
++logging@1.0.4
++meteor-platform@1.1.2
++meteor@1.1.2
++minifiers@1.1.1
++minimongo@1.0.4
++mobile-status-bar@1.0.1
++mongo@1.0.7
++observe-sequence@1.0.3
++ordered-dict@1.0.1
++random@1.0.1
++reactive-dict@1.0.4
++reactive-var@1.0.3
++reload@1.1.1
++retry@1.0.1
++routepolicy@1.0.2
++session@1.0.3
++spacebars-compiler@1.0.3
++spacebars@1.0.3
++templating@1.0.8
++tracker@1.0.3
++ui@1.0.4
++underscore@1.0.1
++url@1.0.1
++webapp-hashing@1.0.1
++webapp@1.1.3
+diff --git a/simple-todos.css b/simple-todos.css
+new file mode 100644
+index 0000000..b6b4052
+--- /dev/null
++++ b/simple-todos.css
+@@ -0,0 +1 @@
++/* CSS declarations go here */
+diff --git a/simple-todos.html b/simple-todos.html
+new file mode 100644
+index 0000000..b08c7c3
+--- /dev/null
++++ b/simple-todos.html
+@@ -0,0 +1,14 @@
++<head>
++  <title>simple-todos</title>
++</head>
++
++<body>
++  <h1>Welcome to Meteor!</h1>
++
++  {{> hello}}
++</body>
++
++<template name="hello">
++  <button>Click Me</button>
++  <p>You've pressed the button {{counter}} times.</p>
++</template>
+diff --git a/simple-todos.js b/simple-todos.js
+new file mode 100644
+index 0000000..f8bee6b
+--- /dev/null
++++ b/simple-todos.js
+@@ -0,0 +1,23 @@
++if (Meteor.isClient) {
++  // counter starts at 0
++  Session.setDefault("counter", 0);
++
++  Template.hello.helpers({
++    counter: function () {
++      return Session.get("counter");
++    }
++  });
++
++  Template.hello.events({
++    'click button': function () {
++      // increment the counter when button is clicked
++      Session.set("counter", Session.get("counter") + 1);
++    }
++  });
++}
++
++if (Meteor.isServer) {
++  Meteor.startup(function () {
++    // code to run on server at startup
++  });
++}
+-- 
+2.2.1
+
+
+From e998be2ddf735d361f560b8d8bf9631b1151fee7 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@mit.edu>
+Date: Wed, 22 Oct 2014 11:11:55 -0700
+Subject: [PATCH 2/9] Step 2: Add templates backed by a static array and all of
+ the CSS
+
+---
+ simple-todos.css  | 125 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ simple-todos.html |  19 ++++++---
+ simple-todos.js   |  27 +++---------
+ 3 files changed, 145 insertions(+), 26 deletions(-)
+
+diff --git a/simple-todos.css b/simple-todos.css
+index b6b4052..cec3ae6 100644
+--- a/simple-todos.css
++++ b/simple-todos.css
+@@ -1 +1,126 @@
+ /* CSS declarations go here */
++body {
++  font-family: sans-serif;
++  background-color: #315481;
++  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
++  background-attachment: fixed;
++
++  position: absolute;
++  top: 0;
++  bottom: 0;
++  left: 0;
++  right: 0;
++
++  padding: 0;
++  margin: 0;
++
++  font-size: 14px;
++}
++
++.container {
++  max-width: 600px;
++  margin: 0 auto;
++  min-height: 100%;
++  background: white;
++}
++
++header {
++  background: #d2edf4;
++  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
++  padding: 20px 15px 15px 15px;
++  position: relative;
++}
++
++#login-buttons {
++  display: block;
++}
++
++h1 {
++  font-size: 1.5em;
++  margin: 0;
++  margin-bottom: 10px;
++  display: inline-block;
++  margin-right: 1em;
++}
++
++form {
++  margin-top: 10px;
++  margin-bottom: -10px;
++  position: relative;
++}
++
++.new-task input {
++  box-sizing: border-box;
++  padding: 10px 0;
++  background: transparent;
++  border: none;
++  width: 100%;
++  padding-right: 80px;
++  font-size: 1em;
++}
++
++.new-task input:focus{
++  outline: 0;
++}
++
++ul {
++  margin: 0;
++  padding: 0;
++  background: white;
++}
++
++.delete {
++  float: right;
++  font-weight: bold;
++  background: none;
++  font-size: 1em;
++  border: none;
++  position: relative;
++}
++
++li {
++  position: relative;
++  list-style: none;
++  padding: 15px;
++  border-bottom: #eee solid 1px;
++}
++
++li .text {
++  margin-left: 10px;
++}
++
++li.checked {
++  color: #888;
++}
++
++li.checked .text {
++  text-decoration: line-through;
++}
++
++li.private {
++  background: #eee;
++  border-color: #ddd;
++}
++
++header .hide-completed {
++  float: right;
++}
++
++.toggle-private {
++  margin-left: 5px;
++}
++
++@media (max-width: 600px) {
++  li {
++    padding: 12px 15px;
++  }
++
++  .search {
++    width: 150px;
++    clear: both;
++  }
++
++  .new-task input {
++    padding-bottom: 5px;
++  }
++}
+\ No newline at end of file
+diff --git a/simple-todos.html b/simple-todos.html
+index b08c7c3..95624e7 100644
+--- a/simple-todos.html
++++ b/simple-todos.html
+@@ -1,14 +1,21 @@
+ <head>
+-  <title>simple-todos</title>
++  <title>Todo List</title>
+ </head>
+ 
+ <body>
+-  <h1>Welcome to Meteor!</h1>
++  <div class="container">
++    <header>
++      <h1>Todo List</h1>
++    </header>
+ 
+-  {{> hello}}
++    <ul>
++      {{#each tasks}}
++        {{> task}}
++      {{/each}}
++    </ul>
++  </div>
+ </body>
+ 
+-<template name="hello">
+-  <button>Click Me</button>
+-  <p>You've pressed the button {{counter}} times.</p>
++<template name="task">
++  <li>{{text}}</li>
+ </template>
+diff --git a/simple-todos.js b/simple-todos.js
+index f8bee6b..871b655 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -1,23 +1,10 @@
+ if (Meteor.isClient) {
+-  // counter starts at 0
+-  Session.setDefault("counter", 0);
+-
+-  Template.hello.helpers({
+-    counter: function () {
+-      return Session.get("counter");
+-    }
+-  });
+-
+-  Template.hello.events({
+-    'click button': function () {
+-      // increment the counter when button is clicked
+-      Session.set("counter", Session.get("counter") + 1);
+-    }
+-  });
+-}
+-
+-if (Meteor.isServer) {
+-  Meteor.startup(function () {
+-    // code to run on server at startup
++  // This code only runs on the client
++  Template.body.helpers({
++    tasks: [
++      { text: "This is task 1" },
++      { text: "This is task 2" },
++      { text: "This is task 3" }
++    ]
+   });
+ }
+-- 
+2.2.1
+
+
+From 519fa970161a46755765b3884c32f435252bc862 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@mit.edu>
+Date: Wed, 22 Oct 2014 11:12:43 -0700
+Subject: [PATCH 3/9] Step 3: Replace the static array with a Collection
+
+---
+ simple-todos.js | 10 +++++-----
+ 1 file changed, 5 insertions(+), 5 deletions(-)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index 871b655..69fdf2c 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -1,10 +1,10 @@
++Tasks = new Mongo.Collection("tasks");
++
+ if (Meteor.isClient) {
+   // This code only runs on the client
+   Template.body.helpers({
+-    tasks: [
+-      { text: "This is task 1" },
+-      { text: "This is task 2" },
+-      { text: "This is task 3" }
+-    ]
++    tasks: function () {
++      return Tasks.find({});
++    }
+   });
+ }
+-- 
+2.2.1
+
+
+From 40eac55b0a6678d1560a8ff804871b0fae115a22 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@mit.edu>
+Date: Wed, 22 Oct 2014 11:15:50 -0700
+Subject: [PATCH 4/9] Step 4: A form to add tasks, sort to make newest tasks at
+ the top
+
+---
+ simple-todos.html |  4 ++++
+ simple-todos.js   | 21 ++++++++++++++++++++-
+ 2 files changed, 24 insertions(+), 1 deletion(-)
+
+diff --git a/simple-todos.html b/simple-todos.html
+index 95624e7..e31aef1 100644
+--- a/simple-todos.html
++++ b/simple-todos.html
+@@ -6,6 +6,10 @@
+   <div class="container">
+     <header>
+       <h1>Todo List</h1>
++
++      <form class="new-task">
++        <input type="text" name="text" placeholder="Type to add new tasks" />
++      </form>
+     </header>
+ 
+     <ul>
+diff --git a/simple-todos.js b/simple-todos.js
+index 69fdf2c..ff4cc3a 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -4,7 +4,26 @@ if (Meteor.isClient) {
+   // This code only runs on the client
+   Template.body.helpers({
+     tasks: function () {
+-      return Tasks.find({});
++      // Show newest tasks first
++      return Tasks.find({}, {sort: {createdAt: -1}});
++    }
++  });
++
++  Template.body.events({
++    "submit .new-task": function (event) {
++      // This function is called when the new task form is submitted
++      var text = event.target.text.value;
++
++      Tasks.insert({
++        text: text,
++        createdAt: new Date() // current time
++      });
++
++      // Clear form
++      event.target.text.value = "";
++
++      // Prevent default form submit
++      return false;
+     }
+   });
+ }
+-- 
+2.2.1
+
+
+From ea5beb34103e48dbd58848de8455479f4061393e Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@mit.edu>
+Date: Wed, 22 Oct 2014 11:17:14 -0700
+Subject: [PATCH 5/9] Step 5: Make it possible to check off and delete tasks
+
+---
+ simple-todos.html |  8 +++++++-
+ simple-todos.js   | 10 ++++++++++
+ 2 files changed, 17 insertions(+), 1 deletion(-)
+
+diff --git a/simple-todos.html b/simple-todos.html
+index e31aef1..94341cc 100644
+--- a/simple-todos.html
++++ b/simple-todos.html
+@@ -21,5 +21,11 @@
+ </body>
+ 
+ <template name="task">
+-  <li>{{text}}</li>
++  <li class="{{#if checked}}checked{{/if}}">
++    <button class="delete">&times;</button>
++
++    <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
++
++    <span class="text">{{text}}</span>
++  </li>
+ </template>
+diff --git a/simple-todos.js b/simple-todos.js
+index ff4cc3a..f71e52a 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -26,4 +26,14 @@ if (Meteor.isClient) {
+       return false;
+     }
+   });
++
++  Template.task.events({
++    "click .toggle-checked": function () {
++      // Set the checked property to the opposite of its current value
++      Tasks.update(this._id, {$set: {checked: ! this.checked}});
++    },
++    "click .delete": function () {
++      Tasks.remove(this._id);
++    }
++  });
+ }
+-- 
+2.2.1
+
+
+From a89c298a25d532bd771ae6e6c35d8f579f837670 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@mit.edu>
+Date: Wed, 22 Oct 2014 11:19:27 -0700
+Subject: [PATCH 6/9] Step 8: Add option to hide completed tasks, show
+ incomplete task count
+
+---
+ simple-todos.html |  7 ++++++-
+ simple-todos.js   | 18 ++++++++++++++++--
+ 2 files changed, 22 insertions(+), 3 deletions(-)
+
+diff --git a/simple-todos.html b/simple-todos.html
+index 94341cc..7d7ca13 100644
+--- a/simple-todos.html
++++ b/simple-todos.html
+@@ -5,7 +5,12 @@
+ <body>
+   <div class="container">
+     <header>
+-      <h1>Todo List</h1>
++      <h1>Todo List ({{incompleteCount}})</h1>
++      
++      <label class="hide-completed">
++        <input type="checkbox" checked="{{hideCompleted}}" />
++        Hide Completed Tasks
++      </label>
+ 
+       <form class="new-task">
+         <input type="text" name="text" placeholder="Type to add new tasks" />
+diff --git a/simple-todos.js b/simple-todos.js
+index f71e52a..08e0426 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -4,8 +4,19 @@ if (Meteor.isClient) {
+   // This code only runs on the client
+   Template.body.helpers({
+     tasks: function () {
+-      // Show newest tasks first
+-      return Tasks.find({}, {sort: {createdAt: -1}});
++      if (Session.get("hideCompleted")) {
++        // If hide completed is checked, filter tasks
++        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});
++      } else {
++        // Otherwise, return all of the tasks
++        return Tasks.find({}, {sort: {createdAt: -1}});
++      }
++    },
++    hideCompleted: function () {
++      return Session.get("hideCompleted");
++    },
++    incompleteCount: function () {
++      return Tasks.find({checked: {$ne: true}}).count();
+     }
+   });
+ 
+@@ -24,6 +35,9 @@ if (Meteor.isClient) {
+ 
+       // Prevent default form submit
+       return false;
++    },
++    "change .hide-completed input": function (event) {
++      Session.set("hideCompleted", event.target.checked);
+     }
+   });
+ 
+-- 
+2.2.1
+
+
+From 556826bbf72a3025e5afe00d79de98af4fff86c2 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@mit.edu>
+Date: Wed, 22 Oct 2014 11:21:21 -0700
+Subject: [PATCH 7/9] Step 9: Add users and login; display which user created a
+ task
+
+---
+ .meteor/packages  |  3 +++
+ .meteor/versions  | 11 +++++++++++
+ simple-todos.html | 14 +++++++++-----
+ simple-todos.js   |  8 +++++++-
+ 4 files changed, 30 insertions(+), 6 deletions(-)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index e893668..8866d7d 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -6,3 +6,6 @@
+ meteor-platform
+ autopublish
+ insecure
++accounts-ui
++accounts-password
++
+diff --git a/.meteor/versions b/.meteor/versions
+index 8f169db..1fb53da 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -1,3 +1,7 @@
++accounts-base@1.1.2
++accounts-password@1.0.3
++accounts-ui-unstyled@1.1.3
++accounts-ui@1.1.2
+ application-configuration@1.0.3
+ autopublish@1.0.1
+ autoupdate@1.1.2
+@@ -13,6 +17,7 @@ ctl@1.0.2
+ ddp@1.0.10
+ deps@1.0.5
+ ejson@1.0.4
++email@1.0.4
+ fastclick@1.0.1
+ follower-livedata@1.0.2
+ geojson-utils@1.0.1
+@@ -23,7 +28,9 @@ id-map@1.0.1
+ insecure@1.0.1
+ jquery@1.0.1
+ json@1.0.1
++less@1.0.10
+ livedata@1.0.11
++localstorage@1.0.1
+ logging@1.0.4
+ meteor-platform@1.1.2
+ meteor@1.1.2
+@@ -31,6 +38,7 @@ minifiers@1.1.1
+ minimongo@1.0.4
+ mobile-status-bar@1.0.1
+ mongo@1.0.7
++npm-bcrypt@0.7.7
+ observe-sequence@1.0.3
+ ordered-dict@1.0.1
+ random@1.0.1
+@@ -39,9 +47,12 @@ reactive-var@1.0.3
+ reload@1.1.1
+ retry@1.0.1
+ routepolicy@1.0.2
++service-configuration@1.0.2
+ session@1.0.3
++sha@1.0.1
+ spacebars-compiler@1.0.3
+ spacebars@1.0.3
++srp@1.0.1
+ templating@1.0.8
+ tracker@1.0.3
+ ui@1.0.4
+diff --git a/simple-todos.html b/simple-todos.html
+index 7d7ca13..55c1dc9 100644
+--- a/simple-todos.html
++++ b/simple-todos.html
+@@ -6,15 +6,19 @@
+   <div class="container">
+     <header>
+       <h1>Todo List ({{incompleteCount}})</h1>
+-      
++
+       <label class="hide-completed">
+         <input type="checkbox" checked="{{hideCompleted}}" />
+         Hide Completed Tasks
+       </label>
+ 
+-      <form class="new-task">
+-        <input type="text" name="text" placeholder="Type to add new tasks" />
+-      </form>
++      {{> loginButtons}}
++
++      {{#if currentUser}}
++        <form class="new-task">
++          <input type="text" name="text" placeholder="Type to add new tasks" />
++        </form>
++      {{/if}}
+     </header>
+ 
+     <ul>
+@@ -31,6 +35,6 @@
+ 
+     <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
+ 
+-    <span class="text">{{text}}</span>
++    <span class="text"><strong>{{username}}</strong> - {{text}}</span>
+   </li>
+ </template>
+diff --git a/simple-todos.js b/simple-todos.js
+index 08e0426..a6e7d2a 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -27,7 +27,9 @@ if (Meteor.isClient) {
+ 
+       Tasks.insert({
+         text: text,
+-        createdAt: new Date() // current time
++        createdAt: new Date(),            // current time
++        owner: Meteor.userId(),           // _id of logged in user
++        username: Meteor.user().username  // username of logged in user
+       });
+ 
+       // Clear form
+@@ -50,4 +52,8 @@ if (Meteor.isClient) {
+       Tasks.remove(this._id);
+     }
+   });
++
++  Accounts.ui.config({
++    passwordSignupFields: "USERNAME_ONLY"
++  });
+ }
+-- 
+2.2.1
+
+
+From 9a1a392a6e3ed81434c68114dc5f31e418bec308 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@mit.edu>
+Date: Wed, 22 Oct 2014 11:22:53 -0700
+Subject: [PATCH 8/9] Step 10: Move logic into Meteor.methods, remove insecure
+ package
+
+---
+ .meteor/packages |  2 --
+ .meteor/versions |  1 -
+ simple-todos.js  | 33 +++++++++++++++++++++++++--------
+ 3 files changed, 25 insertions(+), 11 deletions(-)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index 8866d7d..a87fb56 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -5,7 +5,5 @@
+ 
+ meteor-platform
+ autopublish
+-insecure
+ accounts-ui
+ accounts-password
+-
+diff --git a/.meteor/versions b/.meteor/versions
+index 1fb53da..05cbd87 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -25,7 +25,6 @@ html-tools@1.0.2
+ htmljs@1.0.2
+ http@1.0.7
+ id-map@1.0.1
+-insecure@1.0.1
+ jquery@1.0.1
+ json@1.0.1
+ less@1.0.10
+diff --git a/simple-todos.js b/simple-todos.js
+index a6e7d2a..83daf06 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -25,12 +25,7 @@ if (Meteor.isClient) {
+       // This function is called when the new task form is submitted
+       var text = event.target.text.value;
+ 
+-      Tasks.insert({
+-        text: text,
+-        createdAt: new Date(),            // current time
+-        owner: Meteor.userId(),           // _id of logged in user
+-        username: Meteor.user().username  // username of logged in user
+-      });
++      Meteor.call("addTask", text);
+ 
+       // Clear form
+       event.target.text.value = "";
+@@ -46,10 +41,10 @@ if (Meteor.isClient) {
+   Template.task.events({
+     "click .toggle-checked": function () {
+       // Set the checked property to the opposite of its current value
+-      Tasks.update(this._id, {$set: {checked: ! this.checked}});
++      Meteor.call("setChecked", this._id, ! this.checked);
+     },
+     "click .delete": function () {
+-      Tasks.remove(this._id);
++      Meteor.call("deleteTask", this._id);
+     }
+   });
+ 
+@@ -57,3 +52,25 @@ if (Meteor.isClient) {
+     passwordSignupFields: "USERNAME_ONLY"
+   });
+ }
++
++Meteor.methods({
++  addTask: function (text) {
++    // Make sure the user is logged in before inserting a task
++    if (! Meteor.userId()) {
++      throw new Meteor.Error("not-authorized");
++    }
++
++    Tasks.insert({
++      text: text,
++      createdAt: new Date(),
++      owner: Meteor.userId(),
++      username: Meteor.user().username
++    });
++  },
++  deleteTask: function (taskId) {
++    Tasks.remove(taskId);
++  },
++  setChecked: function (taskId, setChecked) {
++    Tasks.update(taskId, { $set: { checked: setChecked} });
++  }
++});
+-- 
+2.2.1
+
+
+From 10bdbc7434b913c85c156ae6e27fdbea4b2e27bb Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@mit.edu>
+Date: Wed, 22 Oct 2014 11:25:59 -0700
+Subject: [PATCH 9/9] Step 11: Add private task feature, remove the autopublish
+ package
+
+---
+ .meteor/cordova-plugins |  1 +
+ .meteor/packages        |  1 -
+ .meteor/versions        |  1 -
+ simple-todos.html       | 12 +++++++++++-
+ simple-todos.js         | 45 +++++++++++++++++++++++++++++++++++++++++++++
+ 5 files changed, 57 insertions(+), 3 deletions(-)
+ create mode 100644 .meteor/cordova-plugins
+
+diff --git a/.meteor/cordova-plugins b/.meteor/cordova-plugins
+new file mode 100644
+index 0000000..8b13789
+--- /dev/null
++++ b/.meteor/cordova-plugins
+@@ -0,0 +1 @@
++
+diff --git a/.meteor/packages b/.meteor/packages
+index a87fb56..e293aea 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -4,6 +4,5 @@
+ # but you can also edit it by hand.
+ 
+ meteor-platform
+-autopublish
+ accounts-ui
+ accounts-password
+diff --git a/.meteor/versions b/.meteor/versions
+index 05cbd87..2cf703f 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -3,7 +3,6 @@ accounts-password@1.0.3
+ accounts-ui-unstyled@1.1.3
+ accounts-ui@1.1.2
+ application-configuration@1.0.3
+-autopublish@1.0.1
+ autoupdate@1.1.2
+ base64@1.0.1
+ binary-heap@1.0.1
+diff --git a/simple-todos.html b/simple-todos.html
+index 55c1dc9..0de883e 100644
+--- a/simple-todos.html
++++ b/simple-todos.html
+@@ -30,11 +30,21 @@
+ </body>
+ 
+ <template name="task">
+-  <li class="{{#if checked}}checked{{/if}}">
++  <li class="{{#if checked}}checked{{/if}} {{#if private}}private{{/if}}">
+     <button class="delete">&times;</button>
+ 
+     <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
+ 
++    {{#if isOwner}}
++      <button class="toggle-private">
++        {{#if private}}
++          Private    
++        {{else}}
++          Public
++        {{/if}}
++      </button>
++    {{/if}}
++
+     <span class="text"><strong>{{username}}</strong> - {{text}}</span>
+   </li>
+ </template>
+diff --git a/simple-todos.js b/simple-todos.js
+index 83daf06..43230d3 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -2,6 +2,8 @@ Tasks = new Mongo.Collection("tasks");
+ 
+ if (Meteor.isClient) {
+   // This code only runs on the client
++  Meteor.subscribe("tasks");
++
+   Template.body.helpers({
+     tasks: function () {
+       if (Session.get("hideCompleted")) {
+@@ -45,6 +47,15 @@ if (Meteor.isClient) {
+     },
+     "click .delete": function () {
+       Meteor.call("deleteTask", this._id);
++    },
++    "click .toggle-private": function () {
++      Meteor.call("setPrivate", this._id, ! this.private);
++    }
++  });
++
++  Template.task.helpers({
++    isOwner: function () {
++      return this.owner === Meteor.userId();
+     }
+   });
+ 
+@@ -68,9 +79,43 @@ Meteor.methods({
+     });
+   },
+   deleteTask: function (taskId) {
++    var task = Tasks.findOne(taskId);
++    if (task.private && task.owner !== Meteor.userId()) {
++      // If the task is private, make sure only the owner can delete it
++      throw new Meteor.Error("not-authorized");
++    }
++
+     Tasks.remove(taskId);
+   },
+   setChecked: function (taskId, setChecked) {
++    var task = Tasks.findOne(taskId);
++    if (task.private && task.owner !== Meteor.userId()) {
++      // If the task is private, make sure only the owner can check it off
++      throw new Meteor.Error("not-authorized");
++    }
++
+     Tasks.update(taskId, { $set: { checked: setChecked} });
++  },
++  setPrivate: function (taskId, setToPrivate) {
++    var task = Tasks.findOne(taskId);
++
++    // Make sure only the task owner can make a task private
++    if (task.owner !== Meteor.userId()) {
++      throw new Meteor.Error("not-authorized");
++    }
++
++    Tasks.update(taskId, { $set: { private: setToPrivate } });
+   }
+ });
++
++if (Meteor.isServer) {
++  // Only publish tasks that are public or belong to the current user
++  Meteor.publish("tasks", function () {
++    return Tasks.find({
++      $or: [
++        { private: {$ne: true} },
++        { owner: this.userId }
++      ]
++    });
++  });
++}
+-- 
+2.2.1
+
diff --git a/routes/commits/react.js b/generated/react-commits.js
similarity index 100%
rename from routes/commits/react.js
rename to generated/react-commits.js
diff --git a/patches/react.multi.patch b/generated/react.multi.patch
similarity index 100%
rename from patches/react.multi.patch
rename to generated/react.multi.patch
diff --git a/package.js b/package.js
index 538cf49..695b1df 100644
--- a/package.js
+++ b/package.js
@@ -32,9 +32,9 @@ Package.onUse(function (api) {
   ], "client");
 
   api.addFiles([
-    'routes/commits/blaze.js',
-    'routes/commits/angular.js',
-    'routes/commits/react.js',
+    'generated/blaze-commits.js',
+    'generated/angular-commits.js',
+    'generated/react-commits.js',
     'routes/angularTut.js',
     'routes/blazeTut.js',
     'routes/reactTut.js',
@@ -83,7 +83,7 @@ Package.onUse(function (api) {
     'shared/code-box.html',
     'shared/code-box.js',
 
-    'patches/react.multi.patch'
+    'generated/react.multi.patch'
   ], 'client');
 
   // Also, exports all of the templates from the steps/ directory
diff --git a/scripts/process-repo.rb b/scripts/process-repo.rb
index abb8dff..03cab6d 100755
--- a/scripts/process-repo.rb
+++ b/scripts/process-repo.rb
@@ -30,8 +30,8 @@ view_type = ARGV[0]
 tutorial_root = File.realpath(File.join File.dirname(__FILE__), "..")
 
 repo = File.join tutorial_root, "repos", view_type
-out_file = File.join tutorial_root, "routes", "commits", (view_type + ".js")
-out_patch_file = File.join tutorial_root, "patches", (view_type + ".multi.patch")
+out_file = File.join tutorial_root, "generated", (view_type + "-commits.js")
+out_patch_file = File.join tutorial_root, "generated", (view_type + ".multi.patch")
 var_name = view_type.upcase + "_COMMITS"
 
 Dir.chdir repo
-- 
2.13.6 (Apple Git-96)


From c8af950415a95397c960566b0735737b6301b02d Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 23:40:03 -0700
Subject: [PATCH 045/164] Remove shas from React

---
 routes/reactTut.js | 33 +++++++++++----------------------
 1 file changed, 11 insertions(+), 22 deletions(-)

diff --git a/routes/reactTut.js b/routes/reactTut.js
index ff26c46..e2944d7 100644
--- a/routes/reactTut.js
+++ b/routes/reactTut.js
@@ -5,8 +5,7 @@ REACT_TUT = [
     seoTitle: 'Creating an app',
     route: "tutorials.react.creating-an-app",
     path: "/tutorials/react/creating-an-app",
-    contentTemplate: 'react-step01',
-    sha: "377a8610c2fa77056d015e6998d5eb894436c99e"
+    contentTemplate: 'react-step01'
   },
   {
     id: "1",
@@ -14,8 +13,7 @@ REACT_TUT = [
     seoTitle: 'Components',
     route: "tutorials.react.components",
     path: "/tutorials/react/components",
-    contentTemplate: 'react-step02',
-    sha: "9f5c65302f1527f25cacaaf275ea5c747d55e405"
+    contentTemplate: 'react-step02'
   },
   {
     id: "2",
@@ -23,8 +21,7 @@ REACT_TUT = [
     seoTitle: 'Collections',
     route: "tutorials.react.collections",
     path: "/tutorials/react/collections",
-    contentTemplate: 'react-step03',
-    sha: "ab14d317db174a3b2d408f4e24a50c7af13342cd"
+    contentTemplate: 'react-step03'
   },
   {
     id: "3",
@@ -32,8 +29,7 @@ REACT_TUT = [
     seoTitle: 'Forms and events',
     route: "tutorials.react.forms-and-events",
     path: "/tutorials/react/forms-and-events",
-    contentTemplate: 'react-step04',
-    sha: "9c24b998e540848f0dbc241702a4fcfa48fb9087"
+    contentTemplate: 'react-step04'
   },
   {
     id: "4",
@@ -41,24 +37,21 @@ REACT_TUT = [
     seoTitle: 'Update and remove',
     route: "tutorials.react.update-and-remove",
     path: "/tutorials/react/update-and-remove",
-    contentTemplate: 'react-step05',
-    sha: "4e6f9494c895eff43fe26167a7b803a24c35854e"
+    contentTemplate: 'react-step05'
   },
   {
     id: "5",
     title: 'Deploying your app',
     seoTitle: 'Deploying your app',
     route: "tutorials.react.deploying-your-app",
-    path: "/tutorials/react/deploying-your-app",
-    contentTemplate: 'shared-step06'
+    path: "/tutorials/react/deploying-your-app"
   },
   {
     id: "6",
     title: 'Running on mobile',
     seoTitle: 'Running on mobile',
     route: "tutorials.react.running-on-mobile",
-    path: "/tutorials/react/running-on-mobile",
-    contentTemplate: 'sharedStep07'
+    path: "/tutorials/react/running-on-mobile"
   },
   {
     id: "7",
@@ -66,8 +59,7 @@ REACT_TUT = [
     seoTitle: 'Temporary UI state',
     route: "tutorials.react.temporary-ui-state",
     path: "/tutorials/react/temporary-ui-state",
-    contentTemplate: 'react-step08',
-    sha: "ad35c7e02a9f7c40f45f40dbff8d297fba4b13ac"
+    contentTemplate: 'react-step08'
   },
   {
     id: "8",
@@ -75,8 +67,7 @@ REACT_TUT = [
     seoTitle: 'Adding user accounts',
     route: "tutorials.react.adding-user-accounts",
     path: "/tutorials/react/adding-user-accounts",
-    contentTemplate: 'react-step09',
-    sha: "bb4a0fc190c44aa8cfd4189a03c2e18f1294074c"
+    contentTemplate: 'react-step09'
   },
   {
     id: "9",
@@ -84,8 +75,7 @@ REACT_TUT = [
     seoTitle: 'Security with methods',
     route: "tutorials.react.security-with-methods",
     path: "/tutorials/react/security-with-methods",
-    contentTemplate: 'react-step10',
-    sha: "e3b7fa8ed373c9e6b96fb3c370d0af238170b89a"
+    contentTemplate: 'react-step10'
   },
   {
     id: "10",
@@ -93,8 +83,7 @@ REACT_TUT = [
     seoTitle: 'Publish and subscribe',
     route: "tutorials.react.publish-and-subscribe",
     path: "/tutorials/react/publish-and-subscribe",
-    contentTemplate: 'react-step11',
-    sha: "44dfd82a9e90cf8600c18b7e9f3c2e742c34285d"
+    contentTemplate: 'react-step11'
   },
   {
     id: "11",
-- 
2.13.6 (Apple Git-96)


From 2f370d8b32bcdaf908ca36f30dc5865b29b2c97c Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 23:42:33 -0700
Subject: [PATCH 046/164] Improve README

---
 README.md | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/README.md b/README.md
index 60635ef..39e4dca 100644
--- a/README.md
+++ b/README.md
@@ -30,25 +30,25 @@ Just edit the markdown files in `/steps/`.
 
 ### Editing code snippets
 
-The code snippets are generated from the step-by-step git repositories. Each code snippet is its own commit. Commit messages follow the following format:
+The code snippets are generated from the step-by-step git repositories which are git submodules in `/repos`. Each code snippet is its own commit. Commit messages follow the following format:
 
 ```
 Step 3.1: Add some feature
 ```
 
-After using `git rebase` to massage the repository into the desired state, run the script to update the relevant files:
+After using `git rebase -i --root` to massage the repository into the desired state, run the script to update the generated files:
 
 ```sh
 ./scripts/process-repo.rb blaze
 ```
 
-The commit with this message can be included with the following code snippet:
+The commit with this message can then be included in the content with the following code snippet:
 
 ```html
 {{> CodeBox step="3.1" view="blaze"}}
 ```
 
-You should replace `blaze` with the correct repository (currently this string is transformed to refer to the correct data structures).
+You should replace `blaze` with the correct view name (currently this string is automatically transformed to refer to the correct data structures).
 
 You're done! Make sure to commit the changes to all of the generated files.
 
-- 
2.13.6 (Apple Git-96)


From 4e6343f112138283d87912497ecd4010cd2a5d0c Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 23:44:03 -0700
Subject: [PATCH 047/164] Formatting

---
 README.md | 16 ++++++----------
 1 file changed, 6 insertions(+), 10 deletions(-)

diff --git a/README.md b/README.md
index 39e4dca..f4db693 100644
--- a/README.md
+++ b/README.md
@@ -62,33 +62,29 @@ The different parts of the repository have quite different responsibilities, but
 
 This directory contains a Blaze component and build plugin for viewing git patches, tailored specifically to the needs of these tutorials. The build plugin reads files with `.patch` and `.multi.patch` file extensions, and puts data on a package-local object named `GitPatches`. You can access the data for a specific commit on `GitPatches[commitSha]`. The Blaze view component reads this data structure and displays a diff with context and a link to GitHub. Don't use the `GitPatch` component directly; use it by calling the more convenient `CodeBox` component from the `/shared` directory, as described below.
 
-### /generated/ (don't edit manually)
+#### /generated/ (don't edit manually)
 
 This directory contains files generated by `/scripts/process-repo.rb`:
 
 1. `*-commits.js` are lists of commits keyed by the number of the step in the tutorial, with a parsed commit message.
 2. `*.multi.patch` are concatenated patch files of the step-by-step tutorial repositories. The patch files are in the same format as the result of `git format-patch --stdout`. The build plugin in `/git-patch-viewer/patch-plugin.jsx` knows how to read these files.
 
-### /repos/
+#### /repos/
 
 This directory contains git submodules of all three step-by-step tutorial repositories.
 
-### /routes/
+#### /routes/
 
 This directory contains JavaScript data structures describing the different tutorial steps. These are exported from the package; the meteor.com website and tutorial-viewer app know how to read them.
 
-#### /routes/commits/ (don't edit manually)
-
-
-
-### /scripts/
+#### /scripts/
 
 This contains a script that is used to update `/patches/` and `/routes/commits/` from the repositories in `/repos/`.
 
-### /shared/
+#### /shared/
 
 Tutorial-specific templates. Some of them are shared content for the different tutorials in markdown format, others are useful UI widgets. Includes the useful `CodeBox` template, which wraps the `GitPatch` template with more convenient inputs.
 
-### /steps/
+#### /steps/
 
 The actual tutorial prose content, in Markdown format.
\ No newline at end of file
-- 
2.13.6 (Apple Git-96)


From 007625a4c099e3741135e239df948f0f461d9a1b Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Tue, 14 Jul 2015 09:38:46 -0700
Subject: [PATCH 048/164] Update README.md

---
 README.md | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/README.md b/README.md
index f4db693..0ff7a0a 100644
--- a/README.md
+++ b/README.md
@@ -79,7 +79,7 @@ This directory contains JavaScript data structures describing the different tuto
 
 #### /scripts/
 
-This contains a script that is used to update `/patches/` and `/routes/commits/` from the repositories in `/repos/`.
+This contains a script that is used to update `/generated/` from the repositories in `/repos/`.
 
 #### /shared/
 
@@ -87,4 +87,4 @@ Tutorial-specific templates. Some of them are shared content for the different t
 
 #### /steps/
 
-The actual tutorial prose content, in Markdown format.
\ No newline at end of file
+The actual tutorial prose content, in Markdown format.
-- 
2.13.6 (Apple Git-96)


From 804d76ea8c435487d86e8859ab80a5ca49688a9f Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Tue, 14 Jul 2015 15:19:42 -0700
Subject: [PATCH 049/164] Replace everything with CodeBox

---
 routes/reactTut.js    |  6 ++--
 steps/react/step02.md | 12 +++++--
 steps/react/step03.md |  4 ++-
 steps/react/step05.md | 17 ++-------
 steps/react/step08.md | 61 ++++-----------------------------
 steps/react/step09.md | 75 ++++++----------------------------------
 steps/react/step10.md | 36 ++-----------------
 steps/react/step11.md | 95 +++++++++++++--------------------------------------
 8 files changed, 63 insertions(+), 243 deletions(-)

diff --git a/routes/reactTut.js b/routes/reactTut.js
index e2944d7..137a567 100644
--- a/routes/reactTut.js
+++ b/routes/reactTut.js
@@ -44,14 +44,16 @@ REACT_TUT = [
     title: 'Deploying your app',
     seoTitle: 'Deploying your app',
     route: "tutorials.react.deploying-your-app",
-    path: "/tutorials/react/deploying-your-app"
+    path: "/tutorials/react/deploying-your-app",
+    contentTemplate: "shared-step06"
   },
   {
     id: "6",
     title: 'Running on mobile',
     seoTitle: 'Running on mobile',
     route: "tutorials.react.running-on-mobile",
-    path: "/tutorials/react/running-on-mobile"
+    path: "/tutorials/react/running-on-mobile",
+    contentTemplate: "sharedStep07"
   },
   {
     id: "7",
diff --git a/steps/react/step02.md b/steps/react/step02.md
index 709a9d5..55aeec6 100644
--- a/steps/react/step02.md
+++ b/steps/react/step02.md
@@ -17,7 +17,7 @@ First, replace the content of the initial HTML file:
 
 {{> CodeBox view="react" step="2.2"}}
 
-Second, delete `simple-todos-react.js` and create three new files:
+Second, **delete `simple-todos-react.js`** and create three new files:
 
 {{> CodeBox view="react" step="2.3"}}
 
@@ -25,7 +25,13 @@ Second, delete `simple-todos-react.js` and create three new files:
 
 {{> CodeBox view="react" step="2.5"}}
 
-In this new file, there are three important parts: an `App` React component, a `Task` React component, and a block inside `if (Meteor.isClient) { ... }`, which defines code to execute in the browser. Later in the tutorial, we will refer to these components when adding or changing code.
+We just added three things to our app:
+
+1. An `App` React component
+2. A `Task` React component
+3. Some code wrapped inside `if (Meteor.isClient) { ... }`, which defines code to execute in the browser, and `Meteor.startup`, which knows how to call code when the page is loaded and ready.
+
+Later in the tutorial, we will refer to these components when adding or changing code.
 
 ### Check the result
 
@@ -36,7 +42,7 @@ In our browser, the app should now look much like this:
 > - This is task 2
 > - This is task 3
 
-If your app doesn't look like this, use the GitHub links at the bottom of the page to see what each file is supposed to contain. Now let's find out what all these bits of code are doing!
+If your app doesn't look like this, use the GitHub link at the top right corner of each code snippet to see the entire file, and make sure your code matches the example.
 
 ### HTML files define static content
 
diff --git a/steps/react/step03.md b/steps/react/step03.md
index 956a119..344e108 100644
--- a/steps/react/step03.md
+++ b/steps/react/step03.md
@@ -4,11 +4,13 @@
 
 {{> step03CollectionsIntro}}
 
+Let's add a line of code to define our first collection:
+
 {{> CodeBox step="3.1" view="react"}}
 
 ### Using data from a collection inside a React component
 
-To use data from a Meteor collection inside a React component, include the `ReactMeteorData` mixin. With this mixin in your component, you can define a method called `getMeteorData` which knows how to keep track of changes in data. The object you return from `getMeteorData` can be accessed on `this.data` inside the `render` method.
+To use data from a Meteor collection inside a React component, include the `ReactMeteorData` mixin in a component. With this mixin in your component, you can define a method called `getMeteorData` which knows how to keep track of changes in data. The object you return from `getMeteorData` can be accessed on `this.data` inside the `render` method. Let's do this now:
 
 {{> CodeBox step="3.2" view="react"}}
 
diff --git a/steps/react/step05.md b/steps/react/step05.md
index aea94a8..d411fdc 100644
--- a/steps/react/step05.md
+++ b/steps/react/step05.md
@@ -10,14 +10,7 @@ Let's add two new elements to our `task` component, a checkbox and a delete butt
 
 ### Update
 
-In the code above, we have:
-
-```js
-// Set the checked property to the opposite of its current value
-Tasks.update(this.props.task._id, {
-  $set: {checked: ! this.props.task.checked}
-});
-```
+In the code above, we call `Tasks.update` to check off a task.
 
 The `update` function on a collection takes two arguments. The first is a selector that identifies a subset of the collection, and the second is an update parameter that specifies what should be done to the matched objects.
 
@@ -25,12 +18,6 @@ In this case, the selector is just the `_id` of the relevant task. The update pa
 
 ### Remove
 
-This code from above removes a task:
-
-```js
-Tasks.remove(this.props.task._id);
-```
-
-The `remove` function takes one argument, a selector that determines which item to remove from the collection.
+The code from above uses `Tasks.remove` to delete a task. The `remove` function takes one argument, a selector that determines which item to remove from the collection.
 
 {{/template}}
diff --git a/steps/react/step08.md b/steps/react/step08.md
index 518984a..e09717e 100644
--- a/steps/react/step08.md
+++ b/steps/react/step08.md
@@ -6,57 +6,19 @@ In this step, we'll add a client-side data filtering feature to our app, so that
 
 First, we need to add a checkbox to our `App` component:
 
-```html
-{/* add a checkbox to <header> right below the <h1> inside App */}
-<label className="hide-completed">
-  <input
-    type="checkbox"
-    readOnly={true}
-    checked={this.state.hideCompleted}
-    onClick={this.toggleHideCompleted} />
-  Hide Completed Tasks
-</label>
-```
+{{> CodeBox step="8.1" view="react"}}
 
 You can see that it reads from `this.state.hideCompleted`. React components have a special field called `state` where you can store encapsulated component data. We need to define a `getInitialState` method on our component to initialize this field:
 
-```js
-// Inside the App component, at the top right under the mixin property
-getInitialState() {
-  return {
-    hideCompleted: false
-  }
-},
-```
+{{> CodeBox step="8.2" view="react"}}
 
 We can update `this.state` from an event handler by calling `this.setState`, which will update the state property asynchronously and then cause the component to re-render:
 
-```js
-// Add this method to the App component, right above render()
-toggleHideCompleted() {
-  this.setState({
-    hideCompleted: ! this.state.hideCompleted
-  });
-},
-```
+{{> CodeBox step="8.3" view="react"}}
 
 Now, we need to update `getMeteorData` to filter out completed tasks when `this.state.hideCompleted` is true:
 
-```js
-// Replace getMeteorData on the App component
-getMeteorData() {
-  let query = {};
-
-  if (this.state.hideCompleted) {
-    // If hide completed is checked, filter tasks
-    query = {checked: {$ne: true}};
-  }
-
-  return {
-    tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch()
-  };
-},
-```
+{{> CodeBox step="8.4" view="react"}}
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
@@ -64,17 +26,8 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to return a count from `getMeteorData` and add a line to our `render` method. Since we already have the data in the client-side Minimongo collection, adding this extra count doesn't involve asking the server for anything.
 
-```js
-// Replace return statement in getMeteorData to also return incompleteCount
-return {
-  tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch(),
-  incompleteCount: Tasks.find({checked: {$ne: true}}).count()
-};
-```
-
-```html
-<!-- display the count at the end of the <h1> tag -->
-<h1>Todo List ({this.data.incompleteCount})</h1>
-```
+{{> CodeBox step="8.5" view="react"}}
+
+{{> CodeBox step="8.6" view="react"}}
 
 {{/template}}
diff --git a/steps/react/step09.md b/steps/react/step09.md
index 7354e8d..1d17ae1 100644
--- a/steps/react/step09.md
+++ b/steps/react/step09.md
@@ -14,41 +14,17 @@ meteor add accounts-ui accounts-password
 
 ### Wrapping a Blaze component in React
 
-To use the Blaze UI component from the `accounts-ui` package, we need to wrap it in a React component. To do so, add this code near the bottom of `simple-todos-react.jsx`, below the `Task` component and above the `if (Meteor.isClient) { ... }` section.
-
-```js
-AccountsUIWrapper = React.createClass({
-  componentDidMount() {
-    // Use Meteor Blaze to render login buttons
-    this.view = Blaze.render(Template.loginButtons,
-      React.findDOMNode(this.refs.container));
-  },
-  componentWillUnmount() {
-    // Clean up Blaze view
-    Blaze.remove(this.view);
-  },
-  render() {
-    // Just render a placeholder container that will be filled in
-    return <span ref="container" />;
-  }
-});
-```
+To use the Blaze UI component from the `accounts-ui` package, we need to wrap it in a React component. To do so, let's create a new component called `AccountsUIWrapper` in a new file:
 
-In the App component `render` method, right under the checkbox and above the new task form, include the component we just defined:
+{{> CodeBox step="9.2" view="react"}}
 
-```html
-<AccountsUIWrapper />
-```
+Let's include the component we just defined inside App:
 
-Then, at the bottom of the `if (Meteor.isClient) { ... }` block, add the following code to configure the accounts UI to use usernames instead of email addresses:
+{{> CodeBox step="9.3" view="react"}}
 
-```js
-// At the beginning of the client code, right under the comment that says
-// "This code is executed on the client only"
-Accounts.ui.config({
-  passwordSignupFields: "USERNAME_ONLY"
-});
-```
+Then, add the following code to configure the accounts UI to use usernames instead of email addresses:
+
+{{> CodeBox step="9.4" view="react"}}
 
 ### Adding user-related functionality
 
@@ -64,48 +40,19 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `handleSubmit` event handler:
 
-```js
-// Replace the existing insert inside the handleSubmit method
-Tasks.insert({
-  text: text,
-  createdAt: new Date(),            // current time
-  owner: Meteor.userId(),           // _id of logged in user
-  username: Meteor.user().username  // username of logged in user
-});
-```
+{{> CodeBox step="9.5" view="react"}}
 
 Modify the `return` statement on `getMeteorData` to get information about the currently logged in user:
 
-```js
-// In the getMeteorData method
-return {
-  tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch(),
-  incompleteCount: Tasks.find({checked: {$ne: true}}).count(),
-  currentUser: Meteor.user()
-}
-```
+{{> CodeBox step="9.6" view="react"}}
 
 Then, in our render method, add a conditional statement to only show the form when there is a logged in user:
 
-```html
-{ this.data.currentUser ?
-  <form className="new-task" onSubmit={this.handleSubmit} >
-    <input
-      type="text"
-      ref="textInput"
-      placeholder="Type to add new tasks" />
-  </form> : ''
-}
-```
+{{> CodeBox step="9.7" view="react"}}
 
 Finally, add a statement to display the `username` field on each task right before the text:
 
-```html
-<!-- in the render method of the Task component -->
-<span className="text">
-  <strong>{this.props.task.username}</strong>: {this.props.task.text}
-</span>
-```
+{{> CodeBox step="9.8" view="react"}}
 
 In your browser, add some tasks and notice that your username shows up. Old tasks that we added before this step won't have usernames attached; you can just delete them.
 
diff --git a/steps/react/step10.md b/steps/react/step10.md
index 082dc79..4a11887 100644
--- a/steps/react/step10.md
+++ b/steps/react/step10.md
@@ -18,43 +18,13 @@ If you try to use the app after removing this package, you will notice that none
 
 First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
 
-```js
-// At the bottom of simple-todos-react.jsx, outside of the client-only block
-Meteor.methods({
-  addTask(text) {
-    // Make sure the user is logged in before inserting a task
-    if (! Meteor.userId()) {
-      throw new Meteor.Error("not-authorized");
-    }
-
-    Tasks.insert({
-      text: text,
-      createdAt: new Date(),
-      owner: Meteor.userId(),
-      username: Meteor.user().username
-    });
-  },
-  deleteTask(taskId) {
-    Tasks.remove(taskId);
-  },
-  setChecked(taskId, setChecked) {
-    Tasks.update(taskId, { $set: { checked: setChecked} });
-  }
-});
-```
+{{> CodeBox step="10.2" view="react"}}
 
 Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
-```js
-// replace Tasks.insert( ... ) with:
-Meteor.call("addTask", text);
-
-// replace Tasks.update( ... ) with:
-Meteor.call("setChecked", this.props.task._id, ! this.props.task.checked);
+{{> CodeBox step="10.3" view="react"}}
 
-// replace Tasks.remove( ... ) with:
-Meteor.call("deleteTask", this.props.task._id);
-```
+{{> CodeBox step="10.4" view="react"}}
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
diff --git a/steps/react/step11.md b/steps/react/step11.md
index b4f06c2..c8c2bdb 100644
--- a/steps/react/step11.md
+++ b/steps/react/step11.md
@@ -14,19 +14,7 @@ When the app refreshes, the task list will be empty. Without the `autopublish` p
 
 Let's add them now.
 
-```js
-// At the bottom of simple-todos-react.jsx
-if (Meteor.isServer) {
-  Meteor.publish("tasks", function () {
-    return Tasks.find();
-  });
-}
-```
-
-```js
-// At the top of the if (Meteor.isClient) { ... } block
-Meteor.subscribe("tasks");
-```
+{{> CodeBox step="11.2" view="react"}}
 
 Once you have added this code, all of the tasks will reappear.
 
@@ -38,80 +26,45 @@ Let's add another property to tasks called "private" and a button for users to m
 
 First, we need to add a new method that we can call to set a task's private status:
 
-```js
-// Inside Meteor.methods, add a method underneath `setChecked`
-setPrivate(taskId, setToPrivate) {
-  var task = Tasks.findOne(taskId);
-
-  // Make sure only the task owner can make a task private
-  if (task.owner !== Meteor.userId()) {
-    throw new Meteor.Error("not-authorized");
-  }
-
-  Tasks.update(taskId, { $set: { private: setToPrivate } });
-}
-``` 
+{{> CodeBox step="11.3" view="react"}} 
 
 Now, we need to pass a new property to the `Task` to decide whether we want
 to show the private button; the button should show up only if the currently
 logged in user owns this task:
 
-```js
-// Update renderTasks method on the App component to pass in showPrivateButton
-renderTasks() {
-  // Get tasks from this.data.tasks
-  return this.data.tasks.map((task) => {
-    const currentUserId = this.data.currentUser && this.data.currentUser._id;
-    const showPrivateButton = task.owner === currentUserId;
-
-    return <Task
-      key={task._id}
-      task={task}
-      showPrivateButton={showPrivateButton} />;
-  });
-},
-```
+{{> CodeBox step="11.4" view="react"}}
 
-```js
-// Add a new prop type for showPrivateButton on the Task component
-propTypes: {
-  task: React.PropTypes.object.isRequired,
-  showPrivateButton: React.PropTypes.bool.isRequired
-},
-```
+{{> CodeBox step="11.5" view="react"}}
 
 Let's add the button, using this new prop to decide whether it should be displayed:
 
-```html
-{/* inside the render function of Task, under the checkbox code */}
-{ this.props.showPrivateButton ? (
-  <button className="toggle-private" onClick={this.togglePrivate}>
-    { this.props.task.private ? "Private" : "Public" }
-  </button>
-) : ''}
-```
+{{> CodeBox step="11.6" view="react"}}
 
 We need to define the event handler called by the button:
 
-```js
-// Add this method on the Task component right below deleteThisTask()
-togglePrivate() {
-  Meteor.call("setPrivate", this.props.task._id, ! this.props.task.private);
-},
-```
+{{> CodeBox step="11.7" view="react"}}
 
 One last thing, let's update the class of the `<li>` element in the `Task` component to reflect it's privacy status:
 
-```js
-// At the top of the render method of the Task component
-render() {
-  // Add checked and/or private to the className when needed
-  const taskClassName = (this.props.task.checked ? "checked" : "") + " " +
-    (this.props.task.private ? "private" : "");
+{{> CodeBox step="11.8" view="react"}}
 
-  // ... rest of method
-```
+### Selectively publishing tasks based on privacy status
+
+Now that we have a way of setting which tasks are private, we should modify our
+publication function to only send the tasks that a user is authorized to see:
+
+{{> CodeBox step="11.9" view="react"}}
+
+To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
+
+### Extra method security
+
+In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
+
+{{> CodeBox step="11.10" view="react"}}
+
+> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
-{{> step11SelectivelyPublish}}
+We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
 
 {{/template}}
-- 
2.13.6 (Apple Git-96)


From f2d0ff01ab6e5f6bf229258e294cb15991e2643d Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Tue, 14 Jul 2015 18:57:53 -0700
Subject: [PATCH 050/164] Make safari stop doing weird stuff with css

---
 git-patch-viewer/patch-viewer.less | 1 +
 1 file changed, 1 insertion(+)

diff --git a/git-patch-viewer/patch-viewer.less b/git-patch-viewer/patch-viewer.less
index be22cf5..80eea97 100644
--- a/git-patch-viewer/patch-viewer.less
+++ b/git-patch-viewer/patch-viewer.less
@@ -1,5 +1,6 @@
 .github-diff-container {
   border: 1px solid #eee;
+  -webkit-text-size-adjust: 100%;
 
   margin: 1.5em 0;
 
-- 
2.13.6 (Apple Git-96)


From be9e793f40c2b1733f686deb06d71708a517cf9f Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Tue, 14 Jul 2015 18:59:37 -0700
Subject: [PATCH 051/164] Add clearfix for code title

---
 git-patch-viewer/patch-viewer.less | 1 +
 1 file changed, 1 insertion(+)

diff --git a/git-patch-viewer/patch-viewer.less b/git-patch-viewer/patch-viewer.less
index 80eea97..97c5db5 100644
--- a/git-patch-viewer/patch-viewer.less
+++ b/git-patch-viewer/patch-viewer.less
@@ -14,6 +14,7 @@
     background: #eee;
     border-bottom: solid 1px #eee;
     color: #333;
+    overflow: auto;
 
     .on-github {
       float: right;
-- 
2.13.6 (Apple Git-96)


From 694a6bbd689eafc5553d19153e83959c5aada00a Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Tue, 14 Jul 2015 19:51:58 -0700
Subject: [PATCH 052/164] Put all Blaze code snippets into code boxes

---
 generated/blaze-commits.js  |  150 ++++-
 generated/blaze.multi.patch | 1313 ++++++++++++++++++++++++++++---------------
 package.js                  |    6 +-
 repos/blaze                 |    2 +-
 routes/blazeTut.js          |   27 +-
 steps/blaze/step02.md       |   41 +-
 steps/blaze/step03.md       |   14 +-
 steps/blaze/step04.md       |   42 +-
 steps/blaze/step05.md       |   26 +-
 steps/blaze/step08.md       |   47 +-
 steps/blaze/step09.md       |   32 +-
 steps/blaze/step10.md       |   36 +-
 steps/blaze/step11.md       |   83 +--
 13 files changed, 1054 insertions(+), 765 deletions(-)

diff --git a/generated/blaze-commits.js b/generated/blaze-commits.js
index 6d2c9f7..3cac8b5 100644
--- a/generated/blaze-commits.js
+++ b/generated/blaze-commits.js
@@ -1,39 +1,139 @@
 // This file auto-generated by scripts/map-commits-to-steps.rb
 BLAZE_COMMITS = {
-  "11": {
-    "sha": "10bdbc7434b913c85c156ae6e27fdbea4b2e27bb",
-    "message": "Add private task feature, remove the autopublish package"
+  "11.9": {
+    "sha": "b5957208d50a064a4a22780c7ef76259691b2c7a",
+    "message": "Add some extra security to methods"
   },
-  "10": {
-    "sha": "9a1a392a6e3ed81434c68114dc5f31e418bec308",
-    "message": "Move logic into Meteor.methods, remove insecure package"
+  "11.8": {
+    "sha": "6682fe168d69eb11b7fe280b67ae87fc6c06425a",
+    "message": "Only publish tasks the user is allowed to see"
   },
-  "9": {
-    "sha": "556826bbf72a3025e5afe00d79de98af4fff86c2",
-    "message": "Add users and login; display which user created a task"
+  "11.7": {
+    "sha": "06f0e314c1dfe3dc8a44288e71d02cac85a32c0c",
+    "message": "Add event handler to call the setPrivate method"
   },
-  "8": {
-    "sha": "a89c298a25d532bd771ae6e6c35d8f579f837670",
-    "message": "Add option to hide completed tasks, show incomplete task count"
+  "11.6": {
+    "sha": "47e1ff964973d319585bc7f5eb45b7ea78581028",
+    "message": "Define method to set tasks to private"
   },
-  "5": {
-    "sha": "ea5beb34103e48dbd58848de8455479f4061393e",
-    "message": "Make it possible to check off and delete tasks"
+  "11.5": {
+    "sha": "ba34429a728da182231069f71f46ece369baa31b",
+    "message": "Define helper to check ownership"
   },
-  "4": {
-    "sha": "40eac55b0a6678d1560a8ff804871b0fae115a22",
-    "message": "A form to add tasks, sort to make newest tasks at the top"
+  "11.4": {
+    "sha": "d1a2cc5eefa0b830f5f952cb6a94a496d7bb13aa",
+    "message": "Add private class to private tasks"
   },
-  "3": {
-    "sha": "519fa970161a46755765b3884c32f435252bc862",
-    "message": "Replace the static array with a Collection"
+  "11.3": {
+    "sha": "2c186456f68d31fbc51ef87cf10d8ff5a60f7cfe",
+    "message": "Add private button"
   },
-  "2": {
-    "sha": "e998be2ddf735d361f560b8d8bf9631b1151fee7",
-    "message": "Add templates backed by a static array and all of the CSS"
+  "11.2": {
+    "sha": "b292ba8028b19999a63e84d48fb2ca15d1e30110",
+    "message": "Add publish and subscribe"
+  },
+  "11.1": {
+    "sha": "6d476642901e702bac6ead65d5522dbe85e7852c",
+    "message": "Remove autopublish"
+  },
+  "10.4": {
+    "sha": "40f20dec61f94269f434f8e6600f52e48dab9c59",
+    "message": "Replace update and remove with methods"
+  },
+  "10.3": {
+    "sha": "7f422feef91339c9ffe9afd0a6069a14297f45b4",
+    "message": "Replace insert with addTask method"
+  },
+  "10.2": {
+    "sha": "c209b47dcce29206ee5235e09817558440905a6e",
+    "message": "Define some methods"
+  },
+  "10.1": {
+    "sha": "59808d546321d201594a14dfa6a84c4a28eab53a",
+    "message": "Remove insecure package"
+  },
+  "9.6": {
+    "sha": "d7ad84ff5ae149e78621c85a1d2fd32959439f29",
+    "message": "Display username next to task"
+  },
+  "9.5": {
+    "sha": "29cff394ae08784db32c90affdc3bf8686b21d83",
+    "message": "Only show add task form if logged in"
+  },
+  "9.4": {
+    "sha": "cd80f2966275060c64e4418c44cf13669386ce4d",
+    "message": "Update insert to include user data"
+  },
+  "9.3": {
+    "sha": "ddf3246896747a89f96aa64788f3daeca2e9a5c6",
+    "message": "Configure accounts-ui"
+  },
+  "9.2": {
+    "sha": "788b22e96afdbb0fb604834f4d08c61bb0178628",
+    "message": "Include loginButtons"
+  },
+  "9.1": {
+    "sha": "36e2490f9302894bb63ce241343da41519b03600",
+    "message": "Add accounts-ui and accounts-password"
+  },
+  "8.5": {
+    "sha": "48c14895d510dd095da3e114a40152d9291cbb83",
+    "message": "Display incompleteCount"
+  },
+  "8.4": {
+    "sha": "d7e04b692a361153918f4a88548dfdc1c0220367",
+    "message": "Add incompleteCount helper to body"
+  },
+  "8.3": {
+    "sha": "3352071c6d1c414f94ee21038f28c45651d6216c",
+    "message": "Add helpers to body template"
+  },
+  "8.2": {
+    "sha": "8a5390d3f596e1c2cefe56bfd417838ca834978c",
+    "message": "Add event handler for checkbox"
+  },
+  "8.1": {
+    "sha": "e62e4c1f8ca6f9808b6f3a78c39c4874dffdcbb4",
+    "message": "Add hide-completed checkbox to HTML"
+  },
+  "5.2": {
+    "sha": "383896358ebfb53c237a8611fc11a86aa71fbbf6",
+    "message": "Add event handlers for Task buttons"
+  },
+  "5.1": {
+    "sha": "5cdfa73dcd1a1973bf31e76ffb0e6af96d9a2d8a",
+    "message": "Add buttons to Task component"
+  },
+  "4.3": {
+    "sha": "a06c2235fa31bb876edc2f62ba62310dee40ab6c",
+    "message": "Show newest tasks at the top"
+  },
+  "4.2": {
+    "sha": "7a1ace1482bbdd5ce38aa5db28ecb20ce0e12863",
+    "message": "Add event handler for form submit"
+  },
+  "4.1": {
+    "sha": "8434ab7042eb750c50ab58efd7231f1c97c630ed",
+    "message": "Add form for new tasks"
+  },
+  "3.1": {
+    "sha": "f78906af3d2d15fdb1851ff28122f9e08bc4ac9f",
+    "message": "Define Tasks collection and load tasks from it"
+  },
+  "2.3": {
+    "sha": "e15faa0c628c7756e51d2470432f9aa548729739",
+    "message": "Add CSS"
+  },
+  "2.2": {
+    "sha": "eda253878e20ba2577f28fe6fd7c3ce5090aec18",
+    "message": "Replace starter JS code"
+  },
+  "2.1": {
+    "sha": "be5979a8eae5766f74314e57f41037f4977d1372",
+    "message": "Replace starter HTML code"
   },
   "1": {
-    "sha": "6d14a8cd5ec233ea6714dce2a5e92560438dcf3c",
+    "sha": "8e14e687c3fe4add10f1d93215051d27faf3dd7c",
     "message": "Run `meteor create`"
   }
 }
\ No newline at end of file
diff --git a/generated/blaze.multi.patch b/generated/blaze.multi.patch
index a91a1e9..4f6a996 100644
--- a/generated/blaze.multi.patch
+++ b/generated/blaze.multi.patch
@@ -1,20 +1,20 @@
-From 6d14a8cd5ec233ea6714dce2a5e92560438dcf3c Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@mit.edu>
-Date: Wed, 22 Oct 2014 11:10:43 -0700
-Subject: [PATCH 1/9] Step 1: Run `meteor create`
+From 8e14e687c3fe4add10f1d93215051d27faf3dd7c Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:05:51 -0700
+Subject: [PATCH 01/34] Step 1: Run `meteor create`
 
 ---
- .meteor/.finished-upgraders |  7 +++++++
+ .meteor/.finished-upgraders |  8 ++++++++
  .meteor/.gitignore          |  1 +
  .meteor/.id                 |  7 +++++++
- .meteor/packages            |  8 +++++++
+ .meteor/packages            |  9 +++++++++
  .meteor/platforms           |  2 ++
  .meteor/release             |  1 +
- .meteor/versions            | 51 +++++++++++++++++++++++++++++++++++++++++++++
+ .meteor/versions            | 48 +++++++++++++++++++++++++++++++++++++++++++++
  simple-todos.css            |  1 +
  simple-todos.html           | 14 +++++++++++++
- simple-todos.js             | 23 ++++++++++++++++++++
- 10 files changed, 115 insertions(+)
+ simple-todos.js             | 23 ++++++++++++++++++++++
+ 10 files changed, 114 insertions(+)
  create mode 100644 .meteor/.finished-upgraders
  create mode 100644 .meteor/.gitignore
  create mode 100644 .meteor/.id
@@ -28,10 +28,10 @@ Subject: [PATCH 1/9] Step 1: Run `meteor create`
 
 diff --git a/.meteor/.finished-upgraders b/.meteor/.finished-upgraders
 new file mode 100644
-index 0000000..68df3d8
+index 0000000..8a76103
 --- /dev/null
 +++ b/.meteor/.finished-upgraders
-@@ -0,0 +1,7 @@
+@@ -0,0 +1,8 @@
 +# This file contains information which helps Meteor properly upgrade your
 +# app when you run 'meteor update'. You should check it into version control
 +# with your project.
@@ -39,6 +39,7 @@ index 0000000..68df3d8
 +notices-for-0.9.0
 +notices-for-0.9.1
 +0.9.4-platform-file
++notices-for-facebook-graph-api-2
 diff --git a/.meteor/.gitignore b/.meteor/.gitignore
 new file mode 100644
 index 0000000..4083037
@@ -48,7 +49,7 @@ index 0000000..4083037
 +local
 diff --git a/.meteor/.id b/.meteor/.id
 new file mode 100644
-index 0000000..4083db2
+index 0000000..9a3be4f
 --- /dev/null
 +++ b/.meteor/.id
 @@ -0,0 +1,7 @@
@@ -58,14 +59,15 @@ index 0000000..4083db2
 +#   - ensuring you don't accidentally deploy one app on top of another
 +#   - providing package authors with aggregated statistics
 +
-+1i530y1aqmxpd1pq5mnl
++1v2pn7n1jbklfu1hg4tnm
 diff --git a/.meteor/packages b/.meteor/packages
 new file mode 100644
-index 0000000..e893668
+index 0000000..99704e0
 --- /dev/null
 +++ b/.meteor/packages
-@@ -0,0 +1,8 @@
+@@ -0,0 +1,9 @@
 +# Meteor packages used by this project, one per line.
++# Check this file (and the other files in this directory) into your repository.
 +#
 +# 'meteor add' and 'meteor remove' will edit this file for you,
 +# but you can also edit it by hand.
@@ -83,68 +85,65 @@ index 0000000..efeba1b
 +browser
 diff --git a/.meteor/release b/.meteor/release
 new file mode 100644
-index 0000000..7057f80
+index 0000000..dab6b55
 --- /dev/null
 +++ b/.meteor/release
 @@ -0,0 +1 @@
-+METEOR@0.9.4
++METEOR@1.1.0.2
 diff --git a/.meteor/versions b/.meteor/versions
 new file mode 100644
-index 0000000..8f169db
+index 0000000..410e1d9
 --- /dev/null
 +++ b/.meteor/versions
-@@ -0,0 +1,51 @@
-+application-configuration@1.0.3
-+autopublish@1.0.1
-+autoupdate@1.1.2
-+base64@1.0.1
-+binary-heap@1.0.1
-+blaze-tools@1.0.1
-+blaze@2.0.2
-+boilerplate-generator@1.0.1
-+callback-hook@1.0.1
-+check@1.0.2
-+ctl-helper@1.0.4
-+ctl@1.0.2
-+ddp@1.0.10
-+deps@1.0.5
-+ejson@1.0.4
-+fastclick@1.0.1
-+follower-livedata@1.0.2
-+geojson-utils@1.0.1
-+html-tools@1.0.2
-+htmljs@1.0.2
-+http@1.0.7
-+id-map@1.0.1
-+insecure@1.0.1
-+jquery@1.0.1
-+json@1.0.1
-+livedata@1.0.11
-+logging@1.0.4
-+meteor-platform@1.1.2
-+meteor@1.1.2
-+minifiers@1.1.1
-+minimongo@1.0.4
-+mobile-status-bar@1.0.1
-+mongo@1.0.7
-+observe-sequence@1.0.3
-+ordered-dict@1.0.1
-+random@1.0.1
-+reactive-dict@1.0.4
-+reactive-var@1.0.3
-+reload@1.1.1
-+retry@1.0.1
-+routepolicy@1.0.2
-+session@1.0.3
-+spacebars-compiler@1.0.3
-+spacebars@1.0.3
-+templating@1.0.8
-+tracker@1.0.3
-+ui@1.0.4
-+underscore@1.0.1
-+url@1.0.1
-+webapp-hashing@1.0.1
-+webapp@1.1.3
+@@ -0,0 +1,48 @@
++autopublish@1.0.3
++autoupdate@1.2.1
++base64@1.0.3
++binary-heap@1.0.3
++blaze@2.1.2
++blaze-tools@1.0.3
++boilerplate-generator@1.0.3
++callback-hook@1.0.3
++check@1.0.5
++ddp@1.1.0
++deps@1.0.7
++ejson@1.0.6
++fastclick@1.0.3
++geojson-utils@1.0.3
++html-tools@1.0.4
++htmljs@1.0.4
++http@1.1.0
++id-map@1.0.3
++insecure@1.0.3
++jquery@1.11.3_2
++json@1.0.3
++launch-screen@1.0.2
++livedata@1.0.13
++logging@1.0.7
++meteor@1.1.6
++meteor-platform@1.2.2
++minifiers@1.1.5
++minimongo@1.0.8
++mobile-status-bar@1.0.3
++mongo@1.1.0
++observe-sequence@1.0.6
++ordered-dict@1.0.3
++random@1.0.3
++reactive-dict@1.1.0
++reactive-var@1.0.5
++reload@1.1.3
++retry@1.0.3
++routepolicy@1.0.5
++session@1.1.0
++spacebars@1.0.6
++spacebars-compiler@1.0.6
++templating@1.1.1
++tracker@1.0.7
++ui@1.0.6
++underscore@1.0.3
++url@1.0.4
++webapp@1.2.0
++webapp-hashing@1.0.3
 diff --git a/simple-todos.css b/simple-todos.css
 new file mode 100644
 index 0000000..b6b4052
@@ -174,24 +173,24 @@ index 0000000..b08c7c3
 +</template>
 diff --git a/simple-todos.js b/simple-todos.js
 new file mode 100644
-index 0000000..f8bee6b
+index 0000000..4f8c65d
 --- /dev/null
 +++ b/simple-todos.js
 @@ -0,0 +1,23 @@
 +if (Meteor.isClient) {
 +  // counter starts at 0
-+  Session.setDefault("counter", 0);
++  Session.setDefault('counter', 0);
 +
 +  Template.hello.helpers({
 +    counter: function () {
-+      return Session.get("counter");
++      return Session.get('counter');
 +    }
 +  });
 +
 +  Template.hello.events({
 +    'click button': function () {
 +      // increment the counter when button is clicked
-+      Session.set("counter", Session.get("counter") + 1);
++      Session.set('counter', Session.get('counter') + 1);
 +    }
 +  });
 +}
@@ -205,20 +204,110 @@ index 0000000..f8bee6b
 2.2.1
 
 
-From e998be2ddf735d361f560b8d8bf9631b1151fee7 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@mit.edu>
-Date: Wed, 22 Oct 2014 11:11:55 -0700
-Subject: [PATCH 2/9] Step 2: Add templates backed by a static array and all of
- the CSS
+From be5979a8eae5766f74314e57f41037f4977d1372 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:07:22 -0700
+Subject: [PATCH 02/34] Step 2.1: Replace starter HTML code
+
+---
+ simple-todos.html | 19 +++++++++++++------
+ 1 file changed, 13 insertions(+), 6 deletions(-)
+
+diff --git a/simple-todos.html b/simple-todos.html
+index b08c7c3..95624e7 100644
+--- a/simple-todos.html
++++ b/simple-todos.html
+@@ -1,14 +1,21 @@
+ <head>
+-  <title>simple-todos</title>
++  <title>Todo List</title>
+ </head>
+ 
+ <body>
+-  <h1>Welcome to Meteor!</h1>
++  <div class="container">
++    <header>
++      <h1>Todo List</h1>
++    </header>
+ 
+-  {{> hello}}
++    <ul>
++      {{#each tasks}}
++        {{> task}}
++      {{/each}}
++    </ul>
++  </div>
+ </body>
+ 
+-<template name="hello">
+-  <button>Click Me</button>
+-  <p>You've pressed the button {{counter}} times.</p>
++<template name="task">
++  <li>{{text}}</li>
+ </template>
+-- 
+2.2.1
+
+
+From eda253878e20ba2577f28fe6fd7c3ce5090aec18 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:07:50 -0700
+Subject: [PATCH 03/34] Step 2.2: Replace starter JS code
+
+---
+ simple-todos.js | 27 +++++++--------------------
+ 1 file changed, 7 insertions(+), 20 deletions(-)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index 4f8c65d..871b655 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -1,23 +1,10 @@
+ if (Meteor.isClient) {
+-  // counter starts at 0
+-  Session.setDefault('counter', 0);
+-
+-  Template.hello.helpers({
+-    counter: function () {
+-      return Session.get('counter');
+-    }
+-  });
+-
+-  Template.hello.events({
+-    'click button': function () {
+-      // increment the counter when button is clicked
+-      Session.set('counter', Session.get('counter') + 1);
+-    }
+-  });
+-}
+-
+-if (Meteor.isServer) {
+-  Meteor.startup(function () {
+-    // code to run on server at startup
++  // This code only runs on the client
++  Template.body.helpers({
++    tasks: [
++      { text: "This is task 1" },
++      { text: "This is task 2" },
++      { text: "This is task 3" }
++    ]
+   });
+ }
+-- 
+2.2.1
+
+
+From e15faa0c628c7756e51d2470432f9aa548729739 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:08:17 -0700
+Subject: [PATCH 04/34] Step 2.3: Add CSS
 
 ---
- simple-todos.css  | 125 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
- simple-todos.html |  19 ++++++---
- simple-todos.js   |  27 +++---------
- 3 files changed, 145 insertions(+), 26 deletions(-)
+ simple-todos.css | 125 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 125 insertions(+)
 
 diff --git a/simple-todos.css b/simple-todos.css
-index b6b4052..cec3ae6 100644
+index b6b4052..ed5e77e 100644
 --- a/simple-todos.css
 +++ b/simple-todos.css
 @@ -1 +1,126 @@
@@ -348,82 +437,15 @@ index b6b4052..cec3ae6 100644
 +    padding-bottom: 5px;
 +  }
 +}
-\ No newline at end of file
-diff --git a/simple-todos.html b/simple-todos.html
-index b08c7c3..95624e7 100644
---- a/simple-todos.html
-+++ b/simple-todos.html
-@@ -1,14 +1,21 @@
- <head>
--  <title>simple-todos</title>
-+  <title>Todo List</title>
- </head>
- 
- <body>
--  <h1>Welcome to Meteor!</h1>
-+  <div class="container">
-+    <header>
-+      <h1>Todo List</h1>
-+    </header>
- 
--  {{> hello}}
-+    <ul>
-+      {{#each tasks}}
-+        {{> task}}
-+      {{/each}}
-+    </ul>
-+  </div>
- </body>
- 
--<template name="hello">
--  <button>Click Me</button>
--  <p>You've pressed the button {{counter}} times.</p>
-+<template name="task">
-+  <li>{{text}}</li>
- </template>
-diff --git a/simple-todos.js b/simple-todos.js
-index f8bee6b..871b655 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -1,23 +1,10 @@
- if (Meteor.isClient) {
--  // counter starts at 0
--  Session.setDefault("counter", 0);
--
--  Template.hello.helpers({
--    counter: function () {
--      return Session.get("counter");
--    }
--  });
--
--  Template.hello.events({
--    'click button': function () {
--      // increment the counter when button is clicked
--      Session.set("counter", Session.get("counter") + 1);
--    }
--  });
--}
--
--if (Meteor.isServer) {
--  Meteor.startup(function () {
--    // code to run on server at startup
-+  // This code only runs on the client
-+  Template.body.helpers({
-+    tasks: [
-+      { text: "This is task 1" },
-+      { text: "This is task 2" },
-+      { text: "This is task 3" }
-+    ]
-   });
- }
 -- 
 2.2.1
 
 
-From 519fa970161a46755765b3884c32f435252bc862 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@mit.edu>
-Date: Wed, 22 Oct 2014 11:12:43 -0700
-Subject: [PATCH 3/9] Step 3: Replace the static array with a Collection
+From f78906af3d2d15fdb1851ff28122f9e08bc4ac9f Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:08:48 -0700
+Subject: [PATCH 05/34] Step 3.1: Define Tasks collection and load tasks from
+ it
 
 ---
  simple-todos.js | 10 +++++-----
@@ -453,16 +475,14 @@ index 871b655..69fdf2c 100644
 2.2.1
 
 
-From 40eac55b0a6678d1560a8ff804871b0fae115a22 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@mit.edu>
-Date: Wed, 22 Oct 2014 11:15:50 -0700
-Subject: [PATCH 4/9] Step 4: A form to add tasks, sort to make newest tasks at
- the top
+From 8434ab7042eb750c50ab58efd7231f1c97c630ed Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:10:21 -0700
+Subject: [PATCH 06/34] Step 4.1: Add form for new tasks
 
 ---
- simple-todos.html |  4 ++++
- simple-todos.js   | 21 ++++++++++++++++++++-
- 2 files changed, 24 insertions(+), 1 deletion(-)
+ simple-todos.html | 4 ++++
+ 1 file changed, 4 insertions(+)
 
 diff --git a/simple-todos.html b/simple-todos.html
 index 95624e7..e31aef1 100644
@@ -479,25 +499,37 @@ index 95624e7..e31aef1 100644
      </header>
  
      <ul>
+-- 
+2.2.1
+
+
+From 7a1ace1482bbdd5ce38aa5db28ecb20ce0e12863 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:11:45 -0700
+Subject: [PATCH 07/34] Step 4.2: Add event handler for form submit
+
+---
+ simple-todos.js | 19 +++++++++++++++++++
+ 1 file changed, 19 insertions(+)
+
 diff --git a/simple-todos.js b/simple-todos.js
-index 69fdf2c..ff4cc3a 100644
+index 69fdf2c..8bfe857 100644
 --- a/simple-todos.js
 +++ b/simple-todos.js
-@@ -4,7 +4,26 @@ if (Meteor.isClient) {
-   // This code only runs on the client
-   Template.body.helpers({
-     tasks: function () {
--      return Tasks.find({});
-+      // Show newest tasks first
-+      return Tasks.find({}, {sort: {createdAt: -1}});
-+    }
-+  });
+@@ -7,4 +7,23 @@ if (Meteor.isClient) {
+       return Tasks.find({});
+     }
+   });
 +
 +  Template.body.events({
 +    "submit .new-task": function (event) {
-+      // This function is called when the new task form is submitted
++      // Prevent default browser form submit
++      event.preventDefault();
++
++      // Get value from form element
 +      var text = event.target.text.value;
 +
++      // Insert a task into the collection
 +      Tasks.insert({
 +        text: text,
 +        createdAt: new Date() // current time
@@ -505,25 +537,48 @@ index 69fdf2c..ff4cc3a 100644
 +
 +      // Clear form
 +      event.target.text.value = "";
-+
-+      // Prevent default form submit
-+      return false;
++    }
++  });
+ }
+-- 
+2.2.1
+
+
+From a06c2235fa31bb876edc2f62ba62310dee40ab6c Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:12:14 -0700
+Subject: [PATCH 08/34] Step 4.3: Show newest tasks at the top
+
+---
+ simple-todos.js | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index 8bfe857..545a1db 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -4,7 +4,8 @@ if (Meteor.isClient) {
+   // This code only runs on the client
+   Template.body.helpers({
+     tasks: function () {
+-      return Tasks.find({});
++      // Show newest tasks at the top
++      return Tasks.find({}, {sort: {createdAt: -1}});
      }
    });
- }
+ 
 -- 
 2.2.1
 
 
-From ea5beb34103e48dbd58848de8455479f4061393e Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@mit.edu>
-Date: Wed, 22 Oct 2014 11:17:14 -0700
-Subject: [PATCH 5/9] Step 5: Make it possible to check off and delete tasks
+From 5cdfa73dcd1a1973bf31e76ffb0e6af96d9a2d8a Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:12:57 -0700
+Subject: [PATCH 09/34] Step 5.1: Add buttons to Task component
 
 ---
- simple-todos.html |  8 +++++++-
- simple-todos.js   | 10 ++++++++++
- 2 files changed, 17 insertions(+), 1 deletion(-)
+ simple-todos.html | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
 
 diff --git a/simple-todos.html b/simple-todos.html
 index e31aef1..94341cc 100644
@@ -542,19 +597,34 @@ index e31aef1..94341cc 100644
 +    <span class="text">{{text}}</span>
 +  </li>
  </template>
+-- 
+2.2.1
+
+
+From 383896358ebfb53c237a8611fc11a86aa71fbbf6 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:13:40 -0700
+Subject: [PATCH 10/34] Step 5.2: Add event handlers for Task buttons
+
+---
+ simple-todos.js | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
+
 diff --git a/simple-todos.js b/simple-todos.js
-index ff4cc3a..f71e52a 100644
+index 545a1db..36bdc0c 100644
 --- a/simple-todos.js
 +++ b/simple-todos.js
-@@ -26,4 +26,14 @@ if (Meteor.isClient) {
-       return false;
+@@ -27,4 +27,16 @@ if (Meteor.isClient) {
+       event.target.text.value = "";
      }
    });
 +
 +  Template.task.events({
 +    "click .toggle-checked": function () {
 +      // Set the checked property to the opposite of its current value
-+      Tasks.update(this._id, {$set: {checked: ! this.checked}});
++      Tasks.update(this._id, {
++        $set: {checked: ! this.checked}
++      });
 +    },
 +    "click .delete": function () {
 +      Tasks.remove(this._id);
@@ -565,44 +635,80 @@ index ff4cc3a..f71e52a 100644
 2.2.1
 
 
-From a89c298a25d532bd771ae6e6c35d8f579f837670 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@mit.edu>
-Date: Wed, 22 Oct 2014 11:19:27 -0700
-Subject: [PATCH 6/9] Step 8: Add option to hide completed tasks, show
- incomplete task count
+From e62e4c1f8ca6f9808b6f3a78c39c4874dffdcbb4 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:24:18 -0700
+Subject: [PATCH 11/34] Step 8.1: Add hide-completed checkbox to HTML
 
 ---
- simple-todos.html |  7 ++++++-
- simple-todos.js   | 18 ++++++++++++++++--
- 2 files changed, 22 insertions(+), 3 deletions(-)
+ simple-todos.html | 5 +++++
+ 1 file changed, 5 insertions(+)
 
 diff --git a/simple-todos.html b/simple-todos.html
-index 94341cc..7d7ca13 100644
+index 94341cc..7d837a9 100644
 --- a/simple-todos.html
 +++ b/simple-todos.html
-@@ -5,7 +5,12 @@
- <body>
-   <div class="container">
+@@ -7,6 +7,11 @@
      <header>
--      <h1>Todo List</h1>
-+      <h1>Todo List ({{incompleteCount}})</h1>
-+      
+       <h1>Todo List</h1>
+ 
 +      <label class="hide-completed">
 +        <input type="checkbox" checked="{{hideCompleted}}" />
 +        Hide Completed Tasks
 +      </label>
- 
++
        <form class="new-task">
          <input type="text" name="text" placeholder="Type to add new tasks" />
+       </form>
+-- 
+2.2.1
+
+
+From 8a5390d3f596e1c2cefe56bfd417838ca834978c Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:24:58 -0700
+Subject: [PATCH 12/34] Step 8.2: Add event handler for checkbox
+
+---
+ simple-todos.js | 3 +++
+ 1 file changed, 3 insertions(+)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index 36bdc0c..19f7ffd 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -25,6 +25,9 @@ if (Meteor.isClient) {
+ 
+       // Clear form
+       event.target.text.value = "";
++    },
++    "change .hide-completed input": function (event) {
++      Session.set("hideCompleted", event.target.checked);
+     }
+   });
+ 
+-- 
+2.2.1
+
+
+From 3352071c6d1c414f94ee21038f28c45651d6216c Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:25:38 -0700
+Subject: [PATCH 13/34] Step 8.3: Add helpers to body template
+
+---
+ simple-todos.js | 12 ++++++++++--
+ 1 file changed, 10 insertions(+), 2 deletions(-)
+
 diff --git a/simple-todos.js b/simple-todos.js
-index f71e52a..08e0426 100644
+index 19f7ffd..546fbe2 100644
 --- a/simple-todos.js
 +++ b/simple-todos.js
-@@ -4,8 +4,19 @@ if (Meteor.isClient) {
+@@ -4,8 +4,16 @@ if (Meteor.isClient) {
    // This code only runs on the client
    Template.body.helpers({
      tasks: function () {
--      // Show newest tasks first
+-      // Show newest tasks at the top
 -      return Tasks.find({}, {sort: {createdAt: -1}});
 +      if (Session.get("hideCompleted")) {
 +        // If hide completed is checked, filter tasks
@@ -614,19 +720,33 @@ index f71e52a..08e0426 100644
 +    },
 +    hideCompleted: function () {
 +      return Session.get("hideCompleted");
-+    },
-+    incompleteCount: function () {
-+      return Tasks.find({checked: {$ne: true}}).count();
      }
    });
  
-@@ -24,6 +35,9 @@ if (Meteor.isClient) {
- 
-       // Prevent default form submit
-       return false;
+-- 
+2.2.1
+
+
+From d7e04b692a361153918f4a88548dfdc1c0220367 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:26:17 -0700
+Subject: [PATCH 14/34] Step 8.4: Add incompleteCount helper to body
+
+---
+ simple-todos.js | 3 +++
+ 1 file changed, 3 insertions(+)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index 546fbe2..81bc5a9 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -14,6 +14,9 @@ if (Meteor.isClient) {
+     },
+     hideCompleted: function () {
+       return Session.get("hideCompleted");
 +    },
-+    "change .hide-completed input": function (event) {
-+      Session.set("hideCompleted", event.target.checked);
++    incompleteCount: function () {
++      return Tasks.find({checked: {$ne: true}}).count();
      }
    });
  
@@ -634,101 +754,207 @@ index f71e52a..08e0426 100644
 2.2.1
 
 
-From 556826bbf72a3025e5afe00d79de98af4fff86c2 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@mit.edu>
-Date: Wed, 22 Oct 2014 11:21:21 -0700
-Subject: [PATCH 7/9] Step 9: Add users and login; display which user created a
- task
+From 48c14895d510dd095da3e114a40152d9291cbb83 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:26:37 -0700
+Subject: [PATCH 15/34] Step 8.5: Display incompleteCount
 
 ---
- .meteor/packages  |  3 +++
- .meteor/versions  | 11 +++++++++++
- simple-todos.html | 14 +++++++++-----
- simple-todos.js   |  8 +++++++-
- 4 files changed, 30 insertions(+), 6 deletions(-)
+ simple-todos.html | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-diff --git a/.meteor/packages b/.meteor/packages
-index e893668..8866d7d 100644
---- a/.meteor/packages
-+++ b/.meteor/packages
-@@ -6,3 +6,6 @@
- meteor-platform
- autopublish
- insecure
-+accounts-ui
-+accounts-password
-+
-diff --git a/.meteor/versions b/.meteor/versions
-index 8f169db..1fb53da 100644
---- a/.meteor/versions
-+++ b/.meteor/versions
-@@ -1,3 +1,7 @@
-+accounts-base@1.1.2
-+accounts-password@1.0.3
-+accounts-ui-unstyled@1.1.3
-+accounts-ui@1.1.2
- application-configuration@1.0.3
- autopublish@1.0.1
- autoupdate@1.1.2
-@@ -13,6 +17,7 @@ ctl@1.0.2
- ddp@1.0.10
- deps@1.0.5
- ejson@1.0.4
-+email@1.0.4
- fastclick@1.0.1
- follower-livedata@1.0.2
- geojson-utils@1.0.1
-@@ -23,7 +28,9 @@ id-map@1.0.1
- insecure@1.0.1
- jquery@1.0.1
- json@1.0.1
-+less@1.0.10
- livedata@1.0.11
-+localstorage@1.0.1
- logging@1.0.4
- meteor-platform@1.1.2
- meteor@1.1.2
-@@ -31,6 +38,7 @@ minifiers@1.1.1
- minimongo@1.0.4
- mobile-status-bar@1.0.1
- mongo@1.0.7
-+npm-bcrypt@0.7.7
- observe-sequence@1.0.3
- ordered-dict@1.0.1
- random@1.0.1
-@@ -39,9 +47,12 @@ reactive-var@1.0.3
- reload@1.1.1
- retry@1.0.1
- routepolicy@1.0.2
-+service-configuration@1.0.2
- session@1.0.3
-+sha@1.0.1
- spacebars-compiler@1.0.3
- spacebars@1.0.3
-+srp@1.0.1
- templating@1.0.8
- tracker@1.0.3
- ui@1.0.4
 diff --git a/simple-todos.html b/simple-todos.html
-index 7d7ca13..55c1dc9 100644
+index 7d837a9..cb9b6f1 100644
 --- a/simple-todos.html
 +++ b/simple-todos.html
-@@ -6,15 +6,19 @@
+@@ -5,7 +5,7 @@
+ <body>
    <div class="container">
      <header>
-       <h1>Todo List ({{incompleteCount}})</h1>
--      
-+
+-      <h1>Todo List</h1>
++      <h1>Todo List ({{incompleteCount}})</h1>
+ 
        <label class="hide-completed">
          <input type="checkbox" checked="{{hideCompleted}}" />
+-- 
+2.2.1
+
+
+From 36e2490f9302894bb63ce241343da41519b03600 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:27:03 -0700
+Subject: [PATCH 16/34] Step 9.1: Add accounts-ui and accounts-password
+
+---
+ .meteor/packages |  2 ++
+ .meteor/versions | 11 +++++++++++
+ 2 files changed, 13 insertions(+)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index 99704e0..21b8d34 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -7,3 +7,5 @@
+ meteor-platform
+ autopublish
+ insecure
++accounts-ui
++accounts-password
+diff --git a/.meteor/versions b/.meteor/versions
+index 410e1d9..26385bb 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -1,3 +1,7 @@
++accounts-base@1.2.0
++accounts-password@1.1.1
++accounts-ui@1.1.5
++accounts-ui-unstyled@1.1.7
+ autopublish@1.0.3
+ autoupdate@1.2.1
+ base64@1.0.3
+@@ -10,6 +14,7 @@ check@1.0.5
+ ddp@1.1.0
+ deps@1.0.7
+ ejson@1.0.6
++email@1.0.6
+ fastclick@1.0.3
+ geojson-utils@1.0.3
+ html-tools@1.0.4
+@@ -20,7 +25,9 @@ insecure@1.0.3
+ jquery@1.11.3_2
+ json@1.0.3
+ launch-screen@1.0.2
++less@1.0.14
+ livedata@1.0.13
++localstorage@1.0.3
+ logging@1.0.7
+ meteor@1.1.6
+ meteor-platform@1.2.2
+@@ -28,6 +35,7 @@ minifiers@1.1.5
+ minimongo@1.0.8
+ mobile-status-bar@1.0.3
+ mongo@1.1.0
++npm-bcrypt@0.7.8_2
+ observe-sequence@1.0.6
+ ordered-dict@1.0.3
+ random@1.0.3
+@@ -36,9 +44,12 @@ reactive-var@1.0.5
+ reload@1.1.3
+ retry@1.0.3
+ routepolicy@1.0.5
++service-configuration@1.0.4
+ session@1.1.0
++sha@1.0.3
+ spacebars@1.0.6
+ spacebars-compiler@1.0.6
++srp@1.0.3
+ templating@1.1.1
+ tracker@1.0.7
+ ui@1.0.6
+-- 
+2.2.1
+
+
+From 788b22e96afdbb0fb604834f4d08c61bb0178628 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:27:23 -0700
+Subject: [PATCH 17/34] Step 9.2: Include loginButtons
+
+---
+ simple-todos.html | 2 ++
+ 1 file changed, 2 insertions(+)
+
+diff --git a/simple-todos.html b/simple-todos.html
+index cb9b6f1..55f385c 100644
+--- a/simple-todos.html
++++ b/simple-todos.html
+@@ -12,6 +12,8 @@
          Hide Completed Tasks
        </label>
  
++      {{> loginButtons}}
++
+       <form class="new-task">
+         <input type="text" name="text" placeholder="Type to add new tasks" />
+       </form>
+-- 
+2.2.1
+
+
+From ddf3246896747a89f96aa64788f3daeca2e9a5c6 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:27:46 -0700
+Subject: [PATCH 18/34] Step 9.3: Configure accounts-ui
+
+---
+ simple-todos.js | 4 ++++
+ 1 file changed, 4 insertions(+)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index 81bc5a9..0d524f7 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -53,4 +53,8 @@ if (Meteor.isClient) {
+       Tasks.remove(this._id);
+     }
+   });
++
++  Accounts.ui.config({
++    passwordSignupFields: "USERNAME_ONLY"
++  });
+ }
+-- 
+2.2.1
+
+
+From cd80f2966275060c64e4418c44cf13669386ce4d Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:28:24 -0700
+Subject: [PATCH 19/34] Step 9.4: Update insert to include user data
+
+---
+ simple-todos.js | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index 0d524f7..cf0bd1e 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -31,7 +31,9 @@ if (Meteor.isClient) {
+       // Insert a task into the collection
+       Tasks.insert({
+         text: text,
+-        createdAt: new Date() // current time
++        createdAt: new Date(),            // current time
++        owner: Meteor.userId(),           // _id of logged in user
++        username: Meteor.user().username  // username of logged in user
+       });
+ 
+       // Clear form
+-- 
+2.2.1
+
+
+From 29cff394ae08784db32c90affdc3bf8686b21d83 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:28:47 -0700
+Subject: [PATCH 20/34] Step 9.5: Only show add task form if logged in
+
+---
+ simple-todos.html | 8 +++++---
+ 1 file changed, 5 insertions(+), 3 deletions(-)
+
+diff --git a/simple-todos.html b/simple-todos.html
+index 55f385c..9e4b61a 100644
+--- a/simple-todos.html
++++ b/simple-todos.html
+@@ -14,9 +14,11 @@
+ 
+       {{> loginButtons}}
+ 
 -      <form class="new-task">
 -        <input type="text" name="text" placeholder="Type to add new tasks" />
 -      </form>
-+      {{> loginButtons}}
-+
 +      {{#if currentUser}}
 +        <form class="new-task">
 +          <input type="text" name="text" placeholder="Type to add new tasks" />
@@ -737,7 +963,24 @@ index 7d7ca13..55c1dc9 100644
      </header>
  
      <ul>
-@@ -31,6 +35,6 @@
+-- 
+2.2.1
+
+
+From d7ad84ff5ae149e78621c85a1d2fd32959439f29 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:29:11 -0700
+Subject: [PATCH 21/34] Step 9.6: Display username next to task
+
+---
+ simple-todos.html | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/simple-todos.html b/simple-todos.html
+index 9e4b61a..55c1dc9 100644
+--- a/simple-todos.html
++++ b/simple-todos.html
+@@ -35,6 +35,6 @@
  
      <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
  
@@ -745,102 +988,61 @@ index 7d7ca13..55c1dc9 100644
 +    <span class="text"><strong>{{username}}</strong> - {{text}}</span>
    </li>
  </template>
-diff --git a/simple-todos.js b/simple-todos.js
-index 08e0426..a6e7d2a 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -27,7 +27,9 @@ if (Meteor.isClient) {
- 
-       Tasks.insert({
-         text: text,
--        createdAt: new Date() // current time
-+        createdAt: new Date(),            // current time
-+        owner: Meteor.userId(),           // _id of logged in user
-+        username: Meteor.user().username  // username of logged in user
-       });
- 
-       // Clear form
-@@ -50,4 +52,8 @@ if (Meteor.isClient) {
-       Tasks.remove(this._id);
-     }
-   });
-+
-+  Accounts.ui.config({
-+    passwordSignupFields: "USERNAME_ONLY"
-+  });
- }
 -- 
 2.2.1
 
 
-From 9a1a392a6e3ed81434c68114dc5f31e418bec308 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@mit.edu>
-Date: Wed, 22 Oct 2014 11:22:53 -0700
-Subject: [PATCH 8/9] Step 10: Move logic into Meteor.methods, remove insecure
- package
+From 59808d546321d201594a14dfa6a84c4a28eab53a Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:29:52 -0700
+Subject: [PATCH 22/34] Step 10.1: Remove insecure package
 
 ---
- .meteor/packages |  2 --
- .meteor/versions |  1 -
- simple-todos.js  | 33 +++++++++++++++++++++++++--------
- 3 files changed, 25 insertions(+), 11 deletions(-)
+ .meteor/packages | 1 -
+ .meteor/versions | 1 -
+ 2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 8866d7d..a87fb56 100644
+index 21b8d34..bb3b694 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -5,7 +5,5 @@
+@@ -6,6 +6,5 @@
  
  meteor-platform
  autopublish
 -insecure
  accounts-ui
  accounts-password
--
 diff --git a/.meteor/versions b/.meteor/versions
-index 1fb53da..05cbd87 100644
+index 26385bb..6a03dd0 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -25,7 +25,6 @@ html-tools@1.0.2
- htmljs@1.0.2
- http@1.0.7
- id-map@1.0.1
--insecure@1.0.1
- jquery@1.0.1
- json@1.0.1
- less@1.0.10
+@@ -21,7 +21,6 @@ html-tools@1.0.4
+ htmljs@1.0.4
+ http@1.1.0
+ id-map@1.0.3
+-insecure@1.0.3
+ jquery@1.11.3_2
+ json@1.0.3
+ launch-screen@1.0.2
+-- 
+2.2.1
+
+
+From c209b47dcce29206ee5235e09817558440905a6e Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:30:20 -0700
+Subject: [PATCH 23/34] Step 10.2: Define some methods
+
+---
+ simple-todos.js | 22 ++++++++++++++++++++++
+ 1 file changed, 22 insertions(+)
+
 diff --git a/simple-todos.js b/simple-todos.js
-index a6e7d2a..83daf06 100644
+index cf0bd1e..40edc1a 100644
 --- a/simple-todos.js
 +++ b/simple-todos.js
-@@ -25,12 +25,7 @@ if (Meteor.isClient) {
-       // This function is called when the new task form is submitted
-       var text = event.target.text.value;
- 
--      Tasks.insert({
--        text: text,
--        createdAt: new Date(),            // current time
--        owner: Meteor.userId(),           // _id of logged in user
--        username: Meteor.user().username  // username of logged in user
--      });
-+      Meteor.call("addTask", text);
- 
-       // Clear form
-       event.target.text.value = "";
-@@ -46,10 +41,10 @@ if (Meteor.isClient) {
-   Template.task.events({
-     "click .toggle-checked": function () {
-       // Set the checked property to the opposite of its current value
--      Tasks.update(this._id, {$set: {checked: ! this.checked}});
-+      Meteor.call("setChecked", this._id, ! this.checked);
-     },
-     "click .delete": function () {
--      Tasks.remove(this._id);
-+      Meteor.call("deleteTask", this._id);
-     }
-   });
- 
-@@ -57,3 +52,25 @@ if (Meteor.isClient) {
+@@ -60,3 +60,25 @@ if (Meteor.isClient) {
      passwordSignupFields: "USERNAME_ONLY"
    });
  }
@@ -870,33 +1072,84 @@ index a6e7d2a..83daf06 100644
 2.2.1
 
 
-From 10bdbc7434b913c85c156ae6e27fdbea4b2e27bb Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@mit.edu>
-Date: Wed, 22 Oct 2014 11:25:59 -0700
-Subject: [PATCH 9/9] Step 11: Add private task feature, remove the autopublish
- package
+From 7f422feef91339c9ffe9afd0a6069a14297f45b4 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:31:24 -0700
+Subject: [PATCH 24/34] Step 10.3: Replace insert with addTask method
 
 ---
- .meteor/cordova-plugins |  1 +
- .meteor/packages        |  1 -
- .meteor/versions        |  1 -
- simple-todos.html       | 12 +++++++++++-
- simple-todos.js         | 45 +++++++++++++++++++++++++++++++++++++++++++++
- 5 files changed, 57 insertions(+), 3 deletions(-)
- create mode 100644 .meteor/cordova-plugins
+ simple-todos.js | 7 +------
+ 1 file changed, 1 insertion(+), 6 deletions(-)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index 40edc1a..3f35197 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -29,12 +29,7 @@ if (Meteor.isClient) {
+       var text = event.target.text.value;
+ 
+       // Insert a task into the collection
+-      Tasks.insert({
+-        text: text,
+-        createdAt: new Date(),            // current time
+-        owner: Meteor.userId(),           // _id of logged in user
+-        username: Meteor.user().username  // username of logged in user
+-      });
++      Meteor.call("addTask", text);
+ 
+       // Clear form
+       event.target.text.value = "";
+-- 
+2.2.1
+
+
+From 40f20dec61f94269f434f8e6600f52e48dab9c59 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:31:46 -0700
+Subject: [PATCH 25/34] Step 10.4: Replace update and remove with methods
+
+---
+ simple-todos.js | 6 ++----
+ 1 file changed, 2 insertions(+), 4 deletions(-)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index 3f35197..d477b50 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -42,12 +42,10 @@ if (Meteor.isClient) {
+   Template.task.events({
+     "click .toggle-checked": function () {
+       // Set the checked property to the opposite of its current value
+-      Tasks.update(this._id, {
+-        $set: {checked: ! this.checked}
+-      });
++      Meteor.call("setChecked", this._id, ! this.checked);
+     },
+     "click .delete": function () {
+-      Tasks.remove(this._id);
++      Meteor.call("deleteTask", this._id);
+     }
+   });
+ 
+-- 
+2.2.1
+
+
+From 6d476642901e702bac6ead65d5522dbe85e7852c Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:32:19 -0700
+Subject: [PATCH 26/34] Step 11.1: Remove autopublish
+
+---
+ .meteor/packages | 1 -
+ .meteor/versions | 1 -
+ 2 files changed, 2 deletions(-)
 
-diff --git a/.meteor/cordova-plugins b/.meteor/cordova-plugins
-new file mode 100644
-index 0000000..8b13789
---- /dev/null
-+++ b/.meteor/cordova-plugins
-@@ -0,0 +1 @@
-+
 diff --git a/.meteor/packages b/.meteor/packages
-index a87fb56..e293aea 100644
+index bb3b694..aaee953 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -4,6 +4,5 @@
+@@ -5,6 +5,5 @@
  # but you can also edit it by hand.
  
  meteor-platform
@@ -904,35 +1157,76 @@ index a87fb56..e293aea 100644
  accounts-ui
  accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index 05cbd87..2cf703f 100644
+index 6a03dd0..6766561 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -3,7 +3,6 @@ accounts-password@1.0.3
- accounts-ui-unstyled@1.1.3
- accounts-ui@1.1.2
- application-configuration@1.0.3
--autopublish@1.0.1
- autoupdate@1.1.2
- base64@1.0.1
- binary-heap@1.0.1
+@@ -2,7 +2,6 @@ accounts-base@1.2.0
+ accounts-password@1.1.1
+ accounts-ui@1.1.5
+ accounts-ui-unstyled@1.1.7
+-autopublish@1.0.3
+ autoupdate@1.2.1
+ base64@1.0.3
+ binary-heap@1.0.3
+-- 
+2.2.1
+
+
+From b292ba8028b19999a63e84d48fb2ca15d1e30110 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:33:17 -0700
+Subject: [PATCH 27/34] Step 11.2: Add publish and subscribe
+
+---
+ simple-todos.js | 9 +++++++++
+ 1 file changed, 9 insertions(+)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index d477b50..31eda5c 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -1,7 +1,16 @@
+ Tasks = new Mongo.Collection("tasks");
+ 
++if (Meteor.isServer) {
++  // This code only runs on the server
++  Meteor.publish("tasks", function () {
++    return Tasks.find();
++  });
++}
++
+ if (Meteor.isClient) {
+   // This code only runs on the client
++  Meteor.subscribe("tasks");
++
+   Template.body.helpers({
+     tasks: function () {
+       if (Session.get("hideCompleted")) {
+-- 
+2.2.1
+
+
+From 2c186456f68d31fbc51ef87cf10d8ff5a60f7cfe Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:33:43 -0700
+Subject: [PATCH 28/34] Step 11.3: Add private button
+
+---
+ simple-todos.html | 10 ++++++++++
+ 1 file changed, 10 insertions(+)
+
 diff --git a/simple-todos.html b/simple-todos.html
-index 55c1dc9..0de883e 100644
+index 55c1dc9..bd18923 100644
 --- a/simple-todos.html
 +++ b/simple-todos.html
-@@ -30,11 +30,21 @@
- </body>
- 
- <template name="task">
--  <li class="{{#if checked}}checked{{/if}}">
-+  <li class="{{#if checked}}checked{{/if}} {{#if private}}private{{/if}}">
-     <button class="delete">&times;</button>
+@@ -35,6 +35,16 @@
  
      <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
  
 +    {{#if isOwner}}
 +      <button class="toggle-private">
 +        {{#if private}}
-+          Private    
++          Private
 +        {{else}}
 +          Public
 +        {{/if}}
@@ -942,36 +1236,175 @@ index 55c1dc9..0de883e 100644
      <span class="text"><strong>{{username}}</strong> - {{text}}</span>
    </li>
  </template>
+-- 
+2.2.1
+
+
+From d1a2cc5eefa0b830f5f952cb6a94a496d7bb13aa Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:34:13 -0700
+Subject: [PATCH 29/34] Step 11.4: Add private class to private tasks
+
+---
+ simple-todos.html | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/simple-todos.html b/simple-todos.html
+index bd18923..08854e2 100644
+--- a/simple-todos.html
++++ b/simple-todos.html
+@@ -30,7 +30,7 @@
+ </body>
+ 
+ <template name="task">
+-  <li class="{{#if checked}}checked{{/if}}">
++  <li class="{{#if checked}}checked{{/if}} {{#if private}}private{{/if}}">
+     <button class="delete">&times;</button>
+ 
+     <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
+-- 
+2.2.1
+
+
+From ba34429a728da182231069f71f46ece369baa31b Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:34:47 -0700
+Subject: [PATCH 30/34] Step 11.5: Define helper to check ownership
+
+---
+ simple-todos.js | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
 diff --git a/simple-todos.js b/simple-todos.js
-index 83daf06..43230d3 100644
+index 31eda5c..db6e512 100644
 --- a/simple-todos.js
 +++ b/simple-todos.js
-@@ -2,6 +2,8 @@ Tasks = new Mongo.Collection("tasks");
+@@ -48,6 +48,12 @@ if (Meteor.isClient) {
+     }
+   });
  
- if (Meteor.isClient) {
-   // This code only runs on the client
-+  Meteor.subscribe("tasks");
++  Template.task.helpers({
++    isOwner: function () {
++      return this.owner === Meteor.userId();
++    }
++  });
 +
-   Template.body.helpers({
-     tasks: function () {
-       if (Session.get("hideCompleted")) {
-@@ -45,6 +47,15 @@ if (Meteor.isClient) {
+   Template.task.events({
+     "click .toggle-checked": function () {
+       // Set the checked property to the opposite of its current value
+-- 
+2.2.1
+
+
+From 47e1ff964973d319585bc7f5eb45b7ea78581028 Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:35:31 -0700
+Subject: [PATCH 31/34] Step 11.6: Define method to set tasks to private
+
+---
+ simple-todos.js | 10 ++++++++++
+ 1 file changed, 10 insertions(+)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index db6e512..ff07739 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -88,5 +88,15 @@ Meteor.methods({
+   },
+   setChecked: function (taskId, setChecked) {
+     Tasks.update(taskId, { $set: { checked: setChecked} });
++  },
++  setPrivate: function (taskId, setToPrivate) {
++    var task = Tasks.findOne(taskId);
++
++    // Make sure only the task owner can make a task private
++    if (task.owner !== Meteor.userId()) {
++      throw new Meteor.Error("not-authorized");
++    }
++
++    Tasks.update(taskId, { $set: { private: setToPrivate } });
+   }
+ });
+-- 
+2.2.1
+
+
+From 06f0e314c1dfe3dc8a44288e71d02cac85a32c0c Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:35:55 -0700
+Subject: [PATCH 32/34] Step 11.7: Add event handler to call the setPrivate
+ method
+
+---
+ simple-todos.js | 3 +++
+ 1 file changed, 3 insertions(+)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index ff07739..937e361 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -61,6 +61,9 @@ if (Meteor.isClient) {
      },
      "click .delete": function () {
        Meteor.call("deleteTask", this._id);
 +    },
 +    "click .toggle-private": function () {
 +      Meteor.call("setPrivate", this._id, ! this.private);
-+    }
-+  });
-+
-+  Template.task.helpers({
-+    isOwner: function () {
-+      return this.owner === Meteor.userId();
      }
    });
  
-@@ -68,9 +79,43 @@ Meteor.methods({
+-- 
+2.2.1
+
+
+From 6682fe168d69eb11b7fe280b67ae87fc6c06425a Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:36:38 -0700
+Subject: [PATCH 33/34] Step 11.8: Only publish tasks the user is allowed to
+ see
+
+---
+ simple-todos.js | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index 937e361..fea68a1 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -2,8 +2,14 @@ Tasks = new Mongo.Collection("tasks");
+ 
+ if (Meteor.isServer) {
+   // This code only runs on the server
++  // Only publish tasks that are public or belong to the current user
+   Meteor.publish("tasks", function () {
+-    return Tasks.find();
++    return Tasks.find({
++      $or: [
++        { private: {$ne: true} },
++        { owner: this.userId }
++      ]
++    });
+   });
+ }
+ 
+-- 
+2.2.1
+
+
+From b5957208d50a064a4a22780c7ef76259691b2c7a Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:37:36 -0700
+Subject: [PATCH 34/34] Step 11.9: Add some extra security to methods
+
+---
+ simple-todos.js | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
+
+diff --git a/simple-todos.js b/simple-todos.js
+index fea68a1..9bf41bb 100644
+--- a/simple-todos.js
++++ b/simple-todos.js
+@@ -93,9 +93,21 @@ Meteor.methods({
      });
    },
    deleteTask: function (taskId) {
@@ -991,30 +1424,8 @@ index 83daf06..43230d3 100644
 +    }
 +
      Tasks.update(taskId, { $set: { checked: setChecked} });
-+  },
-+  setPrivate: function (taskId, setToPrivate) {
-+    var task = Tasks.findOne(taskId);
-+
-+    // Make sure only the task owner can make a task private
-+    if (task.owner !== Meteor.userId()) {
-+      throw new Meteor.Error("not-authorized");
-+    }
-+
-+    Tasks.update(taskId, { $set: { private: setToPrivate } });
-   }
- });
-+
-+if (Meteor.isServer) {
-+  // Only publish tasks that are public or belong to the current user
-+  Meteor.publish("tasks", function () {
-+    return Tasks.find({
-+      $or: [
-+        { private: {$ne: true} },
-+        { owner: this.userId }
-+      ]
-+    });
-+  });
-+}
+   },
+   setPrivate: function (taskId, setToPrivate) {
 -- 
 2.2.1
 
diff --git a/package.js b/package.js
index 695b1df..fbe24a8 100644
--- a/package.js
+++ b/package.js
@@ -83,7 +83,8 @@ Package.onUse(function (api) {
     'shared/code-box.html',
     'shared/code-box.js',
 
-    'generated/react.multi.patch'
+    'generated/react.multi.patch',
+    'generated/blaze.multi.patch'
   ], 'client');
 
   // Also, exports all of the templates from the steps/ directory
@@ -92,4 +93,7 @@ Package.onUse(function (api) {
   api.export('REACT_TUT');
   api.export('ANGULAR_TUT');
   api.export('BLAZE_TUT');
+
+  // For easier debugging
+  api.export('GitPatches');
 });
diff --git a/repos/blaze b/repos/blaze
index 10bdbc7..b595720 160000
--- a/repos/blaze
+++ b/repos/blaze
@@ -1 +1 @@
-Subproject commit 10bdbc7434b913c85c156ae6e27fdbea4b2e27bb
+Subproject commit b5957208d50a064a4a22780c7ef76259691b2c7a
diff --git a/routes/blazeTut.js b/routes/blazeTut.js
index bbb7a50..8c5b6f7 100644
--- a/routes/blazeTut.js
+++ b/routes/blazeTut.js
@@ -5,8 +5,7 @@ BLAZE_TUT = [
     seoTitle: 'Creating an app',
     route: "tutorials.blaze.creating-an-app",
     path: "/tutorials/blaze/creating-an-app",
-    contentTemplate: 'blaze-step01',
-    sha: BLAZE_COMMITS["1"].sha
+    contentTemplate: 'blaze-step01'
   },
   {
     id: "1",
@@ -14,8 +13,7 @@ BLAZE_TUT = [
     seoTitle: 'Templates',
     route: "tutorials.blaze.templates",
     path: "/tutorials/blaze/templates",
-    contentTemplate: 'blaze-step02',
-    sha: BLAZE_COMMITS["2"].sha
+    contentTemplate: 'blaze-step02'
   },
   {
     id: "2",
@@ -23,8 +21,7 @@ BLAZE_TUT = [
     seoTitle: 'Collections',
     route: "tutorials.blaze.collections",
     path: "/tutorials/blaze/collections",
-    contentTemplate: 'blaze-step03',
-    sha: BLAZE_COMMITS["3"].sha
+    contentTemplate: 'blaze-step03'
   },
   {
     id: "3",
@@ -32,8 +29,7 @@ BLAZE_TUT = [
     seoTitle: 'Forms and events',
     route: "tutorials.blaze.forms-and-events",
     path: "/tutorials/blaze/forms-and-events",
-    contentTemplate: 'blaze-step04',
-    sha: BLAZE_COMMITS["4"].sha
+    contentTemplate: 'blaze-step04'
   },
   {
     id: "4",
@@ -41,8 +37,7 @@ BLAZE_TUT = [
     seoTitle: 'Update and remove',
     route: "tutorials.blaze.update-and-remove",
     path: "/tutorials/blaze/update-and-remove",
-    contentTemplate: 'blaze-step05',
-    sha: BLAZE_COMMITS["5"].sha
+    contentTemplate: 'blaze-step05'
   },
   {
     id: "5",
@@ -66,8 +61,7 @@ BLAZE_TUT = [
     seoTitle: 'Temporary UI state',
     route: "tutorials.blaze.temporary-ui-state",
     path: "/tutorials/blaze/temporary-ui-state",
-    contentTemplate: 'blaze-step08',
-    sha: BLAZE_COMMITS["8"].sha
+    contentTemplate: 'blaze-step08'
   },
   {
     id: "8",
@@ -75,8 +69,7 @@ BLAZE_TUT = [
     seoTitle: 'Adding user accounts',
     route: "tutorials.blaze.adding-user-accounts",
     path: "/tutorials/blaze/adding-user-accounts",
-    contentTemplate: 'blaze-step09',
-    sha: BLAZE_COMMITS["9"].sha
+    contentTemplate: 'blaze-step09'
   },
   {
     id: "9",
@@ -84,8 +77,7 @@ BLAZE_TUT = [
     seoTitle: 'Security with methods',
     route: "tutorials.blaze.security-with-methods",
     path: "/tutorials/blaze/security-with-methods",
-    contentTemplate: 'blaze-step10',
-    sha: BLAZE_COMMITS["10"].sha
+    contentTemplate: 'blaze-step10'
   },
   {
     id: "10",
@@ -93,8 +85,7 @@ BLAZE_TUT = [
     seoTitle: 'Publish and subscribe',
     route: "tutorials.blaze.publish-and-subscribe",
     path: "/tutorials/blaze/publish-and-subscribe",
-    contentTemplate: 'blaze-step11',
-    sha: BLAZE_COMMITS["11"].sha
+    contentTemplate: 'blaze-step11'
   },
   {
     id: "11",
diff --git a/steps/blaze/step02.md b/steps/blaze/step02.md
index 3acdeb4..ed36ace 100644
--- a/steps/blaze/step02.md
+++ b/steps/blaze/step02.md
@@ -3,44 +3,9 @@
 
 To start working on our todo list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
 
-```html
-<!-- simple-todos.html -->
-<head>
-  <title>Todo List</title>
-</head>
-
-<body>
-  <div class="container">
-    <header>
-      <h1>Todo List</h1>
-    </header>
-
-    <ul>
-      {{dstache}}#each tasks}}
-        {{dstache}}> task}}
-      {{dstache}}/each}}
-    </ul>
-  </div>
-</body>
-
-<template name="task">
-  <li>{{dstache}}text}}</li>
-{{lt}}/template>
-```
-
-```js
-// simple-todos.js
-if (Meteor.isClient) {
-  // This code only runs on the client
-  Template.body.helpers({
-    tasks: [
-      { text: "This is task 1" },
-      { text: "This is task 2" },
-      { text: "This is task 3" }
-    ]
-  });
-}
-```
+{{> CodeBox view="blaze" step="2.1"}}
+
+{{> CodeBox view="blaze" step="2.2"}}
 
 In our browser, the app will now look much like this:
 
diff --git a/steps/blaze/step03.md b/steps/blaze/step03.md
index 06cf813..3f215a3 100644
--- a/steps/blaze/step03.md
+++ b/steps/blaze/step03.md
@@ -6,19 +6,7 @@
 
 Let's update our JavaScript code to get our tasks from a collection instead of a static array:
 
-```js
-// simple-todos.js
-Tasks = new Mongo.Collection("tasks");
-
-if (Meteor.isClient) {
-  // This code only runs on the client
-  Template.body.helpers({
-    tasks: function () {
-      return Tasks.find({});
-    }
-  });
-}
-```
+{{> CodeBox view="blaze" step="3.1"}}
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
diff --git a/steps/blaze/step04.md b/steps/blaze/step04.md
index 4547dd5..3d56766 100644
--- a/steps/blaze/step04.md
+++ b/steps/blaze/step04.md
@@ -6,40 +6,11 @@ In this step, we'll add an input field for users to add tasks to the list.
 
 First, let's add a form to our HTML:
 
-```html
-<header>
-  <h1>Todo List</h1>
-
-  <!-- add a form below the h1 -->
-  <form class="new-task">
-    <input type="text" name="text" placeholder="Type to add new tasks" />
-  </form>
-</header>
-```
+{{> CodeBox view="blaze" step="4.1"}}
 
 Here's the JavaScript code we need to add to listen to the `submit` event on the form:
 
-```js
-// Inside the if (Meteor.isClient) block, right after Template.body.helpers:
-Template.body.events({
-  "submit .new-task": function (event) {
-    // This function is called when the new task form is submitted
-
-    var text = event.target.text.value;
-
-    Tasks.insert({
-      text: text,
-      createdAt: new Date() // current time
-    });
-
-    // Clear form
-    event.target.text.value = "";
-
-    // Prevent default form submit
-    return false;
-  }
-});
-```
+{{> CodeBox view="blaze" step="4.2"}}
 
 Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
 
@@ -65,14 +36,7 @@ Currently, our code displays all new tasks at the bottom of the list. That's not
 
 We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code. Just add a sort option to the `find` call inside the `tasks` helper:
 
-```js
-Template.body.helpers({
-  tasks: function () {
-    // Show newest tasks first
-    return Tasks.find({}, {sort: {createdAt: -1}});
-  }
-});
-```
+{{> CodeBox view="blaze" step="4.3"}}
 
 In the next step, we'll add some very important todo list functions: checking off and deleting tasks.
 {{/template}}
diff --git a/steps/blaze/step05.md b/steps/blaze/step05.md
index 1e03044..dcc0e54 100644
--- a/steps/blaze/step05.md
+++ b/steps/blaze/step05.md
@@ -6,33 +6,11 @@ Until now, we have only interacted with a collection by inserting documents. Now
 
 Let's add two elements to our `task` template, a checkbox and a delete button:
 
-```html
-<!-- replace the existing task template with this code -->
-<template name="task">
-  <li class="{{dstache}}#if checked}}checked{{dstache}}/if}}">
-    <button class="delete">&times;</button>
-
-    <input type="checkbox" checked="{{dstache}}checked}}" class="toggle-checked" />
-
-    <span class="text">{{dstache}}text}}</span>
-  </li>
-{{lt}}/template>
-```
+{{> CodeBox view="blaze" step="5.1"}}
 
 We have added UI elements, but they don't do anything yet. We should add some event handlers:
 
-```js
-// In the client code, below everything else
-Template.task.events({
-  "click .toggle-checked": function () {
-    // Set the checked property to the opposite of its current value
-    Tasks.update(this._id, {$set: {checked: ! this.checked}});
-  },
-  "click .delete": function () {
-    Tasks.remove(this._id);
-  }
-});
-```
+{{> CodeBox view="blaze" step="5.2"}}
 
 ### Getting data in event handlers
 
diff --git a/steps/blaze/step08.md b/steps/blaze/step08.md
index ca8ef3d..17047e9 100644
--- a/steps/blaze/step08.md
+++ b/steps/blaze/step08.md
@@ -6,46 +6,19 @@ In this step, we'll add a client-side data filtering feature to our app, so that
 
 First, we need to add a checkbox to our HTML:
 
-```html
-<!-- add the checkbox to <header> right below the h1 -->
-<label class="hide-completed">
-  <input type="checkbox" checked="{{dstache}}hideCompleted}}" />
-  Hide Completed Tasks
-</label>
-```
+{{> CodeBox view="blaze" step="8.1"}}
 
 Then, we need an event handler to update a `Session` variable when the checkbox
 is checked or unchecked. `Session` is a convenient place to store temporary UI
 state, and can be used in helpers just like a collection.
 
-```js
-// Add to Template.body.events
-"change .hide-completed input": function (event) {
-  Session.set("hideCompleted", event.target.checked);
-}
-```
+{{> CodeBox view="blaze" step="8.2"}}
 
 Now, we need to update `Template.body.helpers`. The code below has a new if
 block to filter the tasks if the checkbox is checked, and a helper to make sure
 the checkbox represents the state of our Session variable.
 
-```js
-// Replace the existing Template.body.helpers
-Template.body.helpers({
-  tasks: function () {
-    if (Session.get("hideCompleted")) {
-      // If hide completed is checked, filter tasks
-      return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});
-    } else {
-      // Otherwise, return all of the tasks
-      return Tasks.find({}, {sort: {createdAt: -1}});
-    }
-  },
-  hideCompleted: function () {
-    return Session.get("hideCompleted");
-  }
-});
-```
+{{> CodeBox view="blaze" step="8.3"}}
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
@@ -57,16 +30,8 @@ Until now, we have stored all of our state in collections, and the view updated
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a helper and change one line of the HTML.
 
-```js
-// Add to Template.body.helpers
-incompleteCount: function () {
-  return Tasks.find({checked: {$ne: true}}).count();
-}
-```
-
-```html
-<!-- display the count at the end of the <h1> tag -->
-<h1>Todo List ({{dstache}}incompleteCount}})</h1>
-```
+{{> CodeBox view="blaze" step="8.4"}}
+
+{{> CodeBox view="blaze" step="8.5"}}
 
 {{/template}}
diff --git a/steps/blaze/step09.md b/steps/blaze/step09.md
index 4ae3636..a5e0bb9 100644
--- a/steps/blaze/step09.md
+++ b/steps/blaze/step09.md
@@ -12,18 +12,11 @@ meteor add accounts-ui accounts-password
 
 In the HTML, right under the checkbox, include the following code to add a login dropdown:
 
-```html
-{{dstache}}> loginButtons}}
-```
+{{> CodeBox view="blaze" step="9.2"}}
 
 Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
-```js
-// At the bottom of the client code
-Accounts.ui.config({
-  passwordSignupFields: "USERNAME_ONLY"
-});
-```
+{{> CodeBox view="blaze" step="9.3"}}
 
 Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
 
@@ -37,30 +30,15 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `submit .new-task` event handler:
 
-```js
-Tasks.insert({
-  text: text,
-  createdAt: new Date(),            // current time
-  owner: Meteor.userId(),           // _id of logged in user
-  username: Meteor.user().username  // username of logged in user
-});
-```
+{{> CodeBox view="blaze" step="9.4"}}
 
 Then, in our HTML, add an `#if` block helper to only show the form when there is a logged in user:
 
-```html
-{{dstache}}#if currentUser}}
-  <form class="new-task">
-    <input type="text" name="text" placeholder="Type to add new tasks" />
-  </form>
-{{dstache}}/if}}
-```
+{{> CodeBox view="blaze" step="9.5"}}
 
 Finally, add a Spacebars statement to display the `username` field on each task right before the text:
 
-```html
-<span class="text"><strong>{{dstache}}username}}</strong> - {{dstache}}text}}</span>
-```
+{{> CodeBox view="blaze" step="9.6"}}`
 
 Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
 
diff --git a/steps/blaze/step10.md b/steps/blaze/step10.md
index cf91c82..0f2ddd5 100644
--- a/steps/blaze/step10.md
+++ b/steps/blaze/step10.md
@@ -18,43 +18,13 @@ If you try to use the app after removing this package, you will notice that none
 
 First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
 
-```js
-// At the bottom of simple-todos.js, outside of the client-only block
-Meteor.methods({
-  addTask: function (text) {
-    // Make sure the user is logged in before inserting a task
-    if (! Meteor.userId()) {
-      throw new Meteor.Error("not-authorized");
-    }
-
-    Tasks.insert({
-      text: text,
-      createdAt: new Date(),
-      owner: Meteor.userId(),
-      username: Meteor.user().username
-    });
-  },
-  deleteTask: function (taskId) {
-    Tasks.remove(taskId);
-  },
-  setChecked: function (taskId, setChecked) {
-    Tasks.update(taskId, { $set: { checked: setChecked} });
-  }
-});
-```
+{{> CodeBox view="blaze" step="10.2"}}
 
 Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
-```js
-// replace Tasks.insert( ... ) with:
-Meteor.call("addTask", text);
-
-// replace Tasks.update( ... ) with:
-Meteor.call("setChecked", this._id, ! this.checked);
+{{> CodeBox view="blaze" step="10.3"}}
 
-// replace Tasks.remove( ... ) with:
-Meteor.call("deleteTask", this._id);
-```
+{{> CodeBox view="blaze" step="10.4"}}
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
diff --git a/steps/blaze/step11.md b/steps/blaze/step11.md
index ec568ee..43e6c26 100644
--- a/steps/blaze/step11.md
+++ b/steps/blaze/step11.md
@@ -14,19 +14,7 @@ When the app refreshes, the task list will be empty. Without the `autopublish` p
 
 Let's add them now.
 
-```js
-// At the bottom of simple-todos.js
-if (Meteor.isServer) {
-  Meteor.publish("tasks", function () {
-    return Tasks.find();
-  });
-}
-```
-
-```js
-// At the top of our client code
-Meteor.subscribe("tasks");
-```
+{{> CodeBox view="blaze" step="11.2"}}
 
 Once you have added this code, all of the tasks will reappear.
 
@@ -36,50 +24,37 @@ Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`
 
 First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
 
-```html
-<!-- add right below the code for the checkbox in the task template -->
-{{dstache}}#if isOwner}}
-  <button class="toggle-private">
-    {{dstache}}#if private}}
-      Private
-    {{dstache}}else}}
-      Public
-    {{dstache}}/if}}
-  </button>
-{{dstache}}/if}}
-
-<!-- modify the li tag to have the private class if the item is private -->
-<li class="{{dstache}}#if checked}}checked{{dstache}}/if}} {{dstache}}#if private}}private{{dstache}}/if}}">
-```
+{{> CodeBox view="blaze" step="11.3"}}
+
+Let's make sure our task has a special class if it is marked private:
+
+{{> CodeBox view="blaze" step="11.4"}}
 
 We need to modify our JavaScript code in three places:
 
-```js
-// Define a helper to check if the current user is the task owner
-Template.task.helpers({
-  isOwner: function () {
-    return this.owner === Meteor.userId();
-  }
-});
-
-// Add an event for the new button to Template.task.events
-"click .toggle-private": function () {
-  Meteor.call("setPrivate", this._id, ! this.private);
-}
-
-// Add a method to Meteor.methods called setPrivate
-setPrivate: function (taskId, setToPrivate) {
-  var task = Tasks.findOne(taskId);
-
-  // Make sure only the task owner can make a task private
-  if (task.owner !== Meteor.userId()) {
-    throw new Meteor.Error("not-authorized");
-  }
-
-  Tasks.update(taskId, { $set: { private: setToPrivate } });
-}
-```
+{{> CodeBox view="blaze" step="11.5"}}
+
+{{> CodeBox view="blaze" step="11.6"}}
+
+{{> CodeBox view="blaze" step="11.7"}}
+
+### Selectively publishing tasks based on privacy status
+
+Now that we have a way of setting which tasks are private, we should modify our
+publication function to only send the tasks that a user is authorized to see:
+
+{{> CodeBox view="blaze" step="11.8"}}
+
+To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
+
+### Extra method security
+
+In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
+
+{{> CodeBox view="blaze" step="11.9"}}
+
+> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
-{{> step11SelectivelyPublish}}
+We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
 
 {{/template}}
-- 
2.13.6 (Apple Git-96)


From e3221e7e9938ae47e9878c687c82cd1d1b497795 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 16 Jul 2015 10:19:16 -0700
Subject: [PATCH 053/164] Reorg to content/

---
 {steps => content}/angular/step01.md           |  0
 {steps => content}/angular/step02.md           |  0
 {steps => content}/angular/step03.md           |  0
 {steps => content}/angular/step04.md           |  0
 {steps => content}/angular/step05.md           |  0
 {steps => content}/angular/step07.md           |  0
 {steps => content}/angular/step08.md           |  0
 {steps => content}/angular/step09.md           |  0
 {steps => content}/angular/step10.md           |  0
 {steps => content}/angular/step11.md           |  0
 {steps => content}/angular/step12.md           |  0
 {steps => content}/blaze/step01.md             |  0
 {steps => content}/blaze/step02.md             |  0
 {steps => content}/blaze/step03.md             |  0
 {steps => content}/blaze/step04.md             |  0
 {steps => content}/blaze/step05.md             |  0
 {steps => content}/blaze/step08.md             |  0
 {steps => content}/blaze/step09.md             |  0
 {steps => content}/blaze/step10.md             |  0
 {steps => content}/blaze/step11.md             |  0
 {steps => content}/blaze/step12.md             |  0
 {steps => content}/react/step01.md             |  0
 {steps => content}/react/step02.md             |  0
 {steps => content}/react/step03.md             |  0
 {steps => content}/react/step04.md             |  0
 {steps => content}/react/step05.md             |  0
 {steps => content}/react/step08.md             |  0
 {steps => content}/react/step09.md             |  0
 {steps => content}/react/step10.md             |  0
 {steps => content}/react/step11.md             |  0
 {steps => content}/react/step12.md             |  0
 shared/code.md => content/shared/adding-css.md |  0
 {shared => content/shared}/explanations.md     |  0
 {shared => content/shared}/step06.md           |  0
 {shared => content/shared}/step07.md           |  0
 {steps => content}/step00.html                 |  0
 package.js                                     | 74 +++++++++++++-------------
 37 files changed, 37 insertions(+), 37 deletions(-)
 rename {steps => content}/angular/step01.md (100%)
 rename {steps => content}/angular/step02.md (100%)
 rename {steps => content}/angular/step03.md (100%)
 rename {steps => content}/angular/step04.md (100%)
 rename {steps => content}/angular/step05.md (100%)
 rename {steps => content}/angular/step07.md (100%)
 rename {steps => content}/angular/step08.md (100%)
 rename {steps => content}/angular/step09.md (100%)
 rename {steps => content}/angular/step10.md (100%)
 rename {steps => content}/angular/step11.md (100%)
 rename {steps => content}/angular/step12.md (100%)
 rename {steps => content}/blaze/step01.md (100%)
 rename {steps => content}/blaze/step02.md (100%)
 rename {steps => content}/blaze/step03.md (100%)
 rename {steps => content}/blaze/step04.md (100%)
 rename {steps => content}/blaze/step05.md (100%)
 rename {steps => content}/blaze/step08.md (100%)
 rename {steps => content}/blaze/step09.md (100%)
 rename {steps => content}/blaze/step10.md (100%)
 rename {steps => content}/blaze/step11.md (100%)
 rename {steps => content}/blaze/step12.md (100%)
 rename {steps => content}/react/step01.md (100%)
 rename {steps => content}/react/step02.md (100%)
 rename {steps => content}/react/step03.md (100%)
 rename {steps => content}/react/step04.md (100%)
 rename {steps => content}/react/step05.md (100%)
 rename {steps => content}/react/step08.md (100%)
 rename {steps => content}/react/step09.md (100%)
 rename {steps => content}/react/step10.md (100%)
 rename {steps => content}/react/step11.md (100%)
 rename {steps => content}/react/step12.md (100%)
 rename shared/code.md => content/shared/adding-css.md (100%)
 rename {shared => content/shared}/explanations.md (100%)
 rename {shared => content/shared}/step06.md (100%)
 rename {shared => content/shared}/step07.md (100%)
 rename {steps => content}/step00.html (100%)

diff --git a/steps/angular/step01.md b/content/angular/step01.md
similarity index 100%
rename from steps/angular/step01.md
rename to content/angular/step01.md
diff --git a/steps/angular/step02.md b/content/angular/step02.md
similarity index 100%
rename from steps/angular/step02.md
rename to content/angular/step02.md
diff --git a/steps/angular/step03.md b/content/angular/step03.md
similarity index 100%
rename from steps/angular/step03.md
rename to content/angular/step03.md
diff --git a/steps/angular/step04.md b/content/angular/step04.md
similarity index 100%
rename from steps/angular/step04.md
rename to content/angular/step04.md
diff --git a/steps/angular/step05.md b/content/angular/step05.md
similarity index 100%
rename from steps/angular/step05.md
rename to content/angular/step05.md
diff --git a/steps/angular/step07.md b/content/angular/step07.md
similarity index 100%
rename from steps/angular/step07.md
rename to content/angular/step07.md
diff --git a/steps/angular/step08.md b/content/angular/step08.md
similarity index 100%
rename from steps/angular/step08.md
rename to content/angular/step08.md
diff --git a/steps/angular/step09.md b/content/angular/step09.md
similarity index 100%
rename from steps/angular/step09.md
rename to content/angular/step09.md
diff --git a/steps/angular/step10.md b/content/angular/step10.md
similarity index 100%
rename from steps/angular/step10.md
rename to content/angular/step10.md
diff --git a/steps/angular/step11.md b/content/angular/step11.md
similarity index 100%
rename from steps/angular/step11.md
rename to content/angular/step11.md
diff --git a/steps/angular/step12.md b/content/angular/step12.md
similarity index 100%
rename from steps/angular/step12.md
rename to content/angular/step12.md
diff --git a/steps/blaze/step01.md b/content/blaze/step01.md
similarity index 100%
rename from steps/blaze/step01.md
rename to content/blaze/step01.md
diff --git a/steps/blaze/step02.md b/content/blaze/step02.md
similarity index 100%
rename from steps/blaze/step02.md
rename to content/blaze/step02.md
diff --git a/steps/blaze/step03.md b/content/blaze/step03.md
similarity index 100%
rename from steps/blaze/step03.md
rename to content/blaze/step03.md
diff --git a/steps/blaze/step04.md b/content/blaze/step04.md
similarity index 100%
rename from steps/blaze/step04.md
rename to content/blaze/step04.md
diff --git a/steps/blaze/step05.md b/content/blaze/step05.md
similarity index 100%
rename from steps/blaze/step05.md
rename to content/blaze/step05.md
diff --git a/steps/blaze/step08.md b/content/blaze/step08.md
similarity index 100%
rename from steps/blaze/step08.md
rename to content/blaze/step08.md
diff --git a/steps/blaze/step09.md b/content/blaze/step09.md
similarity index 100%
rename from steps/blaze/step09.md
rename to content/blaze/step09.md
diff --git a/steps/blaze/step10.md b/content/blaze/step10.md
similarity index 100%
rename from steps/blaze/step10.md
rename to content/blaze/step10.md
diff --git a/steps/blaze/step11.md b/content/blaze/step11.md
similarity index 100%
rename from steps/blaze/step11.md
rename to content/blaze/step11.md
diff --git a/steps/blaze/step12.md b/content/blaze/step12.md
similarity index 100%
rename from steps/blaze/step12.md
rename to content/blaze/step12.md
diff --git a/steps/react/step01.md b/content/react/step01.md
similarity index 100%
rename from steps/react/step01.md
rename to content/react/step01.md
diff --git a/steps/react/step02.md b/content/react/step02.md
similarity index 100%
rename from steps/react/step02.md
rename to content/react/step02.md
diff --git a/steps/react/step03.md b/content/react/step03.md
similarity index 100%
rename from steps/react/step03.md
rename to content/react/step03.md
diff --git a/steps/react/step04.md b/content/react/step04.md
similarity index 100%
rename from steps/react/step04.md
rename to content/react/step04.md
diff --git a/steps/react/step05.md b/content/react/step05.md
similarity index 100%
rename from steps/react/step05.md
rename to content/react/step05.md
diff --git a/steps/react/step08.md b/content/react/step08.md
similarity index 100%
rename from steps/react/step08.md
rename to content/react/step08.md
diff --git a/steps/react/step09.md b/content/react/step09.md
similarity index 100%
rename from steps/react/step09.md
rename to content/react/step09.md
diff --git a/steps/react/step10.md b/content/react/step10.md
similarity index 100%
rename from steps/react/step10.md
rename to content/react/step10.md
diff --git a/steps/react/step11.md b/content/react/step11.md
similarity index 100%
rename from steps/react/step11.md
rename to content/react/step11.md
diff --git a/steps/react/step12.md b/content/react/step12.md
similarity index 100%
rename from steps/react/step12.md
rename to content/react/step12.md
diff --git a/shared/code.md b/content/shared/adding-css.md
similarity index 100%
rename from shared/code.md
rename to content/shared/adding-css.md
diff --git a/shared/explanations.md b/content/shared/explanations.md
similarity index 100%
rename from shared/explanations.md
rename to content/shared/explanations.md
diff --git a/shared/step06.md b/content/shared/step06.md
similarity index 100%
rename from shared/step06.md
rename to content/shared/step06.md
diff --git a/shared/step07.md b/content/shared/step07.md
similarity index 100%
rename from shared/step07.md
rename to content/shared/step07.md
diff --git a/steps/step00.html b/content/step00.html
similarity index 100%
rename from steps/step00.html
rename to content/step00.html
diff --git a/package.js b/package.js
index fbe24a8..3162178 100644
--- a/package.js
+++ b/package.js
@@ -42,43 +42,43 @@ Package.onUse(function (api) {
   ]);
 
   api.addFiles([
-    'steps/angular/step01.md',
-    'steps/angular/step02.md',
-    'steps/angular/step03.md',
-    'steps/angular/step04.md',
-    'steps/angular/step05.md',
-    'steps/angular/step07.md',
-    'steps/angular/step08.md',
-    'steps/angular/step09.md',
-    'steps/angular/step10.md',
-    'steps/angular/step11.md',
-    'steps/angular/step12.md',
-    'steps/blaze/step01.md',
-    'steps/blaze/step02.md',
-    'steps/blaze/step03.md',
-    'steps/blaze/step04.md',
-    'steps/blaze/step05.md',
-    'steps/blaze/step08.md',
-    'steps/blaze/step09.md',
-    'steps/blaze/step10.md',
-    'steps/blaze/step11.md',
-    'steps/blaze/step12.md',
-    'steps/react/step01.md',
-    'steps/react/step02.md',
-    'steps/react/step03.md',
-    'steps/react/step04.md',
-    'steps/react/step05.md',
-    'steps/react/step08.md',
-    'steps/react/step09.md',
-    'steps/react/step10.md',
-    'steps/react/step11.md',
-    'steps/react/step12.md',
-    'steps/step00.html',
+    'content/angular/step01.md',
+    'content/angular/step02.md',
+    'content/angular/step03.md',
+    'content/angular/step04.md',
+    'content/angular/step05.md',
+    'content/angular/step07.md',
+    'content/angular/step08.md',
+    'content/angular/step09.md',
+    'content/angular/step10.md',
+    'content/angular/step11.md',
+    'content/angular/step12.md',
+    'content/blaze/step01.md',
+    'content/blaze/step02.md',
+    'content/blaze/step03.md',
+    'content/blaze/step04.md',
+    'content/blaze/step05.md',
+    'content/blaze/step08.md',
+    'content/blaze/step09.md',
+    'content/blaze/step10.md',
+    'content/blaze/step11.md',
+    'content/blaze/step12.md',
+    'content/react/step01.md',
+    'content/react/step02.md',
+    'content/react/step03.md',
+    'content/react/step04.md',
+    'content/react/step05.md',
+    'content/react/step08.md',
+    'content/react/step09.md',
+    'content/react/step10.md',
+    'content/react/step11.md',
+    'content/react/step12.md',
+    'content/step00.html',
 
-    'shared/explanations.md',
-    'shared/code.md',
-    'shared/step06.md',
-    'shared/step07.md',
+    'content/shared/explanations.md',
+    'content/shared/adding-css.md',
+    'content/shared/step06.md',
+    'content/shared/step07.md',
 
     'shared/code-box.html',
     'shared/code-box.js',
@@ -87,7 +87,7 @@ Package.onUse(function (api) {
     'generated/blaze.multi.patch'
   ], 'client');
 
-  // Also, exports all of the templates from the steps/ directory
+  // Also, exports all of the templates from the content/ directory
   api.export('TUTORIAL_PAGES');
 
   api.export('REACT_TUT');
-- 
2.13.6 (Apple Git-96)


From f5e01b44ba60822c4bc0e775496afab8c9eb9fe3 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 16 Jul 2015 10:19:56 -0700
Subject: [PATCH 054/164] Move segment back to angular step

---
 content/angular/step11.md      | 44 +++++++++++++++++++++++++++++++++++++-
 content/shared/explanations.md | 48 ------------------------------------------
 2 files changed, 43 insertions(+), 49 deletions(-)

diff --git a/content/angular/step11.md b/content/angular/step11.md
index 94ebec2..f136493 100644
--- a/content/angular/step11.md
+++ b/content/angular/step11.md
@@ -69,6 +69,48 @@ setPrivate: function (taskId, setToPrivate) {
 }
 ```
 
-{{> step11SelectivelyPublish}}
+### Selectively publishing tasks based on privacy status
+
+Now that we have a way of setting which tasks are private, we should modify our
+publication function to only send the tasks that a user is authorized to see:
+
+```js
+// Modify the publish statement
+// Only publish tasks that are public or belong to the current user
+Meteor.publish("tasks", function () {
+  return Tasks.find({
+    $or: [
+      { private: {$ne: true} },
+      { owner: this.userId }
+    ]
+  });
+});
+```
+
+To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
+
+### Extra method security
+
+In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
+
+```js
+// At the top of the deleteTask method
+var task = Tasks.findOne(taskId);
+if (task.private && task.owner !== Meteor.userId()) {
+  // If the task is private, make sure only the owner can delete it
+  throw new Meteor.Error("not-authorized");
+}
+
+// At the top of the setChecked method
+var task = Tasks.findOne(taskId);
+if (task.private && task.owner !== Meteor.userId()) {
+  // If the task is private, make sure only the owner can check it off
+  throw new Meteor.Error("not-authorized");
+}
+```
+
+> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
+
+We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
 
 {{/template}}
diff --git a/content/shared/explanations.md b/content/shared/explanations.md
index 2ca083a..52247ec 100644
--- a/content/shared/explanations.md
+++ b/content/shared/explanations.md
@@ -1,51 +1,3 @@
-{{#template name="step11SelectivelyPublish"}}
-
-### Selectively publishing tasks based on privacy status
-
-Now that we have a way of setting which tasks are private, we should modify our
-publication function to only send the tasks that a user is authorized to see:
-
-```js
-// Modify the publish statement
-// Only publish tasks that are public or belong to the current user
-Meteor.publish("tasks", function () {
-  return Tasks.find({
-    $or: [
-      { private: {$ne: true} },
-      { owner: this.userId }
-    ]
-  });
-});
-```
-
-To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
-
-### Extra method security
-
-In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
-
-```js
-// At the top of the deleteTask method
-var task = Tasks.findOne(taskId);
-if (task.private && task.owner !== Meteor.userId()) {
-  // If the task is private, make sure only the owner can delete it
-  throw new Meteor.Error("not-authorized");
-}
-
-// At the top of the setChecked method
-var task = Tasks.findOne(taskId);
-if (task.private && task.owner !== Meteor.userId()) {
-  // If the task is private, make sure only the owner can check it off
-  throw new Meteor.Error("not-authorized");
-}
-```
-
-> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
-
-We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
-
-{{/template}}
-
 {{#template name="step03CollectionsIntro"}}
 
 Collections are Meteor's way of storing persistent data. The special thing about collections in Meteor is that they can be accessed from both the server and the client, making it easy to write view logic without having to write a lot of server code. They also update themselves automatically, so a view component backed by a collection will automatically display the most up-to-date data.
-- 
2.13.6 (Apple Git-96)


From 1bfe6236477e8fab4a964d22ad1b81a2b1312621 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 16 Jul 2015 10:24:24 -0700
Subject: [PATCH 055/164] Reorg into components dir

---
 .../patch-plugin.jsx                               |  0
 {shared => components}/code-box.html               |  0
 {shared => components}/code-box.js                 |  0
 .../git-patch-viewer}/patch-viewer.html            |  0
 .../git-patch-viewer}/patch-viewer.jsx             |  0
 .../git-patch-viewer}/patch-viewer.less            |  0
 package.js                                         | 29 ++++++++++------------
 7 files changed, 13 insertions(+), 16 deletions(-)
 rename {git-patch-viewer => build-plugin}/patch-plugin.jsx (100%)
 rename {shared => components}/code-box.html (100%)
 rename {shared => components}/code-box.js (100%)
 rename {git-patch-viewer => components/git-patch-viewer}/patch-viewer.html (100%)
 rename {git-patch-viewer => components/git-patch-viewer}/patch-viewer.jsx (100%)
 rename {git-patch-viewer => components/git-patch-viewer}/patch-viewer.less (100%)

diff --git a/git-patch-viewer/patch-plugin.jsx b/build-plugin/patch-plugin.jsx
similarity index 100%
rename from git-patch-viewer/patch-plugin.jsx
rename to build-plugin/patch-plugin.jsx
diff --git a/shared/code-box.html b/components/code-box.html
similarity index 100%
rename from shared/code-box.html
rename to components/code-box.html
diff --git a/shared/code-box.js b/components/code-box.js
similarity index 100%
rename from shared/code-box.js
rename to components/code-box.js
diff --git a/git-patch-viewer/patch-viewer.html b/components/git-patch-viewer/patch-viewer.html
similarity index 100%
rename from git-patch-viewer/patch-viewer.html
rename to components/git-patch-viewer/patch-viewer.html
diff --git a/git-patch-viewer/patch-viewer.jsx b/components/git-patch-viewer/patch-viewer.jsx
similarity index 100%
rename from git-patch-viewer/patch-viewer.jsx
rename to components/git-patch-viewer/patch-viewer.jsx
diff --git a/git-patch-viewer/patch-viewer.less b/components/git-patch-viewer/patch-viewer.less
similarity index 100%
rename from git-patch-viewer/patch-viewer.less
rename to components/git-patch-viewer/patch-viewer.less
diff --git a/package.js b/package.js
index 3162178..df6666a 100644
--- a/package.js
+++ b/package.js
@@ -1,20 +1,20 @@
 Package.describe({
-  summary: "Tutorial content, included in meteor.com via package",
-  version: "0.0.1",
-  name: "tutorials"
+  summary: 'Tutorial content, included in meteor.com via package',
+  version: '0.0.1',
+  name: 'tutorials'
 });
 
 Package.registerBuildPlugin({
-  name: "Git patch compiler",
-  sources: ["git-patch-viewer/patch-plugin.jsx"],
+  name: 'build-plugin',
+  sources: ['build-plugin/patch-plugin.jsx'],
   use: [
-    "jsx@0.1.1",
-    "underscore@1.0.3"
+    'jsx@0.1.1',
+    'underscore@1.0.3'
   ]
 })
 
 Package.onUse(function (api) {
-  api.versionsFrom("1.1.0.2");
+  api.versionsFrom('1.1.0.2');
   api.use([
     'simple:markdown-templating@1.2.7',
     'templating',
@@ -26,12 +26,6 @@ Package.onUse(function (api) {
   ]);
 
   api.addFiles([
-    "git-patch-viewer/patch-viewer.html",
-    "git-patch-viewer/patch-viewer.jsx",
-    "git-patch-viewer/patch-viewer.less"
-  ], "client");
-
-  api.addFiles([
     'generated/blaze-commits.js',
     'generated/angular-commits.js',
     'generated/react-commits.js',
@@ -80,8 +74,11 @@ Package.onUse(function (api) {
     'content/shared/step06.md',
     'content/shared/step07.md',
 
-    'shared/code-box.html',
-    'shared/code-box.js',
+    'components/code-box.html',
+    'components/code-box.js',
+    'components/git-patch-viewer/patch-viewer.html',
+    'components/git-patch-viewer/patch-viewer.jsx',
+    'components/git-patch-viewer/patch-viewer.less',
 
     'generated/react.multi.patch',
     'generated/blaze.multi.patch'
-- 
2.13.6 (Apple Git-96)


From 32e462414c1e58e3755b18c965685347a2d6a492 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 16 Jul 2015 10:28:23 -0700
Subject: [PATCH 056/164] Update README to align with reorg

---
 README.md | 24 ++++++++++++++----------
 1 file changed, 14 insertions(+), 10 deletions(-)

diff --git a/README.md b/README.md
index 0ff7a0a..36dbb66 100644
--- a/README.md
+++ b/README.md
@@ -6,9 +6,9 @@ Feel free to submit a pull request to improve the content!
 
 ### Tutorial content
 
-1. [Blaze tutorial](https://www.meteor.com/tutorials/blaze/creating-an-app): [`/steps/blaze`](https://github.com/meteor/tutorials/tree/master/steps/blaze)
-2. [Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app): [`/steps/angular`](https://github.com/meteor/tutorials/tree/master/steps/angular)
-3. React tutorial, work in progress (not live yet): [`/steps/react`](https://github.com/meteor/tutorials/tree/master/steps/react)
+1. [Blaze tutorial](https://www.meteor.com/tutorials/blaze/creating-an-app): [`/content/blaze`](https://github.com/meteor/tutorials/tree/master/content/blaze)
+2. [Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app): [`/content/angular`](https://github.com/meteor/tutorials/tree/master/content/angular)
+3. React tutorial, work in progress (not live yet): [`/content/react`](https://github.com/meteor/tutorials/tree/master/content/react)
 
 ### Tutorial step-by-step repositories
 
@@ -26,7 +26,7 @@ If you are editing the tutorials, use this simple app to view them: https://gith
 
 ### Editing the prose
 
-Just edit the markdown files in `/steps/`.
+Just edit the markdown files in `/content/`.
 
 ### Editing code snippets
 
@@ -58,9 +58,17 @@ This repository is a Meteor package; it's currently not published, but you can c
 
 The different parts of the repository have quite different responsibilities, but they are somewhat tightly coupled so it doesn't make sense to split them into separate packages at this point.
 
-#### /git-patch-viewer/
+#### /build-plugin/
 
-This directory contains a Blaze component and build plugin for viewing git patches, tailored specifically to the needs of these tutorials. The build plugin reads files with `.patch` and `.multi.patch` file extensions, and puts data on a package-local object named `GitPatches`. You can access the data for a specific commit on `GitPatches[commitSha]`. The Blaze view component reads this data structure and displays a diff with context and a link to GitHub. Don't use the `GitPatch` component directly; use it by calling the more convenient `CodeBox` component from the `/shared` directory, as described below.
+The build plugin reads files with `.patch` and `.multi.patch` file extensions, and puts data on a package-local object named `GitPatches`. You can access the data for a specific commit on `GitPatches[commitSha]`. The Blaze view component in `/components/git-patch-viewer` reads this data structure and displays a diff with context and a link to GitHub.
+
+#### /components/
+
+This directory contains Blaze components for viewing git patches, tailored specifically to the needs of these tutorials. Don't use the `GitPatch` component directly; use it by calling the more convenient `CodeBox` component instead.
+
+#### /content/
+
+The actual tutorial prose content, in Markdown format.
 
 #### /generated/ (don't edit manually)
 
@@ -84,7 +92,3 @@ This contains a script that is used to update `/generated/` from the repositorie
 #### /shared/
 
 Tutorial-specific templates. Some of them are shared content for the different tutorials in markdown format, others are useful UI widgets. Includes the useful `CodeBox` template, which wraps the `GitPatch` template with more convenient inputs.
-
-#### /steps/
-
-The actual tutorial prose content, in Markdown format.
-- 
2.13.6 (Apple Git-96)


From 11e23d81478a0931c4ea9623c46a0d6fb5337404 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 16 Jul 2015 10:33:26 -0700
Subject: [PATCH 057/164] Change README formatting

---
 README.md | 44 ++++++++++----------------------------------
 1 file changed, 10 insertions(+), 34 deletions(-)

diff --git a/README.md b/README.md
index 36dbb66..aae96c0 100644
--- a/README.md
+++ b/README.md
@@ -58,37 +58,13 @@ This repository is a Meteor package; it's currently not published, but you can c
 
 The different parts of the repository have quite different responsibilities, but they are somewhat tightly coupled so it doesn't make sense to split them into separate packages at this point.
 
-#### /build-plugin/
-
-The build plugin reads files with `.patch` and `.multi.patch` file extensions, and puts data on a package-local object named `GitPatches`. You can access the data for a specific commit on `GitPatches[commitSha]`. The Blaze view component in `/components/git-patch-viewer` reads this data structure and displays a diff with context and a link to GitHub.
-
-#### /components/
-
-This directory contains Blaze components for viewing git patches, tailored specifically to the needs of these tutorials. Don't use the `GitPatch` component directly; use it by calling the more convenient `CodeBox` component instead.
-
-#### /content/
-
-The actual tutorial prose content, in Markdown format.
-
-#### /generated/ (don't edit manually)
-
-This directory contains files generated by `/scripts/process-repo.rb`:
-
-1. `*-commits.js` are lists of commits keyed by the number of the step in the tutorial, with a parsed commit message.
-2. `*.multi.patch` are concatenated patch files of the step-by-step tutorial repositories. The patch files are in the same format as the result of `git format-patch --stdout`. The build plugin in `/git-patch-viewer/patch-plugin.jsx` knows how to read these files.
-
-#### /repos/
-
-This directory contains git submodules of all three step-by-step tutorial repositories.
-
-#### /routes/
-
-This directory contains JavaScript data structures describing the different tutorial steps. These are exported from the package; the meteor.com website and tutorial-viewer app know how to read them.
-
-#### /scripts/
-
-This contains a script that is used to update `/generated/` from the repositories in `/repos/`.
-
-#### /shared/
-
-Tutorial-specific templates. Some of them are shared content for the different tutorials in markdown format, others are useful UI widgets. Includes the useful `CodeBox` template, which wraps the `GitPatch` template with more convenient inputs.
+1. `/build-plugin/` The build plugin reads files with `.patch` and `.multi.patch` file extensions, and puts data on a package-local object named `GitPatches`. You can access the data for a specific commit on `GitPatches[commitSha]`. The Blaze view component in `/components/git-patch-viewer` reads this data structure and displays a diff with context and a link to GitHub.
+2. `/components/` This directory contains Blaze components for viewing git patches, tailored specifically to the needs of these tutorials. Don't use the `GitPatch` component directly; use it by calling the more convenient `CodeBox` component instead.
+3. `/content/` The actual tutorial prose content, in Markdown format.
+4. `/generated/` (don't edit manually) This directory contains files generated by `/scripts/process-repo.rb`:
+    1. `*-commits.js` are lists of commits keyed by the number of the step in the tutorial, with a parsed commit message.
+    2. `*.multi.patch` are concatenated patch files of the step-by-step tutorial repositories. The patch files are in the same format as the result of `git format-patch --stdout`. The build plugin in `/git-patch-viewer/patch-plugin.jsx` knows how to read these files.
+5. `/repos/` This directory contains git submodules of all three step-by-step tutorial repositories.
+6. `/routes/` This directory contains JavaScript data structures describing the different tutorial steps. These are exported from the package; the meteor.com website and tutorial-viewer app know how to read them.
+7. `/scripts/` This contains a script that is used to update `/generated/` from the repositories in `/repos/`.
+8. `/shared/` Tutorial-specific templates. Some of them are shared content for the different tutorials in markdown format, others are useful UI widgets. Includes the useful `CodeBox` template, which wraps the `GitPatch` template with more convenient inputs.
-- 
2.13.6 (Apple Git-96)


From b31287134b885f33b554a75865d612e912f2ba44 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 16 Jul 2015 10:37:00 -0700
Subject: [PATCH 058/164] Add LICENSE to React tutorial

---
 generated/react-commits.js  | 82 ++++++++++++++++++++++-----------------------
 generated/react.multi.patch | 82 ++++++++++++++++++++++-----------------------
 repos/react                 |  2 +-
 3 files changed, 83 insertions(+), 83 deletions(-)

diff --git a/generated/react-commits.js b/generated/react-commits.js
index 5ad7b0d..9a9992b 100644
--- a/generated/react-commits.js
+++ b/generated/react-commits.js
@@ -1,167 +1,167 @@
 // This file auto-generated by scripts/map-commits-to-steps.rb
 REACT_COMMITS = {
   "11.10": {
-    "sha": "e53e739f4b2586bf2f3e9786403bb57438194ffc",
+    "sha": "b847140c6490cf3a1734199deb26d5758ea0c9ac",
     "message": "Add extra security to methods"
   },
   "11.9": {
-    "sha": "b3d376a377d8a57135ea67f10b81fdcc566765ff",
+    "sha": "e527227d30c447c3d7ffd3723d6540f361c9fe42",
     "message": "Only publish tasks the current user can see"
   },
   "11.8": {
-    "sha": "6eafb3a49a126f0a10db9c5f524ab2e74ba9880d",
+    "sha": "67fa7b381d5b51de0c78ee129a000aadf95de4bc",
     "message": "Add private className to Task when needed"
   },
   "11.7": {
-    "sha": "2603b34a2809af83f48c80f22b37f812df15f9ea",
+    "sha": "4f1dae36828297dd73d3447c29fd9f34f308e78b",
     "message": "Add private button event handler to Task"
   },
   "11.6": {
-    "sha": "7049ced6d9fdbcdded6c9a0e5dc9b6260255f2a8",
+    "sha": "9a487d4eb60b2d224d2b858da28123344315ca17",
     "message": "Add private button, shown only to owner"
   },
   "11.5": {
-    "sha": "20cf428657fbb42ec937d319e0d7a993226fe551",
+    "sha": "319d7619de668f136a04378ae182a9b9c17480a4",
     "message": "Add a new prop type for Task component"
   },
   "11.4": {
-    "sha": "96a833da5b09ddf5b279027a383ba8593bef06b6",
+    "sha": "625b356e7ed1bfa66c3a36d1fb37e8373c7b5095",
     "message": "Update renderTasks to pass in showPrivateButton"
   },
   "11.3": {
-    "sha": "2347589fa6cd3b885929ea430dc9024bf12f8482",
+    "sha": "f35bac8c484061a0e0200806c994e5b8a39d89ea",
     "message": "Add setPrivate method"
   },
   "11.2": {
-    "sha": "a1ad699753dbd4730d2d34ac50e810e573c52a99",
+    "sha": "54e487630478cd1389a58c08816bd578af1fceaf",
     "message": "Add publish to server and subscribe to client"
   },
   "11.1": {
-    "sha": "e9da4141e5deed48e6ef079e3867e70aba388583",
+    "sha": "c25ceadfb6a01c7892e8c0fa89c20c7ced190194",
     "message": "Remove autopublish package"
   },
   "10.4": {
-    "sha": "570c42f724a873d7d2a2c71bd0581522f8f2e23f",
+    "sha": "0e519b181c0888a67f1424ac5d354c3f78a13c16",
     "message": "Update Task to use setChecked and removeTask methods"
   },
   "10.3": {
-    "sha": "d0803ad5673e8fae47b9ff7fed850a80d5f2d64e",
+    "sha": "dc0883c23649fb89b4489c97e2f1127c4cfeef2c",
     "message": "Update App component to use addTask method"
   },
   "10.2": {
-    "sha": "6e735ca97ff876c4ac4c75b2ae374ddeb86abb8d",
+    "sha": "e711321a7f138e24b849c17b16e1d229768d0c11",
     "message": "Add methods for add, remove, update task"
   },
   "10.1": {
-    "sha": "0a8e5501bd5c1bedb7ccb3c251722ff84972f922",
+    "sha": "820425c995deada233144a4212871f42f4be1410",
     "message": "Remove insecure package"
   },
   "9.8": {
-    "sha": "50e06b33c4e05ebe111cd855b5ab015ec743be5c",
+    "sha": "30dc469cf13d5f65ad304fde4f1e216e9f4aa452",
     "message": "Update Task component to show username"
   },
   "9.7": {
-    "sha": "199ef1827ecc472723946d7c2ffa25216d40a793",
+    "sha": "5721735aea4bffdfadfe2d1e6113c7bac5d4fb61",
     "message": "Wrap new task form to only show when logged in"
   },
   "9.6": {
-    "sha": "4fff683816569ab5f5654251f6dd77527b9a59b5",
+    "sha": "9b01c38c2ec27fed6653fa5e6efa2b83bc34cd8b",
     "message": "Update getMeteorData to return data about user"
   },
   "9.5": {
-    "sha": "3f4b411ff42e6f82f4d43d28fdf5cfb1b1197682",
+    "sha": "ea3a5c3919625bafc8d8137303cac4bcd56563ae",
     "message": "Update insert to save username and owner"
   },
   "9.4": {
-    "sha": "2e167dbdf1654a04f002771edecd0ff0a00c0557",
+    "sha": "0872f25fd7507e5f2750a97c9dad479469306e31",
     "message": "Configure accounts-ui to only require username"
   },
   "9.3": {
-    "sha": "7af1c6780234736bb8f442c5cbf206ee53246263",
+    "sha": "2fc5338aece0c67370206bd0a53b77e4c94efad7",
     "message": "Include sign in form"
   },
   "9.2": {
-    "sha": "dab17acf27046daafcabc4e29c05ffd911ad5291",
+    "sha": "476e97407f34d17fff6ad29ed0e69e7f91524cbb",
     "message": "Create Accounts UI wrapper component"
   },
   "9.1": {
-    "sha": "6f0c0b03ed3f6e084572fa12de678123c45f28b2",
+    "sha": "1c45b6bfb12ee5980a15e6e5ae014ee2bdfaf08f",
     "message": "Add accounts-ui and accounts-password packages"
   },
   "8.6": {
-    "sha": "2786f6c52923459e83212a1ea9b0b0a809f410d9",
+    "sha": "8173671b2f2e8411b20194d818abadea83f974f0",
     "message": "Display incompleteCount in the header"
   },
   "8.5": {
-    "sha": "0dce33f22620717927a9c45046554fb0af0fc5b4",
+    "sha": "0ffc7a42c13617ffa11d1460f1251531043813fd",
     "message": "Update getMeteorData to return incompleteCount"
   },
   "8.4": {
-    "sha": "a1694b147586aec4cb1c7537600b6b503412670d",
+    "sha": "f48c03507b9438ad4c1e9a48a2d5b82b1bd354ea",
     "message": "Replace getMeteorData to filter tasks"
   },
   "8.3": {
-    "sha": "8c602b47086cb8d5e3ea23812811dbe97941ba01",
+    "sha": "59dab20a8dbb012f3313dc660a1266612298e786",
     "message": "Add toggleHideCompleted handler to App"
   },
   "8.2": {
-    "sha": "958c0d75290e64d006305f2dd03dede162e2f527",
+    "sha": "a6bea499cba226edcf0f537615cc0ecfc0f47230",
     "message": "Add getInitialState to App component"
   },
   "8.1": {
-    "sha": "ef6891054dfa0c797e0dd95761f2966c16efcf8f",
+    "sha": "922d90961e4cdab0aaef6c07438d853b2d16e32a",
     "message": "Add hide completed checkbox to App component"
   },
   "5.1": {
-    "sha": "d9b4770a22e1a99eac80e95fe0510cbc8648f9b1",
+    "sha": "2560d9ad137bf546344670d81fcaaee6ef38c560",
     "message": "Update Task component to add features"
   },
   "4.3": {
-    "sha": "5c4ba0f7864e0a2cbf0bcb03b6a7df22586d5e68",
+    "sha": "4bd9bbafd1845dd9aee21da655f0dcde7b4b3da5",
     "message": "Update getMeteorData to sort tasks by time"
   },
   "4.2": {
-    "sha": "595556f61f3ba902a055bd310df9ffbd4576dc6b",
+    "sha": "1b87eff8bd37fc375f506c32b9c4d765f15b301f",
     "message": "Add handleSubmit method to App component"
   },
   "4.1": {
-    "sha": "6a9590b6ad0b3a8aee577d5ce33b4df759f2acba",
+    "sha": "8a0525ce1e84b872ca35743b7101f14ec627b41f",
     "message": "Add form for new tasks"
   },
   "3.2": {
-    "sha": "9276239ccfca511667a61cdad7182a9a95681216",
+    "sha": "ce86ff010f94a8a1cc2c8e6f9331df080565682b",
     "message": "Modify App component to get tasks from collection"
   },
   "3.1": {
-    "sha": "33dd1dab78f3c09ddd6f24664e042f2ddbf8ce01",
+    "sha": "b21327904ff8de4d51618d88edc6aabb39060c65",
     "message": "Define tasks collection"
   },
   "2.6": {
-    "sha": "c5f475a98824525922a32e69ac5eca7de0316957",
+    "sha": "ec0e0aee25ff51d8f3096ea446537113aded6ab3",
     "message": "Add CSS"
   },
   "2.5": {
-    "sha": "8aa85a45acb1ffcc7f94c141a3563556236b9b1c",
+    "sha": "c676d9f668e3adb9c4f214bdafaa8f388d63678b",
     "message": "Create Task component"
   },
   "2.4": {
-    "sha": "1f2cc89f74f801642f4bc0e3d2ff14c569765ca0",
+    "sha": "1b8a7577860c7d9f0f0afa6996cf8fa6fe92d3ec",
     "message": "Create App component"
   },
   "2.3": {
-    "sha": "676c35859282935e8c2cb81ff12b2b27135ae33e",
+    "sha": "36c59c642fc6a7b48ebe0378c5f75488854479c7",
     "message": "Replace starter JS"
   },
   "2.2": {
-    "sha": "54289ae4946acb191d1f153aa4e8cfb938970811",
+    "sha": "3cec511c67cb3b78b43329d12b55da7efb2a107e",
     "message": "Replace starter HTML code"
   },
   "2.1": {
-    "sha": "7ba04da80922a977448359e5eaef88f6d2f28ea0",
+    "sha": "96bd5130dbd707aa497a0effa85cb7316cd7d560",
     "message": "Add the React package"
   },
   "1": {
-    "sha": "0aa691766c1c76cfab3436e0507f33ad27e23962",
+    "sha": "d7a5e7f791c6f6659c4767f8bb4afa853d793647",
     "message": "Run `meteor create`"
   }
 }
\ No newline at end of file
diff --git a/generated/react.multi.patch b/generated/react.multi.patch
index 133c6cb..6c08057 100644
--- a/generated/react.multi.patch
+++ b/generated/react.multi.patch
@@ -1,4 +1,4 @@
-From 0aa691766c1c76cfab3436e0507f33ad27e23962 Mon Sep 17 00:00:00 2001
+From d7a5e7f791c6f6659c4767f8bb4afa853d793647 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:00:51 -0700
 Subject: [PATCH 01/41] Step 1: Run `meteor create`
@@ -204,7 +204,7 @@ index 0000000..4f8c65d
 2.2.1
 
 
-From 7ba04da80922a977448359e5eaef88f6d2f28ea0 Mon Sep 17 00:00:00 2001
+From 96bd5130dbd707aa497a0effa85cb7316cd7d560 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:02:01 -0700
 Subject: [PATCH 02/41] Step 2.1: Add the React package
@@ -268,7 +268,7 @@ index 410e1d9..288ee5f 100644
 2.2.1
 
 
-From 54289ae4946acb191d1f153aa4e8cfb938970811 Mon Sep 17 00:00:00 2001
+From 3cec511c67cb3b78b43329d12b55da7efb2a107e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:03:54 -0700
 Subject: [PATCH 03/41] Step 2.2: Replace starter HTML code
@@ -302,7 +302,7 @@ index e296a58..1aae2d4 100644
 2.2.1
 
 
-From 676c35859282935e8c2cb81ff12b2b27135ae33e Mon Sep 17 00:00:00 2001
+From 36c59c642fc6a7b48ebe0378c5f75488854479c7 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:05:08 -0700
 Subject: [PATCH 04/41] Step 2.3: Replace starter JS
@@ -361,7 +361,7 @@ index 0000000..a7e2d2f
 2.2.1
 
 
-From 1f2cc89f74f801642f4bc0e3d2ff14c569765ca0 Mon Sep 17 00:00:00 2001
+From 1b8a7577860c7d9f0f0afa6996cf8fa6fe92d3ec Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:05:58 -0700
 Subject: [PATCH 05/41] Step 2.4: Create App component
@@ -411,7 +411,7 @@ index 0000000..27ac66e
 2.2.1
 
 
-From 8aa85a45acb1ffcc7f94c141a3563556236b9b1c Mon Sep 17 00:00:00 2001
+From c676d9f668e3adb9c4f214bdafaa8f388d63678b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:06:31 -0700
 Subject: [PATCH 06/41] Step 2.5: Create Task component
@@ -444,7 +444,7 @@ index 0000000..c49e7ac
 2.2.1
 
 
-From c5f475a98824525922a32e69ac5eca7de0316957 Mon Sep 17 00:00:00 2001
+From ec0e0aee25ff51d8f3096ea446537113aded6ab3 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:07:02 -0700
 Subject: [PATCH 07/41] Step 2.6: Add CSS
@@ -589,7 +589,7 @@ index b6b4052..cec3ae6 100644
 2.2.1
 
 
-From 33dd1dab78f3c09ddd6f24664e042f2ddbf8ce01 Mon Sep 17 00:00:00 2001
+From b21327904ff8de4d51618d88edc6aabb39060c65 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:08:08 -0700
 Subject: [PATCH 08/41] Step 3.1: Define tasks collection
@@ -613,7 +613,7 @@ index a7e2d2f..a67b030 100644
 2.2.1
 
 
-From 9276239ccfca511667a61cdad7182a9a95681216 Mon Sep 17 00:00:00 2001
+From ce86ff010f94a8a1cc2c8e6f9331df080565682b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:08:44 -0700
 Subject: [PATCH 09/41] Step 3.2: Modify App component to get tasks from
@@ -658,7 +658,7 @@ index 27ac66e..60f1400 100644
 2.2.1
 
 
-From 6a9590b6ad0b3a8aee577d5ce33b4df759f2acba Mon Sep 17 00:00:00 2001
+From 8a0525ce1e84b872ca35743b7101f14ec627b41f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:13:37 -0700
 Subject: [PATCH 10/41] Step 4.1: Add form for new tasks
@@ -689,7 +689,7 @@ index 60f1400..7b798bb 100644
 2.2.1
 
 
-From 595556f61f3ba902a055bd310df9ffbd4576dc6b Mon Sep 17 00:00:00 2001
+From 1b87eff8bd37fc375f506c32b9c4d765f15b301f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:14:08 -0700
 Subject: [PATCH 11/41] Step 4.2: Add handleSubmit method to App component
@@ -728,7 +728,7 @@ index 7b798bb..67184cc 100644
 2.2.1
 
 
-From 5c4ba0f7864e0a2cbf0bcb03b6a7df22586d5e68 Mon Sep 17 00:00:00 2001
+From 4bd9bbafd1845dd9aee21da655f0dcde7b4b3da5 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:14:40 -0700
 Subject: [PATCH 12/41] Step 4.3: Update getMeteorData to sort tasks by time
@@ -754,7 +754,7 @@ index 67184cc..64197bd 100644
 2.2.1
 
 
-From d9b4770a22e1a99eac80e95fe0510cbc8648f9b1 Mon Sep 17 00:00:00 2001
+From 2560d9ad137bf546344670d81fcaaee6ef38c560 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:17:06 -0700
 Subject: [PATCH 13/41] Step 5.1: Update Task component to add features
@@ -814,7 +814,7 @@ index c49e7ac..d1c618b 100644
 2.2.1
 
 
-From ef6891054dfa0c797e0dd95761f2966c16efcf8f Mon Sep 17 00:00:00 2001
+From 922d90961e4cdab0aaef6c07438d853b2d16e32a Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:21:30 -0700
 Subject: [PATCH 14/41] Step 8.1: Add hide completed checkbox to App component
@@ -847,7 +847,7 @@ index 64197bd..ef39e73 100644
 2.2.1
 
 
-From 958c0d75290e64d006305f2dd03dede162e2f527 Mon Sep 17 00:00:00 2001
+From a6bea499cba226edcf0f537615cc0ecfc0f47230 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:07 -0700
 Subject: [PATCH 15/41] Step 8.2: Add getInitialState to App component
@@ -877,7 +877,7 @@ index ef39e73..144582d 100644
 2.2.1
 
 
-From 8c602b47086cb8d5e3ea23812811dbe97941ba01 Mon Sep 17 00:00:00 2001
+From 59dab20a8dbb012f3313dc660a1266612298e786 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:32 -0700
 Subject: [PATCH 16/41] Step 8.3: Add toggleHideCompleted handler to App
@@ -907,7 +907,7 @@ index 144582d..6799fca 100644
 2.2.1
 
 
-From a1694b147586aec4cb1c7537600b6b503412670d Mon Sep 17 00:00:00 2001
+From f48c03507b9438ad4c1e9a48a2d5b82b1bd354ea Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:02 -0700
 Subject: [PATCH 17/41] Step 8.4: Replace getMeteorData to filter tasks
@@ -943,7 +943,7 @@ index 6799fca..105577e 100644
 2.2.1
 
 
-From 0dce33f22620717927a9c45046554fb0af0fc5b4 Mon Sep 17 00:00:00 2001
+From 0ffc7a42c13617ffa11d1460f1251531043813fd Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:44 -0700
 Subject: [PATCH 18/41] Step 8.5: Update getMeteorData to return
@@ -971,7 +971,7 @@ index 105577e..09415f3 100644
 2.2.1
 
 
-From 2786f6c52923459e83212a1ea9b0b0a809f410d9 Mon Sep 17 00:00:00 2001
+From 8173671b2f2e8411b20194d818abadea83f974f0 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:24:09 -0700
 Subject: [PATCH 19/41] Step 8.6: Display incompleteCount in the header
@@ -997,7 +997,7 @@ index 09415f3..f5b8224 100644
 2.2.1
 
 
-From 6f0c0b03ed3f6e084572fa12de678123c45f28b2 Mon Sep 17 00:00:00 2001
+From 1c45b6bfb12ee5980a15e6e5ae014ee2bdfaf08f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:02 -0700
 Subject: [PATCH 20/41] Step 9.1: Add accounts-ui and accounts-password
@@ -1073,7 +1073,7 @@ index 288ee5f..e964910 100644
 2.2.1
 
 
-From dab17acf27046daafcabc4e29c05ffd911ad5291 Mon Sep 17 00:00:00 2001
+From 476e97407f34d17fff6ad29ed0e69e7f91524cbb Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:59 -0700
 Subject: [PATCH 21/41] Step 9.2: Create Accounts UI wrapper component
@@ -1108,7 +1108,7 @@ index 0000000..87fd3b3
 2.2.1
 
 
-From 7af1c6780234736bb8f442c5cbf206ee53246263 Mon Sep 17 00:00:00 2001
+From 2fc5338aece0c67370206bd0a53b77e4c94efad7 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:27:36 -0700
 Subject: [PATCH 22/41] Step 9.3: Include sign in form
@@ -1134,7 +1134,7 @@ index f5b8224..e829c27 100644
 2.2.1
 
 
-From 2e167dbdf1654a04f002771edecd0ff0a00c0557 Mon Sep 17 00:00:00 2001
+From 0872f25fd7507e5f2750a97c9dad479469306e31 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:28:08 -0700
 Subject: [PATCH 23/41] Step 9.4: Configure accounts-ui to only require
@@ -1162,7 +1162,7 @@ index a67b030..36ce4bc 100644
 2.2.1
 
 
-From 3f4b411ff42e6f82f4d43d28fdf5cfb1b1197682 Mon Sep 17 00:00:00 2001
+From ea3a5c3919625bafc8d8137303cac4bcd56563ae Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:28:46 -0700
 Subject: [PATCH 24/41] Step 9.5: Update insert to save username and owner
@@ -1190,7 +1190,7 @@ index e829c27..dd7862f 100644
 2.2.1
 
 
-From 4fff683816569ab5f5654251f6dd77527b9a59b5 Mon Sep 17 00:00:00 2001
+From 9b01c38c2ec27fed6653fa5e6efa2b83bc34cd8b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:29:16 -0700
 Subject: [PATCH 25/41] Step 9.6: Update getMeteorData to return data about
@@ -1218,7 +1218,7 @@ index dd7862f..dfedd85 100644
 2.2.1
 
 
-From 199ef1827ecc472723946d7c2ffa25216d40a793 Mon Sep 17 00:00:00 2001
+From 5721735aea4bffdfadfe2d1e6113c7bac5d4fb61 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:06 -0700
 Subject: [PATCH 26/41] Step 9.7: Wrap new task form to only show when logged
@@ -1257,7 +1257,7 @@ index dfedd85..b8824a4 100644
 2.2.1
 
 
-From 50e06b33c4e05ebe111cd855b5ab015ec743be5c Mon Sep 17 00:00:00 2001
+From 30dc469cf13d5f65ad304fde4f1e216e9f4aa452 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:48 -0700
 Subject: [PATCH 27/41] Step 9.8: Update Task component to show username
@@ -1285,7 +1285,7 @@ index d1c618b..2caead7 100644
 2.2.1
 
 
-From 0a8e5501bd5c1bedb7ccb3c251722ff84972f922 Mon Sep 17 00:00:00 2001
+From 820425c995deada233144a4212871f42f4be1410 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:31:22 -0700
 Subject: [PATCH 28/41] Step 10.1: Remove insecure package
@@ -1323,7 +1323,7 @@ index e964910..0d54bf9 100644
 2.2.1
 
 
-From 6e735ca97ff876c4ac4c75b2ae374ddeb86abb8d Mon Sep 17 00:00:00 2001
+From e711321a7f138e24b849c17b16e1d229768d0c11 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:21 -0700
 Subject: [PATCH 29/41] Step 10.2: Add methods for add, remove, update task
@@ -1368,7 +1368,7 @@ index 36ce4bc..b1aa692 100644
 2.2.1
 
 
-From d0803ad5673e8fae47b9ff7fed850a80d5f2d64e Mon Sep 17 00:00:00 2001
+From dc0883c23649fb89b4489c97e2f1127c4cfeef2c Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:59 -0700
 Subject: [PATCH 30/41] Step 10.3: Update App component to use addTask method
@@ -1399,7 +1399,7 @@ index b8824a4..858f96b 100644
 2.2.1
 
 
-From 570c42f724a873d7d2a2c71bd0581522f8f2e23f Mon Sep 17 00:00:00 2001
+From 0e519b181c0888a67f1424ac5d354c3f78a13c16 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:33:38 -0700
 Subject: [PATCH 31/41] Step 10.4: Update Task to use setChecked and removeTask
@@ -1433,7 +1433,7 @@ index 2caead7..32577ed 100644
 2.2.1
 
 
-From e9da4141e5deed48e6ef079e3867e70aba388583 Mon Sep 17 00:00:00 2001
+From c25ceadfb6a01c7892e8c0fa89c20c7ced190194 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:34:33 -0700
 Subject: [PATCH 32/41] Step 11.1: Remove autopublish package
@@ -1471,7 +1471,7 @@ index 0d54bf9..777cca4 100644
 2.2.1
 
 
-From a1ad699753dbd4730d2d34ac50e810e573c52a99 Mon Sep 17 00:00:00 2001
+From 54e487630478cd1389a58c08816bd578af1fceaf Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:35:03 -0700
 Subject: [PATCH 33/41] Step 11.2: Add publish to server and subscribe to
@@ -1510,7 +1510,7 @@ index b1aa692..f62ed9e 100644
 2.2.1
 
 
-From 2347589fa6cd3b885929ea430dc9024bf12f8482 Mon Sep 17 00:00:00 2001
+From f35bac8c484061a0e0200806c994e5b8a39d89ea Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:29 -0700
 Subject: [PATCH 34/41] Step 11.3: Add setPrivate method
@@ -1544,7 +1544,7 @@ index f62ed9e..c2a3196 100644
 2.2.1
 
 
-From 96a833da5b09ddf5b279027a383ba8593bef06b6 Mon Sep 17 00:00:00 2001
+From 625b356e7ed1bfa66c3a36d1fb37e8373c7b5095 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:59 -0700
 Subject: [PATCH 35/41] Step 11.4: Update renderTasks to pass in
@@ -1577,7 +1577,7 @@ index 858f96b..82915ec 100644
 2.2.1
 
 
-From 20cf428657fbb42ec937d319e0d7a993226fe551 Mon Sep 17 00:00:00 2001
+From 319d7619de668f136a04378ae182a9b9c17480a4 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:37:28 -0700
 Subject: [PATCH 36/41] Step 11.5: Add a new prop type for Task component
@@ -1604,7 +1604,7 @@ index 32577ed..c85416a 100644
 2.2.1
 
 
-From 7049ced6d9fdbcdded6c9a0e5dc9b6260255f2a8 Mon Sep 17 00:00:00 2001
+From 9a487d4eb60b2d224d2b858da28123344315ca17 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:04 -0700
 Subject: [PATCH 37/41] Step 11.6: Add private button, shown only to owner
@@ -1634,7 +1634,7 @@ index c85416a..1bbd4fb 100644
 2.2.1
 
 
-From 2603b34a2809af83f48c80f22b37f812df15f9ea Mon Sep 17 00:00:00 2001
+From 4f1dae36828297dd73d3447c29fd9f34f308e78b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:33 -0700
 Subject: [PATCH 38/41] Step 11.7: Add private button event handler to Task
@@ -1662,7 +1662,7 @@ index 1bbd4fb..75827dd 100644
 2.2.1
 
 
-From 6eafb3a49a126f0a10db9c5f524ab2e74ba9880d Mon Sep 17 00:00:00 2001
+From 67fa7b381d5b51de0c78ee129a000aadf95de4bc Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:22 -0700
 Subject: [PATCH 39/41] Step 11.8: Add private className to Task when needed
@@ -1690,7 +1690,7 @@ index 75827dd..37eadd3 100644
 2.2.1
 
 
-From b3d376a377d8a57135ea67f10b81fdcc566765ff Mon Sep 17 00:00:00 2001
+From e527227d30c447c3d7ffd3723d6540f361c9fe42 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:58 -0700
 Subject: [PATCH 40/41] Step 11.9: Only publish tasks the current user can see
@@ -1723,7 +1723,7 @@ index c2a3196..24849d5 100644
 2.2.1
 
 
-From e53e739f4b2586bf2f3e9786403bb57438194ffc Mon Sep 17 00:00:00 2001
+From b847140c6490cf3a1734199deb26d5758ea0c9ac Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:40:55 -0700
 Subject: [PATCH 41/41] Step 11.10: Add extra security to methods
diff --git a/repos/react b/repos/react
index e53e739..b847140 160000
--- a/repos/react
+++ b/repos/react
@@ -1 +1 @@
-Subproject commit e53e739f4b2586bf2f3e9786403bb57438194ffc
+Subproject commit b847140c6490cf3a1734199deb26d5758ea0c9ac
-- 
2.13.6 (Apple Git-96)


From bae2cdc83ab8a5e96006fb8d151897f0d58d8139 Mon Sep 17 00:00:00 2001
From: Uri Goldshtein <uri.goldshtein@gmail.com>
Date: Sat, 18 Jul 2015 16:21:19 +0300
Subject: [PATCH 059/164] Add Angular commits and patch

---
 generated/angular-commits.js  |  162 +++++-
 generated/angular.multi.patch | 1238 ++++++++++++++++++++++++++++-------------
 2 files changed, 985 insertions(+), 415 deletions(-)

diff --git a/generated/angular-commits.js b/generated/angular-commits.js
index 9f6f2e4..e23c143 100644
--- a/generated/angular-commits.js
+++ b/generated/angular-commits.js
@@ -1,43 +1,151 @@
 // This file auto-generated by scripts/map-commits-to-steps.rb
 ANGULAR_COMMITS = {
-  "11": {
-    "sha": "0ca238c099dbf17aa66873f813e8fed43b9b694d",
-    "message": "Add a private task feature, remove the autopublish package"
+  "11.8": {
+    "sha": "da7a9772ff9d58545765dc9eb370508f25a06956",
+    "message": "Add extra security to methods"
   },
-  "10": {
-    "sha": "05d534ee034fea7ea0471033882acd32a4508fa4",
-    "message": "Move database logic into Meteor.methods, remove insecure package"
+  "11.7": {
+    "sha": "f215e80f518c6d0aea213d6e230dc6521a028e2f",
+    "message": "Publish only public and owner's tasks"
   },
-  "9": {
-    "sha": "947d9a7761f5800f8189287752080157c4e125f3",
-    "message": "Add users and login; display which user created a task"
+  "11.6": {
+    "sha": "92a93e3b861d94aa9bcc65dc510e803f6029dd65",
+    "message": "Add setPrivate method"
   },
-  "8": {
-    "sha": "d6229448a5e63137ddaa67ee9e7431466d4e796c",
-    "message": "Add an option to hide completed tasks, and show incomplete task count"
+  "11.5": {
+    "sha": "953c93f072e41324937a7183015579ed4899c90c",
+    "message": "Add private CSS class to task"
   },
-  "7": {
-    "sha": "bbcc31b5304fe95df6fe94cfe05229d75e1ce29f",
-    "message": "Make Angular initialize on mobile devices"
+  "11.4": {
+    "sha": "52d3d8eff291d72e9d320a5048d05a8ba9b26e01",
+    "message": "Add setPrivate button to template"
   },
-  "5": {
-    "sha": "a7ca2a6d3ff099d1253604619395b4ed6a46e691",
-    "message": "Make it possible to check off and delete tasks"
+  "11.3": {
+    "sha": "e35c7c06c99042e26219976379ff75eef93876a7",
+    "message": "Subscribe to tasks publication"
   },
-  "4": {
-    "sha": "7037614aa24edbf7f2f5f1b8b44b8d813d604695",
-    "message": "A form to add tasks, sort to make newest tasks at the top"
+  "11.2": {
+    "sha": "e9afaa4006a2ffcb0b580a6d09b4d1a081fe12dc",
+    "message": "Add server publish function to tasks"
   },
-  "3": {
-    "sha": "3ccf55d5ffa976ebf849c4e16a2505e92c07fff0",
+  "11.1": {
+    "sha": "d14c3f1c5d1e6aebc8daec8b406c9021bbb7afe8",
+    "message": "Remove the autopublish package"
+  },
+  "10.4": {
+    "sha": "33215ecc0a0da5b8aedac04d5ae57f84770b9906",
+    "message": "Change template events to call methods"
+  },
+  "10.3": {
+    "sha": "e6e0a9eff07668f5189c9e51b4162eacb858a02d",
+    "message": "Add scope functions to call the Meteor methods"
+  },
+  "10.2": {
+    "sha": "3adde199e75d84eae82cf51c48f94f8b3ac607f6",
+    "message": "Add Meteor Methods for add, delete and check tasks"
+  },
+  "10.1": {
+    "sha": "a01d86230123f4a46623ddf18775a41ca857e147",
+    "message": "Remove the insecure package"
+  },
+  "9.6": {
+    "sha": "5b026977269006ac5ebfda7ceb25923fc4d69ab4",
+    "message": "Add username to the displayed task"
+  },
+  "9.5": {
+    "sha": "78d5f5619d9434035d6451ea4077dfcc8edb54ef",
+    "message": "Hide new task form if user is not logged in"
+  },
+  "9.4": {
+    "sha": "8210ff2c37a8b9ccb6b9750aa9d0df94f4e59a8a",
+    "message": "Add owner and username to created task"
+  },
+  "9.3": {
+    "sha": "253abff3918109b97f642067ec222cf529b09c6c",
+    "message": "Configure accounts UI to use usernames instead of email"
+  },
+  "9.2": {
+    "sha": "35a313074e5780255f2c3010163a2dec2411afac",
+    "message": "Add Blaze loginButtons template to HTML"
+  },
+  "9.1": {
+    "sha": "452eb1f509886d58662fee94da75dffaeab9abc5",
+    "message": "Add accounts-ui and accounts-password packages"
+  },
+  "8.6": {
+    "sha": "3d4d598cac0c28b9c527545b36b3d7376a8c104c",
+    "message": "Add incompleteCount to header"
+  },
+  "8.5": {
+    "sha": "f0fb1566f2dfdcd206ec6efe2e274090a1c4a5a8",
+    "message": "Add incompleteCount to scope"
+  },
+  "8.4": {
+    "sha": "ea6ca654274d1e5a22ec76a2a33c32c388c4ce75",
+    "message": "Make query parameter reactive"
+  },
+  "8.3": {
+    "sha": "5adc4b31da9476a898df3db649a4aa7418b0b7d7",
+    "message": "Change the Collection to use query parameter"
+  },
+  "8.2": {
+    "sha": "919560a990de2a2a370aea6f9e28888f09bd1b6f",
+    "message": "Watch hideCompleted and change the query variable"
+  },
+  "8.1": {
+    "sha": "9b12d06c6242558c1077ad60ab07aefcecd3814f",
+    "message": "Add hideComplete checkbox to template"
+  },
+  "7.2": {
+    "sha": "85e80627bfb80b13c21367c5f77cdcfdf5fadbd0",
+    "message": "Bootstrap Angular to mobile as well"
+  },
+  "7.1": {
+    "sha": "8466c1cdf7f7afc7f2f93dce2fa4d514c59f7130",
+    "message": "Remove ng-app"
+  },
+  "5.1": {
+    "sha": "ade01c58b021c1fc432b323bbeaa78ab9f72b941",
+    "message": "Add done and delete buttons to task"
+  },
+  "4.3": {
+    "sha": "7d3a03a08b48b1a1f0ac492d7f6685206b459d36",
+    "message": "Sort task list by date"
+  },
+  "4.2": {
+    "sha": "3ba891e95d2ebb77e99acb525b79506fc516a1cb",
+    "message": "Create Add Task scope function"
+  },
+  "4.1": {
+    "sha": "ab09bcf16256968772baf78d792ee3802230a615",
+    "message": "Add new task form to template"
+  },
+  "3.1": {
+    "sha": "5589cc40e89bf8ae25a31e69ed86c9c7ebf0073a",
     "message": "Replace the static array with a Collection"
   },
-  "2": {
-    "sha": "2b4394e49f1345e5e106781831759454841cda73",
-    "message": "Add templates backed by a static array and all of the CSS"
+  "2.5": {
+    "sha": "f7cce808089dc131114eedd453292b95731690ac",
+    "message": "Add CSS"
+  },
+  "2.4": {
+    "sha": "7ec04bb81bd70c6926b42f7ee6f9f9995fe45ece",
+    "message": "First Angular template"
+  },
+  "2.3": {
+    "sha": "82fd8e01f18fa64faca04535956815e5dc3f4ea3",
+    "message": "Init Angular app and controller"
+  },
+  "2.2": {
+    "sha": "579e10de48cd091522b880c6280fcfcc3ec81ed5",
+    "message": "Link main file to Angular templates"
+  },
+  "2.1": {
+    "sha": "3da58d0f1228342c24254b0268ae04156c5009e9",
+    "message": "Add the Angular package"
   },
   "1": {
-    "sha": "c72debff708d1f5ed2ce9e2ca824cee2aec38277",
+    "sha": "b18f1aaf683e5f5c5b20212b43a4fef97c1c7664",
     "message": "Run `meteor create`"
   }
 }
\ No newline at end of file
diff --git a/generated/angular.multi.patch b/generated/angular.multi.patch
index 9287d7c..dc8f7dd 100644
--- a/generated/angular.multi.patch
+++ b/generated/angular.multi.patch
@@ -1,7 +1,7 @@
-From c72debff708d1f5ed2ce9e2ca824cee2aec38277 Mon Sep 17 00:00:00 2001
+From b18f1aaf683e5f5c5b20212b43a4fef97c1c7664 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Wed, 13 May 2015 14:45:15 -0700
-Subject: [PATCH 01/10] Step 1: Run `meteor create`
+Subject: [PATCH 01/37] Step 1: Run `meteor create`
 
 ---
  .meteor/.finished-upgraders |  8 ++++++++
@@ -201,24 +201,18 @@ index 0000000..4f8c65d
 +  });
 +}
 -- 
-2.2.1
+2.3.2 (Apple Git-55)
 
 
-From 2b4394e49f1345e5e106781831759454841cda73 Mon Sep 17 00:00:00 2001
+From 3da58d0f1228342c24254b0268ae04156c5009e9 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Wed, 13 May 2015 15:12:54 -0700
-Subject: [PATCH 02/10] Step 2: Add templates backed by a static array and all
- of the CSS
+Date: Sat, 18 Jul 2015 12:34:04 +0300
+Subject: [PATCH 02/37] Step 2.1: Add the Angular package
 
 ---
- .meteor/packages          |   1 +
- .meteor/versions          |   4 ++
- simple-todos-angular.css  | 125 ++++++++++++++++++++++++++++++++++++++++++++++
- simple-todos-angular.html |  12 +----
- simple-todos-angular.js   |  31 +++++-------
- todos-list.ng.html        |   9 ++++
- 6 files changed, 153 insertions(+), 29 deletions(-)
- create mode 100644 todos-list.ng.html
+ .meteor/packages | 1 +
+ .meteor/versions | 4 ++++
+ 2 files changed, 5 insertions(+)
 
 diff --git a/.meteor/packages b/.meteor/packages
 index 99704e0..fa5ef7a 100644
@@ -230,11 +224,11 @@ index 99704e0..fa5ef7a 100644
  insecure
 +urigo:angular
 diff --git a/.meteor/versions b/.meteor/versions
-index 410e1d9..4404870 100644
+index 410e1d9..70b0764 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
 @@ -1,3 +1,4 @@
-+angular:angular@1.4.0
++angular:angular@1.4.2
  autopublish@1.0.3
  autoupdate@1.2.1
  base64@1.0.3
@@ -242,7 +236,7 @@ index 410e1d9..4404870 100644
  boilerplate-generator@1.0.3
  callback-hook@1.0.3
  check@1.0.5
-+dburles:mongo-collection-instances@0.3.3
++dburles:mongo-collection-instances@0.3.4
  ddp@1.1.0
  deps@1.0.7
  ejson@1.0.6
@@ -250,7 +244,7 @@ index 410e1d9..4404870 100644
  insecure@1.0.3
  jquery@1.11.3_2
  json@1.0.3
-+lai:collection-extensions@0.1.3
++lai:collection-extensions@0.1.4
  launch-screen@1.0.2
  livedata@1.0.13
  logging@1.0.7
@@ -258,15 +252,145 @@ index 410e1d9..4404870 100644
  tracker@1.0.7
  ui@1.0.6
  underscore@1.0.3
-+urigo:angular@0.9.0
++urigo:angular@0.9.2
  url@1.0.4
  webapp@1.2.0
  webapp-hashing@1.0.3
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 579e10de48cd091522b880c6280fcfcc3ec81ed5 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 12:44:07 +0300
+Subject: [PATCH 03/37] Step 2.2: Link main file to Angular templates
+
+---
+ simple-todos-angular.html | 14 ++++----------
+ 1 file changed, 4 insertions(+), 10 deletions(-)
+
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index 30ca9b0..f1391a5 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -1,14 +1,8 @@
+ <head>
+-  <title>simple-todos-angular</title>
++  <title>Todo List</title>
+ </head>
+ 
+-<body>
+-  <h1>Welcome to Meteor!</h1>
+-
+-  {{> hello}}
++<body ng-app="simple-todos"
++      ng-include="'todos-list.ng.html'"
++      ng-controller="TodosListCtrl">
+ </body>
+-
+-<template name="hello">
+-  <button>Click Me</button>
+-  <p>You've pressed the button {{counter}} times.</p>
+-</template>
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 82fd8e01f18fa64faca04535956815e5dc3f4ea3 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 12:46:44 +0300
+Subject: [PATCH 04/37] Step 2.3: Init Angular app and controller
+
+---
+ simple-todos-angular.js | 29 +++++++++++------------------
+ 1 file changed, 11 insertions(+), 18 deletions(-)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 4f8c65d..fa676f2 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -1,23 +1,16 @@
+ if (Meteor.isClient) {
+-  // counter starts at 0
+-  Session.setDefault('counter', 0);
+ 
+-  Template.hello.helpers({
+-    counter: function () {
+-      return Session.get('counter');
+-    }
+-  });
++  // This code only runs on the client
++  angular.module('simple-todos',['angular-meteor']);
+ 
+-  Template.hello.events({
+-    'click button': function () {
+-      // increment the counter when button is clicked
+-      Session.set('counter', Session.get('counter') + 1);
+-    }
+-  });
+-}
++  angular.module('simple-todos').controller('TodosListCtrl', ['$scope',
++    function ($scope) {
++
++      $scope.tasks = [
++        { text: 'This is task 1' },
++        { text: 'This is task 2' },
++        { text: 'This is task 3' }
++      ];
+ 
+-if (Meteor.isServer) {
+-  Meteor.startup(function () {
+-    // code to run on server at startup
+-  });
++  }]);
+ }
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 7ec04bb81bd70c6926b42f7ee6f9f9995fe45ece Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 12:48:44 +0300
+Subject: [PATCH 05/37] Step 2.4: First Angular template
+
+---
+ todos-list.ng.html | 9 +++++++++
+ 1 file changed, 9 insertions(+)
+ create mode 100644 todos-list.ng.html
+
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+new file mode 100644
+index 0000000..3dcfae9
+--- /dev/null
++++ b/todos-list.ng.html
+@@ -0,0 +1,9 @@
++<div class="container">
++  <header>
++    <h1>Todo List</h1>
++  </header>
++
++  <ul ng-repeat="task in tasks">
++    <li>{{task.text}}</li>
++  </ul>
++</div>
+-- 
+2.3.2 (Apple Git-55)
+
+
+From f7cce808089dc131114eedd453292b95731690ac Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 12:50:26 +0300
+Subject: [PATCH 06/37] Step 2.5: Add CSS
+
+---
+ simple-todos-angular.css | 126 +++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 126 insertions(+)
+
 diff --git a/simple-todos-angular.css b/simple-todos-angular.css
-index b6b4052..cec3ae6 100644
+index b6b4052..0bca5d2 100644
 --- a/simple-todos-angular.css
 +++ b/simple-todos-angular.css
-@@ -1 +1,126 @@
+@@ -1 +1,127 @@
  /* CSS declarations go here */
 +body {
 +  font-family: sans-serif;
@@ -393,286 +517,273 @@ index b6b4052..cec3ae6 100644
 +    padding-bottom: 5px;
 +  }
 +}
-\ No newline at end of file
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 30ca9b0..b6625d9 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -1,14 +1,6 @@
- <head>
--  <title>simple-todos-angular</title>
-+  <title>Todo List</title>
- </head>
- 
--<body>
--  <h1>Welcome to Meteor!</h1>
--
--  {{> hello}}
-+<body ng-app='simple-todos' ng-include="'todos-list.ng.html'"  ng-controller="TodosListCtrl">
- </body>
--
--<template name="hello">
--  <button>Click Me</button>
--  <p>You've pressed the button {{counter}} times.</p>
--</template>
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 4f8c65d..53ebac1 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -1,23 +1,16 @@
- if (Meteor.isClient) {
--  // counter starts at 0
--  Session.setDefault('counter', 0);
- 
--  Template.hello.helpers({
--    counter: function () {
--      return Session.get('counter');
--    }
--  });
-+  // This code only runs on the client
-+  angular.module("simple-todos",['angular-meteor']);
- 
--  Template.hello.events({
--    'click button': function () {
--      // increment the counter when button is clicked
--      Session.set('counter', Session.get('counter') + 1);
--    }
--  });
--}
-+  angular.module("simple-todos").controller("TodosListCtrl", ['$scope',
-+    function($scope){
- 
--if (Meteor.isServer) {
--  Meteor.startup(function () {
--    // code to run on server at startup
--  });
--}
-+      $scope.tasks = [
-+        { text: "This is task 1" },
-+        { text: "This is task 2" },
-+        { text: "This is task 3" }
-+      ];
-+
-+    }]);
-+}
-\ No newline at end of file
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-new file mode 100644
-index 0000000..176ffec
---- /dev/null
-+++ b/todos-list.ng.html
-@@ -0,0 +1,9 @@
-+<div class="container">
-+	<header>
-+		<h1>Todo List</h1>
-+	</header>
 +
-+	<ul ng-repeat="task in tasks">
-+		<li>{{task.text}}</li>
-+	</ul>
-+</div>
-\ No newline at end of file
 -- 
-2.2.1
+2.3.2 (Apple Git-55)
 
 
-From 3ccf55d5ffa976ebf849c4e16a2505e92c07fff0 Mon Sep 17 00:00:00 2001
+From 5589cc40e89bf8ae25a31e69ed86c9c7ebf0073a Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Wed, 13 May 2015 15:27:45 -0700
-Subject: [PATCH 03/10] Step 3: Replace the static array with a Collection
+Date: Sat, 18 Jul 2015 12:56:31 +0300
+Subject: [PATCH 07/37] Step 3.1: Replace the static array with a Collection
 
 ---
- simple-todos-angular.js | 12 +++++-------
- 1 file changed, 5 insertions(+), 7 deletions(-)
+ simple-todos-angular.js | 14 ++++++--------
+ 1 file changed, 6 insertions(+), 8 deletions(-)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 53ebac1..d9f076b 100644
+index fa676f2..9a9b236 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -1,16 +1,14 @@
-+Tasks = new Mongo.Collection("tasks");
++Tasks = new Mongo.Collection('tasks');
 +
  if (Meteor.isClient) {
  
    // This code only runs on the client
-   angular.module("simple-todos",['angular-meteor']);
+   angular.module('simple-todos',['angular-meteor']);
  
--  angular.module("simple-todos").controller("TodosListCtrl", ['$scope',
--    function($scope){
-+  angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
-+    function($scope, $meteor){
+-  angular.module('simple-todos').controller('TodosListCtrl', ['$scope',
+-    function ($scope) {
++  angular.module('simple-todos').controller('TodosListCtrl', ['$scope', '$meteor',
++    function ($scope, $meteor) {
  
 -      $scope.tasks = [
--        { text: "This is task 1" },
--        { text: "This is task 2" },
--        { text: "This is task 3" }
+-        { text: 'This is task 1' },
+-        { text: 'This is task 2' },
+-        { text: 'This is task 3' }
 -      ];
 +      $scope.tasks = $meteor.collection(Tasks);
  
-     }]);
+-  }]);
++    }]);
  }
-\ No newline at end of file
 -- 
-2.2.1
+2.3.2 (Apple Git-55)
 
 
-From 7037614aa24edbf7f2f5f1b8b44b8d813d604695 Mon Sep 17 00:00:00 2001
+From ab09bcf16256968772baf78d792ee3802230a615 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Wed, 13 May 2015 16:03:07 -0700
-Subject: [PATCH 04/10] Step 4: A form to add tasks, sort to make newest tasks
- at the top
+Date: Sat, 18 Jul 2015 12:58:59 +0300
+Subject: [PATCH 08/37] Step 4.1: Add new task form to template
 
 ---
- simple-todos-angular.js | 11 ++++++++++-
- todos-list.ng.html      |  4 ++++
- 2 files changed, 14 insertions(+), 1 deletion(-)
+ todos-list.ng.html | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index 3dcfae9..6b6e0e0 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -1,6 +1,12 @@
+ <div class="container">
+   <header>
+     <h1>Todo List</h1>
++
++    <!-- add a form below the h1 -->
++    <form class="new-task" ng-submit="addTask(newTask); newTask='';">
++      <input ng-model="newTask" type="text"
++             name="text" placeholder="Type to add new tasks" />
++    </form>
+   </header>
+ 
+   <ul ng-repeat="task in tasks">
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 3ba891e95d2ebb77e99acb525b79506fc516a1cb Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:00:30 +0300
+Subject: [PATCH 09/37] Step 4.2: Create Add Task scope function
+
+---
+ simple-todos-angular.js | 7 +++++++
+ 1 file changed, 7 insertions(+)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index d9f076b..7e2d724 100644
+index 9a9b236..e9dc878 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
-@@ -8,7 +8,16 @@ if (Meteor.isClient) {
-   angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
-     function($scope, $meteor){
+@@ -10,5 +10,12 @@ if (Meteor.isClient) {
  
--      $scope.tasks = $meteor.collection(Tasks);
-+      $scope.tasks = $meteor.collection(function(){
-+        return Tasks.find({}, {sort: {createdAt: -1}})
-+      });
-+
-+      $scope.addTask = function(newTask){
-+        $scope.tasks.push({
-+            text: newTask,
-+            createdAt: new Date()}
+       $scope.tasks = $meteor.collection(Tasks);
+ 
++      $scope.addTask = function (newTask) {
++        $scope.tasks.push( {
++          text: newTask,
++          createdAt: new Date() }
 +        );
 +      };
- 
++
      }]);
  }
-\ No newline at end of file
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 176ffec..cf49025 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -1,6 +1,10 @@
- <div class="container">
- 	<header>
- 		<h1>Todo List</h1>
-+
-+		<form class="new-task" ng-submit="addTask(newTask); newTask='';">
-+			<input ng-model="newTask" type="text" name="text" placeholder="Type to add new tasks" />
-+		</form>
- 	</header>
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 7d3a03a08b48b1a1f0ac492d7f6685206b459d36 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:01:36 +0300
+Subject: [PATCH 10/37] Step 4.3: Sort task list by date
+
+---
+ simple-todos-angular.js | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index e9dc878..36ab6d1 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -8,7 +8,9 @@ if (Meteor.isClient) {
+   angular.module('simple-todos').controller('TodosListCtrl', ['$scope', '$meteor',
+     function ($scope, $meteor) {
+ 
+-      $scope.tasks = $meteor.collection(Tasks);
++      $scope.tasks = $meteor.collection( function() {
++        return Tasks.find({}, { sort: { createdAt: -1 } })
++      });
  
- 	<ul ng-repeat="task in tasks">
+       $scope.addTask = function (newTask) {
+         $scope.tasks.push( {
 -- 
-2.2.1
+2.3.2 (Apple Git-55)
 
 
-From a7ca2a6d3ff099d1253604619395b4ed6a46e691 Mon Sep 17 00:00:00 2001
+From ade01c58b021c1fc432b323bbeaa78ab9f72b941 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Wed, 13 May 2015 16:27:56 -0700
-Subject: [PATCH 05/10] Step 5: Make it possible to check off and delete tasks
+Date: Sat, 18 Jul 2015 13:04:21 +0300
+Subject: [PATCH 11/37] Step 5.1: Add done and delete buttons to task
 
 ---
  todos-list.ng.html | 8 +++++++-
  1 file changed, 7 insertions(+), 1 deletion(-)
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index cf49025..7186cdb 100644
+index 6b6e0e0..bda3dba 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
-@@ -8,6 +8,12 @@
- 	</header>
+@@ -10,6 +10,12 @@
+   </header>
  
- 	<ul ng-repeat="task in tasks">
--		<li>{{task.text}}</li>
-+		<li ng-class="{'checked': task.checked}">
-+			<button class="delete" ng-click="tasks.remove(task)">&times;</button>
+   <ul ng-repeat="task in tasks">
+-    <li>{{task.text}}</li>
++    <li ng-class="{'checked': task.checked}">
++      <button class="delete" ng-click="tasks.remove(task)">&times;</button>
 +
-+			<input type="checkbox" ng-model="task.checked" class="toggle-checked" />
++      <input type="checkbox" ng-model="task.checked" class="toggle-checked" />
 +
-+			<span class="text">{{task.text}}</span>
-+		</li>
- 	</ul>
++      <span class="text">{{task.text}}</span>
++    </li>
+   </ul>
  </div>
-\ No newline at end of file
 -- 
-2.2.1
+2.3.2 (Apple Git-55)
 
 
-From bbcc31b5304fe95df6fe94cfe05229d75e1ce29f Mon Sep 17 00:00:00 2001
+From 8466c1cdf7f7afc7f2f93dce2fa4d514c59f7130 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Wed, 13 May 2015 16:43:16 -0700
-Subject: [PATCH 06/10] Step 7: Make Angular initialize on mobile devices
+Date: Sat, 18 Jul 2015 13:08:33 +0300
+Subject: [PATCH 12/37] Step 7.1: Remove ng-app
 
 ---
- simple-todos-angular.html | 2 +-
- simple-todos-angular.js   | 9 +++++++++
- 2 files changed, 10 insertions(+), 1 deletion(-)
+ simple-todos-angular.html | 3 +--
+ 1 file changed, 1 insertion(+), 2 deletions(-)
 
 diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index b6625d9..13799ce 100644
+index f1391a5..e43eceb 100644
 --- a/simple-todos-angular.html
 +++ b/simple-todos-angular.html
-@@ -2,5 +2,5 @@
+@@ -2,7 +2,6 @@
    <title>Todo List</title>
  </head>
  
--<body ng-app='simple-todos' ng-include="'todos-list.ng.html'"  ng-controller="TodosListCtrl">
-+<body ng-include="'todos-list.ng.html'"  ng-controller="TodosListCtrl">
+-<body ng-app="simple-todos"
+-      ng-include="'todos-list.ng.html'"
++<body ng-include="'todos-list.ng.html'"
+       ng-controller="TodosListCtrl">
  </body>
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 85e80627bfb80b13c21367c5f77cdcfdf5fadbd0 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:11:07 +0300
+Subject: [PATCH 13/37] Step 7.2: Bootstrap Angular to mobile as well
+
+---
+ simple-todos-angular.js | 9 +++++++++
+ 1 file changed, 9 insertions(+)
+
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 7e2d724..9fe3be0 100644
+index 36ab6d1..b002918 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -5,6 +5,15 @@ if (Meteor.isClient) {
    // This code only runs on the client
-   angular.module("simple-todos",['angular-meteor']);
+   angular.module('simple-todos',['angular-meteor']);
  
 +  function onReady() {
 +    angular.bootstrap(document, ['simple-todos']);
 +  }
 +
 +  if (Meteor.isCordova)
-+    angular.element(document).on("deviceready", onReady);
++    angular.element(document).on('deviceready', onReady);
 +  else
 +    angular.element(document).ready(onReady);
 +
-   angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
-     function($scope, $meteor){
+   angular.module('simple-todos').controller('TodosListCtrl', ['$scope', '$meteor',
+     function ($scope, $meteor) {
+ 
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 9b12d06c6242558c1077ad60ab07aefcecd3814f Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:13:14 +0300
+Subject: [PATCH 14/37] Step 8.1: Add hideComplete checkbox to template
+
+---
+ todos-list.ng.html | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index bda3dba..1049e4a 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -2,6 +2,11 @@
+   <header>
+     <h1>Todo List</h1>
  
++    <label class="hide-completed">
++      <input type="checkbox" ng-model="$parent.hideCompleted"/>
++      Hide Completed Tasks
++    </label>
++
+     <!-- add a form below the h1 -->
+     <form class="new-task" ng-submit="addTask(newTask); newTask='';">
+       <input ng-model="newTask" type="text"
 -- 
-2.2.1
+2.3.2 (Apple Git-55)
 
 
-From d6229448a5e63137ddaa67ee9e7431466d4e796c Mon Sep 17 00:00:00 2001
+From 919560a990de2a2a370aea6f9e28888f09bd1b6f Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Wed, 13 May 2015 17:18:24 -0700
-Subject: [PATCH 07/10] Step 8: Add an option to hide completed tasks, and show
- incomplete task count
+Date: Sat, 18 Jul 2015 13:14:54 +0300
+Subject: [PATCH 15/37] Step 8.2: Watch hideCompleted and change the query
+ variable
 
 ---
- simple-todos-angular.js | 15 +++++++++++++--
- todos-list.ng.html      |  7 ++++++-
- 2 files changed, 19 insertions(+), 3 deletions(-)
+ simple-todos-angular.js | 7 +++++++
+ 1 file changed, 7 insertions(+)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 9fe3be0..68a40f5 100644
+index b002918..e759172 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
-@@ -17,8 +17,8 @@ if (Meteor.isClient) {
-   angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
-     function($scope, $meteor){
- 
--      $scope.tasks = $meteor.collection(function(){
--        return Tasks.find({}, {sort: {createdAt: -1}})
-+      $scope.tasks = $meteor.collection(function() {
-+        return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
-       });
- 
-       $scope.addTask = function(newTask){
-@@ -28,5 +28,16 @@ if (Meteor.isClient) {
+@@ -28,5 +28,12 @@ if (Meteor.isClient) {
          );
        };
  
@@ -683,46 +794,128 @@ index 9fe3be0..68a40f5 100644
 +          $scope.query = {};
 +      });
 +
+     }]);
+ }
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 5adc4b31da9476a898df3db649a4aa7418b0b7d7 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:17:07 +0300
+Subject: [PATCH 16/37] Step 8.3: Change the Collection to use query parameter
+
+---
+ simple-todos-angular.js | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index e759172..071be1f 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -17,8 +17,8 @@ if (Meteor.isClient) {
+   angular.module('simple-todos').controller('TodosListCtrl', ['$scope', '$meteor',
+     function ($scope, $meteor) {
+ 
+-      $scope.tasks = $meteor.collection( function() {
+-        return Tasks.find({}, { sort: { createdAt: -1 } })
++      $scope.tasks = $meteor.collection(function() {
++        return Tasks.find($scope.query, {sort: {createdAt: -1}})
+       });
+ 
+       $scope.addTask = function (newTask) {
+-- 
+2.3.2 (Apple Git-55)
+
+
+From ea6ca654274d1e5a22ec76a2a33c32c388c4ce75 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:17:59 +0300
+Subject: [PATCH 17/37] Step 8.4: Make query parameter reactive
+
+---
+ simple-todos-angular.js | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 071be1f..24c55fa 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -18,7 +18,7 @@ if (Meteor.isClient) {
+     function ($scope, $meteor) {
+ 
+       $scope.tasks = $meteor.collection(function() {
+-        return Tasks.find($scope.query, {sort: {createdAt: -1}})
++        return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
+       });
+ 
+       $scope.addTask = function (newTask) {
+-- 
+2.3.2 (Apple Git-55)
+
+
+From f0fb1566f2dfdcd206ec6efe2e274090a1c4a5a8 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:19:38 +0300
+Subject: [PATCH 18/37] Step 8.5: Add incompleteCount to scope
+
+---
+ simple-todos-angular.js | 4 ++++
+ 1 file changed, 4 insertions(+)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 24c55fa..5934036 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -35,5 +35,9 @@ if (Meteor.isClient) {
+           $scope.query = {};
+       });
+ 
 +      $scope.incompleteCount = function () {
-+        return Tasks.find({checked: {$ne: true}}).count();
++        return Tasks.find({ checked: {$ne: true} }).count();
 +      };
 +
      }]);
  }
-\ No newline at end of file
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 3d4d598cac0c28b9c527545b36b3d7376a8c104c Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:21:13 +0300
+Subject: [PATCH 19/37] Step 8.6: Add incompleteCount to header
+
+---
+ todos-list.ng.html | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 7186cdb..2af2f0e 100644
+index 1049e4a..de9a630 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
-@@ -1,6 +1,11 @@
+@@ -1,6 +1,6 @@
  <div class="container">
- 	<header>
--		<h1>Todo List</h1>
-+		<h1>Todo List ({{incompleteCount()}})</h1>
-+
-+		<label class="hide-completed">
-+			<input type="checkbox" ng-model="$parent.hideCompleted"/>
-+			Hide Completed Tasks
-+		</label>
+   <header>
+-    <h1>Todo List</h1>
++    <h1>Todo List ( {{ incompleteCount() }} )</h1>
  
- 		<form class="new-task" ng-submit="addTask(newTask); newTask='';">
- 			<input ng-model="newTask" type="text" name="text" placeholder="Type to add new tasks" />
+     <label class="hide-completed">
+       <input type="checkbox" ng-model="$parent.hideCompleted"/>
 -- 
-2.2.1
+2.3.2 (Apple Git-55)
 
 
-From 947d9a7761f5800f8189287752080157c4e125f3 Mon Sep 17 00:00:00 2001
+From 452eb1f509886d58662fee94da75dffaeab9abc5 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Wed, 13 May 2015 18:17:11 -0700
-Subject: [PATCH 08/10] Step 9: Add users and login; display which user created
- a task
+Date: Sat, 18 Jul 2015 13:22:29 +0300
+Subject: [PATCH 20/37] Step 9.1: Add accounts-ui and accounts-password
+ packages
 
 ---
- .meteor/packages        |  2 ++
- .meteor/versions        | 11 +++++++++++
- simple-todos-angular.js |  8 +++++++-
- todos-list.ng.html      |  6 ++++--
- 4 files changed, 24 insertions(+), 3 deletions(-)
+ .meteor/packages |  2 ++
+ .meteor/versions | 11 +++++++++++
+ 2 files changed, 13 insertions(+)
 
 diff --git a/.meteor/packages b/.meteor/packages
 index fa5ef7a..703dc2c 100644
@@ -735,7 +928,7 @@ index fa5ef7a..703dc2c 100644
 +accounts-ui
 +accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index 4404870..85ccb98 100644
+index 70b0764..de04912 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
 @@ -1,3 +1,7 @@
@@ -743,10 +936,10 @@ index 4404870..85ccb98 100644
 +accounts-password@1.1.1
 +accounts-ui@1.1.5
 +accounts-ui-unstyled@1.1.7
- angular:angular@1.4.0
+ angular:angular@1.4.2
  autopublish@1.0.3
  autoupdate@1.2.1
-@@ -12,6 +16,7 @@ dburles:mongo-collection-instances@0.3.3
+@@ -12,6 +16,7 @@ dburles:mongo-collection-instances@0.3.4
  ddp@1.1.0
  deps@1.0.7
  ejson@1.0.6
@@ -756,7 +949,7 @@ index 4404870..85ccb98 100644
  html-tools@1.0.4
 @@ -23,7 +28,9 @@ jquery@1.11.3_2
  json@1.0.3
- lai:collection-extensions@0.1.3
+ lai:collection-extensions@0.1.4
  launch-screen@1.0.2
 +less@1.0.14
  livedata@1.0.13
@@ -785,72 +978,163 @@ index 4404870..85ccb98 100644
  templating@1.1.1
  tracker@1.0.7
  ui@1.0.6
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 35a313074e5780255f2c3010163a2dec2411afac Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:24:29 +0300
+Subject: [PATCH 21/37] Step 9.2: Add Blaze loginButtons template to HTML
+
+---
+ todos-list.ng.html | 2 ++
+ 1 file changed, 2 insertions(+)
+
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index de9a630..e4c0123 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -7,6 +7,8 @@
+       Hide Completed Tasks
+     </label>
+ 
++    <meteor-include src="loginButtons"></meteor-include>
++
+     <!-- add a form below the h1 -->
+     <form class="new-task" ng-submit="addTask(newTask); newTask='';">
+       <input ng-model="newTask" type="text"
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 253abff3918109b97f642067ec222cf529b09c6c Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:27:12 +0300
+Subject: [PATCH 22/37] Step 9.3: Configure accounts UI to use usernames
+ instead of email
+
+---
+ simple-todos-angular.js | 4 ++++
+ 1 file changed, 4 insertions(+)
+
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 68a40f5..6edc64e 100644
+index 5934036..0c2d6c1 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
-@@ -24,7 +24,9 @@ if (Meteor.isClient) {
-       $scope.addTask = function(newTask){
-         $scope.tasks.push({
-             text: newTask,
--            createdAt: new Date()}
-+            createdAt: new Date(),
-+            owner: Meteor.userId(),
-+            username: Meteor.user().username}
-         );
-       };
+@@ -2,6 +2,10 @@ Tasks = new Mongo.Collection('tasks');
  
-@@ -40,4 +42,8 @@ if (Meteor.isClient) {
-       };
+ if (Meteor.isClient) {
  
-     }]);
-+
 +  Accounts.ui.config({
 +    passwordSignupFields: "USERNAME_ONLY"
 +  });
- }
-\ No newline at end of file
++
+   // This code only runs on the client
+   angular.module('simple-todos',['angular-meteor']);
+ 
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 8210ff2c37a8b9ccb6b9750aa9d0df94f4e59a8a Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:29:48 +0300
+Subject: [PATCH 23/37] Step 9.4: Add owner and username to created task
+
+---
+ simple-todos-angular.js | 8 +++++---
+ 1 file changed, 5 insertions(+), 3 deletions(-)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 0c2d6c1..d0b3829 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -25,10 +25,12 @@ if (Meteor.isClient) {
+         return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
+       });
+ 
+-      $scope.addTask = function (newTask) {
++      $scope.addTask = function(newTask) {
+         $scope.tasks.push( {
+-          text: newTask,
+-          createdAt: new Date() }
++            text: newTask,
++            createdAt: new Date(),             // current time
++            owner: Meteor.userId(),            // _id of logged in user
++            username: Meteor.user().username }  // username of logged in user
+         );
+       };
+ 
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 78d5f5619d9434035d6451ea4077dfcc8edb54ef Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:31:13 +0300
+Subject: [PATCH 24/37] Step 9.5: Hide new task form if user is not logged in
+
+---
+ todos-list.ng.html | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 2af2f0e..ceb5b07 100644
+index e4c0123..aa02851 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
-@@ -7,7 +7,9 @@
- 			Hide Completed Tasks
- 		</label>
+@@ -10,7 +10,9 @@
+     <meteor-include src="loginButtons"></meteor-include>
  
--		<form class="new-task" ng-submit="addTask(newTask); newTask='';">
-+		<meteor-include src="loginButtons"></meteor-include>
-+
-+		<form class="new-task" ng-submit="addTask(newTask); newTask='';" ng-show="$root.currentUser">
- 			<input ng-model="newTask" type="text" name="text" placeholder="Type to add new tasks" />
- 		</form>
- 	</header>
-@@ -18,7 +20,7 @@
+     <!-- add a form below the h1 -->
+-    <form class="new-task" ng-submit="addTask(newTask); newTask='';">
++    <form class="new-task"
++          ng-submit="addTask(newTask); newTask='';"
++          ng-show="$root.currentUser">
+       <input ng-model="newTask" type="text"
+              name="text" placeholder="Type to add new tasks" />
+     </form>
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 5b026977269006ac5ebfda7ceb25923fc4d69ab4 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 13:32:49 +0300
+Subject: [PATCH 25/37] Step 9.6: Add username to the displayed task
+
+---
+ todos-list.ng.html | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index aa02851..ddc4777 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -24,7 +24,9 @@
  
- 			<input type="checkbox" ng-model="task.checked" class="toggle-checked" />
+       <input type="checkbox" ng-model="task.checked" class="toggle-checked" />
  
--			<span class="text">{{task.text}}</span>
-+			<span class="text"><strong>{{task.username}}</strong> - {{task.text}}</span>
- 		</li>
- 	</ul>
+-      <span class="text">{{task.text}}</span>
++      <span class="text">
++        <strong>{{task.username}}</strong> - {{task.text}}
++      </span>
+     </li>
+   </ul>
  </div>
-\ No newline at end of file
 -- 
-2.2.1
+2.3.2 (Apple Git-55)
 
 
-From 05d534ee034fea7ea0471033882acd32a4508fa4 Mon Sep 17 00:00:00 2001
+From a01d86230123f4a46623ddf18775a41ca857e147 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Thu, 14 May 2015 01:03:28 -0700
-Subject: [PATCH 09/10] Step 10: Move database logic into Meteor.methods,
- remove insecure package
+Date: Sat, 18 Jul 2015 13:34:54 +0300
+Subject: [PATCH 26/37] Step 10.1: Remove the insecure package
 
 ---
- .meteor/packages        |  1 -
- .meteor/versions        |  1 -
- simple-todos-angular.js | 39 ++++++++++++++++++++++++++++++++-------
- todos-list.ng.html      |  4 ++--
- 4 files changed, 34 insertions(+), 11 deletions(-)
+ .meteor/packages | 1 -
+ .meteor/versions | 1 -
+ 2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
 index 703dc2c..8798f9d 100644
@@ -865,7 +1149,7 @@ index 703dc2c..8798f9d 100644
  accounts-ui
  accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index 85ccb98..9acf6b2 100644
+index de04912..38fa8cb 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
 @@ -23,7 +23,6 @@ html-tools@1.0.4
@@ -875,46 +1159,35 @@ index 85ccb98..9acf6b2 100644
 -insecure@1.0.3
  jquery@1.11.3_2
  json@1.0.3
- lai:collection-extensions@0.1.3
+ lai:collection-extensions@0.1.4
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 3adde199e75d84eae82cf51c48f94f8b3ac607f6 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 15:02:50 +0300
+Subject: [PATCH 27/37] Step 10.2: Add Meteor Methods for add, delete and check
+ tasks
+
+---
+ simple-todos-angular.js | 22 ++++++++++++++++++++++
+ 1 file changed, 22 insertions(+)
+
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 6edc64e..0912cb1 100644
+index d0b3829..4b12a5e 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
-@@ -22,12 +22,15 @@ if (Meteor.isClient) {
-       });
+@@ -47,3 +47,25 @@ if (Meteor.isClient) {
  
-       $scope.addTask = function(newTask){
--        $scope.tasks.push({
--            text: newTask,
--            createdAt: new Date(),
--            owner: Meteor.userId(),
--            username: Meteor.user().username}
--        );
-+        $meteor.call("addTask", newTask);
-+      };
-+
-+      $scope.deleteTask = function(task){
-+        $meteor.call("deleteTask", task._id);
-+      };
-+
-+      $scope.setChecked = function(task){
-+        $meteor.call("setChecked", task._id, !task.checked);
-       };
- 
-       $scope.$watch('hideCompleted', function() {
-@@ -46,4 +49,26 @@ if (Meteor.isClient) {
-   Accounts.ui.config({
-     passwordSignupFields: "USERNAME_ONLY"
-   });
--}
-\ No newline at end of file
-+}
+     }]);
+ }
 +
 +Meteor.methods({
 +  addTask: function (text) {
 +    // Make sure the user is logged in before inserting a task
 +    if (! Meteor.userId()) {
-+      throw new Meteor.Error("not-authorized");
++      throw new Meteor.Error('not-authorized');
 +    }
 +
 +    Tasks.insert({
@@ -931,38 +1204,91 @@ index 6edc64e..0912cb1 100644
 +    Tasks.update(taskId, { $set: { checked: setChecked} });
 +  }
 +});
+-- 
+2.3.2 (Apple Git-55)
+
+
+From e6e0a9eff07668f5189c9e51b4162eacb858a02d Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 15:05:25 +0300
+Subject: [PATCH 28/37] Step 10.3: Add scope functions to call the Meteor
+ methods
+
+---
+ simple-todos-angular.js | 17 ++++++++++-------
+ 1 file changed, 10 insertions(+), 7 deletions(-)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 4b12a5e..655fe79 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -25,13 +25,16 @@ if (Meteor.isClient) {
+         return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
+       });
+ 
+-      $scope.addTask = function(newTask) {
+-        $scope.tasks.push( {
+-            text: newTask,
+-            createdAt: new Date(),             // current time
+-            owner: Meteor.userId(),            // _id of logged in user
+-            username: Meteor.user().username }  // username of logged in user
+-        );
++      $scope.addTask = function (newTask) {
++        $meteor.call('addTask', newTask);
++      };
++
++      $scope.deleteTask = function (task) {
++        $meteor.call('deleteTask', task._id);
++      };
++
++      $scope.setChecked = function (task) {
++        $meteor.call('setChecked', task._id, !task.checked);
+       };
+ 
+       $scope.$watch('hideCompleted', function() {
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 33215ecc0a0da5b8aedac04d5ae57f84770b9906 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 15:08:04 +0300
+Subject: [PATCH 29/37] Step 10.4: Change template events to call methods
+
+---
+ todos-list.ng.html | 5 +++--
+ 1 file changed, 3 insertions(+), 2 deletions(-)
+
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index ceb5b07..958ab39 100644
+index ddc4777..ab2270f 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
-@@ -16,9 +16,9 @@
+@@ -20,9 +20,10 @@
  
- 	<ul ng-repeat="task in tasks">
- 		<li ng-class="{'checked': task.checked}">
--			<button class="delete" ng-click="tasks.remove(task)">&times;</button>
-+			<button class="delete" ng-click="deleteTask(task)">&times;</button>
+   <ul ng-repeat="task in tasks">
+     <li ng-class="{'checked': task.checked}">
+-      <button class="delete" ng-click="tasks.remove(task)">&times;</button>
++      <button class="delete" ng-click="deleteTask(task)">&times;</button>
  
--			<input type="checkbox" ng-model="task.checked" class="toggle-checked" />
-+			<input type="checkbox" ng-checked="task.checked" ng-click="setChecked(task)" class="toggle-checked" />
+-      <input type="checkbox" ng-model="task.checked" class="toggle-checked" />
++      <input type="checkbox" ng-checked="task.checked"
++             ng-click="setChecked(task)" class="toggle-checked" />
  
- 			<span class="text"><strong>{{task.username}}</strong> - {{task.text}}</span>
- 		</li>
+       <span class="text">
+         <strong>{{task.username}}</strong> - {{task.text}}
 -- 
-2.2.1
+2.3.2 (Apple Git-55)
 
 
-From 0ca238c099dbf17aa66873f813e8fed43b9b694d Mon Sep 17 00:00:00 2001
+From d14c3f1c5d1e6aebc8daec8b406c9021bbb7afe8 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Thu, 14 May 2015 01:29:29 -0700
-Subject: [PATCH 10/10] Step 11: Add a private task feature, remove the
- autopublish package
+Date: Sat, 18 Jul 2015 15:09:23 +0300
+Subject: [PATCH 30/37] Step 11.1: Remove the autopublish package
 
 ---
- .meteor/packages        |  1 -
- .meteor/versions        |  1 -
- simple-todos-angular.js | 37 +++++++++++++++++++++++++++++++++++++
- todos-list.ng.html      |  6 +++++-
- 4 files changed, 42 insertions(+), 3 deletions(-)
+ .meteor/packages | 1 -
+ .meteor/versions | 1 -
+ 2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
 index 8798f9d..2d0433a 100644
@@ -977,58 +1303,157 @@ index 8798f9d..2d0433a 100644
  accounts-ui
  accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index 9acf6b2..e2b08b8 100644
+index 38fa8cb..96bf8b7 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
 @@ -3,7 +3,6 @@ accounts-password@1.1.1
  accounts-ui@1.1.5
  accounts-ui-unstyled@1.1.7
- angular:angular@1.4.0
+ angular:angular@1.4.2
 -autopublish@1.0.3
  autoupdate@1.2.1
  base64@1.0.3
  binary-heap@1.0.3
+-- 
+2.3.2 (Apple Git-55)
+
+
+From e9afaa4006a2ffcb0b580a6d09b4d1a081fe12dc Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 15:10:25 +0300
+Subject: [PATCH 31/37] Step 11.2: Add server publish function to tasks
+
+---
+ simple-todos-angular.js | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 0912cb1..3937a29 100644
+index 655fe79..439a148 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
-@@ -17,6 +17,8 @@ if (Meteor.isClient) {
-   angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
-     function($scope, $meteor){
+@@ -72,3 +72,9 @@ Meteor.methods({
+     Tasks.update(taskId, { $set: { checked: setChecked} });
+   }
+ });
++
++if (Meteor.isServer) {
++  Meteor.publish('tasks', function () {
++    return Tasks.find();
++  });
++}
+-- 
+2.3.2 (Apple Git-55)
+
+
+From e35c7c06c99042e26219976379ff75eef93876a7 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 15:11:21 +0300
+Subject: [PATCH 32/37] Step 11.3: Subscribe to tasks publication
+
+---
+ simple-todos-angular.js | 2 ++
+ 1 file changed, 2 insertions(+)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 439a148..6464ff3 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -21,6 +21,8 @@ if (Meteor.isClient) {
+   angular.module('simple-todos').controller('TodosListCtrl', ['$scope', '$meteor',
+     function ($scope, $meteor) {
  
-+      $scope.$meteorSubscribe("tasks");
-+      
++      $scope.$meteorSubscribe('tasks');
++
        $scope.tasks = $meteor.collection(function() {
          return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
        });
-@@ -33,6 +35,10 @@ if (Meteor.isClient) {
-         $meteor.call("setChecked", task._id, !task.checked);
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 52d3d8eff291d72e9d320a5048d05a8ba9b26e01 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 15:53:12 +0300
+Subject: [PATCH 33/37] Step 11.4: Add setPrivate button to template
+
+---
+ todos-list.ng.html | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index ab2270f..61435a2 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -25,6 +25,12 @@
+       <input type="checkbox" ng-checked="task.checked"
+              ng-click="setChecked(task)" class="toggle-checked" />
+ 
++      <button class="toggle-private"
++              ng-if="task.owner === $root.currentUser._id"
++              ng-click="setPrivate(task)">
++        {{task.private == true ? "Private" : "Public"}}
++      </button>
++
+       <span class="text">
+         <strong>{{task.username}}</strong> - {{task.text}}
+       </span>
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 953c93f072e41324937a7183015579ed4899c90c Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 15:54:33 +0300
+Subject: [PATCH 34/37] Step 11.5: Add private CSS class to task
+
+---
+ todos-list.ng.html | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/todos-list.ng.html b/todos-list.ng.html
+index 61435a2..1799364 100644
+--- a/todos-list.ng.html
++++ b/todos-list.ng.html
+@@ -19,7 +19,7 @@
+   </header>
+ 
+   <ul ng-repeat="task in tasks">
+-    <li ng-class="{'checked': task.checked}">
++    <li ng-class="{'checked': task.checked, 'private': task.private}">
+       <button class="delete" ng-click="deleteTask(task)">&times;</button>
+ 
+       <input type="checkbox" ng-checked="task.checked"
+-- 
+2.3.2 (Apple Git-55)
+
+
+From 92a93e3b861d94aa9bcc65dc510e803f6029dd65 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 15:56:20 +0300
+Subject: [PATCH 35/37] Step 11.6: Add setPrivate method
+
+---
+ simple-todos-angular.js | 14 ++++++++++++++
+ 1 file changed, 14 insertions(+)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 6464ff3..bdc75a8 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -39,6 +39,10 @@ if (Meteor.isClient) {
+         $meteor.call('setChecked', task._id, !task.checked);
        };
  
-+      $scope.setPrivate = function(task){
-+        $meteor.call("setPrivate", task._id, ! task.private);
++      $scope.setPrivate = function (task) {
++        $meteor.call('setPrivate', task._id, ! task.private);
 +      };
 +
        $scope.$watch('hideCompleted', function() {
          if ($scope.hideCompleted)
            $scope.query = {checked: {$ne: true}};
-@@ -66,9 +72,40 @@ Meteor.methods({
-     });
-   },
-   deleteTask: function (taskId) {
-+    var task = Tasks.findOne(taskId);
-+    if (task.private && task.owner !== Meteor.userId()) {
-+      // If the task is private, make sure only the owner can delete it
-+      throw new Meteor.Error("not-authorized");
-+    }
-     Tasks.remove(taskId);
+@@ -72,6 +76,16 @@ Meteor.methods({
    },
    setChecked: function (taskId, setChecked) {
-+    var task = Tasks.findOne(taskId);
-+    if (task.private && task.owner !== Meteor.userId()) {
-+      // If the task is private, make sure only the owner can check it off
-+      throw new Meteor.Error("not-authorized");
-+    }
      Tasks.update(taskId, { $set: { checked: setChecked} });
 +  },
 +  setPrivate: function (taskId, setToPrivate) {
@@ -1036,45 +1461,82 @@ index 0912cb1..3937a29 100644
 +
 +    // Make sure only the task owner can make a task private
 +    if (task.owner !== Meteor.userId()) {
-+      throw new Meteor.Error("not-authorized");
++      throw new Meteor.Error('not-authorized');
 +    }
 +
 +    Tasks.update(taskId, { $set: { private: setToPrivate } });
    }
  });
-+
-+if (Meteor.isServer) {
-+  Meteor.publish("tasks", function () {
+ 
+-- 
+2.3.2 (Apple Git-55)
+
+
+From f215e80f518c6d0aea213d6e230dc6521a028e2f Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 15:59:53 +0300
+Subject: [PATCH 36/37] Step 11.7: Publish only public and owner's tasks
+
+---
+ simple-todos-angular.js | 7 ++++++-
+ 1 file changed, 6 insertions(+), 1 deletion(-)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index bdc75a8..a6089ab 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -91,6 +91,11 @@ Meteor.methods({
+ 
+ if (Meteor.isServer) {
+   Meteor.publish('tasks', function () {
+-    return Tasks.find();
 +    return Tasks.find({
 +      $or: [
 +        { private: {$ne: true} },
 +        { owner: this.userId }
 +      ]
 +    });
-+  });
-+}
-\ No newline at end of file
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 958ab39..62299df 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -15,11 +15,15 @@
- 	</header>
- 
- 	<ul ng-repeat="task in tasks">
--		<li ng-class="{'checked': task.checked}">
-+		<li ng-class="{'checked': task.checked, 'private': task.private}">
- 			<button class="delete" ng-click="deleteTask(task)">&times;</button>
- 
- 			<input type="checkbox" ng-checked="task.checked" ng-click="setChecked(task)" class="toggle-checked" />
- 
-+			<button class="toggle-private" ng-if="task.owner === $root.currentUser._id" ng-click="setPrivate(task)">
-+				{{task.private == true ? "Private" : "Public"}}
-+			</button>
+   });
+ }
+-- 
+2.3.2 (Apple Git-55)
+
+
+From da7a9772ff9d58545765dc9eb370508f25a06956 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 16:02:20 +0300
+Subject: [PATCH 37/37] Step 11.8: Add extra security to methods
+
+---
+ simple-todos-angular.js | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index a6089ab..1d371fb 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -72,9 +72,21 @@ Meteor.methods({
+     });
+   },
+   deleteTask: function (taskId) {
++    var task = Tasks.findOne(taskId);
++    if (task.private && task.owner !== Meteor.userId()) {
++      // If the task is private, make sure only the owner can delete it
++      throw new Meteor.Error('not-authorized');
++    }
 +
- 			<span class="text"><strong>{{task.username}}</strong> - {{task.text}}</span>
- 		</li>
- 	</ul>
+     Tasks.remove(taskId);
+   },
+   setChecked: function (taskId, setChecked) {
++    var task = Tasks.findOne(taskId);
++    if (task.private && task.owner !== Meteor.userId()) {
++      // If the task is private, make sure only the owner can check it off
++      throw new Meteor.Error('not-authorized');
++    }
++
+     Tasks.update(taskId, { $set: { checked: setChecked} });
+   },
+   setPrivate: function (taskId, setToPrivate) {
 -- 
-2.2.1
+2.3.2 (Apple Git-55)
 
-- 
2.13.6 (Apple Git-96)


From ed9f7f9e04fb5c454a969a7cce77c60362e1e42b Mon Sep 17 00:00:00 2001
From: Uri Goldshtein <uri.goldshtein@gmail.com>
Date: Sat, 18 Jul 2015 16:23:19 +0300
Subject: [PATCH 060/164] Add Angular patch to library

---
 package.js | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/package.js b/package.js
index df6666a..058756d 100644
--- a/package.js
+++ b/package.js
@@ -81,7 +81,8 @@ Package.onUse(function (api) {
     'components/git-patch-viewer/patch-viewer.less',
 
     'generated/react.multi.patch',
-    'generated/blaze.multi.patch'
+    'generated/blaze.multi.patch',
+    'generated/angular.multi.patch'
   ], 'client');
 
   // Also, exports all of the templates from the content/ directory
-- 
2.13.6 (Apple Git-96)


From 943a012b76d4bf535c15884b67a0bf8207ae1284 Mon Sep 17 00:00:00 2001
From: Uri Goldshtein <uri.goldshtein@gmail.com>
Date: Sat, 18 Jul 2015 17:20:11 +0300
Subject: [PATCH 061/164] Finish updating Angular tutorial to new tutorial tool

---
 content/angular/step02.md     |  48 ++--------------
 content/angular/step03.md     |  18 +-----
 content/angular/step04.md     |  30 ++--------
 content/angular/step05.md     |  11 +---
 content/angular/step07.md     |  19 ++-----
 content/angular/step08.md     |  42 +++-----------
 content/angular/step09.md     |  37 ++----------
 content/angular/step10.md     |  46 +--------------
 content/angular/step11.md     |  76 +++----------------------
 generated/angular-commits.js  |  16 ++++--
 generated/angular.multi.patch | 129 ++++++++++++++++++++++++------------------
 repos/angular                 |   2 +-
 routes/angularTut.js          |  30 ++++------
 13 files changed, 133 insertions(+), 371 deletions(-)

diff --git a/content/angular/step02.md b/content/angular/step02.md
index 0b27dbe..4a9f5bb 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -9,54 +9,16 @@ command into your command line:
 
 To start working on our todos list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
 
-```html
-<!-- simple-todos-angular.html -->
-<head>
-  <title>Todo List</title>
-</head>
-
-<body ng-app="simple-todos"
-      ng-include="'todos-list.ng.html'"
-      ng-controller="TodosListCtrl">
-</body>
-```
-
-```js
-// simple-todos-angular.js
-if (Meteor.isClient) {
-
-	// This code only runs on the client
-	angular.module("simple-todos",['angular-meteor']);
-
-	angular.module("simple-todos").controller("TodosListCtrl", ['$scope',
-	  function($scope){
-
-      $scope.tasks = [
-        { text: "This is task 1" },
-        { text: "This is task 2" },
-        { text: "This is task 3" }
-      ];
-
-	}]);
-}
-```
+{{> CodeBox view="angular" step="2.2"}}
+
+
+{{> CodeBox view="angular" step="2.3"}}
 
 To write Angular templates, we need to name our files with a `.ng.html` suffix.
 
 Create a new file named `todos-list.ng.html` and place it on the root folder:
 
-```html
-<!-- todos-list.ng.html -->
-<div class="container">
-  <header>
-    <h1>Todo List</h1>
-  </header>
-
-  <ul ng-repeat="task in tasks">
-    <li>{{dstache}}task.text}}</li>
-  </ul>
-</div>
-```
+{{> CodeBox view="angular" step="2.4"}}
 
 In our browser, the app should look pretty much like this:
 
diff --git a/content/angular/step03.md b/content/angular/step03.md
index 13d51f2..447c628 100644
--- a/content/angular/step03.md
+++ b/content/angular/step03.md
@@ -6,23 +6,7 @@
 
 Let's update our JavaScript code to get our tasks from a collection instead of a static array:
 
-```js
-// simple-todos-angular.js
-Tasks = new Mongo.Collection("tasks");
-
-if (Meteor.isClient) {
-
-	// This code only runs on the client
-	angular.module("simple-todos",['angular-meteor']);
-
-	angular.module("simple-todos").controller("TodosListCtrl", ['$scope', '$meteor',
-	  function($scope, $meteor){
-
-	    $scope.tasks = $meteor.collection(Tasks);
-
-	}]);
-}
-```
+{{> CodeBox view="angular" step="3.1"}}
 
 We are using the `$meteor` service to bind our `Tasks` collection to our `$scope.tasks` variable.
 Now every change that will happen to each of those objects will be synced in real time across our stack.
diff --git a/content/angular/step04.md b/content/angular/step04.md
index 6ca7a21..2a7cf13 100644
--- a/content/angular/step04.md
+++ b/content/angular/step04.md
@@ -6,30 +6,11 @@ In this step, we'll add an input field for users to add tasks to the list.
 
 First, let's add a form to our HTML:
 
-```html
-<!-- todos-list.ng.html -->
-<header>
-  <h1>Todo List</h1>
-
-  <!-- add a form below the h1 -->
-  <form class="new-task" ng-submit="addTask(newTask); newTask='';">
-    <input ng-model="newTask" type="text"
-           name="text" placeholder="Type to add new tasks" />
-  </form>
-</header>
-```
+{{> CodeBox view="angular" step="4.1"}}
 
 Here's the JavaScript code we need to add to listen to the `submit` event on the form:
 
-```js
-// Inside the if (Meteor.isClient) block, right after the definition of $scope.tasks:
-$scope.addTask = function(newTask) {
-  $scope.tasks.push( {
-    text: newTask,
-    createdAt: new Date() }
-  );
-};
-```
+{{> CodeBox view="angular" step="4.2"}}
 
 Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
 
@@ -55,11 +36,8 @@ Until now you probably used Angular sort filter to do so. you can still use that
 Replace the `Tasks` collection variable with a function inside our `$meteor.collection` service call.
 The function will return a the result of calling the `find` function with the `sort` parameter on our `Tasks` collection, like that:
 
-```js
-$scope.tasks = $meteor.collection(function() {
-  return Tasks.find({}, { sort: { createdAt: -1 } })
-});
-```
+{{> CodeBox view="angular" step="4.3"}}
+
 To better understand the difference between using the sort filter and the collection options, check out the advanced tutorial about [search, sort and pagination](http://angular-meteor.com/tutorial/step_12).
 
 In the next step, we'll add some very important todo list functions: checking off and deleting tasks.
diff --git a/content/angular/step05.md b/content/angular/step05.md
index e1b61cf..c837b99 100644
--- a/content/angular/step05.md
+++ b/content/angular/step05.md
@@ -6,16 +6,7 @@ Until now, we have only interacted with a collection by inserting documents. Now
 
 Let's add two elements to our `task` template, a checkbox and a delete button:
 
-```html
-<!-- replace the existing task template with this code -->
-<li ng-class="{'checked': task.checked}">
-  <button class="delete" ng-click="tasks.remove(task)">&times;</button>
-
-  <input type="checkbox" ng-model="task.checked" class="toggle-checked" />
-
-  <span class="text">{{dstache}}task.text}}</span>
-</li>
-```
+{{> CodeBox view="angular" step="5.1"}}
 
 ### Update
 
diff --git a/content/angular/step07.md b/content/angular/step07.md
index 827af94..55d5601 100644
--- a/content/angular/step07.md
+++ b/content/angular/step07.md
@@ -3,26 +3,15 @@
 
 Angular needs the main document to be ready so it can bootstrap, but different devices has different events for `ready`.
 
-To solve this, we need to change the way we bootstrap our Angular app.  Remove the current bootstrap by removing:
+To solve this, we need to change the way we bootstrap our Angular app.
+Remove the current bootstrap by removing `ng-app` from the BODY tag:
 
-    ng-app='simple-todos'
-
-from the BODY tag.
+{{> CodeBox view="angular" step="7.1"}}
 
 Then add the following code right after `Meteor.isClient`:
 
-```js
-angular.module("simple-todos",['angular-meteor']);
-
-function onReady() {
-  angular.bootstrap(document, ['simple-todos']);
-}
+{{> CodeBox view="angular" step="7.2"}}
 
-if (Meteor.isCordova)
-  angular.element(document).on("deviceready", onReady);
-else
-  angular.element(document).ready(onReady);
-```
 {{/template}}
 
 {{#template name="angular-step07"}}
diff --git a/content/angular/step08.md b/content/angular/step08.md
index 3e98134..68b341b 100644
--- a/content/angular/step08.md
+++ b/content/angular/step08.md
@@ -8,13 +8,7 @@ We're going to learn how to use Mongo's filtering API.
 
 First, we need to add a checkbox to our HTML:
 
-```html
-<!-- add the checkbox to <body> right below the h1 -->
-<label class="hide-completed">
-  <input type="checkbox" ng-model="$parent.hideCompleted"/>
-  Hide Completed Tasks
-</label>
-```
+{{> CodeBox view="angular" step="8.1"}}
 
 This checkbox binds to the scope's `hideCompleted` variable.
 > We are using `$parent` because it creates a new child scope.
@@ -40,21 +34,11 @@ Tasks.find({ checked: {$ne: true} }, { sort: { createdAt: -1 } })
 So let's create a scope variable that will hold the wanted query and will change together with the checkbox.
 Inside our controller:
 
-```js
-$scope.$watch('hideCompleted', function() {
-  if ($scope.hideCompleted)
-    $scope.query = {checked: {$ne: true}};
-  else
-    $scope.query = {};
-});
-```
+{{> CodeBox view="angular" step="8.2"}}
 
 and let's change our `$scope.tasks` definition accordingly:
-```js
-$scope.tasks = $meteor.collection(function() {
-  return Tasks.find($scope.query, {sort: {createdAt: -1}})
-});
-```
+
+{{> CodeBox view="angular" step="8.3"}}
 
 **but we are missing one more thing** - The expression we are sending `$meteor.collection` is a Meteor expression and
 **Meteor has to know that the Angular `query` parameter has changed**.
@@ -66,11 +50,7 @@ scope variables into [Meteor reactive variables](http://docs.meteor.com/#/full/r
 
 So now our definition should look like that:
 
-```js
-$scope.tasks = $meteor.collection(function() {
-  return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
-});
-```
+{{> CodeBox view="angular" step="8.4"}}
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
@@ -81,16 +61,8 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a scope function and change one line of the HTML.
 
-```js
-// Add to scope
-$scope.incompleteCount = function () {
-  return Tasks.find({ checked: {$ne: true} }).count();
-};
-```
+{{> CodeBox view="angular" step="8.5"}}
 
-```html
-<!-- display the count at the end of the <h1> tag -->
-<h1>Todo List ( {{dstache}} incompleteCount() }} )</h1>
-```
+{{> CodeBox view="angular" step="8.6"}}
 
 {{/template}}
diff --git a/content/angular/step09.md b/content/angular/step09.md
index 364c7a0..a6adb79 100644
--- a/content/angular/step09.md
+++ b/content/angular/step09.md
@@ -12,21 +12,14 @@ meteor add accounts-ui accounts-password
 
 In the HTML, right under the checkbox, include the following code to add a login dropdown:
 
-```html
-<meteor-include src="loginButtons"></meteor-include>
-```
+{{> CodeBox view="angular" step="9.2"}}
 
 The powerful [meteor-include](http://angular-meteor.com/api/meteor-include) directive let's you add **any Blaze template** into your Angular templates.
 We are adding `loginButtons` which is the Blaze template for user authentication flow supplied with the accounts-ui package.
 
 Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
-```js
-// At the bottom of the client code
-Accounts.ui.config({
-  passwordSignupFields: "USERNAME_ONLY"
-});
-```
+{{> CodeBox view="angular" step="9.3"}}
 
 Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
 
@@ -40,35 +33,15 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `addTask` function:
 
-```js
-$scope.addTask = function(newTask) {
-  $scope.tasks.push({
-    text: newTask,
-    createdAt: new Date(),             // current time
-    owner: Meteor.userId(),            // _id of logged in user
-    username: Meteor.user().username}  // username of logged in user
-  );
-};
-```
+{{> CodeBox view="angular" step="9.4"}}
 
 Then, in our HTML, add an `ng-show` directive to only show the form when there is a logged in user:
 
-```html
-<form class="new-task"
-      ng-submit="addTask(newTask); newTask='';"
-      ng-show="$root.currentUser">
-  <input ng-model="newTask" type="text"
-         name="text" placeholder="Type to add new tasks" />
-</form>
-```
+{{> CodeBox view="angular" step="9.5"}}
 
 Finally, add a statement to display the `username` field on each task right before the text:
 
-```html
-<span class="text">
-  <strong>{{dstache}}task.username}}</strong> - {{dstache}}task.text}}
-</span>
-```
+{{> CodeBox view="angular" step="9.6"}}
 
 Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
 
diff --git a/content/angular/step10.md b/content/angular/step10.md
index 06259d4..6053093 100644
--- a/content/angular/step10.md
+++ b/content/angular/step10.md
@@ -18,55 +18,15 @@ If you try to use the app after removing this package, you will notice that none
 
 First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
 
-```js
-// At the bottom of simple-todos.js, outside of the client-only block
-Meteor.methods({
-  addTask: function (text) {
-    // Make sure the user is logged in before inserting a task
-    if (! Meteor.userId()) {
-      throw new Meteor.Error("not-authorized");
-    }
-
-    Tasks.insert({
-      text: text,
-      createdAt: new Date(),
-      owner: Meteor.userId(),
-      username: Meteor.user().username
-    });
-  },
-  deleteTask: function (taskId) {
-    Tasks.remove(taskId);
-  },
-  setChecked: function (taskId, setChecked) {
-    Tasks.update(taskId, { $set: { checked: setChecked} });
-  }
-});
-```
+{{> CodeBox view="angular" step="10.2"}}
 
 Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
-```js
-$scope.addTask = function(newTask) {
-  $meteor.call("addTask", newTask);
-};
-
-$scope.deleteTask = function(task) {
-  $meteor.call("deleteTask", task._id);
-};
-
-$scope.setChecked = function(task) {
-  $meteor.call("setChecked", task._id, !task.checked);
-};
-```
+{{> CodeBox view="angular" step="10.3"}}
 
 and the way we handle the changes in the template:
 
-```html
-<button class="delete" ng-click="deleteTask(task)">&times;</button>
-
-<input type="checkbox" ng-checked="task.checked"
-       ng-click="setChecked(task)" class="toggle-checked" />
-```
+{{> CodeBox view="angular" step="10.4"}}
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
diff --git a/content/angular/step11.md b/content/angular/step11.md
index f136493..c9705c4 100644
--- a/content/angular/step11.md
+++ b/content/angular/step11.md
@@ -14,19 +14,9 @@ When the app refreshes, the task list will be empty. Without the `autopublish` p
 
 Let's add them now.
 
-```js
-// At the bottom of simple-todos.js
-if (Meteor.isServer) {
-  Meteor.publish("tasks", function () {
-    return Tasks.find();
-  });
-}
-```
+{{> CodeBox view="angular" step="11.2"}}
 
-```js
-// At the top of our controller code
-$scope.$meteorSubscribe("tasks");
-```
+{{> CodeBox view="angular" step="11.3"}}
 
 Once you have added this code, all of the tasks will reappear.
 
@@ -36,56 +26,22 @@ Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`
 
 First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
 
-```html
-<!-- add right below the code for the checkbox in the task template -->
-<button class="toggle-private"
-        ng-if="task.owner === $root.currentUser._id"
-        ng-click="setPrivate(task)">
-  {{dstache}}task.private == true ? "Private" : "Public"}}
-</button>
-
-<!-- modify the li tag to have the private class if the item is private -->
-<li ng-class="{'checked': task.checked, 'private': task.private}">
-```
-
-We need to modify our JavaScript code in three places:
+{{> CodeBox view="angular" step="11.4"}}
 
-```js
-// Add a setPrivate scope function
-$scope.setPrivate = function(task) {
-  $meteor.call("setPrivate", task._id, ! task.private);
-};
+{{> CodeBox view="angular" step="11.5"}}
 
-// Add a method to Meteor.methods called setPrivate
-setPrivate: function (taskId, setToPrivate) {
-  var task = Tasks.findOne(taskId);
+We need to modify our JavaScript code in two places:
 
-  // Make sure only the task owner can make a task private
-  if (task.owner !== Meteor.userId()) {
-    throw new Meteor.Error("not-authorized");
-  }
+{{> CodeBox view="angular" step="11.6"}}
 
-  Tasks.update(taskId, { $set: { private: setToPrivate } });
-}
-```
+{{> CodeBox view="angular" step="11.7"}}
 
 ### Selectively publishing tasks based on privacy status
 
 Now that we have a way of setting which tasks are private, we should modify our
 publication function to only send the tasks that a user is authorized to see:
 
-```js
-// Modify the publish statement
-// Only publish tasks that are public or belong to the current user
-Meteor.publish("tasks", function () {
-  return Tasks.find({
-    $or: [
-      { private: {$ne: true} },
-      { owner: this.userId }
-    ]
-  });
-});
-```
+{{> CodeBox view="angular" step="11.8"}}
 
 To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
 
@@ -93,21 +49,7 @@ To test that this functionality works, you can use your browser's private browsi
 
 In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
 
-```js
-// At the top of the deleteTask method
-var task = Tasks.findOne(taskId);
-if (task.private && task.owner !== Meteor.userId()) {
-  // If the task is private, make sure only the owner can delete it
-  throw new Meteor.Error("not-authorized");
-}
-
-// At the top of the setChecked method
-var task = Tasks.findOne(taskId);
-if (task.private && task.owner !== Meteor.userId()) {
-  // If the task is private, make sure only the owner can check it off
-  throw new Meteor.Error("not-authorized");
-}
-```
+{{> CodeBox view="angular" step="11.9"}}
 
 > Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
diff --git a/generated/angular-commits.js b/generated/angular-commits.js
index e23c143..a099c19 100644
--- a/generated/angular-commits.js
+++ b/generated/angular-commits.js
@@ -1,16 +1,20 @@
 // This file auto-generated by scripts/map-commits-to-steps.rb
 ANGULAR_COMMITS = {
-  "11.8": {
-    "sha": "da7a9772ff9d58545765dc9eb370508f25a06956",
+  "11.9": {
+    "sha": "e4abba4a80843bb4b626c2d8db4f7c1eeeb375ff",
     "message": "Add extra security to methods"
   },
-  "11.7": {
-    "sha": "f215e80f518c6d0aea213d6e230dc6521a028e2f",
+  "11.8": {
+    "sha": "b9db3806a93e08b1f2952ca6d83070c28d0612a2",
     "message": "Publish only public and owner's tasks"
   },
+  "11.7": {
+    "sha": "144a2f38e2fcea6c62783b18727f62ea44f02f9a",
+    "message": "Add setPrivate scope function"
+  },
   "11.6": {
-    "sha": "92a93e3b861d94aa9bcc65dc510e803f6029dd65",
-    "message": "Add setPrivate method"
+    "sha": "3ee9ad2c8830a636f97f44fb5ae6c3f2f1d9d562",
+    "message": "Add setPrivate Meteor Method"
   },
   "11.5": {
     "sha": "953c93f072e41324937a7183015579ed4899c90c",
diff --git a/generated/angular.multi.patch b/generated/angular.multi.patch
index dc8f7dd..c7264ac 100644
--- a/generated/angular.multi.patch
+++ b/generated/angular.multi.patch
@@ -1,7 +1,7 @@
 From b18f1aaf683e5f5c5b20212b43a4fef97c1c7664 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Wed, 13 May 2015 14:45:15 -0700
-Subject: [PATCH 01/37] Step 1: Run `meteor create`
+Subject: [PATCH 01/38] Step 1: Run `meteor create`
 
 ---
  .meteor/.finished-upgraders |  8 ++++++++
@@ -207,7 +207,7 @@ index 0000000..4f8c65d
 From 3da58d0f1228342c24254b0268ae04156c5009e9 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:34:04 +0300
-Subject: [PATCH 02/37] Step 2.1: Add the Angular package
+Subject: [PATCH 02/38] Step 2.1: Add the Angular package
 
 ---
  .meteor/packages | 1 +
@@ -263,7 +263,7 @@ index 410e1d9..70b0764 100644
 From 579e10de48cd091522b880c6280fcfcc3ec81ed5 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:44:07 +0300
-Subject: [PATCH 03/37] Step 2.2: Link main file to Angular templates
+Subject: [PATCH 03/38] Step 2.2: Link main file to Angular templates
 
 ---
  simple-todos-angular.html | 14 ++++----------
@@ -299,7 +299,7 @@ index 30ca9b0..f1391a5 100644
 From 82fd8e01f18fa64faca04535956815e5dc3f4ea3 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:46:44 +0300
-Subject: [PATCH 04/37] Step 2.3: Init Angular app and controller
+Subject: [PATCH 04/38] Step 2.3: Init Angular app and controller
 
 ---
  simple-todos-angular.js | 29 +++++++++++------------------
@@ -351,7 +351,7 @@ index 4f8c65d..fa676f2 100644
 From 7ec04bb81bd70c6926b42f7ee6f9f9995fe45ece Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:48:44 +0300
-Subject: [PATCH 05/37] Step 2.4: First Angular template
+Subject: [PATCH 05/38] Step 2.4: First Angular template
 
 ---
  todos-list.ng.html | 9 +++++++++
@@ -380,7 +380,7 @@ index 0000000..3dcfae9
 From f7cce808089dc131114eedd453292b95731690ac Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:50:26 +0300
-Subject: [PATCH 06/37] Step 2.5: Add CSS
+Subject: [PATCH 06/38] Step 2.5: Add CSS
 
 ---
  simple-todos-angular.css | 126 +++++++++++++++++++++++++++++++++++++++++++++++
@@ -525,7 +525,7 @@ index b6b4052..0bca5d2 100644
 From 5589cc40e89bf8ae25a31e69ed86c9c7ebf0073a Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:56:31 +0300
-Subject: [PATCH 07/37] Step 3.1: Replace the static array with a Collection
+Subject: [PATCH 07/38] Step 3.1: Replace the static array with a Collection
 
 ---
  simple-todos-angular.js | 14 ++++++--------
@@ -565,7 +565,7 @@ index fa676f2..9a9b236 100644
 From ab09bcf16256968772baf78d792ee3802230a615 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:58:59 +0300
-Subject: [PATCH 08/37] Step 4.1: Add new task form to template
+Subject: [PATCH 08/38] Step 4.1: Add new task form to template
 
 ---
  todos-list.ng.html | 6 ++++++
@@ -595,7 +595,7 @@ index 3dcfae9..6b6e0e0 100644
 From 3ba891e95d2ebb77e99acb525b79506fc516a1cb Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:00:30 +0300
-Subject: [PATCH 09/37] Step 4.2: Create Add Task scope function
+Subject: [PATCH 09/38] Step 4.2: Create Add Task scope function
 
 ---
  simple-todos-angular.js | 7 +++++++
@@ -625,7 +625,7 @@ index 9a9b236..e9dc878 100644
 From 7d3a03a08b48b1a1f0ac492d7f6685206b459d36 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:01:36 +0300
-Subject: [PATCH 10/37] Step 4.3: Sort task list by date
+Subject: [PATCH 10/38] Step 4.3: Sort task list by date
 
 ---
  simple-todos-angular.js | 4 +++-
@@ -653,7 +653,7 @@ index e9dc878..36ab6d1 100644
 From ade01c58b021c1fc432b323bbeaa78ab9f72b941 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:04:21 +0300
-Subject: [PATCH 11/37] Step 5.1: Add done and delete buttons to task
+Subject: [PATCH 11/38] Step 5.1: Add done and delete buttons to task
 
 ---
  todos-list.ng.html | 8 +++++++-
@@ -684,7 +684,7 @@ index 6b6e0e0..bda3dba 100644
 From 8466c1cdf7f7afc7f2f93dce2fa4d514c59f7130 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:08:33 +0300
-Subject: [PATCH 12/37] Step 7.1: Remove ng-app
+Subject: [PATCH 12/38] Step 7.1: Remove ng-app
 
 ---
  simple-todos-angular.html | 3 +--
@@ -710,7 +710,7 @@ index f1391a5..e43eceb 100644
 From 85e80627bfb80b13c21367c5f77cdcfdf5fadbd0 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:11:07 +0300
-Subject: [PATCH 13/37] Step 7.2: Bootstrap Angular to mobile as well
+Subject: [PATCH 13/38] Step 7.2: Bootstrap Angular to mobile as well
 
 ---
  simple-todos-angular.js | 9 +++++++++
@@ -743,7 +743,7 @@ index 36ab6d1..b002918 100644
 From 9b12d06c6242558c1077ad60ab07aefcecd3814f Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:13:14 +0300
-Subject: [PATCH 14/37] Step 8.1: Add hideComplete checkbox to template
+Subject: [PATCH 14/38] Step 8.1: Add hideComplete checkbox to template
 
 ---
  todos-list.ng.html | 5 +++++
@@ -772,7 +772,7 @@ index bda3dba..1049e4a 100644
 From 919560a990de2a2a370aea6f9e28888f09bd1b6f Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:14:54 +0300
-Subject: [PATCH 15/37] Step 8.2: Watch hideCompleted and change the query
+Subject: [PATCH 15/38] Step 8.2: Watch hideCompleted and change the query
  variable
 
 ---
@@ -803,7 +803,7 @@ index b002918..e759172 100644
 From 5adc4b31da9476a898df3db649a4aa7418b0b7d7 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:17:07 +0300
-Subject: [PATCH 16/37] Step 8.3: Change the Collection to use query parameter
+Subject: [PATCH 16/38] Step 8.3: Change the Collection to use query parameter
 
 ---
  simple-todos-angular.js | 4 ++--
@@ -831,7 +831,7 @@ index e759172..071be1f 100644
 From ea6ca654274d1e5a22ec76a2a33c32c388c4ce75 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:17:59 +0300
-Subject: [PATCH 17/37] Step 8.4: Make query parameter reactive
+Subject: [PATCH 17/38] Step 8.4: Make query parameter reactive
 
 ---
  simple-todos-angular.js | 2 +-
@@ -857,7 +857,7 @@ index 071be1f..24c55fa 100644
 From f0fb1566f2dfdcd206ec6efe2e274090a1c4a5a8 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:19:38 +0300
-Subject: [PATCH 18/37] Step 8.5: Add incompleteCount to scope
+Subject: [PATCH 18/38] Step 8.5: Add incompleteCount to scope
 
 ---
  simple-todos-angular.js | 4 ++++
@@ -884,7 +884,7 @@ index 24c55fa..5934036 100644
 From 3d4d598cac0c28b9c527545b36b3d7376a8c104c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:21:13 +0300
-Subject: [PATCH 19/37] Step 8.6: Add incompleteCount to header
+Subject: [PATCH 19/38] Step 8.6: Add incompleteCount to header
 
 ---
  todos-list.ng.html | 2 +-
@@ -909,7 +909,7 @@ index 1049e4a..de9a630 100644
 From 452eb1f509886d58662fee94da75dffaeab9abc5 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:22:29 +0300
-Subject: [PATCH 20/37] Step 9.1: Add accounts-ui and accounts-password
+Subject: [PATCH 20/38] Step 9.1: Add accounts-ui and accounts-password
  packages
 
 ---
@@ -985,7 +985,7 @@ index 70b0764..de04912 100644
 From 35a313074e5780255f2c3010163a2dec2411afac Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:24:29 +0300
-Subject: [PATCH 21/37] Step 9.2: Add Blaze loginButtons template to HTML
+Subject: [PATCH 21/38] Step 9.2: Add Blaze loginButtons template to HTML
 
 ---
  todos-list.ng.html | 2 ++
@@ -1011,7 +1011,7 @@ index de9a630..e4c0123 100644
 From 253abff3918109b97f642067ec222cf529b09c6c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:27:12 +0300
-Subject: [PATCH 22/37] Step 9.3: Configure accounts UI to use usernames
+Subject: [PATCH 22/38] Step 9.3: Configure accounts UI to use usernames
  instead of email
 
 ---
@@ -1040,7 +1040,7 @@ index 5934036..0c2d6c1 100644
 From 8210ff2c37a8b9ccb6b9750aa9d0df94f4e59a8a Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:29:48 +0300
-Subject: [PATCH 23/37] Step 9.4: Add owner and username to created task
+Subject: [PATCH 23/38] Step 9.4: Add owner and username to created task
 
 ---
  simple-todos-angular.js | 8 +++++---
@@ -1073,7 +1073,7 @@ index 0c2d6c1..d0b3829 100644
 From 78d5f5619d9434035d6451ea4077dfcc8edb54ef Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:31:13 +0300
-Subject: [PATCH 24/37] Step 9.5: Hide new task form if user is not logged in
+Subject: [PATCH 24/38] Step 9.5: Hide new task form if user is not logged in
 
 ---
  todos-list.ng.html | 4 +++-
@@ -1101,7 +1101,7 @@ index e4c0123..aa02851 100644
 From 5b026977269006ac5ebfda7ceb25923fc4d69ab4 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:32:49 +0300
-Subject: [PATCH 25/37] Step 9.6: Add username to the displayed task
+Subject: [PATCH 25/38] Step 9.6: Add username to the displayed task
 
 ---
  todos-list.ng.html | 4 +++-
@@ -1129,7 +1129,7 @@ index aa02851..ddc4777 100644
 From a01d86230123f4a46623ddf18775a41ca857e147 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:34:54 +0300
-Subject: [PATCH 26/37] Step 10.1: Remove the insecure package
+Subject: [PATCH 26/38] Step 10.1: Remove the insecure package
 
 ---
  .meteor/packages | 1 -
@@ -1167,7 +1167,7 @@ index de04912..38fa8cb 100644
 From 3adde199e75d84eae82cf51c48f94f8b3ac607f6 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:02:50 +0300
-Subject: [PATCH 27/37] Step 10.2: Add Meteor Methods for add, delete and check
+Subject: [PATCH 27/38] Step 10.2: Add Meteor Methods for add, delete and check
  tasks
 
 ---
@@ -1211,7 +1211,7 @@ index d0b3829..4b12a5e 100644
 From e6e0a9eff07668f5189c9e51b4162eacb858a02d Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:05:25 +0300
-Subject: [PATCH 28/37] Step 10.3: Add scope functions to call the Meteor
+Subject: [PATCH 28/38] Step 10.3: Add scope functions to call the Meteor
  methods
 
 ---
@@ -1253,7 +1253,7 @@ index 4b12a5e..655fe79 100644
 From 33215ecc0a0da5b8aedac04d5ae57f84770b9906 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:08:04 +0300
-Subject: [PATCH 29/37] Step 10.4: Change template events to call methods
+Subject: [PATCH 29/38] Step 10.4: Change template events to call methods
 
 ---
  todos-list.ng.html | 5 +++--
@@ -1283,7 +1283,7 @@ index ddc4777..ab2270f 100644
 From d14c3f1c5d1e6aebc8daec8b406c9021bbb7afe8 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:09:23 +0300
-Subject: [PATCH 30/37] Step 11.1: Remove the autopublish package
+Subject: [PATCH 30/38] Step 11.1: Remove the autopublish package
 
 ---
  .meteor/packages | 1 -
@@ -1321,7 +1321,7 @@ index 38fa8cb..96bf8b7 100644
 From e9afaa4006a2ffcb0b580a6d09b4d1a081fe12dc Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:10:25 +0300
-Subject: [PATCH 31/37] Step 11.2: Add server publish function to tasks
+Subject: [PATCH 31/38] Step 11.2: Add server publish function to tasks
 
 ---
  simple-todos-angular.js | 6 ++++++
@@ -1348,7 +1348,7 @@ index 655fe79..439a148 100644
 From e35c7c06c99042e26219976379ff75eef93876a7 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:11:21 +0300
-Subject: [PATCH 32/37] Step 11.3: Subscribe to tasks publication
+Subject: [PATCH 32/38] Step 11.3: Subscribe to tasks publication
 
 ---
  simple-todos-angular.js | 2 ++
@@ -1374,7 +1374,7 @@ index 439a148..6464ff3 100644
 From 52d3d8eff291d72e9d320a5048d05a8ba9b26e01 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:53:12 +0300
-Subject: [PATCH 33/37] Step 11.4: Add setPrivate button to template
+Subject: [PATCH 33/38] Step 11.4: Add setPrivate button to template
 
 ---
  todos-list.ng.html | 6 ++++++
@@ -1404,7 +1404,7 @@ index ab2270f..61435a2 100644
 From 953c93f072e41324937a7183015579ed4899c90c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:54:33 +0300
-Subject: [PATCH 34/37] Step 11.5: Add private CSS class to task
+Subject: [PATCH 34/38] Step 11.5: Add private CSS class to task
 
 ---
  todos-list.ng.html | 2 +-
@@ -1427,31 +1427,20 @@ index 61435a2..1799364 100644
 2.3.2 (Apple Git-55)
 
 
-From 92a93e3b861d94aa9bcc65dc510e803f6029dd65 Mon Sep 17 00:00:00 2001
+From 3ee9ad2c8830a636f97f44fb5ae6c3f2f1d9d562 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 15:56:20 +0300
-Subject: [PATCH 35/37] Step 11.6: Add setPrivate method
+Date: Sat, 18 Jul 2015 17:06:51 +0300
+Subject: [PATCH 35/38] Step 11.6: Add setPrivate Meteor Method
 
 ---
- simple-todos-angular.js | 14 ++++++++++++++
- 1 file changed, 14 insertions(+)
+ simple-todos-angular.js | 10 ++++++++++
+ 1 file changed, 10 insertions(+)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 6464ff3..bdc75a8 100644
+index 6464ff3..0bd3853 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
-@@ -39,6 +39,10 @@ if (Meteor.isClient) {
-         $meteor.call('setChecked', task._id, !task.checked);
-       };
- 
-+      $scope.setPrivate = function (task) {
-+        $meteor.call('setPrivate', task._id, ! task.private);
-+      };
-+
-       $scope.$watch('hideCompleted', function() {
-         if ($scope.hideCompleted)
-           $scope.query = {checked: {$ne: true}};
-@@ -72,6 +76,16 @@ Meteor.methods({
+@@ -72,6 +72,16 @@ Meteor.methods({
    },
    setChecked: function (taskId, setChecked) {
      Tasks.update(taskId, { $set: { checked: setChecked} });
@@ -1472,10 +1461,38 @@ index 6464ff3..bdc75a8 100644
 2.3.2 (Apple Git-55)
 
 
-From f215e80f518c6d0aea213d6e230dc6521a028e2f Mon Sep 17 00:00:00 2001
+From 144a2f38e2fcea6c62783b18727f62ea44f02f9a Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sat, 18 Jul 2015 17:08:29 +0300
+Subject: [PATCH 36/38] Step 11.7: Add setPrivate scope function
+
+---
+ simple-todos-angular.js | 4 ++++
+ 1 file changed, 4 insertions(+)
+
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 0bd3853..bdc75a8 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -39,6 +39,10 @@ if (Meteor.isClient) {
+         $meteor.call('setChecked', task._id, !task.checked);
+       };
+ 
++      $scope.setPrivate = function (task) {
++        $meteor.call('setPrivate', task._id, ! task.private);
++      };
++
+       $scope.$watch('hideCompleted', function() {
+         if ($scope.hideCompleted)
+           $scope.query = {checked: {$ne: true}};
+-- 
+2.3.2 (Apple Git-55)
+
+
+From b9db3806a93e08b1f2952ca6d83070c28d0612a2 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:59:53 +0300
-Subject: [PATCH 36/37] Step 11.7: Publish only public and owner's tasks
+Subject: [PATCH 37/38] Step 11.8: Publish only public and owner's tasks
 
 ---
  simple-todos-angular.js | 7 ++++++-
@@ -1502,10 +1519,10 @@ index bdc75a8..a6089ab 100644
 2.3.2 (Apple Git-55)
 
 
-From da7a9772ff9d58545765dc9eb370508f25a06956 Mon Sep 17 00:00:00 2001
+From e4abba4a80843bb4b626c2d8db4f7c1eeeb375ff Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 16:02:20 +0300
-Subject: [PATCH 37/37] Step 11.8: Add extra security to methods
+Subject: [PATCH 38/38] Step 11.9: Add extra security to methods
 
 ---
  simple-todos-angular.js | 12 ++++++++++++
diff --git a/repos/angular b/repos/angular
index 0ca238c..e4abba4 160000
--- a/repos/angular
+++ b/repos/angular
@@ -1 +1 @@
-Subproject commit 0ca238c099dbf17aa66873f813e8fed43b9b694d
+Subproject commit e4abba4a80843bb4b626c2d8db4f7c1eeeb375ff
diff --git a/routes/angularTut.js b/routes/angularTut.js
index d8679d6..0be89e4 100644
--- a/routes/angularTut.js
+++ b/routes/angularTut.js
@@ -5,8 +5,7 @@ ANGULAR_TUT = [
     seoTitle: 'Creating an app',
     route: "tutorials.angular.creating-an-app",
     path: "/tutorials/angular/creating-an-app",
-    contentTemplate: 'angular-step01',
-    sha: ANGULAR_COMMITS["1"].sha
+    contentTemplate: 'angular-step01'
   },
   {
     id: "1",
@@ -14,8 +13,7 @@ ANGULAR_TUT = [
     seoTitle: 'Templates',
     route: "tutorials.angular.templates",
     path: "/tutorials/angular/templates",
-    contentTemplate: 'angular-step02',
-    sha: ANGULAR_COMMITS["2"].sha
+    contentTemplate: 'angular-step02'
   },
   {
     id: "2",
@@ -23,8 +21,7 @@ ANGULAR_TUT = [
     seoTitle: 'Collections',
     route: "tutorials.angular.collections",
     path: "/tutorials/angular/collections",
-    contentTemplate: 'angular-step03',
-    sha: ANGULAR_COMMITS["3"].sha
+    contentTemplate: 'angular-step03'
   },
   {
     id: "3",
@@ -32,8 +29,7 @@ ANGULAR_TUT = [
     seoTitle: 'Forms and events',
     route: "tutorials.angular.forms-and-events",
     path: "/tutorials/angular/forms-and-events",
-    contentTemplate: 'angular-step04',
-    sha: ANGULAR_COMMITS["4"].sha
+    contentTemplate: 'angular-step04'
   },
   {
     id: "4",
@@ -41,8 +37,7 @@ ANGULAR_TUT = [
     seoTitle: 'Update and remove',
     route: "tutorials.angular.update-and-remove",
     path: "/tutorials/angular/update-and-remove",
-    contentTemplate: 'angular-step05',
-    sha: ANGULAR_COMMITS["5"].sha
+    contentTemplate: 'angular-step05'
   },
   {
     id: "5",
@@ -58,8 +53,7 @@ ANGULAR_TUT = [
     seoTitle: 'Running on mobile',
     route: "tutorials.angular.running-on-mobile",
     path: "/tutorials/angular/running-on-mobile",
-    contentTemplate: 'angular-step07',
-    sha: ANGULAR_COMMITS["7"].sha
+    contentTemplate: 'angular-step07'
   },
   {
     id: "7",
@@ -67,8 +61,7 @@ ANGULAR_TUT = [
     seoTitle: 'Filtering Collections',
     route: "tutorials.angular.filtering-collections",
     path: "/tutorials/angular/filtering-collections",
-    contentTemplate: 'angular-step08',
-    sha: ANGULAR_COMMITS["8"].sha
+    contentTemplate: 'angular-step08'
   },
   {
     id: "8",
@@ -76,8 +69,7 @@ ANGULAR_TUT = [
     seoTitle: 'Adding user accounts',
     route: "tutorials.angular.adding-user-accounts",
     path: "/tutorials/angular/adding-user-accounts",
-    contentTemplate: 'angular-step09',
-    sha: ANGULAR_COMMITS["9"].sha
+    contentTemplate: 'angular-step09'
   },
   {
     id: "9",
@@ -85,8 +77,7 @@ ANGULAR_TUT = [
     seoTitle: 'Security with methods',
     route: "tutorials.angular.security-with-methods",
     path: "/tutorials/angular/security-with-methods",
-    contentTemplate: 'angular-step10',
-    sha: ANGULAR_COMMITS["10"].sha
+    contentTemplate: 'angular-step10'
   },
   {
     id: "10",
@@ -94,8 +85,7 @@ ANGULAR_TUT = [
     seoTitle: 'Publish and subscribe',
     route: "tutorials.angular.publish-and-subscribe",
     path: "/tutorials/angular/publish-and-subscribe",
-    contentTemplate: 'angular-step11',
-    sha: ANGULAR_COMMITS["11"].sha
+    contentTemplate: 'angular-step11'
   },
   {
     id: "11",
-- 
2.13.6 (Apple Git-96)


From d9ab18d70105ec76100c25ea8772d6e1a20942e6 Mon Sep 17 00:00:00 2001
From: Uri Goldshtein <uri.goldshtein@gmail.com>
Date: Sat, 18 Jul 2015 17:21:28 +0300
Subject: [PATCH 062/164] Add Sashko's comment to README

---
 README.md | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/README.md b/README.md
index aae96c0..c43a015 100644
--- a/README.md
+++ b/README.md
@@ -36,6 +36,8 @@ The code snippets are generated from the step-by-step git repositories which are
 Step 3.1: Add some feature
 ```
 
+You might also want to make sure that all of your files end with a newline so that you don't get an annoying "No newline at end of file" diff.
+
 After using `git rebase -i --root` to massage the repository into the desired state, run the script to update the generated files:
 
 ```sh
-- 
2.13.6 (Apple Git-96)


From 6601c83444e07f8bb2438feaf9dbc548c5c9e339 Mon Sep 17 00:00:00 2001
From: anton <jag@antonkandersson.se>
Date: Sun, 19 Jul 2015 22:39:52 +0200
Subject: [PATCH 063/164] Replaced XXX with some great resources for learning
 ES6/ES2015

---
 content/react/step02.md | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/content/react/step02.md b/content/react/step02.md
index 55aeec6..6a08147 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -68,7 +68,13 @@ If you haven't tried next-generation JavaScript features yet, some of the syntax
 2. Shorthand for methods: `render() { ... }`
 3. `const` and `let` instead of `var`
 
-Read more about these features here: XXX
+Read more about these features here: 
+
+* [Luke Hoban's "ES6 features"](http://git.io/es6features)
+
+* [Kyle Simpson's "You don't know JS: ES6 and beyond"](https://github.com/getify/You-Dont-Know-JS/tree/master/es6%20%26%20beyond)
+
+* [Nikolas C. Zakas "Understanding ECMAScript 6"](https://github.com/nzakas/understandinges6)
 
 {{> addingCSS}}
 
-- 
2.13.6 (Apple Git-96)


From 4647808d23d174d03d1d0a007dde05a0f5c5fbca Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 20 Jul 2015 11:23:29 -0700
Subject: [PATCH 064/164] Small edits to tutorial

---
 content/angular/step02.md | 6 +++---
 content/angular/step07.md | 6 +++---
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/content/angular/step02.md b/content/angular/step02.md
index 4a9f5bb..02883ff 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -1,8 +1,8 @@
 {{#template name="angular-step02"}}
 # Defining views with templates
 
-To turn our Meteor app into Angular compatible, we need to add the [angular-meteor package](http://angular-meteor.com/) by typing the following
-command into your command line:
+To use Angular in our app, we need to add the [angular-meteor package](http://angular-meteor.com/) by typing the following
+command into the command line:
 
     meteor add urigo:angular
 
@@ -14,7 +14,7 @@ To start working on our todos list app, let's replace the code of the default st
 
 {{> CodeBox view="angular" step="2.3"}}
 
-To write Angular templates, we need to name our files with a `.ng.html` suffix.
+To write Angular templates, we need to name our files with the `.ng.html` extension.
 
 Create a new file named `todos-list.ng.html` and place it on the root folder:
 
diff --git a/content/angular/step07.md b/content/angular/step07.md
index 55d5601..a080761 100644
--- a/content/angular/step07.md
+++ b/content/angular/step07.md
@@ -1,10 +1,10 @@
 {{#template name="angularSpecialPart07"}}
-### Bootstrapping Angular for mobile
+### Setting up Angular for mobile
 
-Angular needs the main document to be ready so it can bootstrap, but different devices has different events for `ready`.
+Angular needs the main document to be ready so it can bootstrap, but different devices have different events for `ready`.
 
 To solve this, we need to change the way we bootstrap our Angular app.
-Remove the current bootstrap by removing `ng-app` from the BODY tag:
+Remove the current bootstrap by removing `ng-app` from the `<body>` tag:
 
 {{> CodeBox view="angular" step="7.1"}}
 
-- 
2.13.6 (Apple Git-96)


From e90009abbbed3045845a52cd4ca35b8cab6b35f6 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 27 Jul 2015 10:52:22 -0700
Subject: [PATCH 065/164] Begin refactor to tutorial-tools

---
 README.md                                     |   6 +-
 build-plugin/patch-plugin.jsx                 | 105 -----------------------
 components/code-box.html                      |   8 --
 components/code-box.js                        |  67 ---------------
 components/git-patch-viewer/patch-viewer.html |  29 -------
 components/git-patch-viewer/patch-viewer.jsx  | 115 --------------------------
 components/git-patch-viewer/patch-viewer.less |  76 -----------------
 content/angular/register.js                   |   4 +
 content/angular/step02.md                     |   6 +-
 content/angular/step03.md                     |   2 +-
 content/angular/step04.md                     |   6 +-
 content/angular/step05.md                     |   2 +-
 content/angular/step07.md                     |   4 +-
 content/angular/step08.md                     |  12 +--
 content/angular/step09.md                     |  10 +--
 content/angular/step10.md                     |   6 +-
 content/angular/step11.md                     |  16 ++--
 content/blaze/register.js                     |   4 +
 content/blaze/step02.md                       |   4 +-
 content/blaze/step03.md                       |   2 +-
 content/blaze/step04.md                       |   6 +-
 content/blaze/step05.md                       |   4 +-
 content/blaze/step08.md                       |  10 +--
 content/blaze/step09.md                       |  10 +--
 content/blaze/step10.md                       |   6 +-
 content/blaze/step11.md                       |  16 ++--
 content/react/register.js                     |   4 +
 content/react/step02.md                       |   8 +-
 content/react/step03.md                       |   4 +-
 content/react/step04.md                       |   6 +-
 content/react/step05.md                       |   2 +-
 content/react/step08.md                       |  12 +--
 content/react/step09.md                       |  14 ++--
 content/react/step10.md                       |   6 +-
 content/react/step11.md                       |  18 ++--
 package.js                                    |  22 +----
 36 files changed, 113 insertions(+), 519 deletions(-)
 delete mode 100644 build-plugin/patch-plugin.jsx
 delete mode 100644 components/code-box.html
 delete mode 100644 components/code-box.js
 delete mode 100644 components/git-patch-viewer/patch-viewer.html
 delete mode 100644 components/git-patch-viewer/patch-viewer.jsx
 delete mode 100644 components/git-patch-viewer/patch-viewer.less
 create mode 100644 content/angular/register.js
 create mode 100644 content/blaze/register.js
 create mode 100644 content/react/register.js

diff --git a/README.md b/README.md
index c43a015..7774760 100644
--- a/README.md
+++ b/README.md
@@ -47,7 +47,7 @@ After using `git rebase -i --root` to massage the repository into the desired st
 The commit with this message can then be included in the content with the following code snippet:
 
 ```html
-{{> CodeBox step="3.1" view="blaze"}}
+{{> DiffBox step="3.1" view="blaze"}}
 ```
 
 You should replace `blaze` with the correct view name (currently this string is automatically transformed to refer to the correct data structures).
@@ -60,8 +60,6 @@ This repository is a Meteor package; it's currently not published, but you can c
 
 The different parts of the repository have quite different responsibilities, but they are somewhat tightly coupled so it doesn't make sense to split them into separate packages at this point.
 
-1. `/build-plugin/` The build plugin reads files with `.patch` and `.multi.patch` file extensions, and puts data on a package-local object named `GitPatches`. You can access the data for a specific commit on `GitPatches[commitSha]`. The Blaze view component in `/components/git-patch-viewer` reads this data structure and displays a diff with context and a link to GitHub.
-2. `/components/` This directory contains Blaze components for viewing git patches, tailored specifically to the needs of these tutorials. Don't use the `GitPatch` component directly; use it by calling the more convenient `CodeBox` component instead.
 3. `/content/` The actual tutorial prose content, in Markdown format.
 4. `/generated/` (don't edit manually) This directory contains files generated by `/scripts/process-repo.rb`:
     1. `*-commits.js` are lists of commits keyed by the number of the step in the tutorial, with a parsed commit message.
@@ -69,4 +67,4 @@ The different parts of the repository have quite different responsibilities, but
 5. `/repos/` This directory contains git submodules of all three step-by-step tutorial repositories.
 6. `/routes/` This directory contains JavaScript data structures describing the different tutorial steps. These are exported from the package; the meteor.com website and tutorial-viewer app know how to read them.
 7. `/scripts/` This contains a script that is used to update `/generated/` from the repositories in `/repos/`.
-8. `/shared/` Tutorial-specific templates. Some of them are shared content for the different tutorials in markdown format, others are useful UI widgets. Includes the useful `CodeBox` template, which wraps the `GitPatch` template with more convenient inputs.
+8. `/shared/` Tutorial-specific templates. Some of them are shared content for the different tutorials in markdown format, others are useful UI widgets. Includes the useful `DiffBox` template, which wraps the `GitPatch` template with more convenient inputs.
diff --git a/build-plugin/patch-plugin.jsx b/build-plugin/patch-plugin.jsx
deleted file mode 100644
index 3f774a1..0000000
--- a/build-plugin/patch-plugin.jsx
+++ /dev/null
@@ -1,105 +0,0 @@
-function multiPatchHandler(compileStep) {
-  const file = compileStep.read().toString();
-
-  const patchStart = /^From /gm;
-
-  let match = null;
-  const patchIndices = [];
-  while ((match = patchStart.exec(file)) != null) {
-    patchIndices.push(match.index);
-  }
-
-  const patches = [];
-  _.range(patchIndices.length).forEach((i) => {
-    let patchContent = "";
-
-    if (i + 1 < patchIndices.length) {
-      patchContent = file.slice(patchIndices[i], patchIndices[i + 1]);
-    } else {
-      patchContent = file.slice(patchIndices[i]);
-    }
-
-    // Remove the weird -- 2.2.1 part at the end of every patch
-    patchContent = patchContent.split(/^-- $/m)[0];
-
-    patches.push(patchContent);
-  });
-
-  const datas = patches.map(parsePatch);
-
-  const GitPatches = {};
-  datas.forEach((data) => {
-    const sha = data.sha;
-    delete data.sha;
-    GitPatches[sha] = data;
-  });
-
-  const jsonData = JSON.stringify(GitPatches);
-
-  const code = `GitPatches = GitPatches || {};
-_.extend(GitPatches, ${jsonData})`;
-
-  compileStep.addJavaScript({
-    data: code,
-    sourcePath: compileStep.inputPath,
-    path: compileStep.inputPath + ".js"
-  });
-}
-
-function patchHandler(compileStep) {
-  const file = compileStep.read().toString();
-  const data = parsePatch(file);
-  const sha = data.sha;
-  delete data.sha;
-  const jsonData = JSON.stringify({[sha]: data});
-
-  const code = `GitPatches = GitPatches || {};
-_.extend(GitPatches, ${jsonData})`;
-
-  compileStep.addJavaScript({
-    data: code,
-    sourcePath: compileStep.inputPath,
-    path: compileStep.inputPath + ".js"
-  });
-}
-
-/**
- * Parse a string that represents a git patch
- * @param  {String} contents The contents of the patch to parse
- * @return {Object}          An object where the keys are filenames, and the
- * values are the contents of the diff
- */
-function parsePatch(contents) {
-  const sha = contents.split(" ")[1];
-  const fileParts = contents.split(/^diff --git /m).slice(1);
-  const data = {};
-
-  _.each(fileParts, (part) => {
-    const start = part.indexOf("@@");
-    const diffContents = part.slice(start);
-
-    // XXX won't work with spaces in filenames
-    const fileNameMatch = /^\+\+\+ b\/(.+)$/m.exec(part);
-
-    if (! fileNameMatch) {
-      // This was probably a deleted file
-      return;
-    }
-
-    const fileName = fileNameMatch[1]
-
-    const fileData = {
-      fileName: fileName,
-      diff: diffContents
-    };
-
-    data[fileName] = fileData;
-  });
-
-  data.sha = sha;
-
-  return data;
-}
-
-Plugin.registerSourceHandler("multi.patch", {isTemplate: true}, multiPatchHandler);
-Plugin.registerSourceHandler("patch", {isTemplate: true}, patchHandler);
\ No newline at end of file
diff --git a/components/code-box.html b/components/code-box.html
deleted file mode 100644
index dcf6ff4..0000000
--- a/components/code-box.html
+++ /dev/null
@@ -1,8 +0,0 @@
-<template name="CodeBox">
-  {{> GitPatch
-    repoName=repoName
-    commit=commit
-    fileName=fileName
-    summary=summary
-    step=step}}
-</template>
diff --git a/components/code-box.js b/components/code-box.js
deleted file mode 100644
index 5a8d063..0000000
--- a/components/code-box.js
+++ /dev/null
@@ -1,67 +0,0 @@
-// This is a wrapper around the GitPatch template for the tutorial
-Template.CodeBox.onCreated(function () {
-  if (! Template.currentData()) {
-    throw new Error("Must pass arguments to CodeBox");
-  }
-
-  var data = Template.currentData();
-
-  if (! (data.view && data.step)) {
-    throw new Error("Must pass view and step args to CodeBox");
-  }
-});
-
-Template.CodeBox.helpers({
-  repoName: function () {
-    var view = Template.currentData().view;
-
-    if (view === "react") {
-      return "meteor/simple-todos-react";
-    } else if (view === "angular") {
-      return "meteor/simple-todos-angular";
-    } else if (view === "blaze") {
-      return "meteor/simple-todos";
-    } else {
-      throw Error("Unrecognized view option: " + view);
-    }
-  },
-  commit: function () {
-    return getCommitData()[Template.currentData().step].sha;
-  },
-  summary: function () {
-    var step = Template.currentData().step;
-    return getCommitData()[step].message;
-  },
-  fileName: function () {
-    if (Template.currentData().fileName) {
-      return Template.currentData().fileName;
-    }
-
-    var gitSha = getCommitData()[Template.currentData().step].sha;
-    var patch = GitPatches[gitSha];
-    var fileNames = _.keys(patch);
-
-    if (fileNames.length === 1) {
-      return fileNames[0];
-    }
-
-    throw new Error("Multiple files in patch. Must specify fileName.");
-  }
-});
-
-function getCommitData() {
-  var view = Template.currentData().view;
-
-  var commitData = null;
-  if (view === "react") {
-    commitData = REACT_COMMITS;
-  } else if (view === "angular") {
-    commitData = ANGULAR_COMMITS;
-  } else if (view === "blaze") {
-    commitData = BLAZE_COMMITS;
-  } else {
-    throw Error("Unrecognized view option: " + view);
-  }
-
-  return commitData;
-}
diff --git a/components/git-patch-viewer/patch-viewer.html b/components/git-patch-viewer/patch-viewer.html
deleted file mode 100644
index 16ad12b..0000000
--- a/components/git-patch-viewer/patch-viewer.html
+++ /dev/null
@@ -1,29 +0,0 @@
-<template name="GitPatch">
-  <div class="github-diff-container">
-    <div class="title-panel">
-      {{#if step}}
-        <strong>{{step}}</strong>&nbsp;
-      {{/if}}
-      {{summary}}
-      <a class="on-github" href="{{gitHubLink}}">
-        {{fileName}} &raquo;
-      </a>
-    </div>
-    <div class="code-window">
-      <div class="inside-scroll-container">
-        <div class="line-numbers">
-          {{#each lineNumbers}}
-            <pre class="line-number">{{this}}</pre>
-          {{/each}}
-        </div>
-        <div class="line-content">
-          {{#each lines}}
-            {{#unless equals type "removed"}}
-              <pre class="{{type}}">{{{content}}}</pre>
-            {{/unless}}
-          {{/each}}
-        </div>
-      </div>
-    </div>
-  </div>
-</template>
\ No newline at end of file
diff --git a/components/git-patch-viewer/patch-viewer.jsx b/components/git-patch-viewer/patch-viewer.jsx
deleted file mode 100644
index 766b0ed..0000000
--- a/components/git-patch-viewer/patch-viewer.jsx
+++ /dev/null
@@ -1,115 +0,0 @@
-GitPatches = {};
-
-Template.GitPatch.onCreated(function () {
-  this.fileName = new ReactiveVar(null);
-  this.fileData = new ReactiveVar(null);
-  this.ready = new ReactiveVar(false);
-
-  let argsPassed = false;
-
-  this.autorun(() => {
-    if (! Template.currentData()) {
-      // No arguments provided
-      return;
-    }
-
-    const {
-      commit,
-      repoName,
-      fileName,
-      summary
-    } = Template.currentData();
-
-    if (! (commit && repoName && fileName && summary)) {
-      // Not all arguments were provided
-      return;
-    }
-
-    argsPassed = true;
-    this.fileName.set(fileName);
-    this.fileData.set(GitPatches[commit][fileName]);
-  });
-
-  if (! argsPassed) {
-    console.info("GitPatch template needs four arguments: repoName, commit, summary, and fileName");
-  }
-});
-
-Template.GitPatch.helpers({
-  fileName() {
-    return Template.instance().fileName.get();
-  },
-  lineNumbers() {
-    const fileData = Template.instance().fileData.get();
-
-    if (! fileData) {
-      return null;
-    }
-
-    const patchLines = fileData.diff.split("\n");
-    const lineNumbers = patchLines[0];
-
-    const firstLineNumber = parseInt(
-      lineNumbers.split(" ")[2].split(",")[0].slice(1), 10);
-
-    const numLines = parseInt(
-      lineNumbers.split(" ")[2].split(",")[1], 10);
-
-    return _.range(firstLineNumber, firstLineNumber + numLines);
-  },
-  lines() {
-    const fileData = Template.instance().fileData.get();
-
-    if (! fileData) {
-      return null;
-    }
-
-    const patchLines = fileData.diff.split("\n");
-    const lineNumbers = patchLines[0];
-
-    // Take off first line which is just line numbers, and last line which
-    // is just empty
-    const contentPatchLines = patchLines.slice(1, patchLines.length - 1);
-
-    const firstLineNumber = parseInt(
-      lineNumbers.split(" ")[2].split(",")[0].slice(1), 10);
-
-    return _.map(contentPatchLines, (line) => {
-      if (! line) {
-        // The last line ends up being an empty string
-        return null;
-      }
-
-      let type = "context";
-
-      if (/^\+/.test(line)) {
-        type = "added";
-      } else if (/^-/.test(line)) {
-        type = "removed";
-      }
-
-      const content = line.slice(1);
-      let highlightedContent = null;
-      if (content) {
-        const ext = _.last(fileData.fileName.split("."));
-        let fileType = ext;
-        if (ext === "jsx") {
-          fileType = "js";
-        }
-
-        highlightedContent = hljs.highlight(fileType, content, true).value;
-      }
-
-      return {
-        type,
-        content: highlightedContent || " "
-      };
-    });
-  },
-  equals(a, b) {
-    return a === b;
-  },
-  gitHubLink() {
-    return `https://github.com/${this.repoName}/commit/${this.commit}`;
-  }
-});
diff --git a/components/git-patch-viewer/patch-viewer.less b/components/git-patch-viewer/patch-viewer.less
deleted file mode 100644
index 97c5db5..0000000
--- a/components/git-patch-viewer/patch-viewer.less
+++ /dev/null
@@ -1,76 +0,0 @@
-.github-diff-container {
-  border: 1px solid #eee;
-  -webkit-text-size-adjust: 100%;
-
-  margin: 1.5em 0;
-
-  pre {
-    background: transparent;
-    border: none;
-  }
-
-  .title-panel {
-    padding: 5px 12px;
-    background: #eee;
-    border-bottom: solid 1px #eee;
-    color: #333;
-    overflow: auto;
-
-    .on-github {
-      float: right;
-      color: black;
-      text-decoration: none;
-      border-bottom: none !important;
-    }
-  }
-
-  .code-window {
-    overflow-x: auto;
-    position: relative;
-    padding: 9px 3px 3px 0;
-    background: #f8f8f8;
-
-    /* I am not good enough at CSS to achieve the scrolling behavior I want
-    without dirty tricks... */
-    .inside-scroll-container {
-      display: inline-block;
-      min-width: 100%;
-      overflow: hidden;
-    }
-
-    pre {
-      margin: 0;
-      padding: 0;
-
-      background-color: transparent;
-
-      &.added {
-        background: #eaffea;
-      }
-    }
-
-    .line-content {
-      padding-left: 36px;
-      overflow: hidden;
-
-      .hljs-comment {
-        color: #777;
-      }
-    }
-
-    .line-numbers {
-      text-align: right;
-      -moz-user-select: none;
-      -khtml-user-select: none;
-      -webkit-user-select: none;
-      -o-user-select: none;
-      position: absolute;
-      width: 25px;
-
-      .line-number {
-        color: #aaa;
-        font-style: italic;
-      }
-    }
-  }
-}
\ No newline at end of file
diff --git a/content/angular/register.js b/content/angular/register.js
new file mode 100644
index 0000000..10a39ea
--- /dev/null
+++ b/content/angular/register.js
@@ -0,0 +1,4 @@
+DiffBox.registerTutorial("simple-todos-angular", {
+  gitHubRepoName: "meteor/simple-todos-angular",
+  patchFilename: "angular.multi.patch"
+});
diff --git a/content/angular/step02.md b/content/angular/step02.md
index 02883ff..7d62453 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -9,16 +9,16 @@ command into the command line:
 
 To start working on our todos list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
 
-{{> CodeBox view="angular" step="2.2"}}
+{{> DiffBox view="angular" step="2.2"}}
 
 
-{{> CodeBox view="angular" step="2.3"}}
+{{> DiffBox view="angular" step="2.3"}}
 
 To write Angular templates, we need to name our files with the `.ng.html` extension.
 
 Create a new file named `todos-list.ng.html` and place it on the root folder:
 
-{{> CodeBox view="angular" step="2.4"}}
+{{> DiffBox view="angular" step="2.4"}}
 
 In our browser, the app should look pretty much like this:
 
diff --git a/content/angular/step03.md b/content/angular/step03.md
index 447c628..27bcf76 100644
--- a/content/angular/step03.md
+++ b/content/angular/step03.md
@@ -6,7 +6,7 @@
 
 Let's update our JavaScript code to get our tasks from a collection instead of a static array:
 
-{{> CodeBox view="angular" step="3.1"}}
+{{> DiffBox view="angular" step="3.1"}}
 
 We are using the `$meteor` service to bind our `Tasks` collection to our `$scope.tasks` variable.
 Now every change that will happen to each of those objects will be synced in real time across our stack.
diff --git a/content/angular/step04.md b/content/angular/step04.md
index 2a7cf13..c2802a8 100644
--- a/content/angular/step04.md
+++ b/content/angular/step04.md
@@ -6,11 +6,11 @@ In this step, we'll add an input field for users to add tasks to the list.
 
 First, let's add a form to our HTML:
 
-{{> CodeBox view="angular" step="4.1"}}
+{{> DiffBox view="angular" step="4.1"}}
 
 Here's the JavaScript code we need to add to listen to the `submit` event on the form:
 
-{{> CodeBox view="angular" step="4.2"}}
+{{> DiffBox view="angular" step="4.2"}}
 
 Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
 
@@ -36,7 +36,7 @@ Until now you probably used Angular sort filter to do so. you can still use that
 Replace the `Tasks` collection variable with a function inside our `$meteor.collection` service call.
 The function will return a the result of calling the `find` function with the `sort` parameter on our `Tasks` collection, like that:
 
-{{> CodeBox view="angular" step="4.3"}}
+{{> DiffBox view="angular" step="4.3"}}
 
 To better understand the difference between using the sort filter and the collection options, check out the advanced tutorial about [search, sort and pagination](http://angular-meteor.com/tutorial/step_12).
 
diff --git a/content/angular/step05.md b/content/angular/step05.md
index c837b99..5aeecca 100644
--- a/content/angular/step05.md
+++ b/content/angular/step05.md
@@ -6,7 +6,7 @@ Until now, we have only interacted with a collection by inserting documents. Now
 
 Let's add two elements to our `task` template, a checkbox and a delete button:
 
-{{> CodeBox view="angular" step="5.1"}}
+{{> DiffBox view="angular" step="5.1"}}
 
 ### Update
 
diff --git a/content/angular/step07.md b/content/angular/step07.md
index a080761..a86ddbe 100644
--- a/content/angular/step07.md
+++ b/content/angular/step07.md
@@ -6,11 +6,11 @@ Angular needs the main document to be ready so it can bootstrap, but different d
 To solve this, we need to change the way we bootstrap our Angular app.
 Remove the current bootstrap by removing `ng-app` from the `<body>` tag:
 
-{{> CodeBox view="angular" step="7.1"}}
+{{> DiffBox view="angular" step="7.1"}}
 
 Then add the following code right after `Meteor.isClient`:
 
-{{> CodeBox view="angular" step="7.2"}}
+{{> DiffBox view="angular" step="7.2"}}
 
 {{/template}}
 
diff --git a/content/angular/step08.md b/content/angular/step08.md
index 68b341b..cc6aeb9 100644
--- a/content/angular/step08.md
+++ b/content/angular/step08.md
@@ -8,7 +8,7 @@ We're going to learn how to use Mongo's filtering API.
 
 First, we need to add a checkbox to our HTML:
 
-{{> CodeBox view="angular" step="8.1"}}
+{{> DiffBox view="angular" step="8.1"}}
 
 This checkbox binds to the scope's `hideCompleted` variable.
 > We are using `$parent` because it creates a new child scope.
@@ -34,11 +34,11 @@ Tasks.find({ checked: {$ne: true} }, { sort: { createdAt: -1 } })
 So let's create a scope variable that will hold the wanted query and will change together with the checkbox.
 Inside our controller:
 
-{{> CodeBox view="angular" step="8.2"}}
+{{> DiffBox view="angular" step="8.2"}}
 
 and let's change our `$scope.tasks` definition accordingly:
 
-{{> CodeBox view="angular" step="8.3"}}
+{{> DiffBox view="angular" step="8.3"}}
 
 **but we are missing one more thing** - The expression we are sending `$meteor.collection` is a Meteor expression and
 **Meteor has to know that the Angular `query` parameter has changed**.
@@ -50,7 +50,7 @@ scope variables into [Meteor reactive variables](http://docs.meteor.com/#/full/r
 
 So now our definition should look like that:
 
-{{> CodeBox view="angular" step="8.4"}}
+{{> DiffBox view="angular" step="8.4"}}
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
@@ -61,8 +61,8 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a scope function and change one line of the HTML.
 
-{{> CodeBox view="angular" step="8.5"}}
+{{> DiffBox view="angular" step="8.5"}}
 
-{{> CodeBox view="angular" step="8.6"}}
+{{> DiffBox view="angular" step="8.6"}}
 
 {{/template}}
diff --git a/content/angular/step09.md b/content/angular/step09.md
index a6adb79..a029959 100644
--- a/content/angular/step09.md
+++ b/content/angular/step09.md
@@ -12,14 +12,14 @@ meteor add accounts-ui accounts-password
 
 In the HTML, right under the checkbox, include the following code to add a login dropdown:
 
-{{> CodeBox view="angular" step="9.2"}}
+{{> DiffBox view="angular" step="9.2"}}
 
 The powerful [meteor-include](http://angular-meteor.com/api/meteor-include) directive let's you add **any Blaze template** into your Angular templates.
 We are adding `loginButtons` which is the Blaze template for user authentication flow supplied with the accounts-ui package.
 
 Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
-{{> CodeBox view="angular" step="9.3"}}
+{{> DiffBox view="angular" step="9.3"}}
 
 Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
 
@@ -33,15 +33,15 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `addTask` function:
 
-{{> CodeBox view="angular" step="9.4"}}
+{{> DiffBox view="angular" step="9.4"}}
 
 Then, in our HTML, add an `ng-show` directive to only show the form when there is a logged in user:
 
-{{> CodeBox view="angular" step="9.5"}}
+{{> DiffBox view="angular" step="9.5"}}
 
 Finally, add a statement to display the `username` field on each task right before the text:
 
-{{> CodeBox view="angular" step="9.6"}}
+{{> DiffBox view="angular" step="9.6"}}
 
 Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
 
diff --git a/content/angular/step10.md b/content/angular/step10.md
index 6053093..8268c07 100644
--- a/content/angular/step10.md
+++ b/content/angular/step10.md
@@ -18,15 +18,15 @@ If you try to use the app after removing this package, you will notice that none
 
 First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
 
-{{> CodeBox view="angular" step="10.2"}}
+{{> DiffBox view="angular" step="10.2"}}
 
 Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
-{{> CodeBox view="angular" step="10.3"}}
+{{> DiffBox view="angular" step="10.3"}}
 
 and the way we handle the changes in the template:
 
-{{> CodeBox view="angular" step="10.4"}}
+{{> DiffBox view="angular" step="10.4"}}
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
diff --git a/content/angular/step11.md b/content/angular/step11.md
index c9705c4..40717f0 100644
--- a/content/angular/step11.md
+++ b/content/angular/step11.md
@@ -14,9 +14,9 @@ When the app refreshes, the task list will be empty. Without the `autopublish` p
 
 Let's add them now.
 
-{{> CodeBox view="angular" step="11.2"}}
+{{> DiffBox view="angular" step="11.2"}}
 
-{{> CodeBox view="angular" step="11.3"}}
+{{> DiffBox view="angular" step="11.3"}}
 
 Once you have added this code, all of the tasks will reappear.
 
@@ -26,22 +26,22 @@ Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`
 
 First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
 
-{{> CodeBox view="angular" step="11.4"}}
+{{> DiffBox view="angular" step="11.4"}}
 
-{{> CodeBox view="angular" step="11.5"}}
+{{> DiffBox view="angular" step="11.5"}}
 
 We need to modify our JavaScript code in two places:
 
-{{> CodeBox view="angular" step="11.6"}}
+{{> DiffBox view="angular" step="11.6"}}
 
-{{> CodeBox view="angular" step="11.7"}}
+{{> DiffBox view="angular" step="11.7"}}
 
 ### Selectively publishing tasks based on privacy status
 
 Now that we have a way of setting which tasks are private, we should modify our
 publication function to only send the tasks that a user is authorized to see:
 
-{{> CodeBox view="angular" step="11.8"}}
+{{> DiffBox view="angular" step="11.8"}}
 
 To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
 
@@ -49,7 +49,7 @@ To test that this functionality works, you can use your browser's private browsi
 
 In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
 
-{{> CodeBox view="angular" step="11.9"}}
+{{> DiffBox view="angular" step="11.9"}}
 
 > Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
diff --git a/content/blaze/register.js b/content/blaze/register.js
new file mode 100644
index 0000000..b2ec239
--- /dev/null
+++ b/content/blaze/register.js
@@ -0,0 +1,4 @@
+DiffBox.registerTutorial("simple-todos", {
+  gitHubRepoName: "meteor/simple-todos",
+  patchFilename: "blaze.multi.patch"
+});
diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index ed36ace..a6d1daa 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -3,9 +3,9 @@
 
 To start working on our todo list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
 
-{{> CodeBox view="blaze" step="2.1"}}
+{{> DiffBox view="blaze" step="2.1"}}
 
-{{> CodeBox view="blaze" step="2.2"}}
+{{> DiffBox view="blaze" step="2.2"}}
 
 In our browser, the app will now look much like this:
 
diff --git a/content/blaze/step03.md b/content/blaze/step03.md
index 3f215a3..dd0026d 100644
--- a/content/blaze/step03.md
+++ b/content/blaze/step03.md
@@ -6,7 +6,7 @@
 
 Let's update our JavaScript code to get our tasks from a collection instead of a static array:
 
-{{> CodeBox view="blaze" step="3.1"}}
+{{> DiffBox view="blaze" step="3.1"}}
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
diff --git a/content/blaze/step04.md b/content/blaze/step04.md
index 3d56766..c7dee0b 100644
--- a/content/blaze/step04.md
+++ b/content/blaze/step04.md
@@ -6,11 +6,11 @@ In this step, we'll add an input field for users to add tasks to the list.
 
 First, let's add a form to our HTML:
 
-{{> CodeBox view="blaze" step="4.1"}}
+{{> DiffBox view="blaze" step="4.1"}}
 
 Here's the JavaScript code we need to add to listen to the `submit` event on the form:
 
-{{> CodeBox view="blaze" step="4.2"}}
+{{> DiffBox view="blaze" step="4.2"}}
 
 Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
 
@@ -36,7 +36,7 @@ Currently, our code displays all new tasks at the bottom of the list. That's not
 
 We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code. Just add a sort option to the `find` call inside the `tasks` helper:
 
-{{> CodeBox view="blaze" step="4.3"}}
+{{> DiffBox view="blaze" step="4.3"}}
 
 In the next step, we'll add some very important todo list functions: checking off and deleting tasks.
 {{/template}}
diff --git a/content/blaze/step05.md b/content/blaze/step05.md
index dcc0e54..c27a91f 100644
--- a/content/blaze/step05.md
+++ b/content/blaze/step05.md
@@ -6,11 +6,11 @@ Until now, we have only interacted with a collection by inserting documents. Now
 
 Let's add two elements to our `task` template, a checkbox and a delete button:
 
-{{> CodeBox view="blaze" step="5.1"}}
+{{> DiffBox view="blaze" step="5.1"}}
 
 We have added UI elements, but they don't do anything yet. We should add some event handlers:
 
-{{> CodeBox view="blaze" step="5.2"}}
+{{> DiffBox view="blaze" step="5.2"}}
 
 ### Getting data in event handlers
 
diff --git a/content/blaze/step08.md b/content/blaze/step08.md
index 17047e9..8e8dc46 100644
--- a/content/blaze/step08.md
+++ b/content/blaze/step08.md
@@ -6,19 +6,19 @@ In this step, we'll add a client-side data filtering feature to our app, so that
 
 First, we need to add a checkbox to our HTML:
 
-{{> CodeBox view="blaze" step="8.1"}}
+{{> DiffBox view="blaze" step="8.1"}}
 
 Then, we need an event handler to update a `Session` variable when the checkbox
 is checked or unchecked. `Session` is a convenient place to store temporary UI
 state, and can be used in helpers just like a collection.
 
-{{> CodeBox view="blaze" step="8.2"}}
+{{> DiffBox view="blaze" step="8.2"}}
 
 Now, we need to update `Template.body.helpers`. The code below has a new if
 block to filter the tasks if the checkbox is checked, and a helper to make sure
 the checkbox represents the state of our Session variable.
 
-{{> CodeBox view="blaze" step="8.3"}}
+{{> DiffBox view="blaze" step="8.3"}}
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
@@ -30,8 +30,8 @@ Until now, we have stored all of our state in collections, and the view updated
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a helper and change one line of the HTML.
 
-{{> CodeBox view="blaze" step="8.4"}}
+{{> DiffBox view="blaze" step="8.4"}}
 
-{{> CodeBox view="blaze" step="8.5"}}
+{{> DiffBox view="blaze" step="8.5"}}
 
 {{/template}}
diff --git a/content/blaze/step09.md b/content/blaze/step09.md
index a5e0bb9..e3ed051 100644
--- a/content/blaze/step09.md
+++ b/content/blaze/step09.md
@@ -12,11 +12,11 @@ meteor add accounts-ui accounts-password
 
 In the HTML, right under the checkbox, include the following code to add a login dropdown:
 
-{{> CodeBox view="blaze" step="9.2"}}
+{{> DiffBox view="blaze" step="9.2"}}
 
 Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
-{{> CodeBox view="blaze" step="9.3"}}
+{{> DiffBox view="blaze" step="9.3"}}
 
 Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
 
@@ -30,15 +30,15 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `submit .new-task` event handler:
 
-{{> CodeBox view="blaze" step="9.4"}}
+{{> DiffBox view="blaze" step="9.4"}}
 
 Then, in our HTML, add an `#if` block helper to only show the form when there is a logged in user:
 
-{{> CodeBox view="blaze" step="9.5"}}
+{{> DiffBox view="blaze" step="9.5"}}
 
 Finally, add a Spacebars statement to display the `username` field on each task right before the text:
 
-{{> CodeBox view="blaze" step="9.6"}}`
+{{> DiffBox view="blaze" step="9.6"}}`
 
 Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
 
diff --git a/content/blaze/step10.md b/content/blaze/step10.md
index 0f2ddd5..69bdf5a 100644
--- a/content/blaze/step10.md
+++ b/content/blaze/step10.md
@@ -18,13 +18,13 @@ If you try to use the app after removing this package, you will notice that none
 
 First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
 
-{{> CodeBox view="blaze" step="10.2"}}
+{{> DiffBox view="blaze" step="10.2"}}
 
 Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
-{{> CodeBox view="blaze" step="10.3"}}
+{{> DiffBox view="blaze" step="10.3"}}
 
-{{> CodeBox view="blaze" step="10.4"}}
+{{> DiffBox view="blaze" step="10.4"}}
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
diff --git a/content/blaze/step11.md b/content/blaze/step11.md
index 43e6c26..02a5205 100644
--- a/content/blaze/step11.md
+++ b/content/blaze/step11.md
@@ -14,7 +14,7 @@ When the app refreshes, the task list will be empty. Without the `autopublish` p
 
 Let's add them now.
 
-{{> CodeBox view="blaze" step="11.2"}}
+{{> DiffBox view="blaze" step="11.2"}}
 
 Once you have added this code, all of the tasks will reappear.
 
@@ -24,26 +24,26 @@ Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`
 
 First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
 
-{{> CodeBox view="blaze" step="11.3"}}
+{{> DiffBox view="blaze" step="11.3"}}
 
 Let's make sure our task has a special class if it is marked private:
 
-{{> CodeBox view="blaze" step="11.4"}}
+{{> DiffBox view="blaze" step="11.4"}}
 
 We need to modify our JavaScript code in three places:
 
-{{> CodeBox view="blaze" step="11.5"}}
+{{> DiffBox view="blaze" step="11.5"}}
 
-{{> CodeBox view="blaze" step="11.6"}}
+{{> DiffBox view="blaze" step="11.6"}}
 
-{{> CodeBox view="blaze" step="11.7"}}
+{{> DiffBox view="blaze" step="11.7"}}
 
 ### Selectively publishing tasks based on privacy status
 
 Now that we have a way of setting which tasks are private, we should modify our
 publication function to only send the tasks that a user is authorized to see:
 
-{{> CodeBox view="blaze" step="11.8"}}
+{{> DiffBox view="blaze" step="11.8"}}
 
 To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
 
@@ -51,7 +51,7 @@ To test that this functionality works, you can use your browser's private browsi
 
 In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
 
-{{> CodeBox view="blaze" step="11.9"}}
+{{> DiffBox view="blaze" step="11.9"}}
 
 > Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
diff --git a/content/react/register.js b/content/react/register.js
new file mode 100644
index 0000000..c7e81f5
--- /dev/null
+++ b/content/react/register.js
@@ -0,0 +1,4 @@
+DiffBox.registerTutorial("simple-todos-react", {
+  gitHubRepoName: "meteor/simple-todos-react",
+  patchFilename: "react.multi.patch"
+});
diff --git a/content/react/step02.md b/content/react/step02.md
index 6a08147..e45174e 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -15,15 +15,15 @@ To get started, let's replace the code of the default starter app. Then we'll ta
 
 First, replace the content of the initial HTML file:
 
-{{> CodeBox view="react" step="2.2"}}
+{{> DiffBox view="react" step="2.2"}}
 
 Second, **delete `simple-todos-react.js`** and create three new files:
 
-{{> CodeBox view="react" step="2.3"}}
+{{> DiffBox view="react" step="2.3"}}
 
-{{> CodeBox view="react" step="2.4"}}
+{{> DiffBox view="react" step="2.4"}}
 
-{{> CodeBox view="react" step="2.5"}}
+{{> DiffBox view="react" step="2.5"}}
 
 We just added three things to our app:
 
diff --git a/content/react/step03.md b/content/react/step03.md
index 344e108..fedfe49 100644
--- a/content/react/step03.md
+++ b/content/react/step03.md
@@ -6,13 +6,13 @@
 
 Let's add a line of code to define our first collection:
 
-{{> CodeBox step="3.1" view="react"}}
+{{> DiffBox step="3.1" view="react"}}
 
 ### Using data from a collection inside a React component
 
 To use data from a Meteor collection inside a React component, include the `ReactMeteorData` mixin in a component. With this mixin in your component, you can define a method called `getMeteorData` which knows how to keep track of changes in data. The object you return from `getMeteorData` can be accessed on `this.data` inside the `render` method. Let's do this now:
 
-{{> CodeBox step="3.2" view="react"}}
+{{> DiffBox step="3.2" view="react"}}
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
diff --git a/content/react/step04.md b/content/react/step04.md
index 656b349..e084243 100644
--- a/content/react/step04.md
+++ b/content/react/step04.md
@@ -6,7 +6,7 @@ In this step, we'll add an input field for users to add tasks to the list.
 
 First, let's add a form to our `App` component:
 
-{{> CodeBox step="4.1" view="react"}}
+{{> DiffBox step="4.1" view="react"}}
 
 > Tip: You can add comments to your JSX code by wrapping them in `{/* ... */}`
 
@@ -14,7 +14,7 @@ You can see that the `form` element has an `onSubmit` attribute that references
 
 Let's add a `handleSubmit` method to our `App` component:
 
-{{> CodeBox step="4.2" view="react"}}
+{{> DiffBox step="4.2" view="react"}}
 
 Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
 
@@ -34,7 +34,7 @@ Currently, our code displays all new tasks at the bottom of the list. That's not
 
 We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code. Just add a sort option to the `find` call inside `getMeteorData` on the `App` component:
 
-{{> CodeBox step="4.3" view="react"}}
+{{> DiffBox step="4.3" view="react"}}
 
 Let's go back to the browser and make sure this worked: any new tasks that you add should appear at the top of the list, rather than at the bottom.
 
diff --git a/content/react/step05.md b/content/react/step05.md
index d411fdc..f9a597b 100644
--- a/content/react/step05.md
+++ b/content/react/step05.md
@@ -6,7 +6,7 @@ Until now, we have only interacted with a collection by inserting documents. Now
 
 Let's add two new elements to our `task` component, a checkbox and a delete button, with event handlers for both:
 
-{{> CodeBox step="5.1" view="react"}}
+{{> DiffBox step="5.1" view="react"}}
 
 ### Update
 
diff --git a/content/react/step08.md b/content/react/step08.md
index e09717e..6f01d8a 100644
--- a/content/react/step08.md
+++ b/content/react/step08.md
@@ -6,19 +6,19 @@ In this step, we'll add a client-side data filtering feature to our app, so that
 
 First, we need to add a checkbox to our `App` component:
 
-{{> CodeBox step="8.1" view="react"}}
+{{> DiffBox step="8.1" view="react"}}
 
 You can see that it reads from `this.state.hideCompleted`. React components have a special field called `state` where you can store encapsulated component data. We need to define a `getInitialState` method on our component to initialize this field:
 
-{{> CodeBox step="8.2" view="react"}}
+{{> DiffBox step="8.2" view="react"}}
 
 We can update `this.state` from an event handler by calling `this.setState`, which will update the state property asynchronously and then cause the component to re-render:
 
-{{> CodeBox step="8.3" view="react"}}
+{{> DiffBox step="8.3" view="react"}}
 
 Now, we need to update `getMeteorData` to filter out completed tasks when `this.state.hideCompleted` is true:
 
-{{> CodeBox step="8.4" view="react"}}
+{{> DiffBox step="8.4" view="react"}}
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
@@ -26,8 +26,8 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to return a count from `getMeteorData` and add a line to our `render` method. Since we already have the data in the client-side Minimongo collection, adding this extra count doesn't involve asking the server for anything.
 
-{{> CodeBox step="8.5" view="react"}}
+{{> DiffBox step="8.5" view="react"}}
 
-{{> CodeBox step="8.6" view="react"}}
+{{> DiffBox step="8.6" view="react"}}
 
 {{/template}}
diff --git a/content/react/step09.md b/content/react/step09.md
index 1d17ae1..0994e1d 100644
--- a/content/react/step09.md
+++ b/content/react/step09.md
@@ -16,15 +16,15 @@ meteor add accounts-ui accounts-password
 
 To use the Blaze UI component from the `accounts-ui` package, we need to wrap it in a React component. To do so, let's create a new component called `AccountsUIWrapper` in a new file:
 
-{{> CodeBox step="9.2" view="react"}}
+{{> DiffBox step="9.2" view="react"}}
 
 Let's include the component we just defined inside App:
 
-{{> CodeBox step="9.3" view="react"}}
+{{> DiffBox step="9.3" view="react"}}
 
 Then, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
-{{> CodeBox step="9.4" view="react"}}
+{{> DiffBox step="9.4" view="react"}}
 
 ### Adding user-related functionality
 
@@ -40,19 +40,19 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `handleSubmit` event handler:
 
-{{> CodeBox step="9.5" view="react"}}
+{{> DiffBox step="9.5" view="react"}}
 
 Modify the `return` statement on `getMeteorData` to get information about the currently logged in user:
 
-{{> CodeBox step="9.6" view="react"}}
+{{> DiffBox step="9.6" view="react"}}
 
 Then, in our render method, add a conditional statement to only show the form when there is a logged in user:
 
-{{> CodeBox step="9.7" view="react"}}
+{{> DiffBox step="9.7" view="react"}}
 
 Finally, add a statement to display the `username` field on each task right before the text:
 
-{{> CodeBox step="9.8" view="react"}}
+{{> DiffBox step="9.8" view="react"}}
 
 In your browser, add some tasks and notice that your username shows up. Old tasks that we added before this step won't have usernames attached; you can just delete them.
 
diff --git a/content/react/step10.md b/content/react/step10.md
index 4a11887..3cad71a 100644
--- a/content/react/step10.md
+++ b/content/react/step10.md
@@ -18,13 +18,13 @@ If you try to use the app after removing this package, you will notice that none
 
 First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
 
-{{> CodeBox step="10.2" view="react"}}
+{{> DiffBox step="10.2" view="react"}}
 
 Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
-{{> CodeBox step="10.3" view="react"}}
+{{> DiffBox step="10.3" view="react"}}
 
-{{> CodeBox step="10.4" view="react"}}
+{{> DiffBox step="10.4" view="react"}}
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
diff --git a/content/react/step11.md b/content/react/step11.md
index c8c2bdb..5298bda 100644
--- a/content/react/step11.md
+++ b/content/react/step11.md
@@ -14,7 +14,7 @@ When the app refreshes, the task list will be empty. Without the `autopublish` p
 
 Let's add them now.
 
-{{> CodeBox step="11.2" view="react"}}
+{{> DiffBox step="11.2" view="react"}}
 
 Once you have added this code, all of the tasks will reappear.
 
@@ -26,34 +26,34 @@ Let's add another property to tasks called "private" and a button for users to m
 
 First, we need to add a new method that we can call to set a task's private status:
 
-{{> CodeBox step="11.3" view="react"}} 
+{{> DiffBox step="11.3" view="react"}} 
 
 Now, we need to pass a new property to the `Task` to decide whether we want
 to show the private button; the button should show up only if the currently
 logged in user owns this task:
 
-{{> CodeBox step="11.4" view="react"}}
+{{> DiffBox step="11.4" view="react"}}
 
-{{> CodeBox step="11.5" view="react"}}
+{{> DiffBox step="11.5" view="react"}}
 
 Let's add the button, using this new prop to decide whether it should be displayed:
 
-{{> CodeBox step="11.6" view="react"}}
+{{> DiffBox step="11.6" view="react"}}
 
 We need to define the event handler called by the button:
 
-{{> CodeBox step="11.7" view="react"}}
+{{> DiffBox step="11.7" view="react"}}
 
 One last thing, let's update the class of the `<li>` element in the `Task` component to reflect it's privacy status:
 
-{{> CodeBox step="11.8" view="react"}}
+{{> DiffBox step="11.8" view="react"}}
 
 ### Selectively publishing tasks based on privacy status
 
 Now that we have a way of setting which tasks are private, we should modify our
 publication function to only send the tasks that a user is authorized to see:
 
-{{> CodeBox step="11.9" view="react"}}
+{{> DiffBox step="11.9" view="react"}}
 
 To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
 
@@ -61,7 +61,7 @@ To test that this functionality works, you can use your browser's private browsi
 
 In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
 
-{{> CodeBox step="11.10" view="react"}}
+{{> DiffBox step="11.10" view="react"}}
 
 > Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
diff --git a/package.js b/package.js
index 058756d..7f0f5dd 100644
--- a/package.js
+++ b/package.js
@@ -4,15 +4,6 @@ Package.describe({
   name: 'tutorials'
 });
 
-Package.registerBuildPlugin({
-  name: 'build-plugin',
-  sources: ['build-plugin/patch-plugin.jsx'],
-  use: [
-    'jsx@0.1.1',
-    'underscore@1.0.3'
-  ]
-})
-
 Package.onUse(function (api) {
   api.versionsFrom('1.1.0.2');
   api.use([
@@ -22,7 +13,9 @@ Package.onUse(function (api) {
     'jsx@0.1.1',
     'simple:highlight.js@1.0.9',
     'reactive-var',
-    'less'
+    'less',
+    'mdg:tutorial-step-diff-compiler@0.1.0',
+    'mdg:tutorial-diff-box'
   ]);
 
   api.addFiles([
@@ -74,12 +67,6 @@ Package.onUse(function (api) {
     'content/shared/step06.md',
     'content/shared/step07.md',
 
-    'components/code-box.html',
-    'components/code-box.js',
-    'components/git-patch-viewer/patch-viewer.html',
-    'components/git-patch-viewer/patch-viewer.jsx',
-    'components/git-patch-viewer/patch-viewer.less',
-
     'generated/react.multi.patch',
     'generated/blaze.multi.patch',
     'generated/angular.multi.patch'
@@ -91,7 +78,4 @@ Package.onUse(function (api) {
   api.export('REACT_TUT');
   api.export('ANGULAR_TUT');
   api.export('BLAZE_TUT');
-
-  // For easier debugging
-  api.export('GitPatches');
 });
-- 
2.13.6 (Apple Git-96)


From e5c022a4b8e8b4da6544c6af9ba30563ee37146f Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 27 Jul 2015 11:04:45 -0700
Subject: [PATCH 066/164] Finish migrating to tutorial-tools, except registry

---
 README.md                   |  2 +-
 content/angular/register.js |  2 +-
 content/angular/step02.md   |  7 +++----
 content/angular/step03.md   |  2 +-
 content/angular/step04.md   |  6 +++---
 content/angular/step05.md   |  2 +-
 content/angular/step07.md   |  4 ++--
 content/angular/step08.md   | 12 ++++++------
 content/angular/step09.md   | 10 +++++-----
 content/angular/step10.md   |  6 +++---
 content/angular/step11.md   | 16 ++++++++--------
 content/blaze/register.js   |  2 +-
 content/blaze/step02.md     |  4 ++--
 content/blaze/step03.md     |  2 +-
 content/blaze/step04.md     |  6 +++---
 content/blaze/step05.md     |  4 ++--
 content/blaze/step08.md     | 10 +++++-----
 content/blaze/step09.md     | 10 +++++-----
 content/blaze/step10.md     |  6 +++---
 content/blaze/step11.md     | 16 ++++++++--------
 content/react/register.js   |  2 +-
 content/react/step02.md     |  8 ++++----
 content/react/step03.md     |  4 ++--
 content/react/step04.md     |  6 +++---
 content/react/step05.md     |  2 +-
 content/react/step08.md     | 12 ++++++------
 content/react/step09.md     | 14 +++++++-------
 content/react/step10.md     |  6 +++---
 content/react/step11.md     | 18 +++++++++---------
 package.js                  |  5 +++++
 30 files changed, 105 insertions(+), 101 deletions(-)

diff --git a/README.md b/README.md
index 7774760..84654a2 100644
--- a/README.md
+++ b/README.md
@@ -47,7 +47,7 @@ After using `git rebase -i --root` to massage the repository into the desired st
 The commit with this message can then be included in the content with the following code snippet:
 
 ```html
-{{> DiffBox step="3.1" view="blaze"}}
+{{> DiffBox step="3.1" tutorialName="simple-todos"}}
 ```
 
 You should replace `blaze` with the correct view name (currently this string is automatically transformed to refer to the correct data structures).
diff --git a/content/angular/register.js b/content/angular/register.js
index 10a39ea..5997005 100644
--- a/content/angular/register.js
+++ b/content/angular/register.js
@@ -1,4 +1,4 @@
 DiffBox.registerTutorial("simple-todos-angular", {
   gitHubRepoName: "meteor/simple-todos-angular",
-  patchFilename: "angular.multi.patch"
+  patchFilename: "generated/angular.multi.patch"
 });
diff --git a/content/angular/step02.md b/content/angular/step02.md
index 7d62453..d2bcdb2 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -9,16 +9,15 @@ command into the command line:
 
 To start working on our todos list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
 
-{{> DiffBox view="angular" step="2.2"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="2.2"}}
 
-
-{{> DiffBox view="angular" step="2.3"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="2.3"}}
 
 To write Angular templates, we need to name our files with the `.ng.html` extension.
 
 Create a new file named `todos-list.ng.html` and place it on the root folder:
 
-{{> DiffBox view="angular" step="2.4"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="2.4"}}
 
 In our browser, the app should look pretty much like this:
 
diff --git a/content/angular/step03.md b/content/angular/step03.md
index 27bcf76..ca93037 100644
--- a/content/angular/step03.md
+++ b/content/angular/step03.md
@@ -6,7 +6,7 @@
 
 Let's update our JavaScript code to get our tasks from a collection instead of a static array:
 
-{{> DiffBox view="angular" step="3.1"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="3.1"}}
 
 We are using the `$meteor` service to bind our `Tasks` collection to our `$scope.tasks` variable.
 Now every change that will happen to each of those objects will be synced in real time across our stack.
diff --git a/content/angular/step04.md b/content/angular/step04.md
index c2802a8..17a4695 100644
--- a/content/angular/step04.md
+++ b/content/angular/step04.md
@@ -6,11 +6,11 @@ In this step, we'll add an input field for users to add tasks to the list.
 
 First, let's add a form to our HTML:
 
-{{> DiffBox view="angular" step="4.1"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="4.1"}}
 
 Here's the JavaScript code we need to add to listen to the `submit` event on the form:
 
-{{> DiffBox view="angular" step="4.2"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="4.2"}}
 
 Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
 
@@ -36,7 +36,7 @@ Until now you probably used Angular sort filter to do so. you can still use that
 Replace the `Tasks` collection variable with a function inside our `$meteor.collection` service call.
 The function will return a the result of calling the `find` function with the `sort` parameter on our `Tasks` collection, like that:
 
-{{> DiffBox view="angular" step="4.3"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="4.3"}}
 
 To better understand the difference between using the sort filter and the collection options, check out the advanced tutorial about [search, sort and pagination](http://angular-meteor.com/tutorial/step_12).
 
diff --git a/content/angular/step05.md b/content/angular/step05.md
index 5aeecca..7143941 100644
--- a/content/angular/step05.md
+++ b/content/angular/step05.md
@@ -6,7 +6,7 @@ Until now, we have only interacted with a collection by inserting documents. Now
 
 Let's add two elements to our `task` template, a checkbox and a delete button:
 
-{{> DiffBox view="angular" step="5.1"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="5.1"}}
 
 ### Update
 
diff --git a/content/angular/step07.md b/content/angular/step07.md
index a86ddbe..081e4ee 100644
--- a/content/angular/step07.md
+++ b/content/angular/step07.md
@@ -6,11 +6,11 @@ Angular needs the main document to be ready so it can bootstrap, but different d
 To solve this, we need to change the way we bootstrap our Angular app.
 Remove the current bootstrap by removing `ng-app` from the `<body>` tag:
 
-{{> DiffBox view="angular" step="7.1"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="7.1"}}
 
 Then add the following code right after `Meteor.isClient`:
 
-{{> DiffBox view="angular" step="7.2"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="7.2"}}
 
 {{/template}}
 
diff --git a/content/angular/step08.md b/content/angular/step08.md
index cc6aeb9..b2e4d2c 100644
--- a/content/angular/step08.md
+++ b/content/angular/step08.md
@@ -8,7 +8,7 @@ We're going to learn how to use Mongo's filtering API.
 
 First, we need to add a checkbox to our HTML:
 
-{{> DiffBox view="angular" step="8.1"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="8.1"}}
 
 This checkbox binds to the scope's `hideCompleted` variable.
 > We are using `$parent` because it creates a new child scope.
@@ -34,11 +34,11 @@ Tasks.find({ checked: {$ne: true} }, { sort: { createdAt: -1 } })
 So let's create a scope variable that will hold the wanted query and will change together with the checkbox.
 Inside our controller:
 
-{{> DiffBox view="angular" step="8.2"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="8.2"}}
 
 and let's change our `$scope.tasks` definition accordingly:
 
-{{> DiffBox view="angular" step="8.3"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="8.3"}}
 
 **but we are missing one more thing** - The expression we are sending `$meteor.collection` is a Meteor expression and
 **Meteor has to know that the Angular `query` parameter has changed**.
@@ -50,7 +50,7 @@ scope variables into [Meteor reactive variables](http://docs.meteor.com/#/full/r
 
 So now our definition should look like that:
 
-{{> DiffBox view="angular" step="8.4"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="8.4"}}
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
@@ -61,8 +61,8 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a scope function and change one line of the HTML.
 
-{{> DiffBox view="angular" step="8.5"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="8.5"}}
 
-{{> DiffBox view="angular" step="8.6"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="8.6"}}
 
 {{/template}}
diff --git a/content/angular/step09.md b/content/angular/step09.md
index a029959..a83cfad 100644
--- a/content/angular/step09.md
+++ b/content/angular/step09.md
@@ -12,14 +12,14 @@ meteor add accounts-ui accounts-password
 
 In the HTML, right under the checkbox, include the following code to add a login dropdown:
 
-{{> DiffBox view="angular" step="9.2"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="9.2"}}
 
 The powerful [meteor-include](http://angular-meteor.com/api/meteor-include) directive let's you add **any Blaze template** into your Angular templates.
 We are adding `loginButtons` which is the Blaze template for user authentication flow supplied with the accounts-ui package.
 
 Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
-{{> DiffBox view="angular" step="9.3"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="9.3"}}
 
 Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
 
@@ -33,15 +33,15 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `addTask` function:
 
-{{> DiffBox view="angular" step="9.4"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="9.4"}}
 
 Then, in our HTML, add an `ng-show` directive to only show the form when there is a logged in user:
 
-{{> DiffBox view="angular" step="9.5"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="9.5"}}
 
 Finally, add a statement to display the `username` field on each task right before the text:
 
-{{> DiffBox view="angular" step="9.6"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="9.6"}}
 
 Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
 
diff --git a/content/angular/step10.md b/content/angular/step10.md
index 8268c07..fb4d1ea 100644
--- a/content/angular/step10.md
+++ b/content/angular/step10.md
@@ -18,15 +18,15 @@ If you try to use the app after removing this package, you will notice that none
 
 First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
 
-{{> DiffBox view="angular" step="10.2"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="10.2"}}
 
 Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
-{{> DiffBox view="angular" step="10.3"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="10.3"}}
 
 and the way we handle the changes in the template:
 
-{{> DiffBox view="angular" step="10.4"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="10.4"}}
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
diff --git a/content/angular/step11.md b/content/angular/step11.md
index 40717f0..4e86bb2 100644
--- a/content/angular/step11.md
+++ b/content/angular/step11.md
@@ -14,9 +14,9 @@ When the app refreshes, the task list will be empty. Without the `autopublish` p
 
 Let's add them now.
 
-{{> DiffBox view="angular" step="11.2"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="11.2"}}
 
-{{> DiffBox view="angular" step="11.3"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="11.3"}}
 
 Once you have added this code, all of the tasks will reappear.
 
@@ -26,22 +26,22 @@ Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`
 
 First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
 
-{{> DiffBox view="angular" step="11.4"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="11.4"}}
 
-{{> DiffBox view="angular" step="11.5"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="11.5"}}
 
 We need to modify our JavaScript code in two places:
 
-{{> DiffBox view="angular" step="11.6"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="11.6"}}
 
-{{> DiffBox view="angular" step="11.7"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="11.7"}}
 
 ### Selectively publishing tasks based on privacy status
 
 Now that we have a way of setting which tasks are private, we should modify our
 publication function to only send the tasks that a user is authorized to see:
 
-{{> DiffBox view="angular" step="11.8"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="11.8"}}
 
 To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
 
@@ -49,7 +49,7 @@ To test that this functionality works, you can use your browser's private browsi
 
 In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
 
-{{> DiffBox view="angular" step="11.9"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="11.9"}}
 
 > Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
diff --git a/content/blaze/register.js b/content/blaze/register.js
index b2ec239..8654379 100644
--- a/content/blaze/register.js
+++ b/content/blaze/register.js
@@ -1,4 +1,4 @@
 DiffBox.registerTutorial("simple-todos", {
   gitHubRepoName: "meteor/simple-todos",
-  patchFilename: "blaze.multi.patch"
+  patchFilename: "generated/blaze.multi.patch"
 });
diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index a6d1daa..73f2a31 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -3,9 +3,9 @@
 
 To start working on our todo list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
 
-{{> DiffBox view="blaze" step="2.1"}}
+{{> DiffBox tutorialName="simple-todos" step="2.1"}}
 
-{{> DiffBox view="blaze" step="2.2"}}
+{{> DiffBox tutorialName="simple-todos" step="2.2"}}
 
 In our browser, the app will now look much like this:
 
diff --git a/content/blaze/step03.md b/content/blaze/step03.md
index dd0026d..9c9e37f 100644
--- a/content/blaze/step03.md
+++ b/content/blaze/step03.md
@@ -6,7 +6,7 @@
 
 Let's update our JavaScript code to get our tasks from a collection instead of a static array:
 
-{{> DiffBox view="blaze" step="3.1"}}
+{{> DiffBox tutorialName="simple-todos" step="3.1"}}
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
diff --git a/content/blaze/step04.md b/content/blaze/step04.md
index c7dee0b..f68a070 100644
--- a/content/blaze/step04.md
+++ b/content/blaze/step04.md
@@ -6,11 +6,11 @@ In this step, we'll add an input field for users to add tasks to the list.
 
 First, let's add a form to our HTML:
 
-{{> DiffBox view="blaze" step="4.1"}}
+{{> DiffBox tutorialName="simple-todos" step="4.1"}}
 
 Here's the JavaScript code we need to add to listen to the `submit` event on the form:
 
-{{> DiffBox view="blaze" step="4.2"}}
+{{> DiffBox tutorialName="simple-todos" step="4.2"}}
 
 Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
 
@@ -36,7 +36,7 @@ Currently, our code displays all new tasks at the bottom of the list. That's not
 
 We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code. Just add a sort option to the `find` call inside the `tasks` helper:
 
-{{> DiffBox view="blaze" step="4.3"}}
+{{> DiffBox tutorialName="simple-todos" step="4.3"}}
 
 In the next step, we'll add some very important todo list functions: checking off and deleting tasks.
 {{/template}}
diff --git a/content/blaze/step05.md b/content/blaze/step05.md
index c27a91f..8c62f68 100644
--- a/content/blaze/step05.md
+++ b/content/blaze/step05.md
@@ -6,11 +6,11 @@ Until now, we have only interacted with a collection by inserting documents. Now
 
 Let's add two elements to our `task` template, a checkbox and a delete button:
 
-{{> DiffBox view="blaze" step="5.1"}}
+{{> DiffBox tutorialName="simple-todos" step="5.1"}}
 
 We have added UI elements, but they don't do anything yet. We should add some event handlers:
 
-{{> DiffBox view="blaze" step="5.2"}}
+{{> DiffBox tutorialName="simple-todos" step="5.2"}}
 
 ### Getting data in event handlers
 
diff --git a/content/blaze/step08.md b/content/blaze/step08.md
index 8e8dc46..d54c593 100644
--- a/content/blaze/step08.md
+++ b/content/blaze/step08.md
@@ -6,19 +6,19 @@ In this step, we'll add a client-side data filtering feature to our app, so that
 
 First, we need to add a checkbox to our HTML:
 
-{{> DiffBox view="blaze" step="8.1"}}
+{{> DiffBox tutorialName="simple-todos" step="8.1"}}
 
 Then, we need an event handler to update a `Session` variable when the checkbox
 is checked or unchecked. `Session` is a convenient place to store temporary UI
 state, and can be used in helpers just like a collection.
 
-{{> DiffBox view="blaze" step="8.2"}}
+{{> DiffBox tutorialName="simple-todos" step="8.2"}}
 
 Now, we need to update `Template.body.helpers`. The code below has a new if
 block to filter the tasks if the checkbox is checked, and a helper to make sure
 the checkbox represents the state of our Session variable.
 
-{{> DiffBox view="blaze" step="8.3"}}
+{{> DiffBox tutorialName="simple-todos" step="8.3"}}
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
@@ -30,8 +30,8 @@ Until now, we have stored all of our state in collections, and the view updated
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a helper and change one line of the HTML.
 
-{{> DiffBox view="blaze" step="8.4"}}
+{{> DiffBox tutorialName="simple-todos" step="8.4"}}
 
-{{> DiffBox view="blaze" step="8.5"}}
+{{> DiffBox tutorialName="simple-todos" step="8.5"}}
 
 {{/template}}
diff --git a/content/blaze/step09.md b/content/blaze/step09.md
index e3ed051..fcb7021 100644
--- a/content/blaze/step09.md
+++ b/content/blaze/step09.md
@@ -12,11 +12,11 @@ meteor add accounts-ui accounts-password
 
 In the HTML, right under the checkbox, include the following code to add a login dropdown:
 
-{{> DiffBox view="blaze" step="9.2"}}
+{{> DiffBox tutorialName="simple-todos" step="9.2"}}
 
 Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
-{{> DiffBox view="blaze" step="9.3"}}
+{{> DiffBox tutorialName="simple-todos" step="9.3"}}
 
 Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
 
@@ -30,15 +30,15 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `submit .new-task` event handler:
 
-{{> DiffBox view="blaze" step="9.4"}}
+{{> DiffBox tutorialName="simple-todos" step="9.4"}}
 
 Then, in our HTML, add an `#if` block helper to only show the form when there is a logged in user:
 
-{{> DiffBox view="blaze" step="9.5"}}
+{{> DiffBox tutorialName="simple-todos" step="9.5"}}
 
 Finally, add a Spacebars statement to display the `username` field on each task right before the text:
 
-{{> DiffBox view="blaze" step="9.6"}}`
+{{> DiffBox tutorialName="simple-todos" step="9.6"}}`
 
 Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
 
diff --git a/content/blaze/step10.md b/content/blaze/step10.md
index 69bdf5a..a8bbe2d 100644
--- a/content/blaze/step10.md
+++ b/content/blaze/step10.md
@@ -18,13 +18,13 @@ If you try to use the app after removing this package, you will notice that none
 
 First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
 
-{{> DiffBox view="blaze" step="10.2"}}
+{{> DiffBox tutorialName="simple-todos" step="10.2"}}
 
 Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
-{{> DiffBox view="blaze" step="10.3"}}
+{{> DiffBox tutorialName="simple-todos" step="10.3"}}
 
-{{> DiffBox view="blaze" step="10.4"}}
+{{> DiffBox tutorialName="simple-todos" step="10.4"}}
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
diff --git a/content/blaze/step11.md b/content/blaze/step11.md
index 02a5205..79e8747 100644
--- a/content/blaze/step11.md
+++ b/content/blaze/step11.md
@@ -14,7 +14,7 @@ When the app refreshes, the task list will be empty. Without the `autopublish` p
 
 Let's add them now.
 
-{{> DiffBox view="blaze" step="11.2"}}
+{{> DiffBox tutorialName="simple-todos" step="11.2"}}
 
 Once you have added this code, all of the tasks will reappear.
 
@@ -24,26 +24,26 @@ Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`
 
 First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
 
-{{> DiffBox view="blaze" step="11.3"}}
+{{> DiffBox tutorialName="simple-todos" step="11.3"}}
 
 Let's make sure our task has a special class if it is marked private:
 
-{{> DiffBox view="blaze" step="11.4"}}
+{{> DiffBox tutorialName="simple-todos" step="11.4"}}
 
 We need to modify our JavaScript code in three places:
 
-{{> DiffBox view="blaze" step="11.5"}}
+{{> DiffBox tutorialName="simple-todos" step="11.5"}}
 
-{{> DiffBox view="blaze" step="11.6"}}
+{{> DiffBox tutorialName="simple-todos" step="11.6"}}
 
-{{> DiffBox view="blaze" step="11.7"}}
+{{> DiffBox tutorialName="simple-todos" step="11.7"}}
 
 ### Selectively publishing tasks based on privacy status
 
 Now that we have a way of setting which tasks are private, we should modify our
 publication function to only send the tasks that a user is authorized to see:
 
-{{> DiffBox view="blaze" step="11.8"}}
+{{> DiffBox tutorialName="simple-todos" step="11.8"}}
 
 To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
 
@@ -51,7 +51,7 @@ To test that this functionality works, you can use your browser's private browsi
 
 In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
 
-{{> DiffBox view="blaze" step="11.9"}}
+{{> DiffBox tutorialName="simple-todos" step="11.9"}}
 
 > Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
diff --git a/content/react/register.js b/content/react/register.js
index c7e81f5..3437918 100644
--- a/content/react/register.js
+++ b/content/react/register.js
@@ -1,4 +1,4 @@
 DiffBox.registerTutorial("simple-todos-react", {
   gitHubRepoName: "meteor/simple-todos-react",
-  patchFilename: "react.multi.patch"
+  patchFilename: "generated/react.multi.patch"
 });
diff --git a/content/react/step02.md b/content/react/step02.md
index e45174e..0ba5786 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -15,15 +15,15 @@ To get started, let's replace the code of the default starter app. Then we'll ta
 
 First, replace the content of the initial HTML file:
 
-{{> DiffBox view="react" step="2.2"}}
+{{> DiffBox tutorialName="simple-todos-react" step="2.2"}}
 
 Second, **delete `simple-todos-react.js`** and create three new files:
 
-{{> DiffBox view="react" step="2.3"}}
+{{> DiffBox tutorialName="simple-todos-react" step="2.3"}}
 
-{{> DiffBox view="react" step="2.4"}}
+{{> DiffBox tutorialName="simple-todos-react" step="2.4"}}
 
-{{> DiffBox view="react" step="2.5"}}
+{{> DiffBox tutorialName="simple-todos-react" step="2.5"}}
 
 We just added three things to our app:
 
diff --git a/content/react/step03.md b/content/react/step03.md
index fedfe49..cdd11dc 100644
--- a/content/react/step03.md
+++ b/content/react/step03.md
@@ -6,13 +6,13 @@
 
 Let's add a line of code to define our first collection:
 
-{{> DiffBox step="3.1" view="react"}}
+{{> DiffBox step="3.1" tutorialName="simple-todos-react"}}
 
 ### Using data from a collection inside a React component
 
 To use data from a Meteor collection inside a React component, include the `ReactMeteorData` mixin in a component. With this mixin in your component, you can define a method called `getMeteorData` which knows how to keep track of changes in data. The object you return from `getMeteorData` can be accessed on `this.data` inside the `render` method. Let's do this now:
 
-{{> DiffBox step="3.2" view="react"}}
+{{> DiffBox step="3.2" tutorialName="simple-todos-react"}}
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
diff --git a/content/react/step04.md b/content/react/step04.md
index e084243..433afe2 100644
--- a/content/react/step04.md
+++ b/content/react/step04.md
@@ -6,7 +6,7 @@ In this step, we'll add an input field for users to add tasks to the list.
 
 First, let's add a form to our `App` component:
 
-{{> DiffBox step="4.1" view="react"}}
+{{> DiffBox step="4.1" tutorialName="simple-todos-react"}}
 
 > Tip: You can add comments to your JSX code by wrapping them in `{/* ... */}`
 
@@ -14,7 +14,7 @@ You can see that the `form` element has an `onSubmit` attribute that references
 
 Let's add a `handleSubmit` method to our `App` component:
 
-{{> DiffBox step="4.2" view="react"}}
+{{> DiffBox step="4.2" tutorialName="simple-todos-react"}}
 
 Now your app has a new input field. To add a task, just type into the input field and hit enter. If you open a new browser window and open the app again, you'll see that the list is automatically synchronized between all clients.
 
@@ -34,7 +34,7 @@ Currently, our code displays all new tasks at the bottom of the list. That's not
 
 We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code. Just add a sort option to the `find` call inside `getMeteorData` on the `App` component:
 
-{{> DiffBox step="4.3" view="react"}}
+{{> DiffBox step="4.3" tutorialName="simple-todos-react"}}
 
 Let's go back to the browser and make sure this worked: any new tasks that you add should appear at the top of the list, rather than at the bottom.
 
diff --git a/content/react/step05.md b/content/react/step05.md
index f9a597b..2544b78 100644
--- a/content/react/step05.md
+++ b/content/react/step05.md
@@ -6,7 +6,7 @@ Until now, we have only interacted with a collection by inserting documents. Now
 
 Let's add two new elements to our `task` component, a checkbox and a delete button, with event handlers for both:
 
-{{> DiffBox step="5.1" view="react"}}
+{{> DiffBox step="5.1" tutorialName="simple-todos-react"}}
 
 ### Update
 
diff --git a/content/react/step08.md b/content/react/step08.md
index 6f01d8a..22debcf 100644
--- a/content/react/step08.md
+++ b/content/react/step08.md
@@ -6,19 +6,19 @@ In this step, we'll add a client-side data filtering feature to our app, so that
 
 First, we need to add a checkbox to our `App` component:
 
-{{> DiffBox step="8.1" view="react"}}
+{{> DiffBox step="8.1" tutorialName="simple-todos-react"}}
 
 You can see that it reads from `this.state.hideCompleted`. React components have a special field called `state` where you can store encapsulated component data. We need to define a `getInitialState` method on our component to initialize this field:
 
-{{> DiffBox step="8.2" view="react"}}
+{{> DiffBox step="8.2" tutorialName="simple-todos-react"}}
 
 We can update `this.state` from an event handler by calling `this.setState`, which will update the state property asynchronously and then cause the component to re-render:
 
-{{> DiffBox step="8.3" view="react"}}
+{{> DiffBox step="8.3" tutorialName="simple-todos-react"}}
 
 Now, we need to update `getMeteorData` to filter out completed tasks when `this.state.hideCompleted` is true:
 
-{{> DiffBox step="8.4" view="react"}}
+{{> DiffBox step="8.4" tutorialName="simple-todos-react"}}
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
@@ -26,8 +26,8 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to return a count from `getMeteorData` and add a line to our `render` method. Since we already have the data in the client-side Minimongo collection, adding this extra count doesn't involve asking the server for anything.
 
-{{> DiffBox step="8.5" view="react"}}
+{{> DiffBox step="8.5" tutorialName="simple-todos-react"}}
 
-{{> DiffBox step="8.6" view="react"}}
+{{> DiffBox step="8.6" tutorialName="simple-todos-react"}}
 
 {{/template}}
diff --git a/content/react/step09.md b/content/react/step09.md
index 0994e1d..df84200 100644
--- a/content/react/step09.md
+++ b/content/react/step09.md
@@ -16,15 +16,15 @@ meteor add accounts-ui accounts-password
 
 To use the Blaze UI component from the `accounts-ui` package, we need to wrap it in a React component. To do so, let's create a new component called `AccountsUIWrapper` in a new file:
 
-{{> DiffBox step="9.2" view="react"}}
+{{> DiffBox step="9.2" tutorialName="simple-todos-react"}}
 
 Let's include the component we just defined inside App:
 
-{{> DiffBox step="9.3" view="react"}}
+{{> DiffBox step="9.3" tutorialName="simple-todos-react"}}
 
 Then, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
-{{> DiffBox step="9.4" view="react"}}
+{{> DiffBox step="9.4" tutorialName="simple-todos-react"}}
 
 ### Adding user-related functionality
 
@@ -40,19 +40,19 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `handleSubmit` event handler:
 
-{{> DiffBox step="9.5" view="react"}}
+{{> DiffBox step="9.5" tutorialName="simple-todos-react"}}
 
 Modify the `return` statement on `getMeteorData` to get information about the currently logged in user:
 
-{{> DiffBox step="9.6" view="react"}}
+{{> DiffBox step="9.6" tutorialName="simple-todos-react"}}
 
 Then, in our render method, add a conditional statement to only show the form when there is a logged in user:
 
-{{> DiffBox step="9.7" view="react"}}
+{{> DiffBox step="9.7" tutorialName="simple-todos-react"}}
 
 Finally, add a statement to display the `username` field on each task right before the text:
 
-{{> DiffBox step="9.8" view="react"}}
+{{> DiffBox step="9.8" tutorialName="simple-todos-react"}}
 
 In your browser, add some tasks and notice that your username shows up. Old tasks that we added before this step won't have usernames attached; you can just delete them.
 
diff --git a/content/react/step10.md b/content/react/step10.md
index 3cad71a..08b4907 100644
--- a/content/react/step10.md
+++ b/content/react/step10.md
@@ -18,13 +18,13 @@ If you try to use the app after removing this package, you will notice that none
 
 First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
 
-{{> DiffBox step="10.2" view="react"}}
+{{> DiffBox step="10.2" tutorialName="simple-todos-react"}}
 
 Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
-{{> DiffBox step="10.3" view="react"}}
+{{> DiffBox step="10.3" tutorialName="simple-todos-react"}}
 
-{{> DiffBox step="10.4" view="react"}}
+{{> DiffBox step="10.4" tutorialName="simple-todos-react"}}
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
diff --git a/content/react/step11.md b/content/react/step11.md
index 5298bda..9ffc9c4 100644
--- a/content/react/step11.md
+++ b/content/react/step11.md
@@ -14,7 +14,7 @@ When the app refreshes, the task list will be empty. Without the `autopublish` p
 
 Let's add them now.
 
-{{> DiffBox step="11.2" view="react"}}
+{{> DiffBox step="11.2" tutorialName="simple-todos-react"}}
 
 Once you have added this code, all of the tasks will reappear.
 
@@ -26,34 +26,34 @@ Let's add another property to tasks called "private" and a button for users to m
 
 First, we need to add a new method that we can call to set a task's private status:
 
-{{> DiffBox step="11.3" view="react"}} 
+{{> DiffBox step="11.3" tutorialName="simple-todos-react"}} 
 
 Now, we need to pass a new property to the `Task` to decide whether we want
 to show the private button; the button should show up only if the currently
 logged in user owns this task:
 
-{{> DiffBox step="11.4" view="react"}}
+{{> DiffBox step="11.4" tutorialName="simple-todos-react"}}
 
-{{> DiffBox step="11.5" view="react"}}
+{{> DiffBox step="11.5" tutorialName="simple-todos-react"}}
 
 Let's add the button, using this new prop to decide whether it should be displayed:
 
-{{> DiffBox step="11.6" view="react"}}
+{{> DiffBox step="11.6" tutorialName="simple-todos-react"}}
 
 We need to define the event handler called by the button:
 
-{{> DiffBox step="11.7" view="react"}}
+{{> DiffBox step="11.7" tutorialName="simple-todos-react"}}
 
 One last thing, let's update the class of the `<li>` element in the `Task` component to reflect it's privacy status:
 
-{{> DiffBox step="11.8" view="react"}}
+{{> DiffBox step="11.8" tutorialName="simple-todos-react"}}
 
 ### Selectively publishing tasks based on privacy status
 
 Now that we have a way of setting which tasks are private, we should modify our
 publication function to only send the tasks that a user is authorized to see:
 
-{{> DiffBox step="11.9" view="react"}}
+{{> DiffBox step="11.9" tutorialName="simple-todos-react"}}
 
 To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
 
@@ -61,7 +61,7 @@ To test that this functionality works, you can use your browser's private browsi
 
 In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
 
-{{> DiffBox step="11.10" view="react"}}
+{{> DiffBox step="11.10" tutorialName="simple-todos-react"}}
 
 > Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
diff --git a/package.js b/package.js
index 7f0f5dd..cc1c18e 100644
--- a/package.js
+++ b/package.js
@@ -29,6 +29,7 @@ Package.onUse(function (api) {
   ]);
 
   api.addFiles([
+    'content/angular/register.js',
     'content/angular/step01.md',
     'content/angular/step02.md',
     'content/angular/step03.md',
@@ -40,6 +41,8 @@ Package.onUse(function (api) {
     'content/angular/step10.md',
     'content/angular/step11.md',
     'content/angular/step12.md',
+
+    'content/blaze/register.js',
     'content/blaze/step01.md',
     'content/blaze/step02.md',
     'content/blaze/step03.md',
@@ -50,6 +53,8 @@ Package.onUse(function (api) {
     'content/blaze/step10.md',
     'content/blaze/step11.md',
     'content/blaze/step12.md',
+
+    'content/react/register.js',
     'content/react/step01.md',
     'content/react/step02.md',
     'content/react/step03.md',
-- 
2.13.6 (Apple Git-96)


From 25ae7b8392caf36f8e0013fc166f3f2020ae64a4 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 27 Jul 2015 16:22:33 -0700
Subject: [PATCH 067/164] Now the commit messages are parsed by build plugin

---
 generated/angular-commits.js | 155 ---------------------------------------
 generated/blaze-commits.js   | 139 -----------------------------------
 generated/react-commits.js   | 167 -------------------------------------------
 package.js                   |   3 -
 scripts/process-repo.rb      |  27 -------
 5 files changed, 491 deletions(-)
 delete mode 100644 generated/angular-commits.js
 delete mode 100644 generated/blaze-commits.js
 delete mode 100644 generated/react-commits.js

diff --git a/generated/angular-commits.js b/generated/angular-commits.js
deleted file mode 100644
index a099c19..0000000
--- a/generated/angular-commits.js
+++ /dev/null
@@ -1,155 +0,0 @@
-// This file auto-generated by scripts/map-commits-to-steps.rb
-ANGULAR_COMMITS = {
-  "11.9": {
-    "sha": "e4abba4a80843bb4b626c2d8db4f7c1eeeb375ff",
-    "message": "Add extra security to methods"
-  },
-  "11.8": {
-    "sha": "b9db3806a93e08b1f2952ca6d83070c28d0612a2",
-    "message": "Publish only public and owner's tasks"
-  },
-  "11.7": {
-    "sha": "144a2f38e2fcea6c62783b18727f62ea44f02f9a",
-    "message": "Add setPrivate scope function"
-  },
-  "11.6": {
-    "sha": "3ee9ad2c8830a636f97f44fb5ae6c3f2f1d9d562",
-    "message": "Add setPrivate Meteor Method"
-  },
-  "11.5": {
-    "sha": "953c93f072e41324937a7183015579ed4899c90c",
-    "message": "Add private CSS class to task"
-  },
-  "11.4": {
-    "sha": "52d3d8eff291d72e9d320a5048d05a8ba9b26e01",
-    "message": "Add setPrivate button to template"
-  },
-  "11.3": {
-    "sha": "e35c7c06c99042e26219976379ff75eef93876a7",
-    "message": "Subscribe to tasks publication"
-  },
-  "11.2": {
-    "sha": "e9afaa4006a2ffcb0b580a6d09b4d1a081fe12dc",
-    "message": "Add server publish function to tasks"
-  },
-  "11.1": {
-    "sha": "d14c3f1c5d1e6aebc8daec8b406c9021bbb7afe8",
-    "message": "Remove the autopublish package"
-  },
-  "10.4": {
-    "sha": "33215ecc0a0da5b8aedac04d5ae57f84770b9906",
-    "message": "Change template events to call methods"
-  },
-  "10.3": {
-    "sha": "e6e0a9eff07668f5189c9e51b4162eacb858a02d",
-    "message": "Add scope functions to call the Meteor methods"
-  },
-  "10.2": {
-    "sha": "3adde199e75d84eae82cf51c48f94f8b3ac607f6",
-    "message": "Add Meteor Methods for add, delete and check tasks"
-  },
-  "10.1": {
-    "sha": "a01d86230123f4a46623ddf18775a41ca857e147",
-    "message": "Remove the insecure package"
-  },
-  "9.6": {
-    "sha": "5b026977269006ac5ebfda7ceb25923fc4d69ab4",
-    "message": "Add username to the displayed task"
-  },
-  "9.5": {
-    "sha": "78d5f5619d9434035d6451ea4077dfcc8edb54ef",
-    "message": "Hide new task form if user is not logged in"
-  },
-  "9.4": {
-    "sha": "8210ff2c37a8b9ccb6b9750aa9d0df94f4e59a8a",
-    "message": "Add owner and username to created task"
-  },
-  "9.3": {
-    "sha": "253abff3918109b97f642067ec222cf529b09c6c",
-    "message": "Configure accounts UI to use usernames instead of email"
-  },
-  "9.2": {
-    "sha": "35a313074e5780255f2c3010163a2dec2411afac",
-    "message": "Add Blaze loginButtons template to HTML"
-  },
-  "9.1": {
-    "sha": "452eb1f509886d58662fee94da75dffaeab9abc5",
-    "message": "Add accounts-ui and accounts-password packages"
-  },
-  "8.6": {
-    "sha": "3d4d598cac0c28b9c527545b36b3d7376a8c104c",
-    "message": "Add incompleteCount to header"
-  },
-  "8.5": {
-    "sha": "f0fb1566f2dfdcd206ec6efe2e274090a1c4a5a8",
-    "message": "Add incompleteCount to scope"
-  },
-  "8.4": {
-    "sha": "ea6ca654274d1e5a22ec76a2a33c32c388c4ce75",
-    "message": "Make query parameter reactive"
-  },
-  "8.3": {
-    "sha": "5adc4b31da9476a898df3db649a4aa7418b0b7d7",
-    "message": "Change the Collection to use query parameter"
-  },
-  "8.2": {
-    "sha": "919560a990de2a2a370aea6f9e28888f09bd1b6f",
-    "message": "Watch hideCompleted and change the query variable"
-  },
-  "8.1": {
-    "sha": "9b12d06c6242558c1077ad60ab07aefcecd3814f",
-    "message": "Add hideComplete checkbox to template"
-  },
-  "7.2": {
-    "sha": "85e80627bfb80b13c21367c5f77cdcfdf5fadbd0",
-    "message": "Bootstrap Angular to mobile as well"
-  },
-  "7.1": {
-    "sha": "8466c1cdf7f7afc7f2f93dce2fa4d514c59f7130",
-    "message": "Remove ng-app"
-  },
-  "5.1": {
-    "sha": "ade01c58b021c1fc432b323bbeaa78ab9f72b941",
-    "message": "Add done and delete buttons to task"
-  },
-  "4.3": {
-    "sha": "7d3a03a08b48b1a1f0ac492d7f6685206b459d36",
-    "message": "Sort task list by date"
-  },
-  "4.2": {
-    "sha": "3ba891e95d2ebb77e99acb525b79506fc516a1cb",
-    "message": "Create Add Task scope function"
-  },
-  "4.1": {
-    "sha": "ab09bcf16256968772baf78d792ee3802230a615",
-    "message": "Add new task form to template"
-  },
-  "3.1": {
-    "sha": "5589cc40e89bf8ae25a31e69ed86c9c7ebf0073a",
-    "message": "Replace the static array with a Collection"
-  },
-  "2.5": {
-    "sha": "f7cce808089dc131114eedd453292b95731690ac",
-    "message": "Add CSS"
-  },
-  "2.4": {
-    "sha": "7ec04bb81bd70c6926b42f7ee6f9f9995fe45ece",
-    "message": "First Angular template"
-  },
-  "2.3": {
-    "sha": "82fd8e01f18fa64faca04535956815e5dc3f4ea3",
-    "message": "Init Angular app and controller"
-  },
-  "2.2": {
-    "sha": "579e10de48cd091522b880c6280fcfcc3ec81ed5",
-    "message": "Link main file to Angular templates"
-  },
-  "2.1": {
-    "sha": "3da58d0f1228342c24254b0268ae04156c5009e9",
-    "message": "Add the Angular package"
-  },
-  "1": {
-    "sha": "b18f1aaf683e5f5c5b20212b43a4fef97c1c7664",
-    "message": "Run `meteor create`"
-  }
-}
\ No newline at end of file
diff --git a/generated/blaze-commits.js b/generated/blaze-commits.js
deleted file mode 100644
index 3cac8b5..0000000
--- a/generated/blaze-commits.js
+++ /dev/null
@@ -1,139 +0,0 @@
-// This file auto-generated by scripts/map-commits-to-steps.rb
-BLAZE_COMMITS = {
-  "11.9": {
-    "sha": "b5957208d50a064a4a22780c7ef76259691b2c7a",
-    "message": "Add some extra security to methods"
-  },
-  "11.8": {
-    "sha": "6682fe168d69eb11b7fe280b67ae87fc6c06425a",
-    "message": "Only publish tasks the user is allowed to see"
-  },
-  "11.7": {
-    "sha": "06f0e314c1dfe3dc8a44288e71d02cac85a32c0c",
-    "message": "Add event handler to call the setPrivate method"
-  },
-  "11.6": {
-    "sha": "47e1ff964973d319585bc7f5eb45b7ea78581028",
-    "message": "Define method to set tasks to private"
-  },
-  "11.5": {
-    "sha": "ba34429a728da182231069f71f46ece369baa31b",
-    "message": "Define helper to check ownership"
-  },
-  "11.4": {
-    "sha": "d1a2cc5eefa0b830f5f952cb6a94a496d7bb13aa",
-    "message": "Add private class to private tasks"
-  },
-  "11.3": {
-    "sha": "2c186456f68d31fbc51ef87cf10d8ff5a60f7cfe",
-    "message": "Add private button"
-  },
-  "11.2": {
-    "sha": "b292ba8028b19999a63e84d48fb2ca15d1e30110",
-    "message": "Add publish and subscribe"
-  },
-  "11.1": {
-    "sha": "6d476642901e702bac6ead65d5522dbe85e7852c",
-    "message": "Remove autopublish"
-  },
-  "10.4": {
-    "sha": "40f20dec61f94269f434f8e6600f52e48dab9c59",
-    "message": "Replace update and remove with methods"
-  },
-  "10.3": {
-    "sha": "7f422feef91339c9ffe9afd0a6069a14297f45b4",
-    "message": "Replace insert with addTask method"
-  },
-  "10.2": {
-    "sha": "c209b47dcce29206ee5235e09817558440905a6e",
-    "message": "Define some methods"
-  },
-  "10.1": {
-    "sha": "59808d546321d201594a14dfa6a84c4a28eab53a",
-    "message": "Remove insecure package"
-  },
-  "9.6": {
-    "sha": "d7ad84ff5ae149e78621c85a1d2fd32959439f29",
-    "message": "Display username next to task"
-  },
-  "9.5": {
-    "sha": "29cff394ae08784db32c90affdc3bf8686b21d83",
-    "message": "Only show add task form if logged in"
-  },
-  "9.4": {
-    "sha": "cd80f2966275060c64e4418c44cf13669386ce4d",
-    "message": "Update insert to include user data"
-  },
-  "9.3": {
-    "sha": "ddf3246896747a89f96aa64788f3daeca2e9a5c6",
-    "message": "Configure accounts-ui"
-  },
-  "9.2": {
-    "sha": "788b22e96afdbb0fb604834f4d08c61bb0178628",
-    "message": "Include loginButtons"
-  },
-  "9.1": {
-    "sha": "36e2490f9302894bb63ce241343da41519b03600",
-    "message": "Add accounts-ui and accounts-password"
-  },
-  "8.5": {
-    "sha": "48c14895d510dd095da3e114a40152d9291cbb83",
-    "message": "Display incompleteCount"
-  },
-  "8.4": {
-    "sha": "d7e04b692a361153918f4a88548dfdc1c0220367",
-    "message": "Add incompleteCount helper to body"
-  },
-  "8.3": {
-    "sha": "3352071c6d1c414f94ee21038f28c45651d6216c",
-    "message": "Add helpers to body template"
-  },
-  "8.2": {
-    "sha": "8a5390d3f596e1c2cefe56bfd417838ca834978c",
-    "message": "Add event handler for checkbox"
-  },
-  "8.1": {
-    "sha": "e62e4c1f8ca6f9808b6f3a78c39c4874dffdcbb4",
-    "message": "Add hide-completed checkbox to HTML"
-  },
-  "5.2": {
-    "sha": "383896358ebfb53c237a8611fc11a86aa71fbbf6",
-    "message": "Add event handlers for Task buttons"
-  },
-  "5.1": {
-    "sha": "5cdfa73dcd1a1973bf31e76ffb0e6af96d9a2d8a",
-    "message": "Add buttons to Task component"
-  },
-  "4.3": {
-    "sha": "a06c2235fa31bb876edc2f62ba62310dee40ab6c",
-    "message": "Show newest tasks at the top"
-  },
-  "4.2": {
-    "sha": "7a1ace1482bbdd5ce38aa5db28ecb20ce0e12863",
-    "message": "Add event handler for form submit"
-  },
-  "4.1": {
-    "sha": "8434ab7042eb750c50ab58efd7231f1c97c630ed",
-    "message": "Add form for new tasks"
-  },
-  "3.1": {
-    "sha": "f78906af3d2d15fdb1851ff28122f9e08bc4ac9f",
-    "message": "Define Tasks collection and load tasks from it"
-  },
-  "2.3": {
-    "sha": "e15faa0c628c7756e51d2470432f9aa548729739",
-    "message": "Add CSS"
-  },
-  "2.2": {
-    "sha": "eda253878e20ba2577f28fe6fd7c3ce5090aec18",
-    "message": "Replace starter JS code"
-  },
-  "2.1": {
-    "sha": "be5979a8eae5766f74314e57f41037f4977d1372",
-    "message": "Replace starter HTML code"
-  },
-  "1": {
-    "sha": "8e14e687c3fe4add10f1d93215051d27faf3dd7c",
-    "message": "Run `meteor create`"
-  }
-}
\ No newline at end of file
diff --git a/generated/react-commits.js b/generated/react-commits.js
deleted file mode 100644
index 9a9992b..0000000
--- a/generated/react-commits.js
+++ /dev/null
@@ -1,167 +0,0 @@
-// This file auto-generated by scripts/map-commits-to-steps.rb
-REACT_COMMITS = {
-  "11.10": {
-    "sha": "b847140c6490cf3a1734199deb26d5758ea0c9ac",
-    "message": "Add extra security to methods"
-  },
-  "11.9": {
-    "sha": "e527227d30c447c3d7ffd3723d6540f361c9fe42",
-    "message": "Only publish tasks the current user can see"
-  },
-  "11.8": {
-    "sha": "67fa7b381d5b51de0c78ee129a000aadf95de4bc",
-    "message": "Add private className to Task when needed"
-  },
-  "11.7": {
-    "sha": "4f1dae36828297dd73d3447c29fd9f34f308e78b",
-    "message": "Add private button event handler to Task"
-  },
-  "11.6": {
-    "sha": "9a487d4eb60b2d224d2b858da28123344315ca17",
-    "message": "Add private button, shown only to owner"
-  },
-  "11.5": {
-    "sha": "319d7619de668f136a04378ae182a9b9c17480a4",
-    "message": "Add a new prop type for Task component"
-  },
-  "11.4": {
-    "sha": "625b356e7ed1bfa66c3a36d1fb37e8373c7b5095",
-    "message": "Update renderTasks to pass in showPrivateButton"
-  },
-  "11.3": {
-    "sha": "f35bac8c484061a0e0200806c994e5b8a39d89ea",
-    "message": "Add setPrivate method"
-  },
-  "11.2": {
-    "sha": "54e487630478cd1389a58c08816bd578af1fceaf",
-    "message": "Add publish to server and subscribe to client"
-  },
-  "11.1": {
-    "sha": "c25ceadfb6a01c7892e8c0fa89c20c7ced190194",
-    "message": "Remove autopublish package"
-  },
-  "10.4": {
-    "sha": "0e519b181c0888a67f1424ac5d354c3f78a13c16",
-    "message": "Update Task to use setChecked and removeTask methods"
-  },
-  "10.3": {
-    "sha": "dc0883c23649fb89b4489c97e2f1127c4cfeef2c",
-    "message": "Update App component to use addTask method"
-  },
-  "10.2": {
-    "sha": "e711321a7f138e24b849c17b16e1d229768d0c11",
-    "message": "Add methods for add, remove, update task"
-  },
-  "10.1": {
-    "sha": "820425c995deada233144a4212871f42f4be1410",
-    "message": "Remove insecure package"
-  },
-  "9.8": {
-    "sha": "30dc469cf13d5f65ad304fde4f1e216e9f4aa452",
-    "message": "Update Task component to show username"
-  },
-  "9.7": {
-    "sha": "5721735aea4bffdfadfe2d1e6113c7bac5d4fb61",
-    "message": "Wrap new task form to only show when logged in"
-  },
-  "9.6": {
-    "sha": "9b01c38c2ec27fed6653fa5e6efa2b83bc34cd8b",
-    "message": "Update getMeteorData to return data about user"
-  },
-  "9.5": {
-    "sha": "ea3a5c3919625bafc8d8137303cac4bcd56563ae",
-    "message": "Update insert to save username and owner"
-  },
-  "9.4": {
-    "sha": "0872f25fd7507e5f2750a97c9dad479469306e31",
-    "message": "Configure accounts-ui to only require username"
-  },
-  "9.3": {
-    "sha": "2fc5338aece0c67370206bd0a53b77e4c94efad7",
-    "message": "Include sign in form"
-  },
-  "9.2": {
-    "sha": "476e97407f34d17fff6ad29ed0e69e7f91524cbb",
-    "message": "Create Accounts UI wrapper component"
-  },
-  "9.1": {
-    "sha": "1c45b6bfb12ee5980a15e6e5ae014ee2bdfaf08f",
-    "message": "Add accounts-ui and accounts-password packages"
-  },
-  "8.6": {
-    "sha": "8173671b2f2e8411b20194d818abadea83f974f0",
-    "message": "Display incompleteCount in the header"
-  },
-  "8.5": {
-    "sha": "0ffc7a42c13617ffa11d1460f1251531043813fd",
-    "message": "Update getMeteorData to return incompleteCount"
-  },
-  "8.4": {
-    "sha": "f48c03507b9438ad4c1e9a48a2d5b82b1bd354ea",
-    "message": "Replace getMeteorData to filter tasks"
-  },
-  "8.3": {
-    "sha": "59dab20a8dbb012f3313dc660a1266612298e786",
-    "message": "Add toggleHideCompleted handler to App"
-  },
-  "8.2": {
-    "sha": "a6bea499cba226edcf0f537615cc0ecfc0f47230",
-    "message": "Add getInitialState to App component"
-  },
-  "8.1": {
-    "sha": "922d90961e4cdab0aaef6c07438d853b2d16e32a",
-    "message": "Add hide completed checkbox to App component"
-  },
-  "5.1": {
-    "sha": "2560d9ad137bf546344670d81fcaaee6ef38c560",
-    "message": "Update Task component to add features"
-  },
-  "4.3": {
-    "sha": "4bd9bbafd1845dd9aee21da655f0dcde7b4b3da5",
-    "message": "Update getMeteorData to sort tasks by time"
-  },
-  "4.2": {
-    "sha": "1b87eff8bd37fc375f506c32b9c4d765f15b301f",
-    "message": "Add handleSubmit method to App component"
-  },
-  "4.1": {
-    "sha": "8a0525ce1e84b872ca35743b7101f14ec627b41f",
-    "message": "Add form for new tasks"
-  },
-  "3.2": {
-    "sha": "ce86ff010f94a8a1cc2c8e6f9331df080565682b",
-    "message": "Modify App component to get tasks from collection"
-  },
-  "3.1": {
-    "sha": "b21327904ff8de4d51618d88edc6aabb39060c65",
-    "message": "Define tasks collection"
-  },
-  "2.6": {
-    "sha": "ec0e0aee25ff51d8f3096ea446537113aded6ab3",
-    "message": "Add CSS"
-  },
-  "2.5": {
-    "sha": "c676d9f668e3adb9c4f214bdafaa8f388d63678b",
-    "message": "Create Task component"
-  },
-  "2.4": {
-    "sha": "1b8a7577860c7d9f0f0afa6996cf8fa6fe92d3ec",
-    "message": "Create App component"
-  },
-  "2.3": {
-    "sha": "36c59c642fc6a7b48ebe0378c5f75488854479c7",
-    "message": "Replace starter JS"
-  },
-  "2.2": {
-    "sha": "3cec511c67cb3b78b43329d12b55da7efb2a107e",
-    "message": "Replace starter HTML code"
-  },
-  "2.1": {
-    "sha": "96bd5130dbd707aa497a0effa85cb7316cd7d560",
-    "message": "Add the React package"
-  },
-  "1": {
-    "sha": "d7a5e7f791c6f6659c4767f8bb4afa853d793647",
-    "message": "Run `meteor create`"
-  }
-}
\ No newline at end of file
diff --git a/package.js b/package.js
index cc1c18e..c1c2854 100644
--- a/package.js
+++ b/package.js
@@ -19,9 +19,6 @@ Package.onUse(function (api) {
   ]);
 
   api.addFiles([
-    'generated/blaze-commits.js',
-    'generated/angular-commits.js',
-    'generated/react-commits.js',
     'routes/angularTut.js',
     'routes/blazeTut.js',
     'routes/reactTut.js',
diff --git a/scripts/process-repo.rb b/scripts/process-repo.rb
index 03cab6d..08ba448 100755
--- a/scripts/process-repo.rb
+++ b/scripts/process-repo.rb
@@ -30,39 +30,12 @@ view_type = ARGV[0]
 tutorial_root = File.realpath(File.join File.dirname(__FILE__), "..")
 
 repo = File.join tutorial_root, "repos", view_type
-out_file = File.join tutorial_root, "generated", (view_type + "-commits.js")
 out_patch_file = File.join tutorial_root, "generated", (view_type + ".multi.patch")
-var_name = view_type.upcase + "_COMMITS"
 
 Dir.chdir repo
 
 log_output = `git log --pretty=oneline`
 
-hash = {}
-
-log_output.each_line do |line|
-  parts = line.split
-  sha = parts[0]
-  maybe_step = parts[1]
-  if maybe_step == "Step"
-    step_number = parts[2].sub ":", ""
-    message = parts.drop(3).join " "
-    puts "sha: " + sha
-    puts "step: " + step_number
-    puts "message: " + message
-
-    hash[step_number] = {
-      "sha" => sha,
-      "message" => message
-    }
-  end
-end
-
-File.open out_file, "w" do |file|
-  file.write "// This file auto-generated by scripts/map-commits-to-steps.rb\n"
-  file.write(var_name + " = " + JSON.pretty_generate(hash))
-end
-
 first_commit = log_output.lines.last.split[0]
 puts "first commit: " + first_commit
 puts "writing patches to: " + out_patch_file
-- 
2.13.6 (Apple Git-96)


From dbf6fd292acb0af9d0bec978f90d07ea2b67d390 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 27 Jul 2015 16:25:32 -0700
Subject: [PATCH 068/164] Update README

---
 README.md | 7 ++-----
 1 file changed, 2 insertions(+), 5 deletions(-)

diff --git a/README.md b/README.md
index 84654a2..cc934e0 100644
--- a/README.md
+++ b/README.md
@@ -50,7 +50,7 @@ The commit with this message can then be included in the content with the follow
 {{> DiffBox step="3.1" tutorialName="simple-todos"}}
 ```
 
-You should replace `blaze` with the correct view name (currently this string is automatically transformed to refer to the correct data structures).
+You should replace `simple-todos` with the correct tutorial name (defined by calling `DiffBox.registerTutorial`).
 
 You're done! Make sure to commit the changes to all of the generated files.
 
@@ -61,10 +61,7 @@ This repository is a Meteor package; it's currently not published, but you can c
 The different parts of the repository have quite different responsibilities, but they are somewhat tightly coupled so it doesn't make sense to split them into separate packages at this point.
 
 3. `/content/` The actual tutorial prose content, in Markdown format.
-4. `/generated/` (don't edit manually) This directory contains files generated by `/scripts/process-repo.rb`:
-    1. `*-commits.js` are lists of commits keyed by the number of the step in the tutorial, with a parsed commit message.
-    2. `*.multi.patch` are concatenated patch files of the step-by-step tutorial repositories. The patch files are in the same format as the result of `git format-patch --stdout`. The build plugin in `/git-patch-viewer/patch-plugin.jsx` knows how to read these files.
+4. `/generated/` (don't edit manually) This directory contains Git patch files generated from the step-by-step repos.
 5. `/repos/` This directory contains git submodules of all three step-by-step tutorial repositories.
 6. `/routes/` This directory contains JavaScript data structures describing the different tutorial steps. These are exported from the package; the meteor.com website and tutorial-viewer app know how to read them.
 7. `/scripts/` This contains a script that is used to update `/generated/` from the repositories in `/repos/`.
-8. `/shared/` Tutorial-specific templates. Some of them are shared content for the different tutorials in markdown format, others are useful UI widgets. Includes the useful `DiffBox` template, which wraps the `GitPatch` template with more convenient inputs.
-- 
2.13.6 (Apple Git-96)


From 50c6bb4fc1ec70f2404792c5c353f11747937641 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 27 Jul 2015 16:55:55 -0700
Subject: [PATCH 069/164] Define tutorial metadata through tutorial registry

---
 package.js           |   3 +-
 routes/angularTut.js | 165 +++++++++++++++++++++------------------------------
 routes/blazeTut.js   | 165 +++++++++++++++++++++------------------------------
 routes/reactTut.js   | 165 +++++++++++++++++++++------------------------------
 4 files changed, 203 insertions(+), 295 deletions(-)

diff --git a/package.js b/package.js
index c1c2854..4b475ff 100644
--- a/package.js
+++ b/package.js
@@ -15,7 +15,8 @@ Package.onUse(function (api) {
     'reactive-var',
     'less',
     'mdg:tutorial-step-diff-compiler@0.1.0',
-    'mdg:tutorial-diff-box'
+    'mdg:tutorial-diff-box@0.1.1',
+    'mdg:tutorial-registry@0.1.0'
   ]);
 
   api.addFiles([
diff --git a/routes/angularTut.js b/routes/angularTut.js
index 0be89e4..4e9956f 100644
--- a/routes/angularTut.js
+++ b/routes/angularTut.js
@@ -1,98 +1,67 @@
-ANGULAR_TUT = [
-  {
-    id: "0",
-    title: 'Creating an app',
-    seoTitle: 'Creating an app',
-    route: "tutorials.angular.creating-an-app",
-    path: "/tutorials/angular/creating-an-app",
-    contentTemplate: 'angular-step01'
-  },
-  {
-    id: "1",
-    title: 'Templates',
-    seoTitle: 'Templates',
-    route: "tutorials.angular.templates",
-    path: "/tutorials/angular/templates",
-    contentTemplate: 'angular-step02'
-  },
-  {
-    id: "2",
-    title: 'Collections',
-    seoTitle: 'Collections',
-    route: "tutorials.angular.collections",
-    path: "/tutorials/angular/collections",
-    contentTemplate: 'angular-step03'
-  },
-  {
-    id: "3",
-    title: 'Forms and events',
-    seoTitle: 'Forms and events',
-    route: "tutorials.angular.forms-and-events",
-    path: "/tutorials/angular/forms-and-events",
-    contentTemplate: 'angular-step04'
-  },
-  {
-    id: "4",
-    title: 'Update and remove',
-    seoTitle: 'Update and remove',
-    route: "tutorials.angular.update-and-remove",
-    path: "/tutorials/angular/update-and-remove",
-    contentTemplate: 'angular-step05'
-  },
-  {
-    id: "5",
-    title: 'Deploying your app',
-    seoTitle: 'Deploying your app',
-    route: "tutorials.angular.deploying-your-app",
-    path: "/tutorials/angular/deploying-your-app",
-    contentTemplate: 'shared-step06'
-  },
-  {
-    id: "6",
-    title: 'Running on mobile',
-    seoTitle: 'Running on mobile',
-    route: "tutorials.angular.running-on-mobile",
-    path: "/tutorials/angular/running-on-mobile",
-    contentTemplate: 'angular-step07'
-  },
-  {
-    id: "7",
-    title: 'Filtering Collections',
-    seoTitle: 'Filtering Collections',
-    route: "tutorials.angular.filtering-collections",
-    path: "/tutorials/angular/filtering-collections",
-    contentTemplate: 'angular-step08'
-  },
-  {
-    id: "8",
-    title: 'Adding user accounts',
-    seoTitle: 'Adding user accounts',
-    route: "tutorials.angular.adding-user-accounts",
-    path: "/tutorials/angular/adding-user-accounts",
-    contentTemplate: 'angular-step09'
-  },
-  {
-    id: "9",
-    title: 'Security with methods',
-    seoTitle: 'Security with methods',
-    route: "tutorials.angular.security-with-methods",
-    path: "/tutorials/angular/security-with-methods",
-    contentTemplate: 'angular-step10'
-  },
-  {
-    id: "10",
-    title: 'Publish and subscribe',
-    seoTitle: 'Publish and subscribe',
-    route: "tutorials.angular.publish-and-subscribe",
-    path: "/tutorials/angular/publish-and-subscribe",
-    contentTemplate: 'angular-step11'
-  },
-  {
-    id: "11",
-    title: 'Next steps',
-    seoTitle: 'Next steps',
-    route: "tutorials.angular.next-steps",
-    path: "/tutorials/angular/next-steps",
-    contentTemplate: 'angular-step12'
-  }
-];
\ No newline at end of file
+TutorialRegistry.registerTutorial("angular", {
+  title: "Simple Todos Angular",
+  subtitle: "Learn how to use Meteor and Angular together",
+  tutorialSourceLink: "github.com/meteor/tutorials/content/angular",
+  steps: [
+    {
+      title: 'Creating an app',
+      slug: "creating-an-app",
+      template: 'angular-step01'
+    },
+    {
+      title: 'Templates',
+      slug: "templates",
+      template: 'angular-step02'
+    },
+    {
+      title: 'Collections',
+      slug: "collections",
+      template: 'angular-step03'
+    },
+    {
+      title: 'Forms and events',
+      slug: "forms-and-events",
+      template: 'angular-step04'
+    },
+    {
+      title: 'Update and remove',
+      slug: "update-and-remove",
+      template: 'angular-step05'
+    },
+    {
+      title: 'Deploying your app',
+      slug: "deploying-your-app",
+      template: 'shared-step06'
+    },
+    {
+      title: 'Running on mobile',
+      slug: "running-on-mobile",
+      template: 'angular-step07'
+    },
+    {
+      title: 'Filtering Collections',
+      slug: "filtering-collections",
+      template: 'angular-step08'
+    },
+    {
+      title: 'Adding user accounts',
+      slug: "adding-user-accounts",
+      template: 'angular-step09'
+    },
+    {
+      title: 'Security with methods',
+      slug: "security-with-methods",
+      template: 'angular-step10'
+    },
+    {
+      title: 'Publish and subscribe',
+      slug: "publish-and-subscribe",
+      template: 'angular-step11'
+    },
+    {
+      title: 'Next steps',
+      slug: "next-steps",
+      template: 'angular-step12'
+    }
+  ]
+});
\ No newline at end of file
diff --git a/routes/blazeTut.js b/routes/blazeTut.js
index 8c5b6f7..0c3216b 100644
--- a/routes/blazeTut.js
+++ b/routes/blazeTut.js
@@ -1,98 +1,67 @@
-BLAZE_TUT = [
-  {
-    id: "0",
-    title: 'Creating an app',
-    seoTitle: 'Creating an app',
-    route: "tutorials.blaze.creating-an-app",
-    path: "/tutorials/blaze/creating-an-app",
-    contentTemplate: 'blaze-step01'
-  },
-  {
-    id: "1",
-    title: 'Templates',
-    seoTitle: 'Templates',
-    route: "tutorials.blaze.templates",
-    path: "/tutorials/blaze/templates",
-    contentTemplate: 'blaze-step02'
-  },
-  {
-    id: "2",
-    title: 'Collections',
-    seoTitle: 'Collections',
-    route: "tutorials.blaze.collections",
-    path: "/tutorials/blaze/collections",
-    contentTemplate: 'blaze-step03'
-  },
-  {
-    id: "3",
-    title: 'Forms and events',
-    seoTitle: 'Forms and events',
-    route: "tutorials.blaze.forms-and-events",
-    path: "/tutorials/blaze/forms-and-events",
-    contentTemplate: 'blaze-step04'
-  },
-  {
-    id: "4",
-    title: 'Update and remove',
-    seoTitle: 'Update and remove',
-    route: "tutorials.blaze.update-and-remove",
-    path: "/tutorials/blaze/update-and-remove",
-    contentTemplate: 'blaze-step05'
-  },
-  {
-    id: "5",
-    title: 'Deploying your app',
-    seoTitle: 'Deploying your app',
-    route: "tutorials.blaze.deploying-your-app",
-    path: "/tutorials/blaze/deploying-your-app",
-    contentTemplate: 'shared-step06'
-  },
-  {
-    id: "6",
-    title: 'Running on mobile',
-    seoTitle: 'Running on mobile',
-    route: "tutorials.blaze.running-on-mobile",
-    path: "/tutorials/blaze/running-on-mobile",
-    contentTemplate: 'sharedStep07'
-  },
-  {
-    id: "7",
-    title: 'Temporary UI state',
-    seoTitle: 'Temporary UI state',
-    route: "tutorials.blaze.temporary-ui-state",
-    path: "/tutorials/blaze/temporary-ui-state",
-    contentTemplate: 'blaze-step08'
-  },
-  {
-    id: "8",
-    title: 'Adding user accounts',
-    seoTitle: 'Adding user accounts',
-    route: "tutorials.blaze.adding-user-accounts",
-    path: "/tutorials/blaze/adding-user-accounts",
-    contentTemplate: 'blaze-step09'
-  },
-  {
-    id: "9",
-    title: 'Security with methods',
-    seoTitle: 'Security with methods',
-    route: "tutorials.blaze.security-with-methods",
-    path: "/tutorials/blaze/security-with-methods",
-    contentTemplate: 'blaze-step10'
-  },
-  {
-    id: "10",
-    title: 'Publish and subscribe',
-    seoTitle: 'Publish and subscribe',
-    route: "tutorials.blaze.publish-and-subscribe",
-    path: "/tutorials/blaze/publish-and-subscribe",
-    contentTemplate: 'blaze-step11'
-  },
-  {
-    id: "11",
-    title: 'Next steps',
-    seoTitle: 'Next steps',
-    route: "tutorials.blaze.next-steps",
-    path: "/tutorials/blaze/next-steps",
-    contentTemplate: 'blaze-step12'
-  }
-];
\ No newline at end of file
+TutorialRegistry.registerTutorial("blaze", {
+  title: "Simple Todos",
+  subtitle: "Build a simple todo list app with Meteor",
+  tutorialSourceLink: "github.com/meteor/tutorials/content/blaze",
+  steps: [
+    {
+      title: 'Creating an app',
+      slug: "creating-an-app",
+      template: 'blaze-step01'
+    },
+    {
+      title: 'Templates',
+      slug: "templates",
+      template: 'blaze-step02'
+    },
+    {
+      title: 'Collections',
+      slug: "collections",
+      template: 'blaze-step03'
+    },
+    {
+      title: 'Forms and events',
+      slug: "forms-and-events",
+      template: 'blaze-step04'
+    },
+    {
+      title: 'Update and remove',
+      slug: "update-and-remove",
+      template: 'blaze-step05'
+    },
+    {
+      title: 'Deploying your app',
+      slug: "deploying-your-app",
+      template: 'shared-step06'
+    },
+    {
+      title: 'Running on mobile',
+      slug: "running-on-mobile",
+      template: 'sharedStep07'
+    },
+    {
+      title: 'Temporary UI state',
+      slug: "temporary-ui-state",
+      template: 'blaze-step08'
+    },
+    {
+      title: 'Adding user accounts',
+      slug: "adding-user-accounts",
+      template: 'blaze-step09'
+    },
+    {
+      title: 'Security with methods',
+      slug: "security-with-methods",
+      template: 'blaze-step10'
+    },
+    {
+      title: 'Publish and subscribe',
+      slug: "publish-and-subscribe",
+      template: 'blaze-step11'
+    },
+    {
+      title: 'Next steps',
+      slug: "next-steps",
+      template: 'blaze-step12'
+    }
+  ]
+});
\ No newline at end of file
diff --git a/routes/reactTut.js b/routes/reactTut.js
index 137a567..d704e6f 100644
--- a/routes/reactTut.js
+++ b/routes/reactTut.js
@@ -1,98 +1,67 @@
-REACT_TUT = [
-  {
-    id: "0",
-    title: 'Creating an app',
-    seoTitle: 'Creating an app',
-    route: "tutorials.react.creating-an-app",
-    path: "/tutorials/react/creating-an-app",
-    contentTemplate: 'react-step01'
-  },
-  {
-    id: "1",
-    title: 'Components',
-    seoTitle: 'Components',
-    route: "tutorials.react.components",
-    path: "/tutorials/react/components",
-    contentTemplate: 'react-step02'
-  },
-  {
-    id: "2",
-    title: 'Collections',
-    seoTitle: 'Collections',
-    route: "tutorials.react.collections",
-    path: "/tutorials/react/collections",
-    contentTemplate: 'react-step03'
-  },
-  {
-    id: "3",
-    title: 'Forms and events',
-    seoTitle: 'Forms and events',
-    route: "tutorials.react.forms-and-events",
-    path: "/tutorials/react/forms-and-events",
-    contentTemplate: 'react-step04'
-  },
-  {
-    id: "4",
-    title: 'Update and remove',
-    seoTitle: 'Update and remove',
-    route: "tutorials.react.update-and-remove",
-    path: "/tutorials/react/update-and-remove",
-    contentTemplate: 'react-step05'
-  },
-  {
-    id: "5",
-    title: 'Deploying your app',
-    seoTitle: 'Deploying your app',
-    route: "tutorials.react.deploying-your-app",
-    path: "/tutorials/react/deploying-your-app",
-    contentTemplate: "shared-step06"
-  },
-  {
-    id: "6",
-    title: 'Running on mobile',
-    seoTitle: 'Running on mobile',
-    route: "tutorials.react.running-on-mobile",
-    path: "/tutorials/react/running-on-mobile",
-    contentTemplate: "sharedStep07"
-  },
-  {
-    id: "7",
-    title: 'Temporary UI state',
-    seoTitle: 'Temporary UI state',
-    route: "tutorials.react.temporary-ui-state",
-    path: "/tutorials/react/temporary-ui-state",
-    contentTemplate: 'react-step08'
-  },
-  {
-    id: "8",
-    title: 'Adding user accounts',
-    seoTitle: 'Adding user accounts',
-    route: "tutorials.react.adding-user-accounts",
-    path: "/tutorials/react/adding-user-accounts",
-    contentTemplate: 'react-step09'
-  },
-  {
-    id: "9",
-    title: 'Security with methods',
-    seoTitle: 'Security with methods',
-    route: "tutorials.react.security-with-methods",
-    path: "/tutorials/react/security-with-methods",
-    contentTemplate: 'react-step10'
-  },
-  {
-    id: "10",
-    title: 'Publish and subscribe',
-    seoTitle: 'Publish and subscribe',
-    route: "tutorials.react.publish-and-subscribe",
-    path: "/tutorials/react/publish-and-subscribe",
-    contentTemplate: 'react-step11'
-  },
-  {
-    id: "11",
-    title: 'Next steps',
-    seoTitle: 'Next steps',
-    route: "tutorials.react.next-steps",
-    path: "/tutorials/react/next-steps",
-    contentTemplate: 'react-step12'
-  }
-];
\ No newline at end of file
+TutorialRegistry.registerTutorial("react", {
+  title: "Simple Todos React",
+  subtitle: "Learn how to use Meteor and React together",
+  tutorialSourceLink: "github.com/meteor/tutorials/content/angular",
+  steps: [
+    {
+      title: "Creating an app",
+      slug: "creating-an-app",
+      template: "react-step01"
+    },
+    {
+      title: 'Components',
+      slug: "components",
+      template: 'react-step02'
+    },
+    {
+      title: 'Collections',
+      slug: "collections",
+      template: 'react-step03'
+    },
+    {
+      title: 'Forms and events',
+      slug: "forms-and-events",
+      template: 'react-step04'
+    },
+    {
+      title: 'Update and remove',
+      slug: "update-and-remove",
+      template: 'react-step05'
+    },
+    {
+      title: 'Deploying your app',
+      slug: "deploying-your-app",
+      template: "shared-step06"
+    },
+    {
+      title: 'Running on mobile',
+      slug: "running-on-mobile",
+      template: "sharedStep07"
+    },
+    {
+      title: 'Temporary UI state',
+      slug: "temporary-ui-state",
+      template: 'react-step08'
+    },
+    {
+      title: 'Adding user accounts',
+      slug: "adding-user-accounts",
+      template: 'react-step09'
+    },
+    {
+      title: 'Security with methods',
+      slug: "security-with-methods",
+      template: 'react-step10'
+    },
+    {
+      title: 'Publish and subscribe',
+      slug: "publish-and-subscribe",
+      template: 'react-step11'
+    },
+    {
+      title: 'Next steps',
+      slug: "next-steps",
+      template: 'react-step12'
+    }
+  ]
+});
-- 
2.13.6 (Apple Git-96)


From c247b9bef65820d72370674342929842ed1dea25 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 27 Jul 2015 16:58:04 -0700
Subject: [PATCH 070/164] Update to new version of registry

---
 package.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/package.js b/package.js
index 4b475ff..5426066 100644
--- a/package.js
+++ b/package.js
@@ -16,7 +16,7 @@ Package.onUse(function (api) {
     'less',
     'mdg:tutorial-step-diff-compiler@0.1.0',
     'mdg:tutorial-diff-box@0.1.1',
-    'mdg:tutorial-registry@0.1.0'
+    'mdg:tutorial-registry@0.1.1'
   ]);
 
   api.addFiles([
-- 
2.13.6 (Apple Git-96)


From aa9cab84d5167439d6e777db34e8958239fe3864 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 27 Jul 2015 18:58:36 -0700
Subject: [PATCH 071/164] Remove unneeded file

---
 package.js               |  1 -
 routes/tutorial-pages.js | 36 ------------------------------------
 2 files changed, 37 deletions(-)
 delete mode 100644 routes/tutorial-pages.js

diff --git a/package.js b/package.js
index 5426066..c3f769c 100644
--- a/package.js
+++ b/package.js
@@ -23,7 +23,6 @@ Package.onUse(function (api) {
     'routes/angularTut.js',
     'routes/blazeTut.js',
     'routes/reactTut.js',
-    'routes/tutorial-pages.js'
   ]);
 
   api.addFiles([
diff --git a/routes/tutorial-pages.js b/routes/tutorial-pages.js
deleted file mode 100644
index 985bfdb..0000000
--- a/routes/tutorial-pages.js
+++ /dev/null
@@ -1,36 +0,0 @@
-TUTORIAL_PAGES = {
-  id: "0",
-  title: "Tutorials",
-  route: "tutorials",
-  path: "/tutorials",
-  pathRedirect: "/install",
-  template: "tutorials",
-  pages: [
-    {
-      id: "1",
-      title: "Todo App",
-      route: "tutorials.blaze",
-      path: "/tutorials/blaze",
-      pathRedirect: "/tutorials/blaze/creating-an-app",
-      ghRepoName: "simple-todos",
-      subSidebarType: "sidebarStepsCollapse",
-      seoTitlePrefix: "Meteor Tutorial | ",
-      subHead: "Build your first Meteor app",
-      stepbarHide: true,
-      pages: BLAZE_TUT
-    },
-    {
-      id: "2",
-      title: "Todo App with Angular",
-      route: "tutorials.angular",
-      path: "/tutorials/angular",
-      pathRedirect: "/tutorials/angular/creating-an-app",
-      ghRepoName: "simple-todos-angular",
-      subSidebarType: "sidebarStepsCollapse",
-      seoTitlePrefix: "Meteor-Angular Tutorial | ",
-      subHead: "Integrate Meteor and AngularJS",
-      stepbarHide: true,
-      pages: ANGULAR_TUT
-    }
-  ]
-}
\ No newline at end of file
-- 
2.13.6 (Apple Git-96)


From fbeb3fe792a698539123826e2798d4f9323b7a7e Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 27 Jul 2015 19:04:57 -0700
Subject: [PATCH 072/164] Centralize metadata

---
 routes/angularTut.js => content/angular/metadata.js | 9 ++++++++-
 content/angular/register.js                         | 4 ----
 routes/blazeTut.js => content/blaze/metadata.js     | 9 ++++++++-
 content/blaze/register.js                           | 4 ----
 routes/reactTut.js => content/react/metadata.js     | 8 ++++++++
 content/react/register.js                           | 4 ----
 package.js                                          | 9 +++------
 7 files changed, 27 insertions(+), 20 deletions(-)
 rename routes/angularTut.js => content/angular/metadata.js (89%)
 delete mode 100644 content/angular/register.js
 rename routes/blazeTut.js => content/blaze/metadata.js (89%)
 delete mode 100644 content/blaze/register.js
 rename routes/reactTut.js => content/react/metadata.js (89%)
 delete mode 100644 content/react/register.js

diff --git a/routes/angularTut.js b/content/angular/metadata.js
similarity index 89%
rename from routes/angularTut.js
rename to content/angular/metadata.js
index 4e9956f..fe548de 100644
--- a/routes/angularTut.js
+++ b/content/angular/metadata.js
@@ -1,3 +1,10 @@
+if (Meteor.isClient) {
+  DiffBox.registerTutorial("simple-todos-angular", {
+    gitHubRepoName: "meteor/simple-todos-angular",
+    patchFilename: "generated/angular.multi.patch"
+  });
+}
+
 TutorialRegistry.registerTutorial("angular", {
   title: "Simple Todos Angular",
   subtitle: "Learn how to use Meteor and Angular together",
@@ -64,4 +71,4 @@ TutorialRegistry.registerTutorial("angular", {
       template: 'angular-step12'
     }
   ]
-});
\ No newline at end of file
+});
diff --git a/content/angular/register.js b/content/angular/register.js
deleted file mode 100644
index 5997005..0000000
--- a/content/angular/register.js
+++ /dev/null
@@ -1,4 +0,0 @@
-DiffBox.registerTutorial("simple-todos-angular", {
-  gitHubRepoName: "meteor/simple-todos-angular",
-  patchFilename: "generated/angular.multi.patch"
-});
diff --git a/routes/blazeTut.js b/content/blaze/metadata.js
similarity index 89%
rename from routes/blazeTut.js
rename to content/blaze/metadata.js
index 0c3216b..f3d1f3f 100644
--- a/routes/blazeTut.js
+++ b/content/blaze/metadata.js
@@ -1,3 +1,10 @@
+if (Meteor.isClient) {
+  DiffBox.registerTutorial("simple-todos", {
+    gitHubRepoName: "meteor/simple-todos",
+    patchFilename: "generated/blaze.multi.patch"
+  });
+}
+
 TutorialRegistry.registerTutorial("blaze", {
   title: "Simple Todos",
   subtitle: "Build a simple todo list app with Meteor",
@@ -64,4 +71,4 @@ TutorialRegistry.registerTutorial("blaze", {
       template: 'blaze-step12'
     }
   ]
-});
\ No newline at end of file
+});
diff --git a/content/blaze/register.js b/content/blaze/register.js
deleted file mode 100644
index 8654379..0000000
--- a/content/blaze/register.js
+++ /dev/null
@@ -1,4 +0,0 @@
-DiffBox.registerTutorial("simple-todos", {
-  gitHubRepoName: "meteor/simple-todos",
-  patchFilename: "generated/blaze.multi.patch"
-});
diff --git a/routes/reactTut.js b/content/react/metadata.js
similarity index 89%
rename from routes/reactTut.js
rename to content/react/metadata.js
index d704e6f..7712ee0 100644
--- a/routes/reactTut.js
+++ b/content/react/metadata.js
@@ -1,3 +1,10 @@
+if (Meteor.isClient) {
+  DiffBox.registerTutorial("simple-todos-react", {
+    gitHubRepoName: "meteor/simple-todos-react",
+    patchFilename: "generated/react.multi.patch"
+  });
+}
+
 TutorialRegistry.registerTutorial("react", {
   title: "Simple Todos React",
   subtitle: "Learn how to use Meteor and React together",
@@ -65,3 +72,4 @@ TutorialRegistry.registerTutorial("react", {
     }
   ]
 });
+
diff --git a/content/react/register.js b/content/react/register.js
deleted file mode 100644
index 3437918..0000000
--- a/content/react/register.js
+++ /dev/null
@@ -1,4 +0,0 @@
-DiffBox.registerTutorial("simple-todos-react", {
-  gitHubRepoName: "meteor/simple-todos-react",
-  patchFilename: "generated/react.multi.patch"
-});
diff --git a/package.js b/package.js
index c3f769c..7db3c6d 100644
--- a/package.js
+++ b/package.js
@@ -20,13 +20,12 @@ Package.onUse(function (api) {
   ]);
 
   api.addFiles([
-    'routes/angularTut.js',
-    'routes/blazeTut.js',
-    'routes/reactTut.js',
+    'content/angular/metadata.js',
+    'content/blaze/metadata.js',
+    'content/react/metadata.js',
   ]);
 
   api.addFiles([
-    'content/angular/register.js',
     'content/angular/step01.md',
     'content/angular/step02.md',
     'content/angular/step03.md',
@@ -39,7 +38,6 @@ Package.onUse(function (api) {
     'content/angular/step11.md',
     'content/angular/step12.md',
 
-    'content/blaze/register.js',
     'content/blaze/step01.md',
     'content/blaze/step02.md',
     'content/blaze/step03.md',
@@ -51,7 +49,6 @@ Package.onUse(function (api) {
     'content/blaze/step11.md',
     'content/blaze/step12.md',
 
-    'content/react/register.js',
     'content/react/step01.md',
     'content/react/step02.md',
     'content/react/step03.md',
-- 
2.13.6 (Apple Git-96)


From ffd3eec42439df6e2789ec7da67dda5e44e9b0c5 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 27 Jul 2015 19:05:25 -0700
Subject: [PATCH 073/164] Update README

---
 README.md | 1 -
 1 file changed, 1 deletion(-)

diff --git a/README.md b/README.md
index cc934e0..179a974 100644
--- a/README.md
+++ b/README.md
@@ -63,5 +63,4 @@ The different parts of the repository have quite different responsibilities, but
 3. `/content/` The actual tutorial prose content, in Markdown format.
 4. `/generated/` (don't edit manually) This directory contains Git patch files generated from the step-by-step repos.
 5. `/repos/` This directory contains git submodules of all three step-by-step tutorial repositories.
-6. `/routes/` This directory contains JavaScript data structures describing the different tutorial steps. These are exported from the package; the meteor.com website and tutorial-viewer app know how to read them.
 7. `/scripts/` This contains a script that is used to update `/generated/` from the repositories in `/repos/`.
-- 
2.13.6 (Apple Git-96)


From 6a0681a422d9ffd4965b2928681bb9cc3ab17330 Mon Sep 17 00:00:00 2001
From: Jason Won <jason.j.won@gmail.com>
Date: Wed, 5 Aug 2015 17:15:42 -0700
Subject: [PATCH 074/164] Step 4.2: Removed unnecessary line

In the tutorial code, we don't return `false` anymore, so updated sentence accordingly.
---
 content/blaze/step04.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/blaze/step04.md b/content/blaze/step04.md
index f68a070..cdcbf20 100644
--- a/content/blaze/step04.md
+++ b/content/blaze/step04.md
@@ -22,7 +22,7 @@ In our case above, we are listening to the `submit` event on any element that ma
 
 The event handler gets an argument called `event` that has some information about the event that was triggered. In this case `event.target` is our form element, and we can get the value of our input with `event.target.text.value`. You can see all of the other properties of the `event` object by adding a `console.log(event)` and inspecting the object in your browser console.
 
-The last two lines of our event handler perform some cleanup &mdash; first we make sure to make the input blank, and then we return `false` to tell the web browser to not do the default form submit action since we have already handled it.
+The last line of our event handler performs some cleanup by clearing the input.
 
 ### Inserting into a collection
 
-- 
2.13.6 (Apple Git-96)


From 01163e71bf85914e0ec81fce7376cfc9fade6cbd Mon Sep 17 00:00:00 2001
From: Jason Won <jason.j.won@gmail.com>
Date: Wed, 5 Aug 2015 17:23:06 -0700
Subject: [PATCH 075/164] changed awkward wording

---
 content/blaze/step04.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/blaze/step04.md b/content/blaze/step04.md
index cdcbf20..dc7a291 100644
--- a/content/blaze/step04.md
+++ b/content/blaze/step04.md
@@ -22,7 +22,7 @@ In our case above, we are listening to the `submit` event on any element that ma
 
 The event handler gets an argument called `event` that has some information about the event that was triggered. In this case `event.target` is our form element, and we can get the value of our input with `event.target.text.value`. You can see all of the other properties of the `event` object by adding a `console.log(event)` and inspecting the object in your browser console.
 
-The last line of our event handler performs some cleanup by clearing the input.
+Finally, in the last line of the event handler, we clear the input to prepare for another new task.
 
 ### Inserting into a collection
 
-- 
2.13.6 (Apple Git-96)


From 138a7da6cbc6c69130dfc4e7a3e134eeffee91d1 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 10 Aug 2015 10:59:03 -0700
Subject: [PATCH 076/164] Meteor -> Mongo

---
 content/blaze/step08.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/blaze/step08.md b/content/blaze/step08.md
index d54c593..36a427b 100644
--- a/content/blaze/step08.md
+++ b/content/blaze/step08.md
@@ -24,7 +24,7 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 ### Session is a reactive data store for the client
 
-Until now, we have stored all of our state in collections, and the view updated automatically when we modified the data inside these collections. This is because Meteor.Collection is recognized by Meteor as a _reactive data source_, meaning Meteor knows when the data inside has changed. `Session` is the same way, but is not synced with the server like collections are. This makes `Session` a convenient place to store temporary UI state like the checkbox above. Just like with collections, we don't have to write any extra code for the template to update when the `Session` variable changes &mdash; just calling `Session.get(...)` inside the helper is enough.
+Until now, we have stored all of our state in collections, and the view updated automatically when we modified the data inside these collections. This is because Mongo.Collection is recognized by Meteor as a _reactive data source_, meaning Meteor knows when the data inside has changed. `Session` is the same way, but is not synced with the server like collections are. This makes `Session` a convenient place to store temporary UI state like the checkbox above. Just like with collections, we don't have to write any extra code for the template to update when the `Session` variable changes &mdash; just calling `Session.get(...)` inside the helper is enough.
 
 ### One more feature: Showing a count of incomplete tasks
 
-- 
2.13.6 (Apple Git-96)


From e7353da43c88a6236da613f320ecabe71507811d Mon Sep 17 00:00:00 2001
From: Anubhav Jain <anubhav@meteor.com>
Date: Tue, 11 Aug 2015 15:08:45 -0700
Subject: [PATCH 077/164] Rename Latency Compensation to Optimistic UI. Fixes
 https://github.com/meteor/meteor/issues/4917.

---
 content/angular/step10.md | 2 +-
 content/blaze/step10.md   | 2 +-
 content/react/step10.md   | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/content/angular/step10.md b/content/angular/step10.md
index fb4d1ea..8de205d 100644
--- a/content/angular/step10.md
+++ b/content/angular/step10.md
@@ -16,7 +16,7 @@ If you try to use the app after removing this package, you will notice that none
 
 ### Defining methods
 
-First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
+First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Optimistic UI_.
 
 {{> DiffBox tutorialName="simple-todos-angular" step="10.2"}}
 
diff --git a/content/blaze/step10.md b/content/blaze/step10.md
index a8bbe2d..7789eb4 100644
--- a/content/blaze/step10.md
+++ b/content/blaze/step10.md
@@ -16,7 +16,7 @@ If you try to use the app after removing this package, you will notice that none
 
 ### Defining methods
 
-First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
+First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Optimistic UI_.
 
 {{> DiffBox tutorialName="simple-todos" step="10.2"}}
 
diff --git a/content/react/step10.md b/content/react/step10.md
index 08b4907..71bf30e 100644
--- a/content/react/step10.md
+++ b/content/react/step10.md
@@ -16,7 +16,7 @@ If you try to use the app after removing this package, you will notice that none
 
 ### Defining methods
 
-First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Latency compensation_.
+First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Optimistic UI_.
 
 {{> DiffBox step="10.2" tutorialName="simple-todos-react"}}
 
-- 
2.13.6 (Apple Git-96)


From 2181291d099784602f9aeaa09c90b87fa9d1bc1c Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Tue, 1 Sep 2015 17:48:48 -0700
Subject: [PATCH 078/164] Add call for feedback on GitHub

---
 content/angular/step01.md | 2 +-
 content/blaze/step01.md   | 2 +-
 content/react/step01.md   | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/content/angular/step01.md b/content/angular/step01.md
index 3bc17c3..9e499ae 100644
--- a/content/angular/step01.md
+++ b/content/angular/step01.md
@@ -29,5 +29,5 @@ Open your web browser and go to `http://localhost:3000` to see the app running.
 
 You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `simple-todos-angular.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
 
-Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application.
+Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application. If you find a bug or error in the tutorial, please file an issue or submit a pull request [on GitHub](https://github.com/meteor/tutorials).
 {{/template}}
diff --git a/content/blaze/step01.md b/content/blaze/step01.md
index 0cf3a90..8b0a5d6 100644
--- a/content/blaze/step01.md
+++ b/content/blaze/step01.md
@@ -29,5 +29,5 @@ Open your web browser and go to `http://localhost:3000` to see the app running.
 
 You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `simple-todos.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
 
-Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application.
+Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application. If you find a bug or error in the tutorial, please file an issue or submit a pull request [on GitHub](https://github.com/meteor/tutorials).
 {{/template}}
diff --git a/content/react/step01.md b/content/react/step01.md
index 9809d82..8365993 100644
--- a/content/react/step01.md
+++ b/content/react/step01.md
@@ -29,5 +29,5 @@ Open your web browser and go to `http://localhost:3000` to see the app running.
 
 You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `simple-todos-react.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
 
-Now that you have some experience editing the files in your Meteor app, let's start working on a simple React todo list application.
+Now that you have some experience editing the files in your Meteor app, let's start working on a simple React todo list application. If you find a bug or error in the tutorial, please file an issue or submit a pull request [on GitHub](https://github.com/meteor/tutorials).
 {{/template}}
-- 
2.13.6 (Apple Git-96)


From a2d52f0fd896597da5fd844926bad28dbd14d310 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 14 Sep 2015 15:18:20 -0700
Subject: [PATCH 079/164] Bump dependency versions

---
 package.js | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/package.js b/package.js
index 7db3c6d..ed0e6e6 100644
--- a/package.js
+++ b/package.js
@@ -5,7 +5,7 @@ Package.describe({
 });
 
 Package.onUse(function (api) {
-  api.versionsFrom('1.1.0.2');
+  api.versionsFrom('1.2-rc.14');
   api.use([
     'simple:markdown-templating@1.2.7',
     'templating',
@@ -15,7 +15,7 @@ Package.onUse(function (api) {
     'reactive-var',
     'less',
     'mdg:tutorial-step-diff-compiler@0.1.0',
-    'mdg:tutorial-diff-box@0.1.1',
+    'mdg:tutorial-diff-box@0.3.0',
     'mdg:tutorial-registry@0.1.1'
   ]);
 
-- 
2.13.6 (Apple Git-96)


From 10b579b64423f40e29ce9f1bbeb40724807df106 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 21 Sep 2015 13:54:44 -0400
Subject: [PATCH 080/164] Link to ecmascript README

---
 content/react/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/react/step02.md b/content/react/step02.md
index 0ba5786..7af05f7 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -68,7 +68,7 @@ If you haven't tried next-generation JavaScript features yet, some of the syntax
 2. Shorthand for methods: `render() { ... }`
 3. `const` and `let` instead of `var`
 
-Read more about these features here: 
+Read about the features that Meteor supports in the [ecmascript README](https://github.com/meteor/meteor/blob/master/packages/ecmascript/README.md). For more information about ECMAScript 2015, see some of the articles below:
 
 * [Luke Hoban's "ES6 features"](http://git.io/es6features)
 
-- 
2.13.6 (Apple Git-96)


From c52289a0935ef63cbe62e232ba638c8184f92191 Mon Sep 17 00:00:00 2001
From: Uri Goldshtein <uri.goldshtein@gmail.com>
Date: Sun, 27 Sep 2015 16:40:08 +0300
Subject: [PATCH 081/164] Update angular tutorial

---
 content/angular/step09.md     |  24 +-
 generated/angular.multi.patch | 735 +++++++++++++++++++++++-------------------
 2 files changed, 420 insertions(+), 339 deletions(-)

diff --git a/content/angular/step09.md b/content/angular/step09.md
index a83cfad..94e39f2 100644
--- a/content/angular/step09.md
+++ b/content/angular/step09.md
@@ -10,17 +10,25 @@ To enable the accounts system and UI, we need to add the relevant packages. In y
 meteor add accounts-ui accounts-password
 ```
 
-In the HTML, right under the checkbox, include the following code to add a login dropdown:
+Now let's add our authentication UI.
 
-{{> DiffBox tutorialName="simple-todos-angular" step="9.2"}}
+We will use the powerful [blaze-template](http://angular-meteor.com/api/blaze-template) directive which let's you add **any Blaze template** into your Angular templates.
+We are adding `loginButtons` which is the Blaze template for user authentication flow supplied with the `accounts-ui` package.
 
-The powerful [meteor-include](http://angular-meteor.com/api/meteor-include) directive let's you add **any Blaze template** into your Angular templates.
-We are adding `loginButtons` which is the Blaze template for user authentication flow supplied with the accounts-ui package.
+First let's add the package to include that directive:
 
-Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
+```bash
+meteor add urigo:angular-blaze-template
+```
+
+In the HTML, right under the checkbox, include the following code to add a login dropdown:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="9.3"}}
 
+Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="9.4"}}
+
 Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
 
 1. Only display the new task input field to logged in users
@@ -33,15 +41,15 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `addTask` function:
 
-{{> DiffBox tutorialName="simple-todos-angular" step="9.4"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="9.5"}}
 
 Then, in our HTML, add an `ng-show` directive to only show the form when there is a logged in user:
 
-{{> DiffBox tutorialName="simple-todos-angular" step="9.5"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="9.6"}}
 
 Finally, add a statement to display the `username` field on each task right before the text:
 
-{{> DiffBox tutorialName="simple-todos-angular" step="9.6"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="9.7"}}
 
 Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
 
diff --git a/generated/angular.multi.patch b/generated/angular.multi.patch
index c7264ac..e72a843 100644
--- a/generated/angular.multi.patch
+++ b/generated/angular.multi.patch
@@ -1,20 +1,20 @@
-From b18f1aaf683e5f5c5b20212b43a4fef97c1c7664 Mon Sep 17 00:00:00 2001
+From 66fa84a3a7722f0ad2053eae1faf32a5e31dc886 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Wed, 13 May 2015 14:45:15 -0700
-Subject: [PATCH 01/38] Step 1: Run `meteor create`
+Date: Sun, 27 Sep 2015 14:18:50 +0300
+Subject: [PATCH 01/39] Step 1: Run `meteor create`
 
 ---
- .meteor/.finished-upgraders |  8 ++++++++
+ .meteor/.finished-upgraders | 12 +++++++++
  .meteor/.gitignore          |  1 +
- .meteor/.id                 |  7 +++++++
- .meteor/packages            |  9 +++++++++
+ .meteor/.id                 |  7 +++++
+ .meteor/packages            | 20 ++++++++++++++
  .meteor/platforms           |  2 ++
  .meteor/release             |  1 +
- .meteor/versions            | 48 +++++++++++++++++++++++++++++++++++++++++++++
+ .meteor/versions            | 66 +++++++++++++++++++++++++++++++++++++++++++++
  simple-todos-angular.css    |  1 +
- simple-todos-angular.html   | 14 +++++++++++++
- simple-todos-angular.js     | 23 ++++++++++++++++++++++
- 10 files changed, 114 insertions(+)
+ simple-todos-angular.html   | 14 ++++++++++
+ simple-todos-angular.js     | 23 ++++++++++++++++
+ 10 files changed, 147 insertions(+)
  create mode 100644 .meteor/.finished-upgraders
  create mode 100644 .meteor/.gitignore
  create mode 100644 .meteor/.id
@@ -28,10 +28,10 @@ Subject: [PATCH 01/38] Step 1: Run `meteor create`
 
 diff --git a/.meteor/.finished-upgraders b/.meteor/.finished-upgraders
 new file mode 100644
-index 0000000..8a76103
+index 0000000..61ee313
 --- /dev/null
 +++ b/.meteor/.finished-upgraders
-@@ -0,0 +1,8 @@
+@@ -0,0 +1,12 @@
 +# This file contains information which helps Meteor properly upgrade your
 +# app when you run 'meteor update'. You should check it into version control
 +# with your project.
@@ -40,6 +40,10 @@ index 0000000..8a76103
 +notices-for-0.9.1
 +0.9.4-platform-file
 +notices-for-facebook-graph-api-2
++1.2.0-standard-minifiers-package
++1.2.0-meteor-platform-split
++1.2.0-cordova-changes
++1.2.0-breaking-changes
 diff --git a/.meteor/.gitignore b/.meteor/.gitignore
 new file mode 100644
 index 0000000..4083037
@@ -49,7 +53,7 @@ index 0000000..4083037
 +local
 diff --git a/.meteor/.id b/.meteor/.id
 new file mode 100644
-index 0000000..efd78f0
+index 0000000..fef25df
 --- /dev/null
 +++ b/.meteor/.id
 @@ -0,0 +1,7 @@
@@ -59,22 +63,33 @@ index 0000000..efd78f0
 +#   - ensuring you don't accidentally deploy one app on top of another
 +#   - providing package authors with aggregated statistics
 +
-+1b8dzlr112p5wug6xm9d
++1szqmjtlgnfrb1a0907w
 diff --git a/.meteor/packages b/.meteor/packages
 new file mode 100644
-index 0000000..99704e0
+index 0000000..a9f8340
 --- /dev/null
 +++ b/.meteor/packages
-@@ -0,0 +1,9 @@
+@@ -0,0 +1,20 @@
 +# Meteor packages used by this project, one per line.
 +# Check this file (and the other files in this directory) into your repository.
 +#
 +# 'meteor add' and 'meteor remove' will edit this file for you,
 +# but you can also edit it by hand.
 +
-+meteor-platform
-+autopublish
-+insecure
++meteor-base             # Packages every Meteor app needs to have
++mobile-experience       # Packages for a great mobile UX
++mongo                   # The database Meteor supports right now
++blaze-html-templates    # Compile .html files into Meteor Blaze views
++session                 # Client-side reactive dictionary for your app
++jquery                  # Helpful client-side library
++tracker                 # Meteor's client-side reactive programming library
++
++standard-minifiers      # JS/CSS minifiers run for production mode
++es5-shim                # ECMAScript 5 compatibility for older browsers.
++ecmascript              # Enable ECMAScript2015+ syntax in app code
++
++autopublish             # Publish all data to the clients (for prototyping)
++insecure                # Allow all DB writes from clients (for prototyping)
 diff --git a/.meteor/platforms b/.meteor/platforms
 new file mode 100644
 index 0000000..efeba1b
@@ -85,65 +100,83 @@ index 0000000..efeba1b
 +browser
 diff --git a/.meteor/release b/.meteor/release
 new file mode 100644
-index 0000000..dab6b55
+index 0000000..238bbcc
 --- /dev/null
 +++ b/.meteor/release
 @@ -0,0 +1 @@
-+METEOR@1.1.0.2
++METEOR@1.2.0.1
 diff --git a/.meteor/versions b/.meteor/versions
 new file mode 100644
-index 0000000..410e1d9
+index 0000000..e378b68
 --- /dev/null
 +++ b/.meteor/versions
-@@ -0,0 +1,48 @@
-+autopublish@1.0.3
-+autoupdate@1.2.1
-+base64@1.0.3
-+binary-heap@1.0.3
-+blaze@2.1.2
-+blaze-tools@1.0.3
-+boilerplate-generator@1.0.3
-+callback-hook@1.0.3
-+check@1.0.5
-+ddp@1.1.0
-+deps@1.0.7
-+ejson@1.0.6
-+fastclick@1.0.3
-+geojson-utils@1.0.3
-+html-tools@1.0.4
-+htmljs@1.0.4
-+http@1.1.0
-+id-map@1.0.3
-+insecure@1.0.3
-+jquery@1.11.3_2
-+json@1.0.3
-+launch-screen@1.0.2
-+livedata@1.0.13
-+logging@1.0.7
-+meteor@1.1.6
-+meteor-platform@1.2.2
-+minifiers@1.1.5
-+minimongo@1.0.8
-+mobile-status-bar@1.0.3
-+mongo@1.1.0
-+observe-sequence@1.0.6
-+ordered-dict@1.0.3
-+random@1.0.3
-+reactive-dict@1.1.0
-+reactive-var@1.0.5
-+reload@1.1.3
-+retry@1.0.3
-+routepolicy@1.0.5
-+session@1.1.0
-+spacebars@1.0.6
-+spacebars-compiler@1.0.6
-+templating@1.1.1
-+tracker@1.0.7
-+ui@1.0.6
-+underscore@1.0.3
-+url@1.0.4
-+webapp@1.2.0
-+webapp-hashing@1.0.3
+@@ -0,0 +1,66 @@
++autopublish@1.0.4
++autoupdate@1.2.3
++babel-compiler@5.8.24_1
++babel-runtime@0.1.4
++base64@1.0.4
++binary-heap@1.0.4
++blaze@2.1.3
++blaze-html-templates@1.0.1
++blaze-tools@1.0.4
++boilerplate-generator@1.0.4
++caching-compiler@1.0.0
++caching-html-compiler@1.0.1
++callback-hook@1.0.4
++check@1.0.6
++ddp@1.2.2
++ddp-client@1.2.1
++ddp-common@1.2.1
++ddp-server@1.2.1
++deps@1.0.9
++diff-sequence@1.0.1
++ecmascript@0.1.4
++ecmascript-collections@0.1.6
++ejson@1.0.7
++es5-shim@4.1.13
++fastclick@1.0.7
++geojson-utils@1.0.4
++hot-code-push@1.0.0
++html-tools@1.0.5
++htmljs@1.0.5
++http@1.1.1
++id-map@1.0.4
++insecure@1.0.4
++jquery@1.11.4
++launch-screen@1.0.4
++livedata@1.0.15
++logging@1.0.8
++meteor@1.1.7
++meteor-base@1.0.1
++minifiers@1.1.7
++minimongo@1.0.9
++mobile-experience@1.0.1
++mobile-status-bar@1.0.6
++mongo@1.1.1
++mongo-id@1.0.1
++npm-mongo@1.4.39_1
++observe-sequence@1.0.7
++ordered-dict@1.0.4
++promise@0.4.8
++random@1.0.4
++reactive-dict@1.1.1
++reactive-var@1.0.6
++reload@1.1.4
++retry@1.0.4
++routepolicy@1.0.6
++session@1.1.1
++spacebars@1.0.7
++spacebars-compiler@1.0.7
++standard-minifiers@1.0.0
++templating@1.1.3
++templating-tools@1.0.0
++tracker@1.0.8
++ui@1.0.8
++underscore@1.0.4
++url@1.0.5
++webapp@1.2.2
++webapp-hashing@1.0.5
 diff --git a/simple-todos-angular.css b/simple-todos-angular.css
 new file mode 100644
 index 0000000..b6b4052
@@ -201,13 +234,13 @@ index 0000000..4f8c65d
 +  });
 +}
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 3da58d0f1228342c24254b0268ae04156c5009e9 Mon Sep 17 00:00:00 2001
+From 16b95fd27ab756495e1bdf55c40800ede348ae7c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 12:34:04 +0300
-Subject: [PATCH 02/38] Step 2.1: Add the Angular package
+Date: Sun, 27 Sep 2015 14:27:04 +0300
+Subject: [PATCH 02/39] Step 2.1: Add the Angular package
 
 ---
  .meteor/packages | 1 +
@@ -215,55 +248,48 @@ Subject: [PATCH 02/38] Step 2.1: Add the Angular package
  2 files changed, 5 insertions(+)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 99704e0..fa5ef7a 100644
+index a9f8340..03949b6 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -7,3 +7,4 @@
- meteor-platform
- autopublish
- insecure
-+urigo:angular
+@@ -18,3 +18,4 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
+ 
+ autopublish             # Publish all data to the clients (for prototyping)
+ insecure                # Allow all DB writes from clients (for prototyping)
++angular
 diff --git a/.meteor/versions b/.meteor/versions
-index 410e1d9..70b0764 100644
+index e378b68..a702ca4 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -1,3 +1,4 @@
-+angular:angular@1.4.2
- autopublish@1.0.3
- autoupdate@1.2.1
- base64@1.0.3
-@@ -7,6 +8,7 @@ blaze-tools@1.0.3
- boilerplate-generator@1.0.3
- callback-hook@1.0.3
- check@1.0.5
+@@ -1,3 +1,5 @@
++angular@1.0.0-rc.11
++angular:angular@1.4.6
+ autopublish@1.0.4
+ autoupdate@1.2.3
+ babel-compiler@5.8.24_1
+@@ -12,6 +14,7 @@ caching-compiler@1.0.0
+ caching-html-compiler@1.0.1
+ callback-hook@1.0.4
+ check@1.0.6
 +dburles:mongo-collection-instances@0.3.4
- ddp@1.1.0
- deps@1.0.7
- ejson@1.0.6
-@@ -19,6 +21,7 @@ id-map@1.0.3
- insecure@1.0.3
- jquery@1.11.3_2
- json@1.0.3
+ ddp@1.2.2
+ ddp-client@1.2.1
+ ddp-common@1.2.1
+@@ -31,6 +34,7 @@ http@1.1.1
+ id-map@1.0.4
+ insecure@1.0.4
+ jquery@1.11.4
 +lai:collection-extensions@0.1.4
- launch-screen@1.0.2
- livedata@1.0.13
- logging@1.0.7
-@@ -43,6 +46,7 @@ templating@1.1.1
- tracker@1.0.7
- ui@1.0.6
- underscore@1.0.3
-+urigo:angular@0.9.2
- url@1.0.4
- webapp@1.2.0
- webapp-hashing@1.0.3
+ launch-screen@1.0.4
+ livedata@1.0.15
+ logging@1.0.8
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 579e10de48cd091522b880c6280fcfcc3ec81ed5 Mon Sep 17 00:00:00 2001
+From 33e0dfed2e4708603d083a73d4552a60f2f5c545 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:44:07 +0300
-Subject: [PATCH 03/38] Step 2.2: Link main file to Angular templates
+Subject: [PATCH 03/39] Step 2.2: Link main file to Angular templates
 
 ---
  simple-todos-angular.html | 14 ++++----------
@@ -293,13 +319,13 @@ index 30ca9b0..f1391a5 100644
 -  <p>You've pressed the button {{counter}} times.</p>
 -</template>
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 82fd8e01f18fa64faca04535956815e5dc3f4ea3 Mon Sep 17 00:00:00 2001
+From 62bd145d7c4ae0a31288c6d65c451ee5cd680997 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:46:44 +0300
-Subject: [PATCH 04/38] Step 2.3: Init Angular app and controller
+Subject: [PATCH 04/39] Step 2.3: Init Angular app and controller
 
 ---
  simple-todos-angular.js | 29 +++++++++++------------------
@@ -345,13 +371,13 @@ index 4f8c65d..fa676f2 100644
 +  }]);
  }
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 7ec04bb81bd70c6926b42f7ee6f9f9995fe45ece Mon Sep 17 00:00:00 2001
+From 6d00ee43390d45ad17b463fc763b051bcc65b86d Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 12:48:44 +0300
-Subject: [PATCH 05/38] Step 2.4: First Angular template
+Date: Sun, 27 Sep 2015 14:32:33 +0300
+Subject: [PATCH 05/39] Step 2.4: First Angular template
 
 ---
  todos-list.ng.html | 9 +++++++++
@@ -360,7 +386,7 @@ Subject: [PATCH 05/38] Step 2.4: First Angular template
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
 new file mode 100644
-index 0000000..3dcfae9
+index 0000000..9df43f5
 --- /dev/null
 +++ b/todos-list.ng.html
 @@ -0,0 +1,9 @@
@@ -369,18 +395,18 @@ index 0000000..3dcfae9
 +    <h1>Todo List</h1>
 +  </header>
 +
-+  <ul ng-repeat="task in tasks">
-+    <li>{{task.text}}</li>
++  <ul>
++    <li ng-repeat="task in tasks">{{task.text}}</li>
 +  </ul>
 +</div>
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From f7cce808089dc131114eedd453292b95731690ac Mon Sep 17 00:00:00 2001
+From 20bd3e588a45f479f5979780d968e8115f74d283 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:50:26 +0300
-Subject: [PATCH 06/38] Step 2.5: Add CSS
+Subject: [PATCH 06/39] Step 2.5: Add CSS
 
 ---
  simple-todos-angular.css | 126 +++++++++++++++++++++++++++++++++++++++++++++++
@@ -519,13 +545,13 @@ index b6b4052..0bca5d2 100644
 +}
 +
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 5589cc40e89bf8ae25a31e69ed86c9c7ebf0073a Mon Sep 17 00:00:00 2001
+From fe4c8778be9941cf31c4360fe5edd44b71cd7314 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:56:31 +0300
-Subject: [PATCH 07/38] Step 3.1: Replace the static array with a Collection
+Subject: [PATCH 07/39] Step 3.1: Replace the static array with a Collection
 
 ---
  simple-todos-angular.js | 14 ++++++--------
@@ -559,20 +585,20 @@ index fa676f2..9a9b236 100644
 +    }]);
  }
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From ab09bcf16256968772baf78d792ee3802230a615 Mon Sep 17 00:00:00 2001
+From b9e31524b6825ae75df8eddecdbfc388d38e6619 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:58:59 +0300
-Subject: [PATCH 08/38] Step 4.1: Add new task form to template
+Subject: [PATCH 08/39] Step 4.1: Add new task form to template
 
 ---
  todos-list.ng.html | 6 ++++++
  1 file changed, 6 insertions(+)
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 3dcfae9..6b6e0e0 100644
+index 9df43f5..52cdfb2 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
 @@ -1,6 +1,12 @@
@@ -587,15 +613,15 @@ index 3dcfae9..6b6e0e0 100644
 +    </form>
    </header>
  
-   <ul ng-repeat="task in tasks">
+   <ul>
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 3ba891e95d2ebb77e99acb525b79506fc516a1cb Mon Sep 17 00:00:00 2001
+From cfc2a3af1d558a88ed7b8243efcc26e3a9d43460 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:00:30 +0300
-Subject: [PATCH 09/38] Step 4.2: Create Add Task scope function
+Subject: [PATCH 09/39] Step 4.2: Create Add Task scope function
 
 ---
  simple-todos-angular.js | 7 +++++++
@@ -619,13 +645,13 @@ index 9a9b236..e9dc878 100644
      }]);
  }
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 7d3a03a08b48b1a1f0ac492d7f6685206b459d36 Mon Sep 17 00:00:00 2001
+From d51818f027309c233b6c82a0691d74da5a614864 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:01:36 +0300
-Subject: [PATCH 10/38] Step 4.3: Sort task list by date
+Subject: [PATCH 10/39] Step 4.3: Sort task list by date
 
 ---
  simple-todos-angular.js | 4 +++-
@@ -647,28 +673,28 @@ index e9dc878..36ab6d1 100644
        $scope.addTask = function (newTask) {
          $scope.tasks.push( {
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From ade01c58b021c1fc432b323bbeaa78ab9f72b941 Mon Sep 17 00:00:00 2001
+From 89f31a3e90112d31729b99d1fc8e5afe1ca5ce2f Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:04:21 +0300
-Subject: [PATCH 11/38] Step 5.1: Add done and delete buttons to task
+Subject: [PATCH 11/39] Step 5.1: Add done and delete buttons to task
 
 ---
  todos-list.ng.html | 8 +++++++-
  1 file changed, 7 insertions(+), 1 deletion(-)
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 6b6e0e0..bda3dba 100644
+index 52cdfb2..37b7a4a 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
 @@ -10,6 +10,12 @@
    </header>
  
-   <ul ng-repeat="task in tasks">
--    <li>{{task.text}}</li>
-+    <li ng-class="{'checked': task.checked}">
+   <ul>
+-    <li ng-repeat="task in tasks">{{task.text}}</li>
++    <li ng-repeat="task in tasks" ng-class="{'checked': task.checked}">
 +      <button class="delete" ng-click="tasks.remove(task)">&times;</button>
 +
 +      <input type="checkbox" ng-model="task.checked" class="toggle-checked" />
@@ -678,13 +704,13 @@ index 6b6e0e0..bda3dba 100644
    </ul>
  </div>
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 8466c1cdf7f7afc7f2f93dce2fa4d514c59f7130 Mon Sep 17 00:00:00 2001
+From e0689052b0c5547ea709f8de698617eb63691657 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:08:33 +0300
-Subject: [PATCH 12/38] Step 7.1: Remove ng-app
+Subject: [PATCH 12/39] Step 7.1: Remove ng-app
 
 ---
  simple-todos-angular.html | 3 +--
@@ -704,13 +730,13 @@ index f1391a5..e43eceb 100644
        ng-controller="TodosListCtrl">
  </body>
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 85e80627bfb80b13c21367c5f77cdcfdf5fadbd0 Mon Sep 17 00:00:00 2001
+From 1d0204da487d07056d2a491dbb2249517884abed Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:11:07 +0300
-Subject: [PATCH 13/38] Step 7.2: Bootstrap Angular to mobile as well
+Subject: [PATCH 13/39] Step 7.2: Bootstrap Angular to mobile as well
 
 ---
  simple-todos-angular.js | 9 +++++++++
@@ -737,20 +763,20 @@ index 36ab6d1..b002918 100644
      function ($scope, $meteor) {
  
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 9b12d06c6242558c1077ad60ab07aefcecd3814f Mon Sep 17 00:00:00 2001
+From 05e883af174064662e57b66e29a3f0adc2eeb484 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:13:14 +0300
-Subject: [PATCH 14/38] Step 8.1: Add hideComplete checkbox to template
+Subject: [PATCH 14/39] Step 8.1: Add hideComplete checkbox to template
 
 ---
  todos-list.ng.html | 5 +++++
  1 file changed, 5 insertions(+)
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index bda3dba..1049e4a 100644
+index 37b7a4a..4c5a8c7 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
 @@ -2,6 +2,11 @@
@@ -766,13 +792,13 @@ index bda3dba..1049e4a 100644
      <form class="new-task" ng-submit="addTask(newTask); newTask='';">
        <input ng-model="newTask" type="text"
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 919560a990de2a2a370aea6f9e28888f09bd1b6f Mon Sep 17 00:00:00 2001
+From f04549f207754bcc187216363e086b96e4532978 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:14:54 +0300
-Subject: [PATCH 15/38] Step 8.2: Watch hideCompleted and change the query
+Subject: [PATCH 15/39] Step 8.2: Watch hideCompleted and change the query
  variable
 
 ---
@@ -797,13 +823,13 @@ index b002918..e759172 100644
      }]);
  }
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 5adc4b31da9476a898df3db649a4aa7418b0b7d7 Mon Sep 17 00:00:00 2001
+From 67416034b2d4f8974f95bf93cfd1ead4bd290db4 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:17:07 +0300
-Subject: [PATCH 16/38] Step 8.3: Change the Collection to use query parameter
+Subject: [PATCH 16/39] Step 8.3: Change the Collection to use query parameter
 
 ---
  simple-todos-angular.js | 4 ++--
@@ -825,13 +851,13 @@ index e759172..071be1f 100644
  
        $scope.addTask = function (newTask) {
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From ea6ca654274d1e5a22ec76a2a33c32c388c4ce75 Mon Sep 17 00:00:00 2001
+From dd6fb8fe927779fd2b501b36cf72c3c266ae21b5 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:17:59 +0300
-Subject: [PATCH 17/38] Step 8.4: Make query parameter reactive
+Subject: [PATCH 17/39] Step 8.4: Make query parameter reactive
 
 ---
  simple-todos-angular.js | 2 +-
@@ -851,13 +877,13 @@ index 071be1f..24c55fa 100644
  
        $scope.addTask = function (newTask) {
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From f0fb1566f2dfdcd206ec6efe2e274090a1c4a5a8 Mon Sep 17 00:00:00 2001
+From e094f1b07119eb477f1a29a15a66adb7747ec394 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:19:38 +0300
-Subject: [PATCH 18/38] Step 8.5: Add incompleteCount to scope
+Subject: [PATCH 18/39] Step 8.5: Add incompleteCount to scope
 
 ---
  simple-todos-angular.js | 4 ++++
@@ -878,20 +904,20 @@ index 24c55fa..5934036 100644
      }]);
  }
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 3d4d598cac0c28b9c527545b36b3d7376a8c104c Mon Sep 17 00:00:00 2001
+From 319bc077190a51ce9be4b423df67d6ff48522099 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:21:13 +0300
-Subject: [PATCH 19/38] Step 8.6: Add incompleteCount to header
+Subject: [PATCH 19/39] Step 8.6: Add incompleteCount to header
 
 ---
  todos-list.ng.html | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 1049e4a..de9a630 100644
+index 4c5a8c7..a515c63 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
 @@ -1,6 +1,6 @@
@@ -903,115 +929,161 @@ index 1049e4a..de9a630 100644
      <label class="hide-completed">
        <input type="checkbox" ng-model="$parent.hideCompleted"/>
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 452eb1f509886d58662fee94da75dffaeab9abc5 Mon Sep 17 00:00:00 2001
+From b41def3f80c384bd2687d4470ef305ff0cb3a5d0 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:22:29 +0300
-Subject: [PATCH 20/38] Step 9.1: Add accounts-ui and accounts-password
+Date: Sun, 27 Sep 2015 14:59:26 +0300
+Subject: [PATCH 20/39] Step 9.1: Add accounts-ui and accounts-password
  packages
 
 ---
  .meteor/packages |  2 ++
- .meteor/versions | 11 +++++++++++
- 2 files changed, 13 insertions(+)
+ .meteor/versions | 13 +++++++++++++
+ 2 files changed, 15 insertions(+)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index fa5ef7a..703dc2c 100644
+index 03949b6..d4fb217 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -8,3 +8,5 @@ meteor-platform
- autopublish
- insecure
- urigo:angular
+@@ -19,3 +19,5 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
+ autopublish             # Publish all data to the clients (for prototyping)
+ insecure                # Allow all DB writes from clients (for prototyping)
+ angular
 +accounts-ui
 +accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index 70b0764..de04912 100644
+index a702ca4..2e8f00b 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
 @@ -1,3 +1,7 @@
-+accounts-base@1.2.0
-+accounts-password@1.1.1
-+accounts-ui@1.1.5
-+accounts-ui-unstyled@1.1.7
- angular:angular@1.4.2
- autopublish@1.0.3
- autoupdate@1.2.1
-@@ -12,6 +16,7 @@ dburles:mongo-collection-instances@0.3.4
- ddp@1.1.0
- deps@1.0.7
- ejson@1.0.6
-+email@1.0.6
- fastclick@1.0.3
- geojson-utils@1.0.3
- html-tools@1.0.4
-@@ -23,7 +28,9 @@ jquery@1.11.3_2
- json@1.0.3
++accounts-base@1.2.1
++accounts-password@1.1.3
++accounts-ui@1.1.6
++accounts-ui-unstyled@1.1.8
+ angular@1.0.0-rc.11
+ angular:angular@1.4.6
+ autopublish@1.0.4
+@@ -18,12 +22,14 @@ dburles:mongo-collection-instances@0.3.4
+ ddp@1.2.2
+ ddp-client@1.2.1
+ ddp-common@1.2.1
++ddp-rate-limiter@1.0.0
+ ddp-server@1.2.1
+ deps@1.0.9
+ diff-sequence@1.0.1
+ ecmascript@0.1.4
+ ecmascript-collections@0.1.6
+ ejson@1.0.7
++email@1.0.7
+ es5-shim@4.1.13
+ fastclick@1.0.7
+ geojson-utils@1.0.4
+@@ -36,7 +42,9 @@ insecure@1.0.4
+ jquery@1.11.4
  lai:collection-extensions@0.1.4
- launch-screen@1.0.2
-+less@1.0.14
- livedata@1.0.13
-+localstorage@1.0.3
- logging@1.0.7
- meteor@1.1.6
- meteor-platform@1.2.2
-@@ -31,6 +38,7 @@ minifiers@1.1.5
- minimongo@1.0.8
- mobile-status-bar@1.0.3
- mongo@1.1.0
+ launch-screen@1.0.4
++less@2.5.0_2
+ livedata@1.0.15
++localstorage@1.0.5
+ logging@1.0.8
+ meteor@1.1.7
+ meteor-base@1.0.1
+@@ -46,19 +54,24 @@ mobile-experience@1.0.1
+ mobile-status-bar@1.0.6
+ mongo@1.1.1
+ mongo-id@1.0.1
 +npm-bcrypt@0.7.8_2
- observe-sequence@1.0.6
- ordered-dict@1.0.3
- random@1.0.3
-@@ -39,9 +47,12 @@ reactive-var@1.0.5
- reload@1.1.3
- retry@1.0.3
- routepolicy@1.0.5
-+service-configuration@1.0.4
- session@1.1.0
-+sha@1.0.3
- spacebars@1.0.6
- spacebars-compiler@1.0.6
-+srp@1.0.3
- templating@1.1.1
- tracker@1.0.7
- ui@1.0.6
+ npm-mongo@1.4.39_1
+ observe-sequence@1.0.7
+ ordered-dict@1.0.4
+ promise@0.4.8
+ random@1.0.4
++rate-limit@1.0.0
+ reactive-dict@1.1.1
+ reactive-var@1.0.6
+ reload@1.1.4
+ retry@1.0.4
+ routepolicy@1.0.6
++service-configuration@1.0.5
+ session@1.1.1
++sha@1.0.4
+ spacebars@1.0.7
+ spacebars-compiler@1.0.7
++srp@1.0.4
+ standard-minifiers@1.0.0
+ templating@1.1.3
+ templating-tools@1.0.0
+-- 
+2.3.8 (Apple Git-58)
+
+
+From 5f5816cf03c6bf709862f580bca1b955567fc81a Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Sun, 27 Sep 2015 15:08:35 +0300
+Subject: [PATCH 21/39] Step 9.2: Add the urigo:angular-blaze-template package
+
+---
+ .meteor/packages | 1 +
+ .meteor/versions | 1 +
+ 2 files changed, 2 insertions(+)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index d4fb217..2833ad1 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -21,3 +21,4 @@ insecure                # Allow all DB writes from clients (for prototyping)
+ angular
+ accounts-ui
+ accounts-password
++urigo:angular-blaze-template
+diff --git a/.meteor/versions b/.meteor/versions
+index 2e8f00b..9a60e0e 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -78,6 +78,7 @@ templating-tools@1.0.0
+ tracker@1.0.8
+ ui@1.0.8
+ underscore@1.0.4
++urigo:angular-blaze-template@0.0.1
+ url@1.0.5
+ webapp@1.2.2
+ webapp-hashing@1.0.5
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 35a313074e5780255f2c3010163a2dec2411afac Mon Sep 17 00:00:00 2001
+From e9c7eaa065b5046a7ec4f9d138911ecfd486a18f Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:24:29 +0300
-Subject: [PATCH 21/38] Step 9.2: Add Blaze loginButtons template to HTML
+Date: Sun, 27 Sep 2015 15:16:54 +0300
+Subject: [PATCH 22/39] Step 9.3: Add Blaze loginButtons template to HTML
 
 ---
  todos-list.ng.html | 2 ++
  1 file changed, 2 insertions(+)
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index de9a630..e4c0123 100644
+index a515c63..5fed06a 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
 @@ -7,6 +7,8 @@
        Hide Completed Tasks
      </label>
  
-+    <meteor-include src="loginButtons"></meteor-include>
++    <blaze-template name="loginButtons"></blaze-template>
 +
      <!-- add a form below the h1 -->
      <form class="new-task" ng-submit="addTask(newTask); newTask='';">
        <input ng-model="newTask" type="text"
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 253abff3918109b97f642067ec222cf529b09c6c Mon Sep 17 00:00:00 2001
+From ce33db4e17f0e04af05762e0e14395b899dbea83 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:27:12 +0300
-Subject: [PATCH 22/38] Step 9.3: Configure accounts UI to use usernames
+Subject: [PATCH 23/39] Step 9.4: Configure accounts UI to use usernames
  instead of email
 
 ---
@@ -1034,13 +1106,13 @@ index 5934036..0c2d6c1 100644
    angular.module('simple-todos',['angular-meteor']);
  
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 8210ff2c37a8b9ccb6b9750aa9d0df94f4e59a8a Mon Sep 17 00:00:00 2001
+From 365ac0ccbb0f01e874330deb922966a5fd6b16a2 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:29:48 +0300
-Subject: [PATCH 23/38] Step 9.4: Add owner and username to created task
+Subject: [PATCH 24/39] Step 9.5: Add owner and username to created task
 
 ---
  simple-todos-angular.js | 8 +++++---
@@ -1067,24 +1139,24 @@ index 0c2d6c1..d0b3829 100644
        };
  
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 78d5f5619d9434035d6451ea4077dfcc8edb54ef Mon Sep 17 00:00:00 2001
+From 4c4f8624c026f182469c084dd15012e83cb97ece Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:31:13 +0300
-Subject: [PATCH 24/38] Step 9.5: Hide new task form if user is not logged in
+Subject: [PATCH 25/39] Step 9.6: Hide new task form if user is not logged in
 
 ---
  todos-list.ng.html | 4 +++-
  1 file changed, 3 insertions(+), 1 deletion(-)
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index e4c0123..aa02851 100644
+index 5fed06a..3b7bd2a 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
 @@ -10,7 +10,9 @@
-     <meteor-include src="loginButtons"></meteor-include>
+     <blaze-template name="loginButtons"></blaze-template>
  
      <!-- add a form below the h1 -->
 -    <form class="new-task" ng-submit="addTask(newTask); newTask='';">
@@ -1095,20 +1167,20 @@ index e4c0123..aa02851 100644
               name="text" placeholder="Type to add new tasks" />
      </form>
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 5b026977269006ac5ebfda7ceb25923fc4d69ab4 Mon Sep 17 00:00:00 2001
+From 4b61854da8353b09d28aadc8965755ea8bfcb207 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:32:49 +0300
-Subject: [PATCH 25/38] Step 9.6: Add username to the displayed task
+Subject: [PATCH 26/39] Step 9.7: Add username to the displayed task
 
 ---
  todos-list.ng.html | 4 +++-
  1 file changed, 3 insertions(+), 1 deletion(-)
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index aa02851..ddc4777 100644
+index 3b7bd2a..d0bca05 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
 @@ -24,7 +24,9 @@
@@ -1123,13 +1195,13 @@ index aa02851..ddc4777 100644
    </ul>
  </div>
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From a01d86230123f4a46623ddf18775a41ca857e147 Mon Sep 17 00:00:00 2001
+From 2ed0dc78bb0e37cf006c4a3d7bcc4c3fdf4e00d8 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:34:54 +0300
-Subject: [PATCH 26/38] Step 10.1: Remove the insecure package
+Date: Sun, 27 Sep 2015 15:11:50 +0300
+Subject: [PATCH 27/39] Step 10.1: Remove the insecure package
 
 ---
  .meteor/packages | 1 -
@@ -1137,37 +1209,37 @@ Subject: [PATCH 26/38] Step 10.1: Remove the insecure package
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 703dc2c..8798f9d 100644
+index 2833ad1..9c46211 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -6,7 +6,6 @@
+@@ -17,7 +17,6 @@ es5-shim                # ECMAScript 5 compatibility for older browsers.
+ ecmascript              # Enable ECMAScript2015+ syntax in app code
  
- meteor-platform
- autopublish
--insecure
- urigo:angular
+ autopublish             # Publish all data to the clients (for prototyping)
+-insecure                # Allow all DB writes from clients (for prototyping)
+ angular
  accounts-ui
  accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index de04912..38fa8cb 100644
+index 9a60e0e..095b2d0 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -23,7 +23,6 @@ html-tools@1.0.4
- htmljs@1.0.4
- http@1.1.0
- id-map@1.0.3
--insecure@1.0.3
- jquery@1.11.3_2
- json@1.0.3
+@@ -38,7 +38,6 @@ html-tools@1.0.5
+ htmljs@1.0.5
+ http@1.1.1
+ id-map@1.0.4
+-insecure@1.0.4
+ jquery@1.11.4
  lai:collection-extensions@0.1.4
+ launch-screen@1.0.4
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 3adde199e75d84eae82cf51c48f94f8b3ac607f6 Mon Sep 17 00:00:00 2001
+From 046737b0aa21bbb0eb55f92eaa35cd702e80a6e3 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:02:50 +0300
-Subject: [PATCH 27/38] Step 10.2: Add Meteor Methods for add, delete and check
+Subject: [PATCH 28/39] Step 10.2: Add Meteor Methods for add, delete and check
  tasks
 
 ---
@@ -1205,13 +1277,13 @@ index d0b3829..4b12a5e 100644
 +  }
 +});
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From e6e0a9eff07668f5189c9e51b4162eacb858a02d Mon Sep 17 00:00:00 2001
+From b613f470ba414abe5fbc9f0980d2dc7498cf91b2 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:05:25 +0300
-Subject: [PATCH 28/38] Step 10.3: Add scope functions to call the Meteor
+Subject: [PATCH 29/39] Step 10.3: Add scope functions to call the Meteor
  methods
 
 ---
@@ -1247,26 +1319,26 @@ index 4b12a5e..655fe79 100644
  
        $scope.$watch('hideCompleted', function() {
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 33215ecc0a0da5b8aedac04d5ae57f84770b9906 Mon Sep 17 00:00:00 2001
+From 487edb5641c0c52c18432cc33494b8093af8e92b Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:08:04 +0300
-Subject: [PATCH 29/38] Step 10.4: Change template events to call methods
+Subject: [PATCH 30/39] Step 10.4: Change template events to call methods
 
 ---
  todos-list.ng.html | 5 +++--
  1 file changed, 3 insertions(+), 2 deletions(-)
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index ddc4777..ab2270f 100644
+index d0bca05..bdc26ea 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
 @@ -20,9 +20,10 @@
  
-   <ul ng-repeat="task in tasks">
-     <li ng-class="{'checked': task.checked}">
+   <ul>
+     <li ng-repeat="task in tasks" ng-class="{'checked': task.checked}">
 -      <button class="delete" ng-click="tasks.remove(task)">&times;</button>
 +      <button class="delete" ng-click="deleteTask(task)">&times;</button>
  
@@ -1277,13 +1349,13 @@ index ddc4777..ab2270f 100644
        <span class="text">
          <strong>{{task.username}}</strong> - {{task.text}}
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From d14c3f1c5d1e6aebc8daec8b406c9021bbb7afe8 Mon Sep 17 00:00:00 2001
+From 490fe55774d23212b652705826f89918d5c1b677 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 15:09:23 +0300
-Subject: [PATCH 30/38] Step 11.1: Remove the autopublish package
+Date: Sun, 27 Sep 2015 15:25:25 +0300
+Subject: [PATCH 31/39] Step 11.1: Remove the autopublish package
 
 ---
  .meteor/packages | 1 -
@@ -1291,37 +1363,37 @@ Subject: [PATCH 30/38] Step 11.1: Remove the autopublish package
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 8798f9d..2d0433a 100644
+index 9c46211..ff6f9b5 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -5,7 +5,6 @@
- # but you can also edit it by hand.
+@@ -16,7 +16,6 @@ standard-minifiers      # JS/CSS minifiers run for production mode
+ es5-shim                # ECMAScript 5 compatibility for older browsers.
+ ecmascript              # Enable ECMAScript2015+ syntax in app code
  
- meteor-platform
--autopublish
- urigo:angular
+-autopublish             # Publish all data to the clients (for prototyping)
+ angular
  accounts-ui
  accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index 38fa8cb..96bf8b7 100644
+index 095b2d0..f2c82e2 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -3,7 +3,6 @@ accounts-password@1.1.1
- accounts-ui@1.1.5
- accounts-ui-unstyled@1.1.7
- angular:angular@1.4.2
--autopublish@1.0.3
- autoupdate@1.2.1
- base64@1.0.3
- binary-heap@1.0.3
+@@ -4,7 +4,6 @@ accounts-ui@1.1.6
+ accounts-ui-unstyled@1.1.8
+ angular@1.0.0-rc.11
+ angular:angular@1.4.6
+-autopublish@1.0.4
+ autoupdate@1.2.3
+ babel-compiler@5.8.24_1
+ babel-runtime@0.1.4
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From e9afaa4006a2ffcb0b580a6d09b4d1a081fe12dc Mon Sep 17 00:00:00 2001
+From bf31c1c34d6f62f5a2dc90eeda37ff0f5d07086b Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:10:25 +0300
-Subject: [PATCH 31/38] Step 11.2: Add server publish function to tasks
+Subject: [PATCH 32/39] Step 11.2: Add server publish function to tasks
 
 ---
  simple-todos-angular.js | 6 ++++++
@@ -1342,13 +1414,13 @@ index 655fe79..439a148 100644
 +  });
 +}
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From e35c7c06c99042e26219976379ff75eef93876a7 Mon Sep 17 00:00:00 2001
+From e4556e5933dd677b80db347f910232762ffc8edd Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:11:21 +0300
-Subject: [PATCH 32/38] Step 11.3: Subscribe to tasks publication
+Subject: [PATCH 33/39] Step 11.3: Subscribe to tasks publication
 
 ---
  simple-todos-angular.js | 2 ++
@@ -1368,20 +1440,20 @@ index 439a148..6464ff3 100644
          return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
        });
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 52d3d8eff291d72e9d320a5048d05a8ba9b26e01 Mon Sep 17 00:00:00 2001
+From 617d3f90bd1769730851b9623d7e3ae45d31d9f1 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:53:12 +0300
-Subject: [PATCH 33/38] Step 11.4: Add setPrivate button to template
+Subject: [PATCH 34/39] Step 11.4: Add setPrivate button to template
 
 ---
  todos-list.ng.html | 6 ++++++
  1 file changed, 6 insertions(+)
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index ab2270f..61435a2 100644
+index bdc26ea..4674a2c 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
 @@ -25,6 +25,12 @@
@@ -1398,39 +1470,40 @@ index ab2270f..61435a2 100644
          <strong>{{task.username}}</strong> - {{task.text}}
        </span>
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 953c93f072e41324937a7183015579ed4899c90c Mon Sep 17 00:00:00 2001
+From e940423674d77b5bc33a69ad48ab9d5b89871683 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:54:33 +0300
-Subject: [PATCH 34/38] Step 11.5: Add private CSS class to task
+Subject: [PATCH 35/39] Step 11.5: Add private CSS class to task
 
 ---
- todos-list.ng.html | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ todos-list.ng.html | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
 
 diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 61435a2..1799364 100644
+index 4674a2c..6b1281a 100644
 --- a/todos-list.ng.html
 +++ b/todos-list.ng.html
-@@ -19,7 +19,7 @@
+@@ -19,7 +19,8 @@
    </header>
  
-   <ul ng-repeat="task in tasks">
--    <li ng-class="{'checked': task.checked}">
-+    <li ng-class="{'checked': task.checked, 'private': task.private}">
+   <ul>
+-    <li ng-repeat="task in tasks" ng-class="{'checked': task.checked}">
++    <li ng-repeat="task in tasks" 
++        ng-class="{'checked': task.checked, 'private': task.private}">
        <button class="delete" ng-click="deleteTask(task)">&times;</button>
  
        <input type="checkbox" ng-checked="task.checked"
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 3ee9ad2c8830a636f97f44fb5ae6c3f2f1d9d562 Mon Sep 17 00:00:00 2001
+From 8115a811efe74c4c87f2c8b01cfb831657b68645 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 17:06:51 +0300
-Subject: [PATCH 35/38] Step 11.6: Add setPrivate Meteor Method
+Subject: [PATCH 36/39] Step 11.6: Add setPrivate Meteor Method
 
 ---
  simple-todos-angular.js | 10 ++++++++++
@@ -1458,13 +1531,13 @@ index 6464ff3..0bd3853 100644
  });
  
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From 144a2f38e2fcea6c62783b18727f62ea44f02f9a Mon Sep 17 00:00:00 2001
+From 1eafaf21e69a40d4943b5214e6d4b48bbd558e7c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 17:08:29 +0300
-Subject: [PATCH 36/38] Step 11.7: Add setPrivate scope function
+Subject: [PATCH 37/39] Step 11.7: Add setPrivate scope function
 
 ---
  simple-todos-angular.js | 4 ++++
@@ -1486,13 +1559,13 @@ index 0bd3853..bdc75a8 100644
          if ($scope.hideCompleted)
            $scope.query = {checked: {$ne: true}};
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From b9db3806a93e08b1f2952ca6d83070c28d0612a2 Mon Sep 17 00:00:00 2001
+From 5daeeac68b717bac0c665aa20b15f680821e2cce Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:59:53 +0300
-Subject: [PATCH 37/38] Step 11.8: Publish only public and owner's tasks
+Subject: [PATCH 38/39] Step 11.8: Publish only public and owner's tasks
 
 ---
  simple-todos-angular.js | 7 ++++++-
@@ -1516,13 +1589,13 @@ index bdc75a8..a6089ab 100644
    });
  }
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
 
-From e4abba4a80843bb4b626c2d8db4f7c1eeeb375ff Mon Sep 17 00:00:00 2001
+From dffe7b5384c1639b5805c91e95225626fed6d0f4 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 16:02:20 +0300
-Subject: [PATCH 38/38] Step 11.9: Add extra security to methods
+Subject: [PATCH 39/39] Step 11.9: Add extra security to methods
 
 ---
  simple-todos-angular.js | 12 ++++++++++++
@@ -1555,5 +1628,5 @@ index a6089ab..1d371fb 100644
    },
    setPrivate: function (taskId, setToPrivate) {
 -- 
-2.3.2 (Apple Git-55)
+2.3.8 (Apple Git-58)
 
-- 
2.13.6 (Apple Git-96)


From 668dc70184061e0822e6f6d08d140dd49ac648f5 Mon Sep 17 00:00:00 2001
From: Uri Goldshtein <uri.goldshtein@gmail.com>
Date: Mon, 28 Sep 2015 00:59:37 +0300
Subject: [PATCH 082/164] Update angular tutorial to use angular instead of
 urigo:angular

---
 content/angular/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/angular/step02.md b/content/angular/step02.md
index d2bcdb2..0e1416d 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -4,7 +4,7 @@
 To use Angular in our app, we need to add the [angular-meteor package](http://angular-meteor.com/) by typing the following
 command into the command line:
 
-    meteor add urigo:angular
+    meteor add angular
 
 
 To start working on our todos list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
-- 
2.13.6 (Apple Git-96)


From ae67bd41874653ba37f8520410c17b6dfbe22867 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 28 Sep 2015 18:59:48 -0700
Subject: [PATCH 083/164] Update angular tutorial

---
 repos/angular | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/repos/angular b/repos/angular
index e4abba4..dffe7b5 160000
--- a/repos/angular
+++ b/repos/angular
@@ -1 +1 @@
-Subproject commit e4abba4a80843bb4b626c2d8db4f7c1eeeb375ff
+Subproject commit dffe7b5384c1639b5805c91e95225626fed6d0f4
-- 
2.13.6 (Apple Git-96)


From 122eb3a23a26b115ff937da3cd5264a59bad7736 Mon Sep 17 00:00:00 2001
From: Ryan Pollock <ryan@meteor.com>
Date: Mon, 5 Oct 2015 16:23:32 -0700
Subject: [PATCH 084/164] tracking tutorials

---
 content/step00.html | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/content/step00.html b/content/step00.html
index 76e64c1..d1381f1 100644
--- a/content/step00.html
+++ b/content/step00.html
@@ -14,15 +14,14 @@
   Install the latest official Meteor release from
   your terminal:
 
+<div onmousedown="analytics.track('web.install.click-to-copy');">
 ```bash
 curl https://install.meteor.com/ | sh
 ```
+</div>
 
 ### On Windows?
-
-  [Download the official Meteor installer
-  here](https://install.meteor.com/windows).
-
+<a href="https://install.meteor.com/windows" onclick="analytics.track('web.install.windows');">Download the official Meteor installer</a>
 
 ###What Next?
 
-- 
2.13.6 (Apple Git-96)


From 2a1fde63961afc25ff21a17a6b02c22517509491 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 8 Oct 2015 12:15:03 -0700
Subject: [PATCH 085/164] Change heading

To remind people it's the database console we're talking about, not the browser console.
---
 content/shared/explanations.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/shared/explanations.md b/content/shared/explanations.md
index 52247ec..a48263c 100644
--- a/content/shared/explanations.md
+++ b/content/shared/explanations.md
@@ -8,7 +8,7 @@ Creating a new collection is as easy as calling `MyCollection = new Mongo.Collec
 
 {{#template name="step03InsertingTasksFromConsole"}}
 
-### Inserting tasks from the console
+### Inserting tasks from the server-side database console
 
 Items inside collections are called _documents_. Let's use the server database console to insert some documents into our collection. In a new terminal tab, go to your app directory and type:
 
-- 
2.13.6 (Apple Git-96)


From 50460782a11893df35b7843a28cf8cf03639054b Mon Sep 17 00:00:00 2001
From: Uri Goldshtein <uri.goldshtein@gmail.com>
Date: Sun, 8 Nov 2015 03:11:15 +0200
Subject: [PATCH 086/164] docs(angular): Update Angular tutorial content to
 support angular-meteor 1.2.0

---
 content/angular/step02.md | 38 +++++++++++++++++++-------------------
 1 file changed, 19 insertions(+), 19 deletions(-)

diff --git a/content/angular/step02.md b/content/angular/step02.md
index 0e1416d..d32f2cf 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -1,8 +1,16 @@
 {{#template name="angular-step02"}}
 # Defining views with templates
 
-To use Angular in our app, we need to add the [angular-meteor package](http://angular-meteor.com/) by typing the following
-command into the command line:
+To use Angular in our app, we first need to remove the default UI package of Meteor, called `Blaze`.
+
+We also need to remove Meteor's default ECMAScript2015 package named `ecmascript` because Angular-Meteor uses a package named `angular-babel` in order to get both ECMAScript2015 and AngularJS DI annotations.
+
+We remove it by running:
+
+    meteor remove blaze-html-templates
+    meteor remove ecmascript
+
+Now we need to add the [angular-meteor package](http://angular-meteor.com/) by typing the following command into the command line:
 
     meteor add angular
 
@@ -13,9 +21,7 @@ To start working on our todos list app, let's replace the code of the default st
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.3"}}
 
-To write Angular templates, we need to name our files with the `.ng.html` extension.
-
-Create a new file named `todos-list.ng.html` and place it on the root folder:
+Now let's create a simple Anuglar list repeater:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.4"}}
 
@@ -28,27 +34,21 @@ In our browser, the app should look pretty much like this:
 
 Now let's find out what all these bits of code are doing!
 
-### Angular templates in Meteor
-
-The [angular-meteor package](http://angular-meteor.com/) parses all of the `.ng.html` files in your app folder and puts them in Angular's template cache with the id of their full path.
-
-So, for example, when a file is named `my-angular-template.ng.html` is placed in the `client` folder, it will be available for `ng-include` or `ui-router` with the name `client/my-angular-template.ng.html`.
-
-### Adding logic and data to templates
-
-All of the code in your `ng.html` files is compiled with Angular. Angular binds the data into our templates just like any other Angular app.
-
-In the next step, we will see how we can use the $meteor service bind our scope data to a database collection.
-
 ### HTML files in Meteor define templates
 
 Meteor parses all of the regular .HTML files in your app folder and identifies three top-level tags: **&lt;head>**, **&lt;body>**, and **&lt;template>**.
 
 Everything inside any &lt;head> tags is added to the `head` section of the HTML sent to the client, and everything inside &lt;body> tags is added to the `body` section, just like in a regular HTML file.
 
-Everything inside &lt;template> tags is compiled into Meteor _templates_, which can be included inside HTML with `{{dstache}}> templateName}}` or referenced in your JavaScript with `Template.templateName`.
+The [angular-meteor package](http://angular-meteor.com/) parses all of the `html` files in your app folder and puts them in Angular's template cache with the id of their full path.
+
+So, for example, when a file is named `my-angular-template.html` is placed in the `client` folder, it will be available for `ng-include` or `ui-router` with the name `client/my-angular-template.html`.
 
-All of the code in your regular .HTML files is compiled with [Meteor's Spacebars compiler](https://github.com/meteor/meteor/blob/devel/packages/spacebars/README.md).
+### Adding logic and data to templates
+
+All of the code in your `html` files is compiled with Angular. Angular binds the data into our templates just like any other Angular app.
+
+In the next step, we will see how we can use the $meteor service bind our scope data to a database collection.
 
 {{> addingCSS}}
 
-- 
2.13.6 (Apple Git-96)


From 5b7f048816b7db452a38d9a52f327a299cf6dd8f Mon Sep 17 00:00:00 2001
From: Uri Goldshtein <uri.goldshtein@gmail.com>
Date: Sun, 8 Nov 2015 03:16:15 +0200
Subject: [PATCH 087/164] docs(angular): Update Angular tutorial repo and patch
 file

---
 generated/angular.multi.patch | 635 ++++++++++++++++++++++++------------------
 repos/angular                 |   2 +-
 2 files changed, 368 insertions(+), 269 deletions(-)

diff --git a/generated/angular.multi.patch b/generated/angular.multi.patch
index e72a843..28c6cef 100644
--- a/generated/angular.multi.patch
+++ b/generated/angular.multi.patch
@@ -1,4 +1,4 @@
-From 66fa84a3a7722f0ad2053eae1faf32a5e31dc886 Mon Sep 17 00:00:00 2001
+From 3dc2173923b9df9038203763ca8d32864fd9f18d Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 27 Sep 2015 14:18:50 +0300
 Subject: [PATCH 01/39] Step 1: Run `meteor create`
@@ -234,47 +234,94 @@ index 0000000..4f8c65d
 +  });
 +}
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 16b95fd27ab756495e1bdf55c40800ede348ae7c Mon Sep 17 00:00:00 2001
+From 54b4fc3cc09f1071b204d2a722a9aa43df0e4a9e Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 27 Sep 2015 14:27:04 +0300
-Subject: [PATCH 02/39] Step 2.1: Add the Angular package
+Date: Sun, 8 Nov 2015 02:32:52 +0200
+Subject: [PATCH 02/39] Step 2.1: Remove blaze-html-templates and ecmascript
+ package and add angular
 
 ---
- .meteor/packages | 1 +
- .meteor/versions | 4 ++++
- 2 files changed, 5 insertions(+)
+ .meteor/packages |  3 +--
+ .meteor/release  |  2 +-
+ .meteor/versions | 43 ++++++++++++++++++++++++-------------------
+ 3 files changed, 26 insertions(+), 22 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index a9f8340..03949b6 100644
+index a9f8340..7082732 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -18,3 +18,4 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
+@@ -7,14 +7,13 @@
+ meteor-base             # Packages every Meteor app needs to have
+ mobile-experience       # Packages for a great mobile UX
+ mongo                   # The database Meteor supports right now
+-blaze-html-templates    # Compile .html files into Meteor Blaze views
+ session                 # Client-side reactive dictionary for your app
+ jquery                  # Helpful client-side library
+ tracker                 # Meteor's client-side reactive programming library
+ 
+ standard-minifiers      # JS/CSS minifiers run for production mode
+ es5-shim                # ECMAScript 5 compatibility for older browsers.
+-ecmascript              # Enable ECMAScript2015+ syntax in app code
  
  autopublish             # Publish all data to the clients (for prototyping)
  insecure                # Allow all DB writes from clients (for prototyping)
-+angular
++angular@1.2.0-rc.6
+diff --git a/.meteor/release b/.meteor/release
+index 238bbcc..3a05e0a 100644
+--- a/.meteor/release
++++ b/.meteor/release
+@@ -1 +1 @@
+-METEOR@1.2.0.1
++METEOR@1.2.1
 diff --git a/.meteor/versions b/.meteor/versions
-index e378b68..a702ca4 100644
+index e378b68..4a7a39b 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -1,3 +1,5 @@
-+angular@1.0.0-rc.11
-+angular:angular@1.4.6
+@@ -1,27 +1,31 @@
++angular@1.2.0-rc.6
++angular-meteor-data@0.0.4
++angular-templates@0.0.1
++angular:angular@1.4.7
  autopublish@1.0.4
- autoupdate@1.2.3
+-autoupdate@1.2.3
++autoupdate@1.2.4
  babel-compiler@5.8.24_1
-@@ -12,6 +14,7 @@ caching-compiler@1.0.0
- caching-html-compiler@1.0.1
+ babel-runtime@0.1.4
+ base64@1.0.4
+ binary-heap@1.0.4
+ blaze@2.1.3
+-blaze-html-templates@1.0.1
+ blaze-tools@1.0.4
+ boilerplate-generator@1.0.4
+ caching-compiler@1.0.0
+-caching-html-compiler@1.0.1
++caching-html-compiler@1.0.2
  callback-hook@1.0.4
- check@1.0.6
+-check@1.0.6
++check@1.1.0
 +dburles:mongo-collection-instances@0.3.4
  ddp@1.2.2
  ddp-client@1.2.1
- ddp-common@1.2.1
-@@ -31,6 +34,7 @@ http@1.1.1
+-ddp-common@1.2.1
+-ddp-server@1.2.1
++ddp-common@1.2.2
++ddp-server@1.2.2
+ deps@1.0.9
+ diff-sequence@1.0.1
+-ecmascript@0.1.4
+-ecmascript-collections@0.1.6
++ecmascript@0.1.6
++ecmascript-runtime@0.2.6
+ ejson@1.0.7
+-es5-shim@4.1.13
++es5-shim@4.1.14
+ fastclick@1.0.7
+ geojson-utils@1.0.4
+ hot-code-push@1.0.0
+@@ -31,23 +35,25 @@ http@1.1.1
  id-map@1.0.4
  insecure@1.0.4
  jquery@1.11.4
@@ -282,47 +329,90 @@ index e378b68..a702ca4 100644
  launch-screen@1.0.4
  livedata@1.0.15
  logging@1.0.8
+-meteor@1.1.7
++meteor@1.1.10
+ meteor-base@1.0.1
+ minifiers@1.1.7
+-minimongo@1.0.9
++minimongo@1.0.10
+ mobile-experience@1.0.1
+ mobile-status-bar@1.0.6
+-mongo@1.1.1
++mongo@1.1.3
+ mongo-id@1.0.1
+ npm-mongo@1.4.39_1
+ observe-sequence@1.0.7
+ ordered-dict@1.0.4
+-promise@0.4.8
+-random@1.0.4
+-reactive-dict@1.1.1
++pbastowski:angular-babel@1.0.2
++promise@0.5.1
++random@1.0.5
++reactive-dict@1.1.3
+ reactive-var@1.0.6
+ reload@1.1.4
+ retry@1.0.4
+@@ -55,12 +61,11 @@ routepolicy@1.0.6
+ session@1.1.1
+ spacebars@1.0.7
+ spacebars-compiler@1.0.7
+-standard-minifiers@1.0.0
+-templating@1.1.3
++standard-minifiers@1.0.2
+ templating-tools@1.0.0
+-tracker@1.0.8
++tracker@1.0.9
+ ui@1.0.8
+ underscore@1.0.4
+ url@1.0.5
+-webapp@1.2.2
++webapp@1.2.3
+ webapp-hashing@1.0.5
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 33e0dfed2e4708603d083a73d4552a60f2f5c545 Mon Sep 17 00:00:00 2001
+From 6fb657fa7f9189200a1725c8b8d9e261fc65dba0 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 12:44:07 +0300
-Subject: [PATCH 03/39] Step 2.2: Link main file to Angular templates
+Date: Sun, 8 Nov 2015 02:36:49 +0200
+Subject: [PATCH 03/39] Step 2.2: Add Angular app and controller to HTML
 
 ---
- simple-todos-angular.html | 14 ++++----------
- 1 file changed, 4 insertions(+), 10 deletions(-)
+ simple-todos-angular.html | 16 ++++++----------
+ 1 file changed, 6 insertions(+), 10 deletions(-)
 
 diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 30ca9b0..f1391a5 100644
+index 30ca9b0..1167ed1 100644
 --- a/simple-todos-angular.html
 +++ b/simple-todos-angular.html
-@@ -1,14 +1,8 @@
+@@ -1,14 +1,10 @@
  <head>
 -  <title>simple-todos-angular</title>
 +  <title>Todo List</title>
  </head>
  
--<body>
+ <body>
 -  <h1>Welcome to Meteor!</h1>
 -
 -  {{> hello}}
-+<body ng-app="simple-todos"
-+      ng-include="'todos-list.ng.html'"
-+      ng-controller="TodosListCtrl">
- </body>
+-</body>
 -
 -<template name="hello">
 -  <button>Click Me</button>
 -  <p>You've pressed the button {{counter}} times.</p>
 -</template>
++<div class="container"
++     ng-app="simple-todos"
++     ng-controller="TodosListCtrl">
++</div>
++</body>
+\ No newline at end of file
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 62bd145d7c4ae0a31288c6d65c451ee5cd680997 Mon Sep 17 00:00:00 2001
+From 536a1e25561a9bd9e243e820144d2dc3b271ee62 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:46:44 +0300
 Subject: [PATCH 04/39] Step 2.3: Init Angular app and controller
@@ -371,26 +461,27 @@ index 4f8c65d..fa676f2 100644
 +  }]);
  }
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 6d00ee43390d45ad17b463fc763b051bcc65b86d Mon Sep 17 00:00:00 2001
+From af67f32ed8e1a7a50111ca06aa7a492288c5d458 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 27 Sep 2015 14:32:33 +0300
-Subject: [PATCH 05/39] Step 2.4: First Angular template
+Date: Sun, 8 Nov 2015 02:40:20 +0200
+Subject: [PATCH 05/39] Step 2.4: Add Angular list to template
 
 ---
- todos-list.ng.html | 9 +++++++++
+ simple-todos-angular.html | 9 +++++++++
  1 file changed, 9 insertions(+)
- create mode 100644 todos-list.ng.html
 
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-new file mode 100644
-index 0000000..9df43f5
---- /dev/null
-+++ b/todos-list.ng.html
-@@ -0,0 +1,9 @@
-+<div class="container">
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index 1167ed1..6c3ebe6 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -6,5 +6,14 @@
+ <div class="container"
+      ng-app="simple-todos"
+      ng-controller="TodosListCtrl">
++
 +  <header>
 +    <h1>Todo List</h1>
 +  </header>
@@ -398,12 +489,15 @@ index 0000000..9df43f5
 +  <ul>
 +    <li ng-repeat="task in tasks">{{task.text}}</li>
 +  </ul>
-+</div>
++
+ </div>
+ </body>
+\ No newline at end of file
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 20bd3e588a45f479f5979780d968e8115f74d283 Mon Sep 17 00:00:00 2001
+From f7b3c6756898b1909e11dbf76a00669778f202ed Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:50:26 +0300
 Subject: [PATCH 06/39] Step 2.5: Add CSS
@@ -545,10 +639,10 @@ index b6b4052..0bca5d2 100644
 +}
 +
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From fe4c8778be9941cf31c4360fe5edd44b71cd7314 Mon Sep 17 00:00:00 2001
+From bd137585ec3e93383f3d85d7549fc3b6ece59e1d Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 12:56:31 +0300
 Subject: [PATCH 07/39] Step 3.1: Replace the static array with a Collection
@@ -585,24 +679,24 @@ index fa676f2..9a9b236 100644
 +    }]);
  }
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From b9e31524b6825ae75df8eddecdbfc388d38e6619 Mon Sep 17 00:00:00 2001
+From 051ed54c2a220f8c344ab2e9d8c878facb54bb0c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 12:58:59 +0300
+Date: Sun, 8 Nov 2015 02:44:38 +0200
 Subject: [PATCH 08/39] Step 4.1: Add new task form to template
 
 ---
- todos-list.ng.html | 6 ++++++
- 1 file changed, 6 insertions(+)
+ simple-todos-angular.html | 7 +++++++
+ 1 file changed, 7 insertions(+)
 
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 9df43f5..52cdfb2 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -1,6 +1,12 @@
- <div class="container">
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index 6c3ebe6..ef1a923 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -9,6 +9,13 @@
+ 
    <header>
      <h1>Todo List</h1>
 +
@@ -611,14 +705,15 @@ index 9df43f5..52cdfb2 100644
 +      <input ng-model="newTask" type="text"
 +             name="text" placeholder="Type to add new tasks" />
 +    </form>
++
    </header>
  
    <ul>
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From cfc2a3af1d558a88ed7b8243efcc26e3a9d43460 Mon Sep 17 00:00:00 2001
+From b4bbb697c0147ba71087b5e4260f32f513d3390c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:00:30 +0300
 Subject: [PATCH 09/39] Step 4.2: Create Add Task scope function
@@ -645,10 +740,10 @@ index 9a9b236..e9dc878 100644
      }]);
  }
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From d51818f027309c233b6c82a0691d74da5a614864 Mon Sep 17 00:00:00 2001
+From 5528d73545bfb1381b2dc21313e3ad32cd40401f Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:01:36 +0300
 Subject: [PATCH 10/39] Step 4.3: Sort task list by date
@@ -673,23 +768,23 @@ index e9dc878..36ab6d1 100644
        $scope.addTask = function (newTask) {
          $scope.tasks.push( {
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 89f31a3e90112d31729b99d1fc8e5afe1ca5ce2f Mon Sep 17 00:00:00 2001
+From 60ba697f05f60f9e8f021ef0fe05effcb0f52fc0 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:04:21 +0300
+Date: Sun, 8 Nov 2015 02:46:11 +0200
 Subject: [PATCH 11/39] Step 5.1: Add done and delete buttons to task
 
 ---
- todos-list.ng.html | 8 +++++++-
+ simple-todos-angular.html | 8 +++++++-
  1 file changed, 7 insertions(+), 1 deletion(-)
 
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 52cdfb2..37b7a4a 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -10,6 +10,12 @@
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index ef1a923..54765ef 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -19,7 +19,13 @@
    </header>
  
    <ul>
@@ -702,38 +797,38 @@ index 52cdfb2..37b7a4a 100644
 +      <span class="text">{{task.text}}</span>
 +    </li>
    </ul>
+ 
  </div>
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From e0689052b0c5547ea709f8de698617eb63691657 Mon Sep 17 00:00:00 2001
+From 0cfcbd018b7d5bd32003160c2f42d0977f6f7217 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:08:33 +0300
+Date: Sun, 8 Nov 2015 02:47:17 +0200
 Subject: [PATCH 12/39] Step 7.1: Remove ng-app
 
 ---
- simple-todos-angular.html | 3 +--
- 1 file changed, 1 insertion(+), 2 deletions(-)
+ simple-todos-angular.html | 1 -
+ 1 file changed, 1 deletion(-)
 
 diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index f1391a5..e43eceb 100644
+index 54765ef..364fc82 100644
 --- a/simple-todos-angular.html
 +++ b/simple-todos-angular.html
-@@ -2,7 +2,6 @@
-   <title>Todo List</title>
- </head>
+@@ -4,7 +4,6 @@
  
--<body ng-app="simple-todos"
--      ng-include="'todos-list.ng.html'"
-+<body ng-include="'todos-list.ng.html'"
-       ng-controller="TodosListCtrl">
- </body>
+ <body>
+ <div class="container"
+-     ng-app="simple-todos"
+      ng-controller="TodosListCtrl">
+ 
+   <header>
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 1d0204da487d07056d2a491dbb2249517884abed Mon Sep 17 00:00:00 2001
+From 5c7b2bbc168414348404ed513549e3c76715f5bf Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:11:07 +0300
 Subject: [PATCH 13/39] Step 7.2: Bootstrap Angular to mobile as well
@@ -763,28 +858,28 @@ index 36ab6d1..b002918 100644
      function ($scope, $meteor) {
  
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 05e883af174064662e57b66e29a3f0adc2eeb484 Mon Sep 17 00:00:00 2001
+From 8281bede83ca7bfb1680709ac11770250feaa9ff Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:13:14 +0300
+Date: Sun, 8 Nov 2015 02:48:18 +0200
 Subject: [PATCH 14/39] Step 8.1: Add hideComplete checkbox to template
 
 ---
- todos-list.ng.html | 5 +++++
+ simple-todos-angular.html | 5 +++++
  1 file changed, 5 insertions(+)
 
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 37b7a4a..4c5a8c7 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -2,6 +2,11 @@
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index 364fc82..e03d952 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -9,6 +9,11 @@
    <header>
      <h1>Todo List</h1>
  
 +    <label class="hide-completed">
-+      <input type="checkbox" ng-model="$parent.hideCompleted"/>
++      <input type="checkbox" ng-model="hideCompleted"/>
 +      Hide Completed Tasks
 +    </label>
 +
@@ -792,10 +887,10 @@ index 37b7a4a..4c5a8c7 100644
      <form class="new-task" ng-submit="addTask(newTask); newTask='';">
        <input ng-model="newTask" type="text"
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From f04549f207754bcc187216363e086b96e4532978 Mon Sep 17 00:00:00 2001
+From 7c089e2da80cb1d02af16f8cb170389ffbe5cd55 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:14:54 +0300
 Subject: [PATCH 15/39] Step 8.2: Watch hideCompleted and change the query
@@ -823,10 +918,10 @@ index b002918..e759172 100644
      }]);
  }
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 67416034b2d4f8974f95bf93cfd1ead4bd290db4 Mon Sep 17 00:00:00 2001
+From 555e830a7667ccc7c200ba2c5f1cb11f812009c8 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:17:07 +0300
 Subject: [PATCH 16/39] Step 8.3: Change the Collection to use query parameter
@@ -851,10 +946,10 @@ index e759172..071be1f 100644
  
        $scope.addTask = function (newTask) {
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From dd6fb8fe927779fd2b501b36cf72c3c266ae21b5 Mon Sep 17 00:00:00 2001
+From 8de554738cd12768383b74cf066057a43a971081 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:17:59 +0300
 Subject: [PATCH 17/39] Step 8.4: Make query parameter reactive
@@ -877,10 +972,10 @@ index 071be1f..24c55fa 100644
  
        $scope.addTask = function (newTask) {
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From e094f1b07119eb477f1a29a15a66adb7747ec394 Mon Sep 17 00:00:00 2001
+From 7c724675fd4e5f8bc3b433106181e7103f63fd97 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:19:38 +0300
 Subject: [PATCH 18/39] Step 8.5: Add incompleteCount to scope
@@ -904,104 +999,106 @@ index 24c55fa..5934036 100644
      }]);
  }
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 319bc077190a51ce9be4b423df67d6ff48522099 Mon Sep 17 00:00:00 2001
+From abf9a8d56f1f058ed20c9ccd8378e8de161d882b Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:21:13 +0300
+Date: Sun, 8 Nov 2015 02:51:49 +0200
 Subject: [PATCH 19/39] Step 8.6: Add incompleteCount to header
 
 ---
- todos-list.ng.html | 2 +-
+ simple-todos-angular.html | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 4c5a8c7..a515c63 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -1,6 +1,6 @@
- <div class="container">
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index e03d952..ef5bc59 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -7,7 +7,7 @@
+      ng-controller="TodosListCtrl">
+ 
    <header>
 -    <h1>Todo List</h1>
 +    <h1>Todo List ( {{ incompleteCount() }} )</h1>
  
      <label class="hide-completed">
-       <input type="checkbox" ng-model="$parent.hideCompleted"/>
+       <input type="checkbox" ng-model="hideCompleted"/>
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From b41def3f80c384bd2687d4470ef305ff0cb3a5d0 Mon Sep 17 00:00:00 2001
+From c0b1b91aaffdc311cd443e87505e57873166290a Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 27 Sep 2015 14:59:26 +0300
+Date: Sun, 8 Nov 2015 02:53:19 +0200
 Subject: [PATCH 20/39] Step 9.1: Add accounts-ui and accounts-password
  packages
 
 ---
  .meteor/packages |  2 ++
- .meteor/versions | 13 +++++++++++++
- 2 files changed, 15 insertions(+)
+ .meteor/versions | 14 ++++++++++++++
+ 2 files changed, 16 insertions(+)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 03949b6..d4fb217 100644
+index 7082732..00d102a 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -19,3 +19,5 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
+@@ -17,3 +17,5 @@ es5-shim                # ECMAScript 5 compatibility for older browsers.
  autopublish             # Publish all data to the clients (for prototyping)
  insecure                # Allow all DB writes from clients (for prototyping)
- angular
-+accounts-ui
+ angular@1.2.0-rc.6
 +accounts-password
++accounts-ui
 diff --git a/.meteor/versions b/.meteor/versions
-index a702ca4..2e8f00b 100644
+index 4a7a39b..a2a14a6 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
 @@ -1,3 +1,7 @@
-+accounts-base@1.2.1
-+accounts-password@1.1.3
++accounts-base@1.2.2
++accounts-password@1.1.4
 +accounts-ui@1.1.6
 +accounts-ui-unstyled@1.1.8
- angular@1.0.0-rc.11
- angular:angular@1.4.6
- autopublish@1.0.4
-@@ -18,12 +22,14 @@ dburles:mongo-collection-instances@0.3.4
+ angular@1.2.0-rc.6
+ angular-meteor-data@0.0.4
+ angular-templates@0.0.1
+@@ -19,12 +23,14 @@ dburles:mongo-collection-instances@0.3.4
  ddp@1.2.2
  ddp-client@1.2.1
- ddp-common@1.2.1
+ ddp-common@1.2.2
 +ddp-rate-limiter@1.0.0
- ddp-server@1.2.1
+ ddp-server@1.2.2
  deps@1.0.9
  diff-sequence@1.0.1
- ecmascript@0.1.4
- ecmascript-collections@0.1.6
+ ecmascript@0.1.6
+ ecmascript-runtime@0.2.6
  ejson@1.0.7
-+email@1.0.7
- es5-shim@4.1.13
++email@1.0.8
+ es5-shim@4.1.14
  fastclick@1.0.7
  geojson-utils@1.0.4
-@@ -36,7 +42,9 @@ insecure@1.0.4
+@@ -37,7 +43,9 @@ insecure@1.0.4
  jquery@1.11.4
  lai:collection-extensions@0.1.4
  launch-screen@1.0.4
-+less@2.5.0_2
++less@2.5.1
  livedata@1.0.15
 +localstorage@1.0.5
  logging@1.0.8
- meteor@1.1.7
+ meteor@1.1.10
  meteor-base@1.0.1
-@@ -46,19 +54,24 @@ mobile-experience@1.0.1
+@@ -47,21 +55,27 @@ mobile-experience@1.0.1
  mobile-status-bar@1.0.6
- mongo@1.1.1
+ mongo@1.1.3
  mongo-id@1.0.1
 +npm-bcrypt@0.7.8_2
  npm-mongo@1.4.39_1
  observe-sequence@1.0.7
  ordered-dict@1.0.4
- promise@0.4.8
- random@1.0.4
+ pbastowski:angular-babel@1.0.2
+ promise@0.5.1
+ random@1.0.5
 +rate-limit@1.0.0
- reactive-dict@1.1.1
+ reactive-dict@1.1.3
  reactive-var@1.0.6
  reload@1.1.4
  retry@1.0.4
@@ -1012,16 +1109,18 @@ index a702ca4..2e8f00b 100644
  spacebars@1.0.7
  spacebars-compiler@1.0.7
 +srp@1.0.4
- standard-minifiers@1.0.0
- templating@1.1.3
+ standard-minifiers@1.0.2
++templating@1.1.5
  templating-tools@1.0.0
+ tracker@1.0.9
+ ui@1.0.8
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 5f5816cf03c6bf709862f580bca1b955567fc81a Mon Sep 17 00:00:00 2001
+From b2158e46f52d065f88dcc80ebd34a30fafe170a6 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 27 Sep 2015 15:08:35 +0300
+Date: Sun, 8 Nov 2015 02:54:07 +0200
 Subject: [PATCH 21/39] Step 9.2: Add the urigo:angular-blaze-template package
 
 ---
@@ -1030,44 +1129,44 @@ Subject: [PATCH 21/39] Step 9.2: Add the urigo:angular-blaze-template package
  2 files changed, 2 insertions(+)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index d4fb217..2833ad1 100644
+index 00d102a..357cc52 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -21,3 +21,4 @@ insecure                # Allow all DB writes from clients (for prototyping)
- angular
- accounts-ui
+@@ -19,3 +19,4 @@ insecure                # Allow all DB writes from clients (for prototyping)
+ angular@1.2.0-rc.6
  accounts-password
+ accounts-ui
 +urigo:angular-blaze-template
 diff --git a/.meteor/versions b/.meteor/versions
-index 2e8f00b..9a60e0e 100644
+index a2a14a6..e6adb0d 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -78,6 +78,7 @@ templating-tools@1.0.0
- tracker@1.0.8
+@@ -80,6 +80,7 @@ templating-tools@1.0.0
+ tracker@1.0.9
  ui@1.0.8
  underscore@1.0.4
-+urigo:angular-blaze-template@0.0.1
++urigo:angular-blaze-template@0.1.1
  url@1.0.5
- webapp@1.2.2
+ webapp@1.2.3
  webapp-hashing@1.0.5
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From e9c7eaa065b5046a7ec4f9d138911ecfd486a18f Mon Sep 17 00:00:00 2001
+From 416f23cb35b018d2c993fdcfc6f2a021fa5daf79 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 27 Sep 2015 15:16:54 +0300
+Date: Sun, 8 Nov 2015 02:54:37 +0200
 Subject: [PATCH 22/39] Step 9.3: Add Blaze loginButtons template to HTML
 
 ---
- todos-list.ng.html | 2 ++
+ simple-todos-angular.html | 2 ++
  1 file changed, 2 insertions(+)
 
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index a515c63..5fed06a 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -7,6 +7,8 @@
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index ef5bc59..c85d301 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -14,6 +14,8 @@
        Hide Completed Tasks
      </label>
  
@@ -1077,10 +1176,10 @@ index a515c63..5fed06a 100644
      <form class="new-task" ng-submit="addTask(newTask); newTask='';">
        <input ng-model="newTask" type="text"
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From ce33db4e17f0e04af05762e0e14395b899dbea83 Mon Sep 17 00:00:00 2001
+From 67203099053c256fc3111b9945ae94fe6e94e578 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:27:12 +0300
 Subject: [PATCH 23/39] Step 9.4: Configure accounts UI to use usernames
@@ -1106,10 +1205,10 @@ index 5934036..0c2d6c1 100644
    angular.module('simple-todos',['angular-meteor']);
  
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 365ac0ccbb0f01e874330deb922966a5fd6b16a2 Mon Sep 17 00:00:00 2001
+From dd12ba1953b8fd6ad079f8ecbd74d600a9b3b8c5 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:29:48 +0300
 Subject: [PATCH 24/39] Step 9.5: Add owner and username to created task
@@ -1139,23 +1238,23 @@ index 0c2d6c1..d0b3829 100644
        };
  
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 4c4f8624c026f182469c084dd15012e83cb97ece Mon Sep 17 00:00:00 2001
+From 155e690004514f3e5f4a2e7c2c0618fe60205fb4 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:31:13 +0300
+Date: Sun, 8 Nov 2015 02:55:26 +0200
 Subject: [PATCH 25/39] Step 9.6: Hide new task form if user is not logged in
 
 ---
- todos-list.ng.html | 4 +++-
+ simple-todos-angular.html | 4 +++-
  1 file changed, 3 insertions(+), 1 deletion(-)
 
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 5fed06a..3b7bd2a 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -10,7 +10,9 @@
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index c85d301..5ef11a9 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -17,7 +17,9 @@
      <blaze-template name="loginButtons"></blaze-template>
  
      <!-- add a form below the h1 -->
@@ -1167,23 +1266,23 @@ index 5fed06a..3b7bd2a 100644
               name="text" placeholder="Type to add new tasks" />
      </form>
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 4b61854da8353b09d28aadc8965755ea8bfcb207 Mon Sep 17 00:00:00 2001
+From e9c96426f3a87c82944175a71cda36b1d58c5c74 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:32:49 +0300
+Date: Sun, 8 Nov 2015 02:56:09 +0200
 Subject: [PATCH 26/39] Step 9.7: Add username to the displayed task
 
 ---
- todos-list.ng.html | 4 +++-
+ simple-todos-angular.html | 4 +++-
  1 file changed, 3 insertions(+), 1 deletion(-)
 
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 3b7bd2a..d0bca05 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -24,7 +24,9 @@
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index 5ef11a9..19e72f6 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -32,7 +32,9 @@
  
        <input type="checkbox" ng-model="task.checked" class="toggle-checked" />
  
@@ -1193,14 +1292,14 @@ index 3b7bd2a..d0bca05 100644
 +      </span>
      </li>
    </ul>
- </div>
+ 
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 2ed0dc78bb0e37cf006c4a3d7bcc4c3fdf4e00d8 Mon Sep 17 00:00:00 2001
+From a7138e0a983fb208af99fb9fc23ade358d2daf0d Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 27 Sep 2015 15:11:50 +0300
+Date: Sun, 8 Nov 2015 02:56:52 +0200
 Subject: [PATCH 27/39] Step 10.1: Remove the insecure package
 
 ---
@@ -1209,22 +1308,22 @@ Subject: [PATCH 27/39] Step 10.1: Remove the insecure package
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 2833ad1..9c46211 100644
+index 357cc52..ec2eac9 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -17,7 +17,6 @@ es5-shim                # ECMAScript 5 compatibility for older browsers.
- ecmascript              # Enable ECMAScript2015+ syntax in app code
+@@ -15,7 +15,6 @@ standard-minifiers      # JS/CSS minifiers run for production mode
+ es5-shim                # ECMAScript 5 compatibility for older browsers.
  
  autopublish             # Publish all data to the clients (for prototyping)
 -insecure                # Allow all DB writes from clients (for prototyping)
- angular
- accounts-ui
+ angular@1.2.0-rc.6
  accounts-password
+ accounts-ui
 diff --git a/.meteor/versions b/.meteor/versions
-index 9a60e0e..095b2d0 100644
+index e6adb0d..6da5cab 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -38,7 +38,6 @@ html-tools@1.0.5
+@@ -39,7 +39,6 @@ html-tools@1.0.5
  htmljs@1.0.5
  http@1.1.1
  id-map@1.0.4
@@ -1233,10 +1332,10 @@ index 9a60e0e..095b2d0 100644
  lai:collection-extensions@0.1.4
  launch-screen@1.0.4
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 046737b0aa21bbb0eb55f92eaa35cd702e80a6e3 Mon Sep 17 00:00:00 2001
+From 5b4849d912f4f97b8e5c5e68c27d3a89bdd4e696 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:02:50 +0300
 Subject: [PATCH 28/39] Step 10.2: Add Meteor Methods for add, delete and check
@@ -1277,10 +1376,10 @@ index d0b3829..4b12a5e 100644
 +  }
 +});
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From b613f470ba414abe5fbc9f0980d2dc7498cf91b2 Mon Sep 17 00:00:00 2001
+From 24b023400b0cba198b7849fc7a9b694656b06e74 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:05:25 +0300
 Subject: [PATCH 29/39] Step 10.3: Add scope functions to call the Meteor
@@ -1319,23 +1418,23 @@ index 4b12a5e..655fe79 100644
  
        $scope.$watch('hideCompleted', function() {
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 487edb5641c0c52c18432cc33494b8093af8e92b Mon Sep 17 00:00:00 2001
+From 006c9ebcb12e013f5233c5bbf54c40624d630685 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 15:08:04 +0300
+Date: Sun, 8 Nov 2015 02:57:43 +0200
 Subject: [PATCH 30/39] Step 10.4: Change template events to call methods
 
 ---
- todos-list.ng.html | 5 +++--
+ simple-todos-angular.html | 5 +++--
  1 file changed, 3 insertions(+), 2 deletions(-)
 
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index d0bca05..bdc26ea 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -20,9 +20,10 @@
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index 19e72f6..641b475 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -28,9 +28,10 @@
  
    <ul>
      <li ng-repeat="task in tasks" ng-class="{'checked': task.checked}">
@@ -1349,12 +1448,12 @@ index d0bca05..bdc26ea 100644
        <span class="text">
          <strong>{{task.username}}</strong> - {{task.text}}
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 490fe55774d23212b652705826f89918d5c1b677 Mon Sep 17 00:00:00 2001
+From be8045229c7b002a1280f5a2f1e058073128651d Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 27 Sep 2015 15:25:25 +0300
+Date: Sun, 8 Nov 2015 02:58:12 +0200
 Subject: [PATCH 31/39] Step 11.1: Remove the autopublish package
 
 ---
@@ -1363,34 +1462,34 @@ Subject: [PATCH 31/39] Step 11.1: Remove the autopublish package
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 9c46211..ff6f9b5 100644
+index ec2eac9..5ec67ad 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -16,7 +16,6 @@ standard-minifiers      # JS/CSS minifiers run for production mode
+@@ -14,7 +14,6 @@ tracker                 # Meteor's client-side reactive programming library
+ standard-minifiers      # JS/CSS minifiers run for production mode
  es5-shim                # ECMAScript 5 compatibility for older browsers.
- ecmascript              # Enable ECMAScript2015+ syntax in app code
  
 -autopublish             # Publish all data to the clients (for prototyping)
- angular
- accounts-ui
+ angular@1.2.0-rc.6
  accounts-password
+ accounts-ui
 diff --git a/.meteor/versions b/.meteor/versions
-index 095b2d0..f2c82e2 100644
+index 6da5cab..92f965d 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -4,7 +4,6 @@ accounts-ui@1.1.6
- accounts-ui-unstyled@1.1.8
- angular@1.0.0-rc.11
- angular:angular@1.4.6
+@@ -6,7 +6,6 @@ angular@1.2.0-rc.6
+ angular-meteor-data@0.0.4
+ angular-templates@0.0.1
+ angular:angular@1.4.7
 -autopublish@1.0.4
- autoupdate@1.2.3
+ autoupdate@1.2.4
  babel-compiler@5.8.24_1
  babel-runtime@0.1.4
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From bf31c1c34d6f62f5a2dc90eeda37ff0f5d07086b Mon Sep 17 00:00:00 2001
+From 2fcdc23a833d0d6f912df18d9f9e1fea57a6f87e Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:10:25 +0300
 Subject: [PATCH 32/39] Step 11.2: Add server publish function to tasks
@@ -1414,10 +1513,10 @@ index 655fe79..439a148 100644
 +  });
 +}
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From e4556e5933dd677b80db347f910232762ffc8edd Mon Sep 17 00:00:00 2001
+From 939f74bcb38b5a24e112d8ac7d02e5d8b2b6e601 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:11:21 +0300
 Subject: [PATCH 33/39] Step 11.3: Subscribe to tasks publication
@@ -1440,23 +1539,23 @@ index 439a148..6464ff3 100644
          return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
        });
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 617d3f90bd1769730851b9623d7e3ae45d31d9f1 Mon Sep 17 00:00:00 2001
+From b91e37beceaffa590476b7b405e85d713e67ec4e Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 15:53:12 +0300
+Date: Sun, 8 Nov 2015 02:59:00 +0200
 Subject: [PATCH 34/39] Step 11.4: Add setPrivate button to template
 
 ---
- todos-list.ng.html | 6 ++++++
+ simple-todos-angular.html | 6 ++++++
  1 file changed, 6 insertions(+)
 
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index bdc26ea..4674a2c 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -25,6 +25,12 @@
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index 641b475..208097f 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -33,6 +33,12 @@
        <input type="checkbox" ng-checked="task.checked"
               ng-click="setChecked(task)" class="toggle-checked" />
  
@@ -1470,37 +1569,37 @@ index bdc26ea..4674a2c 100644
          <strong>{{task.username}}</strong> - {{task.text}}
        </span>
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From e940423674d77b5bc33a69ad48ab9d5b89871683 Mon Sep 17 00:00:00 2001
+From c16f39fd138422aaa142974a36cfab0e4f59159d Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 15:54:33 +0300
+Date: Sun, 8 Nov 2015 02:59:36 +0200
 Subject: [PATCH 35/39] Step 11.5: Add private CSS class to task
 
 ---
- todos-list.ng.html | 3 ++-
+ simple-todos-angular.html | 3 ++-
  1 file changed, 2 insertions(+), 1 deletion(-)
 
-diff --git a/todos-list.ng.html b/todos-list.ng.html
-index 4674a2c..6b1281a 100644
---- a/todos-list.ng.html
-+++ b/todos-list.ng.html
-@@ -19,7 +19,8 @@
+diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+index 208097f..05e0f5d 100644
+--- a/simple-todos-angular.html
++++ b/simple-todos-angular.html
+@@ -27,7 +27,8 @@
    </header>
  
    <ul>
 -    <li ng-repeat="task in tasks" ng-class="{'checked': task.checked}">
-+    <li ng-repeat="task in tasks" 
++    <li ng-repeat="task in tasks"
 +        ng-class="{'checked': task.checked, 'private': task.private}">
        <button class="delete" ng-click="deleteTask(task)">&times;</button>
  
        <input type="checkbox" ng-checked="task.checked"
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 8115a811efe74c4c87f2c8b01cfb831657b68645 Mon Sep 17 00:00:00 2001
+From 9644cfb1d867b175de825cf9803ef3a8ec74668a Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 17:06:51 +0300
 Subject: [PATCH 36/39] Step 11.6: Add setPrivate Meteor Method
@@ -1531,10 +1630,10 @@ index 6464ff3..0bd3853 100644
  });
  
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 1eafaf21e69a40d4943b5214e6d4b48bbd558e7c Mon Sep 17 00:00:00 2001
+From d1d3255975957d11f52cd66b7233b4ce1dc5d733 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 17:08:29 +0300
 Subject: [PATCH 37/39] Step 11.7: Add setPrivate scope function
@@ -1559,10 +1658,10 @@ index 0bd3853..bdc75a8 100644
          if ($scope.hideCompleted)
            $scope.query = {checked: {$ne: true}};
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From 5daeeac68b717bac0c665aa20b15f680821e2cce Mon Sep 17 00:00:00 2001
+From b95e7e5c7083e88adc6d4f7cceb9fe613685615c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:59:53 +0300
 Subject: [PATCH 38/39] Step 11.8: Publish only public and owner's tasks
@@ -1589,10 +1688,10 @@ index bdc75a8..a6089ab 100644
    });
  }
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
 
-From dffe7b5384c1639b5805c91e95225626fed6d0f4 Mon Sep 17 00:00:00 2001
+From 0951f20b03772deee83db07b41056127ace5dfe1 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 16:02:20 +0300
 Subject: [PATCH 39/39] Step 11.9: Add extra security to methods
@@ -1628,5 +1727,5 @@ index a6089ab..1d371fb 100644
    },
    setPrivate: function (taskId, setToPrivate) {
 -- 
-2.3.8 (Apple Git-58)
+2.4.9 (Apple Git-60)
 
diff --git a/repos/angular b/repos/angular
index dffe7b5..0951f20 160000
--- a/repos/angular
+++ b/repos/angular
@@ -1 +1 @@
-Subproject commit dffe7b5384c1639b5805c91e95225626fed6d0f4
+Subproject commit 0951f20b03772deee83db07b41056127ace5dfe1
-- 
2.13.6 (Apple Git-96)


From 91c7ebd840feda2fad62cd573fce4b72ee5c5b26 Mon Sep 17 00:00:00 2001
From: Uri Goldshtein <uri.goldshtein@gmail.com>
Date: Mon, 9 Nov 2015 12:14:44 +0200
Subject: [PATCH 088/164] docs(angular): Update Angular tutorial step 8 content
 and patch

---
 content/angular/step09.md     |  15 ++--
 generated/angular.multi.patch | 170 +++++++++++++++++++++---------------------
 2 files changed, 91 insertions(+), 94 deletions(-)

diff --git a/content/angular/step09.md b/content/angular/step09.md
index 94e39f2..b4aabbe 100644
--- a/content/angular/step09.md
+++ b/content/angular/step09.md
@@ -7,19 +7,16 @@ Meteor comes with an accounts system and a drop-in login user interface that let
 To enable the accounts system and UI, we need to add the relevant packages. In your app directory, run the following command:
 
 ```bash
-meteor add accounts-ui accounts-password
+meteor add accounts-password dotansimha:accounts-ui-angular
 ```
 
-Now let's add our authentication UI.
+`accounts-password` is a package that includes all the logic for password based authentication.
 
-We will use the powerful [blaze-template](http://angular-meteor.com/api/blaze-template) directive which let's you add **any Blaze template** into your Angular templates.
-We are adding `loginButtons` which is the Blaze template for user authentication flow supplied with the `accounts-ui` package.
+`dotansimha:accounts-ui-angular` includes the `<login-buttons>` directive that contains all the HTML and CSS we need for user authentication forms.
+ 
+Now let's add dependency to `account.ui` module in our module definition:
 
-First let's add the package to include that directive:
-
-```bash
-meteor add urigo:angular-blaze-template
-```
+{{> DiffBox tutorialName="simple-todos-angular" step="9.2"}}
 
 In the HTML, right under the checkbox, include the following code to add a login dropdown:
 
diff --git a/generated/angular.multi.patch b/generated/angular.multi.patch
index 28c6cef..e4f79c2 100644
--- a/generated/angular.multi.patch
+++ b/generated/angular.multi.patch
@@ -1028,19 +1028,19 @@ index e03d952..ef5bc59 100644
 2.4.9 (Apple Git-60)
 
 
-From c0b1b91aaffdc311cd443e87505e57873166290a Mon Sep 17 00:00:00 2001
+From eca2a40c5edc1708b15395e06bfafe134bd4c2ca Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:53:19 +0200
-Subject: [PATCH 20/39] Step 9.1: Add accounts-ui and accounts-password
- packages
+Date: Mon, 9 Nov 2015 11:41:07 +0200
+Subject: [PATCH 20/39] Step 9.1: Add accounts-password and
+ dotansimha:accounts-ui-angular packages
 
 ---
  .meteor/packages |  2 ++
- .meteor/versions | 14 ++++++++++++++
- 2 files changed, 16 insertions(+)
+ .meteor/versions | 16 ++++++++++++++++
+ 2 files changed, 18 insertions(+)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 7082732..00d102a 100644
+index 7082732..dbee131 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
 @@ -17,3 +17,5 @@ es5-shim                # ECMAScript 5 compatibility for older browsers.
@@ -1048,9 +1048,9 @@ index 7082732..00d102a 100644
  insecure                # Allow all DB writes from clients (for prototyping)
  angular@1.2.0-rc.6
 +accounts-password
-+accounts-ui
++dotansimha:accounts-ui-angular
 diff --git a/.meteor/versions b/.meteor/versions
-index 4a7a39b..a2a14a6 100644
+index 4a7a39b..cf8e714 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
 @@ -1,3 +1,7 @@
@@ -1061,7 +1061,15 @@ index 4a7a39b..a2a14a6 100644
  angular@1.2.0-rc.6
  angular-meteor-data@0.0.4
  angular-templates@0.0.1
-@@ -19,12 +23,14 @@ dburles:mongo-collection-instances@0.3.4
+@@ -9,6 +13,7 @@ babel-runtime@0.1.4
+ base64@1.0.4
+ binary-heap@1.0.4
+ blaze@2.1.3
++blaze-html-templates@1.0.1
+ blaze-tools@1.0.4
+ boilerplate-generator@1.0.4
+ caching-compiler@1.0.0
+@@ -19,12 +24,15 @@ dburles:mongo-collection-instances@0.3.4
  ddp@1.2.2
  ddp-client@1.2.1
  ddp-common@1.2.2
@@ -1069,6 +1077,7 @@ index 4a7a39b..a2a14a6 100644
  ddp-server@1.2.2
  deps@1.0.9
  diff-sequence@1.0.1
++dotansimha:accounts-ui-angular@0.0.1
  ecmascript@0.1.6
  ecmascript-runtime@0.2.6
  ejson@1.0.7
@@ -1076,7 +1085,7 @@ index 4a7a39b..a2a14a6 100644
  es5-shim@4.1.14
  fastclick@1.0.7
  geojson-utils@1.0.4
-@@ -37,7 +43,9 @@ insecure@1.0.4
+@@ -37,7 +45,9 @@ insecure@1.0.4
  jquery@1.11.4
  lai:collection-extensions@0.1.4
  launch-screen@1.0.4
@@ -1086,7 +1095,7 @@ index 4a7a39b..a2a14a6 100644
  logging@1.0.8
  meteor@1.1.10
  meteor-base@1.0.1
-@@ -47,21 +55,27 @@ mobile-experience@1.0.1
+@@ -47,21 +57,27 @@ mobile-experience@1.0.1
  mobile-status-bar@1.0.6
  mongo@1.1.3
  mongo-id@1.0.1
@@ -1118,59 +1127,50 @@ index 4a7a39b..a2a14a6 100644
 2.4.9 (Apple Git-60)
 
 
-From b2158e46f52d065f88dcc80ebd34a30fafe170a6 Mon Sep 17 00:00:00 2001
+From 6267f9440bc6b8c86c8214cca2e5251970d3a8f8 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:54:07 +0200
-Subject: [PATCH 21/39] Step 9.2: Add the urigo:angular-blaze-template package
+Date: Mon, 9 Nov 2015 11:46:05 +0200
+Subject: [PATCH 21/39] Step 9.2: Add `accounts.ui` dependency to Angular app
 
 ---
- .meteor/packages | 1 +
- .meteor/versions | 1 +
- 2 files changed, 2 insertions(+)
+ simple-todos-angular.js | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-diff --git a/.meteor/packages b/.meteor/packages
-index 00d102a..357cc52 100644
---- a/.meteor/packages
-+++ b/.meteor/packages
-@@ -19,3 +19,4 @@ insecure                # Allow all DB writes from clients (for prototyping)
- angular@1.2.0-rc.6
- accounts-password
- accounts-ui
-+urigo:angular-blaze-template
-diff --git a/.meteor/versions b/.meteor/versions
-index a2a14a6..e6adb0d 100644
---- a/.meteor/versions
-+++ b/.meteor/versions
-@@ -80,6 +80,7 @@ templating-tools@1.0.0
- tracker@1.0.9
- ui@1.0.8
- underscore@1.0.4
-+urigo:angular-blaze-template@0.1.1
- url@1.0.5
- webapp@1.2.3
- webapp-hashing@1.0.5
+diff --git a/simple-todos-angular.js b/simple-todos-angular.js
+index 5934036..7ca4577 100644
+--- a/simple-todos-angular.js
++++ b/simple-todos-angular.js
+@@ -3,7 +3,7 @@ Tasks = new Mongo.Collection('tasks');
+ if (Meteor.isClient) {
+ 
+   // This code only runs on the client
+-  angular.module('simple-todos',['angular-meteor']);
++  angular.module('simple-todos',['angular-meteor', 'accounts.ui']);
+ 
+   function onReady() {
+     angular.bootstrap(document, ['simple-todos']);
 -- 
 2.4.9 (Apple Git-60)
 
 
-From 416f23cb35b018d2c993fdcfc6f2a021fa5daf79 Mon Sep 17 00:00:00 2001
+From 70e744b65b8aa04150cceebd37d5dc623ae383b6 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:54:37 +0200
-Subject: [PATCH 22/39] Step 9.3: Add Blaze loginButtons template to HTML
+Date: Mon, 9 Nov 2015 11:54:35 +0200
+Subject: [PATCH 22/39] Step 9.3: Add loginButtons directive
 
 ---
  simple-todos-angular.html | 2 ++
  1 file changed, 2 insertions(+)
 
 diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index ef5bc59..c85d301 100644
+index ef5bc59..5fdbfb8 100644
 --- a/simple-todos-angular.html
 +++ b/simple-todos-angular.html
 @@ -14,6 +14,8 @@
        Hide Completed Tasks
      </label>
  
-+    <blaze-template name="loginButtons"></blaze-template>
++    <login-buttons></login-buttons>
 +
      <!-- add a form below the h1 -->
      <form class="new-task" ng-submit="addTask(newTask); newTask='';">
@@ -1179,7 +1179,7 @@ index ef5bc59..c85d301 100644
 2.4.9 (Apple Git-60)
 
 
-From 67203099053c256fc3111b9945ae94fe6e94e578 Mon Sep 17 00:00:00 2001
+From 4f85b07d771feed9d392bdd9f8d8046521cc7bf3 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:27:12 +0300
 Subject: [PATCH 23/39] Step 9.4: Configure accounts UI to use usernames
@@ -1190,7 +1190,7 @@ Subject: [PATCH 23/39] Step 9.4: Configure accounts UI to use usernames
  1 file changed, 4 insertions(+)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 5934036..0c2d6c1 100644
+index 7ca4577..0b277df 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -2,6 +2,10 @@ Tasks = new Mongo.Collection('tasks');
@@ -1202,13 +1202,13 @@ index 5934036..0c2d6c1 100644
 +  });
 +
    // This code only runs on the client
-   angular.module('simple-todos',['angular-meteor']);
+   angular.module('simple-todos',['angular-meteor', 'accounts.ui']);
  
 -- 
 2.4.9 (Apple Git-60)
 
 
-From dd12ba1953b8fd6ad079f8ecbd74d600a9b3b8c5 Mon Sep 17 00:00:00 2001
+From 55e9045c42743f0cd1370e0b3af9ce641532a780 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:29:48 +0300
 Subject: [PATCH 24/39] Step 9.5: Add owner and username to created task
@@ -1218,7 +1218,7 @@ Subject: [PATCH 24/39] Step 9.5: Add owner and username to created task
  1 file changed, 5 insertions(+), 3 deletions(-)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 0c2d6c1..d0b3829 100644
+index 0b277df..a83dad1 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -25,10 +25,12 @@ if (Meteor.isClient) {
@@ -1241,7 +1241,7 @@ index 0c2d6c1..d0b3829 100644
 2.4.9 (Apple Git-60)
 
 
-From 155e690004514f3e5f4a2e7c2c0618fe60205fb4 Mon Sep 17 00:00:00 2001
+From 985ea3a7fdd00907ddbf6ceee36125e7d32d90f9 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:55:26 +0200
 Subject: [PATCH 25/39] Step 9.6: Hide new task form if user is not logged in
@@ -1251,11 +1251,11 @@ Subject: [PATCH 25/39] Step 9.6: Hide new task form if user is not logged in
  1 file changed, 3 insertions(+), 1 deletion(-)
 
 diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index c85d301..5ef11a9 100644
+index 5fdbfb8..98c6a82 100644
 --- a/simple-todos-angular.html
 +++ b/simple-todos-angular.html
 @@ -17,7 +17,9 @@
-     <blaze-template name="loginButtons"></blaze-template>
+     <login-buttons></login-buttons>
  
      <!-- add a form below the h1 -->
 -    <form class="new-task" ng-submit="addTask(newTask); newTask='';">
@@ -1269,7 +1269,7 @@ index c85d301..5ef11a9 100644
 2.4.9 (Apple Git-60)
 
 
-From e9c96426f3a87c82944175a71cda36b1d58c5c74 Mon Sep 17 00:00:00 2001
+From 003f2ba777ce625b84cdbd0aab7dbe63dfd269b6 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:56:09 +0200
 Subject: [PATCH 26/39] Step 9.7: Add username to the displayed task
@@ -1279,7 +1279,7 @@ Subject: [PATCH 26/39] Step 9.7: Add username to the displayed task
  1 file changed, 3 insertions(+), 1 deletion(-)
 
 diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 5ef11a9..19e72f6 100644
+index 98c6a82..d12094e 100644
 --- a/simple-todos-angular.html
 +++ b/simple-todos-angular.html
 @@ -32,7 +32,9 @@
@@ -1297,7 +1297,7 @@ index 5ef11a9..19e72f6 100644
 2.4.9 (Apple Git-60)
 
 
-From a7138e0a983fb208af99fb9fc23ade358d2daf0d Mon Sep 17 00:00:00 2001
+From e891932002ddf3deac819ffe69795bba21d41631 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:56:52 +0200
 Subject: [PATCH 27/39] Step 10.1: Remove the insecure package
@@ -1308,7 +1308,7 @@ Subject: [PATCH 27/39] Step 10.1: Remove the insecure package
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 357cc52..ec2eac9 100644
+index dbee131..2d2e7c5 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
 @@ -15,7 +15,6 @@ standard-minifiers      # JS/CSS minifiers run for production mode
@@ -1318,12 +1318,12 @@ index 357cc52..ec2eac9 100644
 -insecure                # Allow all DB writes from clients (for prototyping)
  angular@1.2.0-rc.6
  accounts-password
- accounts-ui
+ dotansimha:accounts-ui-angular
 diff --git a/.meteor/versions b/.meteor/versions
-index e6adb0d..6da5cab 100644
+index cf8e714..fb60917 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -39,7 +39,6 @@ html-tools@1.0.5
+@@ -41,7 +41,6 @@ html-tools@1.0.5
  htmljs@1.0.5
  http@1.1.1
  id-map@1.0.4
@@ -1335,7 +1335,7 @@ index e6adb0d..6da5cab 100644
 2.4.9 (Apple Git-60)
 
 
-From 5b4849d912f4f97b8e5c5e68c27d3a89bdd4e696 Mon Sep 17 00:00:00 2001
+From 16fe088c181ede4cfb733a359356cafd715ca3b0 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:02:50 +0300
 Subject: [PATCH 28/39] Step 10.2: Add Meteor Methods for add, delete and check
@@ -1346,7 +1346,7 @@ Subject: [PATCH 28/39] Step 10.2: Add Meteor Methods for add, delete and check
  1 file changed, 22 insertions(+)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index d0b3829..4b12a5e 100644
+index a83dad1..b10a928 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -47,3 +47,25 @@ if (Meteor.isClient) {
@@ -1379,7 +1379,7 @@ index d0b3829..4b12a5e 100644
 2.4.9 (Apple Git-60)
 
 
-From 24b023400b0cba198b7849fc7a9b694656b06e74 Mon Sep 17 00:00:00 2001
+From f7271f737a1852fd445bd7622c0b4aa692e2f6c4 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:05:25 +0300
 Subject: [PATCH 29/39] Step 10.3: Add scope functions to call the Meteor
@@ -1390,7 +1390,7 @@ Subject: [PATCH 29/39] Step 10.3: Add scope functions to call the Meteor
  1 file changed, 10 insertions(+), 7 deletions(-)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 4b12a5e..655fe79 100644
+index b10a928..417ebd9 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -25,13 +25,16 @@ if (Meteor.isClient) {
@@ -1421,7 +1421,7 @@ index 4b12a5e..655fe79 100644
 2.4.9 (Apple Git-60)
 
 
-From 006c9ebcb12e013f5233c5bbf54c40624d630685 Mon Sep 17 00:00:00 2001
+From ac0c8565f3697ad5c41379a98503ff93427ebb89 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:57:43 +0200
 Subject: [PATCH 30/39] Step 10.4: Change template events to call methods
@@ -1431,7 +1431,7 @@ Subject: [PATCH 30/39] Step 10.4: Change template events to call methods
  1 file changed, 3 insertions(+), 2 deletions(-)
 
 diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 19e72f6..641b475 100644
+index d12094e..da9f25b 100644
 --- a/simple-todos-angular.html
 +++ b/simple-todos-angular.html
 @@ -28,9 +28,10 @@
@@ -1451,7 +1451,7 @@ index 19e72f6..641b475 100644
 2.4.9 (Apple Git-60)
 
 
-From be8045229c7b002a1280f5a2f1e058073128651d Mon Sep 17 00:00:00 2001
+From 67f8f540522edbcb5c6353729f503fbe28beeaf8 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:58:12 +0200
 Subject: [PATCH 31/39] Step 11.1: Remove the autopublish package
@@ -1462,7 +1462,7 @@ Subject: [PATCH 31/39] Step 11.1: Remove the autopublish package
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index ec2eac9..5ec67ad 100644
+index 2d2e7c5..ed1f118 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
 @@ -14,7 +14,6 @@ tracker                 # Meteor's client-side reactive programming library
@@ -1472,9 +1472,9 @@ index ec2eac9..5ec67ad 100644
 -autopublish             # Publish all data to the clients (for prototyping)
  angular@1.2.0-rc.6
  accounts-password
- accounts-ui
+ dotansimha:accounts-ui-angular
 diff --git a/.meteor/versions b/.meteor/versions
-index 6da5cab..92f965d 100644
+index fb60917..711e407 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
 @@ -6,7 +6,6 @@ angular@1.2.0-rc.6
@@ -1489,7 +1489,7 @@ index 6da5cab..92f965d 100644
 2.4.9 (Apple Git-60)
 
 
-From 2fcdc23a833d0d6f912df18d9f9e1fea57a6f87e Mon Sep 17 00:00:00 2001
+From cb7509ba26c7108bb09266679c7954b11964ae74 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:10:25 +0300
 Subject: [PATCH 32/39] Step 11.2: Add server publish function to tasks
@@ -1499,7 +1499,7 @@ Subject: [PATCH 32/39] Step 11.2: Add server publish function to tasks
  1 file changed, 6 insertions(+)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 655fe79..439a148 100644
+index 417ebd9..b54fd8f 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -72,3 +72,9 @@ Meteor.methods({
@@ -1516,7 +1516,7 @@ index 655fe79..439a148 100644
 2.4.9 (Apple Git-60)
 
 
-From 939f74bcb38b5a24e112d8ac7d02e5d8b2b6e601 Mon Sep 17 00:00:00 2001
+From 913f9e002d60edcb878323293dee75d918e8a3e6 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:11:21 +0300
 Subject: [PATCH 33/39] Step 11.3: Subscribe to tasks publication
@@ -1526,7 +1526,7 @@ Subject: [PATCH 33/39] Step 11.3: Subscribe to tasks publication
  1 file changed, 2 insertions(+)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 439a148..6464ff3 100644
+index b54fd8f..956f7a8 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -21,6 +21,8 @@ if (Meteor.isClient) {
@@ -1542,7 +1542,7 @@ index 439a148..6464ff3 100644
 2.4.9 (Apple Git-60)
 
 
-From b91e37beceaffa590476b7b405e85d713e67ec4e Mon Sep 17 00:00:00 2001
+From 8035f864a6791f5a6ae456da1585b2edb2387445 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:59:00 +0200
 Subject: [PATCH 34/39] Step 11.4: Add setPrivate button to template
@@ -1552,7 +1552,7 @@ Subject: [PATCH 34/39] Step 11.4: Add setPrivate button to template
  1 file changed, 6 insertions(+)
 
 diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 641b475..208097f 100644
+index da9f25b..1f44e28 100644
 --- a/simple-todos-angular.html
 +++ b/simple-todos-angular.html
 @@ -33,6 +33,12 @@
@@ -1572,7 +1572,7 @@ index 641b475..208097f 100644
 2.4.9 (Apple Git-60)
 
 
-From c16f39fd138422aaa142974a36cfab0e4f59159d Mon Sep 17 00:00:00 2001
+From ee73d01da9cd7275e47a7b97b24cc8c4634cb026 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:59:36 +0200
 Subject: [PATCH 35/39] Step 11.5: Add private CSS class to task
@@ -1582,7 +1582,7 @@ Subject: [PATCH 35/39] Step 11.5: Add private CSS class to task
  1 file changed, 2 insertions(+), 1 deletion(-)
 
 diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 208097f..05e0f5d 100644
+index 1f44e28..a483115 100644
 --- a/simple-todos-angular.html
 +++ b/simple-todos-angular.html
 @@ -27,7 +27,8 @@
@@ -1599,7 +1599,7 @@ index 208097f..05e0f5d 100644
 2.4.9 (Apple Git-60)
 
 
-From 9644cfb1d867b175de825cf9803ef3a8ec74668a Mon Sep 17 00:00:00 2001
+From 70f40781b1d587a9f66d5109a0cf9dd8f0681fa3 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 17:06:51 +0300
 Subject: [PATCH 36/39] Step 11.6: Add setPrivate Meteor Method
@@ -1609,7 +1609,7 @@ Subject: [PATCH 36/39] Step 11.6: Add setPrivate Meteor Method
  1 file changed, 10 insertions(+)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 6464ff3..0bd3853 100644
+index 956f7a8..49b4c12 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -72,6 +72,16 @@ Meteor.methods({
@@ -1633,7 +1633,7 @@ index 6464ff3..0bd3853 100644
 2.4.9 (Apple Git-60)
 
 
-From d1d3255975957d11f52cd66b7233b4ce1dc5d733 Mon Sep 17 00:00:00 2001
+From 936c6c1e3b79f8bda609a0da745953e0cba12242 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 17:08:29 +0300
 Subject: [PATCH 37/39] Step 11.7: Add setPrivate scope function
@@ -1643,7 +1643,7 @@ Subject: [PATCH 37/39] Step 11.7: Add setPrivate scope function
  1 file changed, 4 insertions(+)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 0bd3853..bdc75a8 100644
+index 49b4c12..a89c2dc 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -39,6 +39,10 @@ if (Meteor.isClient) {
@@ -1661,7 +1661,7 @@ index 0bd3853..bdc75a8 100644
 2.4.9 (Apple Git-60)
 
 
-From b95e7e5c7083e88adc6d4f7cceb9fe613685615c Mon Sep 17 00:00:00 2001
+From a57fd9b07e297caadcb6f050cddf7d708af3e8c0 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:59:53 +0300
 Subject: [PATCH 38/39] Step 11.8: Publish only public and owner's tasks
@@ -1671,7 +1671,7 @@ Subject: [PATCH 38/39] Step 11.8: Publish only public and owner's tasks
  1 file changed, 6 insertions(+), 1 deletion(-)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index bdc75a8..a6089ab 100644
+index a89c2dc..2b429a3 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -91,6 +91,11 @@ Meteor.methods({
@@ -1691,7 +1691,7 @@ index bdc75a8..a6089ab 100644
 2.4.9 (Apple Git-60)
 
 
-From 0951f20b03772deee83db07b41056127ace5dfe1 Mon Sep 17 00:00:00 2001
+From 30cd87728f077ae305c10dd35d59dcc0378ed175 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 16:02:20 +0300
 Subject: [PATCH 39/39] Step 11.9: Add extra security to methods
@@ -1701,7 +1701,7 @@ Subject: [PATCH 39/39] Step 11.9: Add extra security to methods
  1 file changed, 12 insertions(+)
 
 diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index a6089ab..1d371fb 100644
+index 2b429a3..a47bf45 100644
 --- a/simple-todos-angular.js
 +++ b/simple-todos-angular.js
 @@ -72,9 +72,21 @@ Meteor.methods({
-- 
2.13.6 (Apple Git-96)


From 7e764c64a202c8dfebe86968e4dcfa7268f7788f Mon Sep 17 00:00:00 2001
From: John Shea <jscruffy@hotmail.com>
Date: Sun, 15 Nov 2015 23:45:07 -0500
Subject: [PATCH 089/164] Fix typo in instructions

---
 content/angular/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/angular/step02.md b/content/angular/step02.md
index d32f2cf..6cda324 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -21,7 +21,7 @@ To start working on our todos list app, let's replace the code of the default st
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.3"}}
 
-Now let's create a simple Anuglar list repeater:
+Now let's create a simple Angular list repeater:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.4"}}
 
-- 
2.13.6 (Apple Git-96)


From 125bd29013adb38497e6542ebafb96e84d8eb105 Mon Sep 17 00:00:00 2001
From: Robert Dickert <robert.dickert@gmail.com>
Date: Wed, 9 Dec 2015 10:24:39 -0800
Subject: [PATCH 090/164] Update README.md

---
 README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 179a974..2078e10 100644
--- a/README.md
+++ b/README.md
@@ -8,7 +8,7 @@ Feel free to submit a pull request to improve the content!
 
 1. [Blaze tutorial](https://www.meteor.com/tutorials/blaze/creating-an-app): [`/content/blaze`](https://github.com/meteor/tutorials/tree/master/content/blaze)
 2. [Angular tutorial](https://www.meteor.com/tutorials/angular/creating-an-app): [`/content/angular`](https://github.com/meteor/tutorials/tree/master/content/angular)
-3. React tutorial, work in progress (not live yet): [`/content/react`](https://github.com/meteor/tutorials/tree/master/content/react)
+3. [React tutorial](https://www.meteor.com/tutorials/react/creating-an-app): [`/content/react`](https://github.com/meteor/tutorials/tree/master/content/react)
 
 ### Tutorial step-by-step repositories
 
-- 
2.13.6 (Apple Git-96)


From 023a1199cba2a565369698b92a23ba841cb367de Mon Sep 17 00:00:00 2001
From: Robert Dickert <robert.dickert@gmail.com>
Date: Wed, 9 Dec 2015 11:11:23 -0800
Subject: [PATCH 091/164] update tutorial step 2 to show correct css filename
 for each tutorial

---
 content/angular/step02.md    | 2 +-
 content/blaze/step02.md      | 2 +-
 content/react/step02.md      | 2 +-
 content/shared/adding-css.js | 5 +++++
 content/shared/adding-css.md | 4 ++--
 package.js                   | 1 +
 6 files changed, 11 insertions(+), 5 deletions(-)
 create mode 100644 content/shared/adding-css.js

diff --git a/content/angular/step02.md b/content/angular/step02.md
index 6cda324..219c293 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -50,6 +50,6 @@ All of the code in your `html` files is compiled with Angular. Angular binds the
 
 In the next step, we will see how we can use the $meteor service bind our scope data to a database collection.
 
-{{> addingCSS}}
+{{> addingCSS cssFileName="simple-todos-angular.css"}}
 
 {{/template}}
diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index 73f2a31..dcd6c56 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -32,6 +32,6 @@ You can pass data into templates from your JavaScript code by defining _helpers_
 
 In the next step, we will see how we can use helpers to make our templates display dynamic data from a database collection.
 
-{{> addingCSS}}
+{{> addingCSS cssFileName="simple-todos.css"}}
 
 {{/template}}
diff --git a/content/react/step02.md b/content/react/step02.md
index 7af05f7..fb6c238 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -76,7 +76,7 @@ Read about the features that Meteor supports in the [ecmascript README](https://
 
 * [Nikolas C. Zakas "Understanding ECMAScript 6"](https://github.com/nzakas/understandinges6)
 
-{{> addingCSS}}
+{{> addingCSS cssFileName="simple-todos-react.css"}}
 
 Now that you've added the CSS, the app should look a lot nicer. Check in your browser to see that the new styles have loaded.
 
diff --git a/content/shared/adding-css.js b/content/shared/adding-css.js
new file mode 100644
index 0000000..61e5aad
--- /dev/null
+++ b/content/shared/adding-css.js
@@ -0,0 +1,5 @@
+Template.addingCSS.helpers({
+  cssHeading (cssFileName) {
+    return `Replace ${cssFileName} with this code`;
+  }
+});
diff --git a/content/shared/adding-css.md b/content/shared/adding-css.md
index afe9aea..1f131d2 100644
--- a/content/shared/adding-css.md
+++ b/content/shared/adding-css.md
@@ -4,9 +4,9 @@
 
 Before we go any further, let's make our app look nice by adding some CSS.
 
-Since this tutorial is focused on working with HTML and JavaScript, just copy all the CSS code below into `simple-todos.css`. This is all the CSS code you will need until the end of the tutorial. The app will still work without the CSS, but it will look much nicer if you add it.
+Since this tutorial is focused on working with HTML and JavaScript, just copy all the CSS code below into `{{cssFileName}}`. This is all the CSS code you will need until the end of the tutorial. The app will still work without the CSS, but it will look much nicer if you add it.
 
-{{#codeBox "Replace simple-todos.css with this code"}}
+{{#codeBox cssHeading cssFileName}}
 ```css
 /* CSS declarations go here */
 body {
diff --git a/package.js b/package.js
index ed0e6e6..91ed42b 100644
--- a/package.js
+++ b/package.js
@@ -63,6 +63,7 @@ Package.onUse(function (api) {
 
     'content/shared/explanations.md',
     'content/shared/adding-css.md',
+    'content/shared/adding-css.js',
     'content/shared/step06.md',
     'content/shared/step07.md',
 
-- 
2.13.6 (Apple Git-96)


From a406ea5724d090ae8ee6459970880210e00a08b4 Mon Sep 17 00:00:00 2001
From: Robert Dickert <robert.dickert@gmail.com>
Date: Wed, 9 Dec 2015 11:27:26 -0800
Subject: [PATCH 092/164] add ecmascript package

---
 .meteor/packages                  |  2 ++
 package.js                        |  1 +
 packages.json                     |  3 +++
 packages/npm-container/index.js   |  9 +++++++++
 packages/npm-container/package.js | 30 ++++++++++++++++++++++++++++++
 5 files changed, 45 insertions(+)
 create mode 100644 .meteor/packages
 create mode 100644 packages.json
 create mode 100644 packages/npm-container/index.js
 create mode 100644 packages/npm-container/package.js

diff --git a/.meteor/packages b/.meteor/packages
new file mode 100644
index 0000000..21c1888
--- /dev/null
+++ b/.meteor/packages
@@ -0,0 +1,2 @@
+
+npm-container
\ No newline at end of file
diff --git a/package.js b/package.js
index 91ed42b..16505d6 100644
--- a/package.js
+++ b/package.js
@@ -14,6 +14,7 @@ Package.onUse(function (api) {
     'simple:highlight.js@1.0.9',
     'reactive-var',
     'less',
+    'ecmascript',
     'mdg:tutorial-step-diff-compiler@0.1.0',
     'mdg:tutorial-diff-box@0.3.0',
     'mdg:tutorial-registry@0.1.1'
diff --git a/packages.json b/packages.json
new file mode 100644
index 0000000..077404a
--- /dev/null
+++ b/packages.json
@@ -0,0 +1,3 @@
+{
+  
+}
\ No newline at end of file
diff --git a/packages/npm-container/index.js b/packages/npm-container/index.js
new file mode 100644
index 0000000..c3fc862
--- /dev/null
+++ b/packages/npm-container/index.js
@@ -0,0 +1,9 @@
+Meteor.npmRequire = function(moduleName) {
+  var module = Npm.require(moduleName);
+  return module;
+};
+
+Meteor.require = function(moduleName) {
+  console.warn('Meteor.require is deprecated. Please use Meteor.npmRequire instead!');
+  return Meteor.npmRequire(moduleName);
+};
\ No newline at end of file
diff --git a/packages/npm-container/package.js b/packages/npm-container/package.js
new file mode 100644
index 0000000..9fab3ce
--- /dev/null
+++ b/packages/npm-container/package.js
@@ -0,0 +1,30 @@
+var path = Npm.require('path');
+var fs = Npm.require('fs');
+
+Package.describe({
+  summary: 'Contains all your npm dependencies',
+  version: '1.2.0',
+  name: 'npm-container'
+});
+
+var packagesJsonFile = path.resolve('./packages.json');
+try {
+  var fileContent = fs.readFileSync(packagesJsonFile);
+  var packages = JSON.parse(fileContent.toString());
+  Npm.depends(packages);
+} catch (ex) {
+  console.error('ERROR: packages.json parsing error [ ' + ex.message + ' ]');
+}
+
+// Adding the app's packages.json as a used file for this package will get
+// Meteor to watch it and reload this package when it changes
+Package.onUse(function(api) {
+  api.addFiles('index.js', 'server');
+  if (api.addAssets) {
+    api.addAssets('../../packages.json', 'server');
+  } else {
+    api.addFiles('../../packages.json', 'server', {
+      isAsset: true
+    });
+  }
+});
\ No newline at end of file
-- 
2.13.6 (Apple Git-96)


From 2c4d565c7fc16eb1f2164be5032d02d9f076449a Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 4 Jan 2016 10:25:21 -0800
Subject: [PATCH 093/164] Add Windows 10 to compat list

---
 content/step00.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/step00.html b/content/step00.html
index d1381f1..d1868b7 100644
--- a/content/step00.html
+++ b/content/step00.html
@@ -7,7 +7,7 @@
 {{#markdown}}
 
   Meteor supports **OS X, Windows, and Linux**, and is simple to install. The command line installer supports Mac OS X
-  10.7 (Lion) and above, and Linux on x86 and x86_64 architectures. The Windows installer supports Windows 7, Windows 8.1, Windows Server 2008, and Windows Server 2012.
+  10.7 (Lion) and above, and Linux on x86 and x86_64 architectures. The Windows installer supports Windows 7, Windows 8.1, Windows 10, Windows Server 2008, and Windows Server 2012.
 
 ### On OS X or Linux?
 
-- 
2.13.6 (Apple Git-96)


From 9485e2584087a9d16ac00e2035008a9270a6b373 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 4 Jan 2016 10:27:14 -0800
Subject: [PATCH 094/164] Update angular

---
 repos/angular | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/repos/angular b/repos/angular
index 0951f20..dffe7b5 160000
--- a/repos/angular
+++ b/repos/angular
@@ -1 +1 @@
-Subproject commit 0951f20b03772deee83db07b41056127ace5dfe1
+Subproject commit dffe7b5384c1639b5805c91e95225626fed6d0f4
-- 
2.13.6 (Apple Git-96)


From 7736651a30d2559229a7cbcf321b2ccb11cc2b08 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Wed, 6 Jan 2016 18:17:55 -0800
Subject: [PATCH 095/164] Add Meteor Guide to the end

---
 content/angular/step12.md   | 16 +---------------
 content/blaze/step12.md     | 18 +-----------------
 content/react/step12.md     | 18 +-----------------
 content/shared/nextSteps.md | 19 +++++++++++++++++++
 package.js                  |  1 +
 5 files changed, 23 insertions(+), 49 deletions(-)
 create mode 100644 content/shared/nextSteps.md

diff --git a/content/angular/step12.md b/content/angular/step12.md
index 30983de..b9b87e0 100644
--- a/content/angular/step12.md
+++ b/content/angular/step12.md
@@ -8,20 +8,6 @@ so your friends can use the new features.
 Your app currently supports collaborating on a single todo list. To see how you
 could add more functionality, check out the [full angular-meteor tutorial](http://angular-meteor.com/).
 
-Here are some options for where you can go next:
+{{> step12NextSteps}}
 
-1. Read about [the design of the Meteor platform](/projects) to see how all of the parts fit together
-2. Check out the [complete documentation](https://docs.meteor.com)
-3. Continue to the [advanced tutorial](http://angular-meteor.com/tutorial)
-4. Explore this set of [tools]({{pathFor 'tools.info'}}) and [resources]({{pathFor 'tools.resources'}}) to help you build Meteor apps
-
-<div class="row">
-  <hr />
-  <div class="col-md-6">
-    <p>Don't forget to get on the mailing list - Meteor news, new releases, security alerts, and nothing else.</p>
-  </div>
-  <div class="col-md-6">
-    {{> emailForm}}
-  </div>
-</div>
 {{/template}}
diff --git a/content/blaze/step12.md b/content/blaze/step12.md
index 96a4542..04ff5b6 100644
--- a/content/blaze/step12.md
+++ b/content/blaze/step12.md
@@ -16,22 +16,6 @@ meteor create --example todos
 meteor create --example localmarket
 ```
 
-Here are some options for where you can go next:
-
-1. Grab a [copy of Discover Meteor](https://www.discovermeteor.com/), the best Meteor book out there
-2. Read about [the design of the Meteor platform](/projects) to see how all of the parts fit together
-3. Check out the [complete documentation](https://docs.meteor.com)
-4. Explore this set of [tools]({{pathFor 'tools.info'}}) and [resources]({{pathFor 'tools.resources'}}) to help you build Meteor apps
-5. Try this tutorial using [AngularJS](/tutorials/angular)
-
-<div class="row">
-  <hr />
-  <div class="col-md-6">
-    <p>Don't forget to get on the mailing list - Meteor news, new releases, security alerts, and nothing else.</p>
-  </div>
-  <div class="col-md-6">
-    {{> emailForm}}
-  </div>
-</div>
+{{> step12NextSteps}}
 
 {{/template}}
diff --git a/content/react/step12.md b/content/react/step12.md
index badcf84..ad3e677 100644
--- a/content/react/step12.md
+++ b/content/react/step12.md
@@ -16,22 +16,6 @@ meteor create --example todos
 meteor create --example localmarket
 ```
 
-Here are some options for where you can go next:
-
-1. Grab a [copy of Discover Meteor](https://www.discovermeteor.com/), the best Meteor book out there
-2. Read about [the design of the Meteor platform](/projects) to see how all of the parts fit together
-3. Check out the [complete documentation](https://docs.meteor.com)
-4. Explore this set of [tools]({{pathFor 'tools.info'}}) and [resources]({{pathFor 'tools.resources'}}) to help you build Meteor apps
-5. Try this tutorial using [AngularJS](/tutorials/angular)
-
-<div class="row">
-  <hr />
-  <div class="col-md-6">
-    <p>Don't forget to get on the mailing list - Meteor news, new releases, security alerts, and nothing else.</p>
-  </div>
-  <div class="col-md-6">
-    {{> emailForm}}
-  </div>
-</div>
+{{> step12NextSteps}}
 
 {{/template}}
diff --git a/content/shared/nextSteps.md b/content/shared/nextSteps.md
new file mode 100644
index 0000000..6367522
--- /dev/null
+++ b/content/shared/nextSteps.md
@@ -0,0 +1,19 @@
+{{#template name="step12NextSteps"}}
+
+Here are some options for where you can go next:
+
+1. Read the [Meteor Guide](http://guide.meteor.com) to learn about best practices and useful community packages
+2. Check out the [complete documentation](https://docs.meteor.com)
+3. Explore [tools]({{pathFor 'tools.info'}}) and [resources]({{pathFor 'tools.resources'}}) to help you build Meteor apps
+
+<div class="row">
+  <hr />
+  <div class="col-md-6">
+    <p>Don't forget to get on the mailing list - Meteor news, new releases, security alerts, and nothing else.</p>
+  </div>
+  <div class="col-md-6">
+    {{> emailForm}}
+  </div>
+</div>
+
+{{/template}}
diff --git a/package.js b/package.js
index 16505d6..bc7689c 100644
--- a/package.js
+++ b/package.js
@@ -65,6 +65,7 @@ Package.onUse(function (api) {
     'content/shared/explanations.md',
     'content/shared/adding-css.md',
     'content/shared/adding-css.js',
+    'content/shared/nextSteps.md',
     'content/shared/step06.md',
     'content/shared/step07.md',
 
-- 
2.13.6 (Apple Git-96)


From c293fdfcbd09b89715755a866807e33341674cd7 Mon Sep 17 00:00:00 2001
From: samudranb <samudranb@gmail.com>
Date: Sun, 14 Feb 2016 18:26:50 -0800
Subject: [PATCH 096/164] Added a paragraph to remove confusion about body and
 template

As a beginner, I got confused about how body was handled separately from templates, because "Template.body" and "Template.myTemplate" were both being used without (IMHO) adequate explanation.

On googling, I found:
1. this StackOverflow question: http://stackoverflow.com/questions/29947563/template-body-vs-template-mytemplate/29948336#29948336
2. this open issue: https://github.com/meteor/meteor/issues/4176

I thought I'd suggest the changes to the tutorial in a pull request, so this could be resolved and avoid further confusion to other beginners.
---
 content/blaze/step02.md | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index dcd6c56..384b348 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -20,10 +20,12 @@ Now let's find out what all these bits of code are doing!
 
 Meteor parses all of the HTML files in your app folder and identifies three top-level tags: **&lt;head>**, **&lt;body>**, and **&lt;template>**.
 
-Everything inside any &lt;head> tags is added to the `head` section of the HTML sent to the client, and everything inside &lt;body> tags is added to the `body` section, just like in a regular HTML file.
+Everything inside any &lt;head> tags is added to the `head` section of the HTML sent to the client, and everything inside &lt;body> tags is added to the `body` section, just like in a regular HTML file. 
 
 Everything inside &lt;template> tags is compiled into Meteor _templates_, which can be included inside HTML with `{{dstache}}> templateName}}` or referenced in your JavaScript with `Template.templateName`.
 
+Also, the `body` section can be referenced in your JavaScript with `Template.body`. Think of it as a special "parent" template, that can include the other child templates. 
+
 ### Adding logic and data to templates
 
 All of the code in your HTML files is compiled with [Meteor's Spacebars compiler](https://github.com/meteor/meteor/blob/devel/packages/spacebars/README.md). Spacebars uses statements surrounded by double curly braces such as `{{dstache}}#each}}` and `{{dstache}}#if}}` to let you add logic and data to your views.
-- 
2.13.6 (Apple Git-96)


From 170fca42d79c3f9ab88ebdb392350445071d7267 Mon Sep 17 00:00:00 2001
From: David Glasser <glasser@davidglasser.net>
Date: Fri, 11 Mar 2016 19:25:07 -0800
Subject: [PATCH 097/164] Update submodule to point to a real commit

---
 repos/angular | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/repos/angular b/repos/angular
index dffe7b5..30cd877 160000
--- a/repos/angular
+++ b/repos/angular
@@ -1 +1 @@
-Subproject commit dffe7b5384c1639b5805c91e95225626fed6d0f4
+Subproject commit 30cd87728f077ae305c10dd35d59dcc0378ed175
-- 
2.13.6 (Apple Git-96)


From 15d6aa025f034d0dffc1a6efa42477c955a169d6 Mon Sep 17 00:00:00 2001
From: David Glasser <glasser@davidglasser.net>
Date: Fri, 11 Mar 2016 19:35:20 -0800
Subject: [PATCH 098/164] Update submodules to remove step 6

---
 repos/angular | 2 +-
 repos/blaze   | 2 +-
 repos/react   | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/repos/angular b/repos/angular
index 30cd877..c48994a 160000
--- a/repos/angular
+++ b/repos/angular
@@ -1 +1 @@
-Subproject commit 30cd87728f077ae305c10dd35d59dcc0378ed175
+Subproject commit c48994ab0683d2ba1029c7c5a053a7f68a5390bb
diff --git a/repos/blaze b/repos/blaze
index b595720..17b00f0 160000
--- a/repos/blaze
+++ b/repos/blaze
@@ -1 +1 @@
-Subproject commit b5957208d50a064a4a22780c7ef76259691b2c7a
+Subproject commit 17b00f034ea0273a4eff10ab9ec4774fb7f98a7e
diff --git a/repos/react b/repos/react
index b847140..3babdf6 160000
--- a/repos/react
+++ b/repos/react
@@ -1 +1 @@
-Subproject commit b847140c6490cf3a1734199deb26d5758ea0c9ac
+Subproject commit 3babdf6e68e7324735500a9203460b15915608ce
-- 
2.13.6 (Apple Git-96)


From de195c73d7d6115e772002597e76e6dc14e7a5ca Mon Sep 17 00:00:00 2001
From: David Glasser <glasser@davidglasser.net>
Date: Fri, 11 Mar 2016 19:38:03 -0800
Subject: [PATCH 099/164] Run process-repo.rb

Note that all the "2.6.3" lines are just stating the version of git I
use.
---
 generated/angular.multi.patch | 190 ++++++++++++++++++++---------------------
 generated/blaze.multi.patch   | 164 +++++++++++++++++------------------
 generated/react.multi.patch   | 194 +++++++++++++++++++++---------------------
 3 files changed, 274 insertions(+), 274 deletions(-)

diff --git a/generated/angular.multi.patch b/generated/angular.multi.patch
index e4f79c2..eff27f4 100644
--- a/generated/angular.multi.patch
+++ b/generated/angular.multi.patch
@@ -234,7 +234,7 @@ index 0000000..4f8c65d
 +  });
 +}
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
 From 54b4fc3cc09f1071b204d2a722a9aa43df0e4a9e Mon Sep 17 00:00:00 2001
@@ -370,7 +370,7 @@ index e378b68..4a7a39b 100644
 +webapp@1.2.3
  webapp-hashing@1.0.5
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
 From 6fb657fa7f9189200a1725c8b8d9e261fc65dba0 Mon Sep 17 00:00:00 2001
@@ -409,7 +409,7 @@ index 30ca9b0..1167ed1 100644
 +</body>
 \ No newline at end of file
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
 From 536a1e25561a9bd9e243e820144d2dc3b271ee62 Mon Sep 17 00:00:00 2001
@@ -461,7 +461,7 @@ index 4f8c65d..fa676f2 100644
 +  }]);
  }
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
 From af67f32ed8e1a7a50111ca06aa7a492288c5d458 Mon Sep 17 00:00:00 2001
@@ -494,7 +494,7 @@ index 1167ed1..6c3ebe6 100644
  </body>
 \ No newline at end of file
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
 From f7b3c6756898b1909e11dbf76a00669778f202ed Mon Sep 17 00:00:00 2001
@@ -639,7 +639,7 @@ index b6b4052..0bca5d2 100644
 +}
 +
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
 From bd137585ec3e93383f3d85d7549fc3b6ece59e1d Mon Sep 17 00:00:00 2001
@@ -679,7 +679,7 @@ index fa676f2..9a9b236 100644
 +    }]);
  }
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
 From 051ed54c2a220f8c344ab2e9d8c878facb54bb0c Mon Sep 17 00:00:00 2001
@@ -710,7 +710,7 @@ index 6c3ebe6..ef1a923 100644
  
    <ul>
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
 From b4bbb697c0147ba71087b5e4260f32f513d3390c Mon Sep 17 00:00:00 2001
@@ -740,7 +740,7 @@ index 9a9b236..e9dc878 100644
      }]);
  }
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
 From 5528d73545bfb1381b2dc21313e3ad32cd40401f Mon Sep 17 00:00:00 2001
@@ -768,7 +768,7 @@ index e9dc878..36ab6d1 100644
        $scope.addTask = function (newTask) {
          $scope.tasks.push( {
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
 From 60ba697f05f60f9e8f021ef0fe05effcb0f52fc0 Mon Sep 17 00:00:00 2001
@@ -800,13 +800,13 @@ index ef1a923..54765ef 100644
  
  </div>
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 0cfcbd018b7d5bd32003160c2f42d0977f6f7217 Mon Sep 17 00:00:00 2001
+From 3d28d1c4a755457028cf54d9b280970e34ee6a9d Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:47:17 +0200
-Subject: [PATCH 12/39] Step 7.1: Remove ng-app
+Subject: [PATCH 12/39] Step 6.1: Remove ng-app
 
 ---
  simple-todos-angular.html | 1 -
@@ -825,13 +825,13 @@ index 54765ef..364fc82 100644
  
    <header>
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 5c7b2bbc168414348404ed513549e3c76715f5bf Mon Sep 17 00:00:00 2001
+From 99d00a58c6dceb7054043c15e9bb6d47f4cf500b Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:11:07 +0300
-Subject: [PATCH 13/39] Step 7.2: Bootstrap Angular to mobile as well
+Subject: [PATCH 13/39] Step 6.2: Bootstrap Angular to mobile as well
 
 ---
  simple-todos-angular.js | 9 +++++++++
@@ -858,13 +858,13 @@ index 36ab6d1..b002918 100644
      function ($scope, $meteor) {
  
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 8281bede83ca7bfb1680709ac11770250feaa9ff Mon Sep 17 00:00:00 2001
+From 433b7279aa5a10f07dbbe635575429007cb93197 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:48:18 +0200
-Subject: [PATCH 14/39] Step 8.1: Add hideComplete checkbox to template
+Subject: [PATCH 14/39] Step 7.1: Add hideComplete checkbox to template
 
 ---
  simple-todos-angular.html | 5 +++++
@@ -887,13 +887,13 @@ index 364fc82..e03d952 100644
      <form class="new-task" ng-submit="addTask(newTask); newTask='';">
        <input ng-model="newTask" type="text"
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 7c089e2da80cb1d02af16f8cb170389ffbe5cd55 Mon Sep 17 00:00:00 2001
+From a7861762653c318041327988ce19491585a179ef Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:14:54 +0300
-Subject: [PATCH 15/39] Step 8.2: Watch hideCompleted and change the query
+Subject: [PATCH 15/39] Step 7.2: Watch hideCompleted and change the query
  variable
 
 ---
@@ -918,13 +918,13 @@ index b002918..e759172 100644
      }]);
  }
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 555e830a7667ccc7c200ba2c5f1cb11f812009c8 Mon Sep 17 00:00:00 2001
+From 27fa922779779c3776c7f4a225e16bca00f70c18 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:17:07 +0300
-Subject: [PATCH 16/39] Step 8.3: Change the Collection to use query parameter
+Subject: [PATCH 16/39] Step 7.3: Change the Collection to use query parameter
 
 ---
  simple-todos-angular.js | 4 ++--
@@ -946,13 +946,13 @@ index e759172..071be1f 100644
  
        $scope.addTask = function (newTask) {
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 8de554738cd12768383b74cf066057a43a971081 Mon Sep 17 00:00:00 2001
+From bd6b3849890abf633b3ed6e1b456ee691dca31f6 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:17:59 +0300
-Subject: [PATCH 17/39] Step 8.4: Make query parameter reactive
+Subject: [PATCH 17/39] Step 7.4: Make query parameter reactive
 
 ---
  simple-todos-angular.js | 2 +-
@@ -972,13 +972,13 @@ index 071be1f..24c55fa 100644
  
        $scope.addTask = function (newTask) {
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 7c724675fd4e5f8bc3b433106181e7103f63fd97 Mon Sep 17 00:00:00 2001
+From 3350971e0f768549142da190144eb5cafdef500c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:19:38 +0300
-Subject: [PATCH 18/39] Step 8.5: Add incompleteCount to scope
+Subject: [PATCH 18/39] Step 7.5: Add incompleteCount to scope
 
 ---
  simple-todos-angular.js | 4 ++++
@@ -999,13 +999,13 @@ index 24c55fa..5934036 100644
      }]);
  }
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From abf9a8d56f1f058ed20c9ccd8378e8de161d882b Mon Sep 17 00:00:00 2001
+From 0298bed3c151c9a003074c90dedfe1c93a21fc05 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:51:49 +0200
-Subject: [PATCH 19/39] Step 8.6: Add incompleteCount to header
+Subject: [PATCH 19/39] Step 7.6: Add incompleteCount to header
 
 ---
  simple-todos-angular.html | 2 +-
@@ -1025,13 +1025,13 @@ index e03d952..ef5bc59 100644
      <label class="hide-completed">
        <input type="checkbox" ng-model="hideCompleted"/>
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From eca2a40c5edc1708b15395e06bfafe134bd4c2ca Mon Sep 17 00:00:00 2001
+From c030d9b61a75a96d98ccaa90dce71cc1396f3d60 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Mon, 9 Nov 2015 11:41:07 +0200
-Subject: [PATCH 20/39] Step 9.1: Add accounts-password and
+Subject: [PATCH 20/39] Step 8.1: Add accounts-password and
  dotansimha:accounts-ui-angular packages
 
 ---
@@ -1124,13 +1124,13 @@ index 4a7a39b..cf8e714 100644
  tracker@1.0.9
  ui@1.0.8
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 6267f9440bc6b8c86c8214cca2e5251970d3a8f8 Mon Sep 17 00:00:00 2001
+From d11c7e6703a0fbe3b9d998f05aa882af33daec70 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Mon, 9 Nov 2015 11:46:05 +0200
-Subject: [PATCH 21/39] Step 9.2: Add `accounts.ui` dependency to Angular app
+Subject: [PATCH 21/39] Step 8.2: Add `accounts.ui` dependency to Angular app
 
 ---
  simple-todos-angular.js | 2 +-
@@ -1150,13 +1150,13 @@ index 5934036..7ca4577 100644
    function onReady() {
      angular.bootstrap(document, ['simple-todos']);
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 70e744b65b8aa04150cceebd37d5dc623ae383b6 Mon Sep 17 00:00:00 2001
+From 6991ba8819734e10ed159c70b7a56a3f6cb91047 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Mon, 9 Nov 2015 11:54:35 +0200
-Subject: [PATCH 22/39] Step 9.3: Add loginButtons directive
+Subject: [PATCH 22/39] Step 8.3: Add loginButtons directive
 
 ---
  simple-todos-angular.html | 2 ++
@@ -1176,13 +1176,13 @@ index ef5bc59..5fdbfb8 100644
      <form class="new-task" ng-submit="addTask(newTask); newTask='';">
        <input ng-model="newTask" type="text"
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 4f85b07d771feed9d392bdd9f8d8046521cc7bf3 Mon Sep 17 00:00:00 2001
+From c10b140fc33cb5410b052e22a9fd9da477ceb758 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:27:12 +0300
-Subject: [PATCH 23/39] Step 9.4: Configure accounts UI to use usernames
+Subject: [PATCH 23/39] Step 8.4: Configure accounts UI to use usernames
  instead of email
 
 ---
@@ -1205,13 +1205,13 @@ index 7ca4577..0b277df 100644
    angular.module('simple-todos',['angular-meteor', 'accounts.ui']);
  
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 55e9045c42743f0cd1370e0b3af9ce641532a780 Mon Sep 17 00:00:00 2001
+From 2e7884368e636e0acb643430e75d1bd1332dbe51 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 13:29:48 +0300
-Subject: [PATCH 24/39] Step 9.5: Add owner and username to created task
+Subject: [PATCH 24/39] Step 8.5: Add owner and username to created task
 
 ---
  simple-todos-angular.js | 8 +++++---
@@ -1238,13 +1238,13 @@ index 0b277df..a83dad1 100644
        };
  
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 985ea3a7fdd00907ddbf6ceee36125e7d32d90f9 Mon Sep 17 00:00:00 2001
+From 18d272c5a582cc0c8edcd3c1cc1cc99360f3d5ca Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:55:26 +0200
-Subject: [PATCH 25/39] Step 9.6: Hide new task form if user is not logged in
+Subject: [PATCH 25/39] Step 8.6: Hide new task form if user is not logged in
 
 ---
  simple-todos-angular.html | 4 +++-
@@ -1266,13 +1266,13 @@ index 5fdbfb8..98c6a82 100644
               name="text" placeholder="Type to add new tasks" />
      </form>
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 003f2ba777ce625b84cdbd0aab7dbe63dfd269b6 Mon Sep 17 00:00:00 2001
+From ae6c5d8c37d820c52a1577176a1e46805b67b93a Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:56:09 +0200
-Subject: [PATCH 26/39] Step 9.7: Add username to the displayed task
+Subject: [PATCH 26/39] Step 8.7: Add username to the displayed task
 
 ---
  simple-todos-angular.html | 4 +++-
@@ -1294,13 +1294,13 @@ index 98c6a82..d12094e 100644
    </ul>
  
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From e891932002ddf3deac819ffe69795bba21d41631 Mon Sep 17 00:00:00 2001
+From 3c4ef9646affd3ae74c83dbd0623fc283854fe47 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:56:52 +0200
-Subject: [PATCH 27/39] Step 10.1: Remove the insecure package
+Subject: [PATCH 27/39] Step 9.1: Remove the insecure package
 
 ---
  .meteor/packages | 1 -
@@ -1332,13 +1332,13 @@ index cf8e714..fb60917 100644
  lai:collection-extensions@0.1.4
  launch-screen@1.0.4
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 16fe088c181ede4cfb733a359356cafd715ca3b0 Mon Sep 17 00:00:00 2001
+From cbbf8aed7c84eaecbf34b72863945924211728e4 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:02:50 +0300
-Subject: [PATCH 28/39] Step 10.2: Add Meteor Methods for add, delete and check
+Subject: [PATCH 28/39] Step 9.2: Add Meteor Methods for add, delete and check
  tasks
 
 ---
@@ -1376,13 +1376,13 @@ index a83dad1..b10a928 100644
 +  }
 +});
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From f7271f737a1852fd445bd7622c0b4aa692e2f6c4 Mon Sep 17 00:00:00 2001
+From ad3d3157c47260889e135d78213b82ed168ebd7c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:05:25 +0300
-Subject: [PATCH 29/39] Step 10.3: Add scope functions to call the Meteor
+Subject: [PATCH 29/39] Step 9.3: Add scope functions to call the Meteor
  methods
 
 ---
@@ -1418,13 +1418,13 @@ index b10a928..417ebd9 100644
  
        $scope.$watch('hideCompleted', function() {
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From ac0c8565f3697ad5c41379a98503ff93427ebb89 Mon Sep 17 00:00:00 2001
+From 0ed0f945ae39b7974d17ea8d4327e3f1352e12b8 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:57:43 +0200
-Subject: [PATCH 30/39] Step 10.4: Change template events to call methods
+Subject: [PATCH 30/39] Step 9.4: Change template events to call methods
 
 ---
  simple-todos-angular.html | 5 +++--
@@ -1448,13 +1448,13 @@ index d12094e..da9f25b 100644
        <span class="text">
          <strong>{{task.username}}</strong> - {{task.text}}
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 67f8f540522edbcb5c6353729f503fbe28beeaf8 Mon Sep 17 00:00:00 2001
+From 4be42a7c3a1d418bcf6d5e0f9db3c650c7679cd3 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:58:12 +0200
-Subject: [PATCH 31/39] Step 11.1: Remove the autopublish package
+Subject: [PATCH 31/39] Step 10.1: Remove the autopublish package
 
 ---
  .meteor/packages | 1 -
@@ -1486,13 +1486,13 @@ index fb60917..711e407 100644
  babel-compiler@5.8.24_1
  babel-runtime@0.1.4
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From cb7509ba26c7108bb09266679c7954b11964ae74 Mon Sep 17 00:00:00 2001
+From c03a6b73794726ac8a01f8e494527ecaf202e4c3 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:10:25 +0300
-Subject: [PATCH 32/39] Step 11.2: Add server publish function to tasks
+Subject: [PATCH 32/39] Step 10.2: Add server publish function to tasks
 
 ---
  simple-todos-angular.js | 6 ++++++
@@ -1513,13 +1513,13 @@ index 417ebd9..b54fd8f 100644
 +  });
 +}
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 913f9e002d60edcb878323293dee75d918e8a3e6 Mon Sep 17 00:00:00 2001
+From 09976ce1f33a0fc03d28d3655e041d3f7c4dd80e Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:11:21 +0300
-Subject: [PATCH 33/39] Step 11.3: Subscribe to tasks publication
+Subject: [PATCH 33/39] Step 10.3: Subscribe to tasks publication
 
 ---
  simple-todos-angular.js | 2 ++
@@ -1539,13 +1539,13 @@ index b54fd8f..956f7a8 100644
          return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
        });
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 8035f864a6791f5a6ae456da1585b2edb2387445 Mon Sep 17 00:00:00 2001
+From acf6073db5f556dc0c5e1c90be38a2041387bf81 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:59:00 +0200
-Subject: [PATCH 34/39] Step 11.4: Add setPrivate button to template
+Subject: [PATCH 34/39] Step 10.4: Add setPrivate button to template
 
 ---
  simple-todos-angular.html | 6 ++++++
@@ -1569,13 +1569,13 @@ index da9f25b..1f44e28 100644
          <strong>{{task.username}}</strong> - {{task.text}}
        </span>
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From ee73d01da9cd7275e47a7b97b24cc8c4634cb026 Mon Sep 17 00:00:00 2001
+From 2df1dc1276c67d789c09fa0c362874ffbefd03ea Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sun, 8 Nov 2015 02:59:36 +0200
-Subject: [PATCH 35/39] Step 11.5: Add private CSS class to task
+Subject: [PATCH 35/39] Step 10.5: Add private CSS class to task
 
 ---
  simple-todos-angular.html | 3 ++-
@@ -1596,13 +1596,13 @@ index 1f44e28..a483115 100644
  
        <input type="checkbox" ng-checked="task.checked"
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 70f40781b1d587a9f66d5109a0cf9dd8f0681fa3 Mon Sep 17 00:00:00 2001
+From fa1d1964b37212e64aa9cc8ef341f2504b6f13a9 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 17:06:51 +0300
-Subject: [PATCH 36/39] Step 11.6: Add setPrivate Meteor Method
+Subject: [PATCH 36/39] Step 10.6: Add setPrivate Meteor Method
 
 ---
  simple-todos-angular.js | 10 ++++++++++
@@ -1630,13 +1630,13 @@ index 956f7a8..49b4c12 100644
  });
  
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 936c6c1e3b79f8bda609a0da745953e0cba12242 Mon Sep 17 00:00:00 2001
+From 9db2c65e0dd9821bea2fa1a1690a5e1bf2c0a644 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 17:08:29 +0300
-Subject: [PATCH 37/39] Step 11.7: Add setPrivate scope function
+Subject: [PATCH 37/39] Step 10.7: Add setPrivate scope function
 
 ---
  simple-todos-angular.js | 4 ++++
@@ -1658,13 +1658,13 @@ index 49b4c12..a89c2dc 100644
          if ($scope.hideCompleted)
            $scope.query = {checked: {$ne: true}};
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From a57fd9b07e297caadcb6f050cddf7d708af3e8c0 Mon Sep 17 00:00:00 2001
+From e72d2ec35782e6a00fc41d84687e39ca6404be39 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 15:59:53 +0300
-Subject: [PATCH 38/39] Step 11.8: Publish only public and owner's tasks
+Subject: [PATCH 38/39] Step 10.8: Publish only public and owner's tasks
 
 ---
  simple-todos-angular.js | 7 ++++++-
@@ -1688,13 +1688,13 @@ index a89c2dc..2b429a3 100644
    });
  }
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
 
-From 30cd87728f077ae305c10dd35d59dcc0378ed175 Mon Sep 17 00:00:00 2001
+From c48994ab0683d2ba1029c7c5a053a7f68a5390bb Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
 Date: Sat, 18 Jul 2015 16:02:20 +0300
-Subject: [PATCH 39/39] Step 11.9: Add extra security to methods
+Subject: [PATCH 39/39] Step 10.9: Add extra security to methods
 
 ---
  simple-todos-angular.js | 12 ++++++++++++
@@ -1727,5 +1727,5 @@ index 2b429a3..a47bf45 100644
    },
    setPrivate: function (taskId, setToPrivate) {
 -- 
-2.4.9 (Apple Git-60)
+2.6.3
 
diff --git a/generated/blaze.multi.patch b/generated/blaze.multi.patch
index 4f6a996..3edc69f 100644
--- a/generated/blaze.multi.patch
+++ b/generated/blaze.multi.patch
@@ -201,7 +201,7 @@ index 0000000..4f8c65d
 +  });
 +}
 -- 
-2.2.1
+2.6.3
 
 
 From be5979a8eae5766f74314e57f41037f4977d1372 Mon Sep 17 00:00:00 2001
@@ -246,7 +246,7 @@ index b08c7c3..95624e7 100644
 +  <li>{{text}}</li>
  </template>
 -- 
-2.2.1
+2.6.3
 
 
 From eda253878e20ba2577f28fe6fd7c3ce5090aec18 Mon Sep 17 00:00:00 2001
@@ -294,7 +294,7 @@ index 4f8c65d..871b655 100644
    });
  }
 -- 
-2.2.1
+2.6.3
 
 
 From e15faa0c628c7756e51d2470432f9aa548729739 Mon Sep 17 00:00:00 2001
@@ -438,7 +438,7 @@ index b6b4052..ed5e77e 100644
 +  }
 +}
 -- 
-2.2.1
+2.6.3
 
 
 From f78906af3d2d15fdb1851ff28122f9e08bc4ac9f Mon Sep 17 00:00:00 2001
@@ -472,7 +472,7 @@ index 871b655..69fdf2c 100644
    });
  }
 -- 
-2.2.1
+2.6.3
 
 
 From 8434ab7042eb750c50ab58efd7231f1c97c630ed Mon Sep 17 00:00:00 2001
@@ -500,7 +500,7 @@ index 95624e7..e31aef1 100644
  
      <ul>
 -- 
-2.2.1
+2.6.3
 
 
 From 7a1ace1482bbdd5ce38aa5db28ecb20ce0e12863 Mon Sep 17 00:00:00 2001
@@ -541,7 +541,7 @@ index 69fdf2c..8bfe857 100644
 +  });
  }
 -- 
-2.2.1
+2.6.3
 
 
 From a06c2235fa31bb876edc2f62ba62310dee40ab6c Mon Sep 17 00:00:00 2001
@@ -568,7 +568,7 @@ index 8bfe857..545a1db 100644
    });
  
 -- 
-2.2.1
+2.6.3
 
 
 From 5cdfa73dcd1a1973bf31e76ffb0e6af96d9a2d8a Mon Sep 17 00:00:00 2001
@@ -598,7 +598,7 @@ index e31aef1..94341cc 100644
 +  </li>
  </template>
 -- 
-2.2.1
+2.6.3
 
 
 From 383896358ebfb53c237a8611fc11a86aa71fbbf6 Mon Sep 17 00:00:00 2001
@@ -632,13 +632,13 @@ index 545a1db..36bdc0c 100644
 +  });
  }
 -- 
-2.2.1
+2.6.3
 
 
-From e62e4c1f8ca6f9808b6f3a78c39c4874dffdcbb4 Mon Sep 17 00:00:00 2001
+From 38cbb935edd47cf82fba70f2c3f865d0c5a1a55b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:24:18 -0700
-Subject: [PATCH 11/34] Step 8.1: Add hide-completed checkbox to HTML
+Subject: [PATCH 11/34] Step 7.1: Add hide-completed checkbox to HTML
 
 ---
  simple-todos.html | 5 +++++
@@ -661,13 +661,13 @@ index 94341cc..7d837a9 100644
          <input type="text" name="text" placeholder="Type to add new tasks" />
        </form>
 -- 
-2.2.1
+2.6.3
 
 
-From 8a5390d3f596e1c2cefe56bfd417838ca834978c Mon Sep 17 00:00:00 2001
+From 47aef71308f768acf9bd65a5ae9234e3ed720feb Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:24:58 -0700
-Subject: [PATCH 12/34] Step 8.2: Add event handler for checkbox
+Subject: [PATCH 12/34] Step 7.2: Add event handler for checkbox
 
 ---
  simple-todos.js | 3 +++
@@ -688,13 +688,13 @@ index 36bdc0c..19f7ffd 100644
    });
  
 -- 
-2.2.1
+2.6.3
 
 
-From 3352071c6d1c414f94ee21038f28c45651d6216c Mon Sep 17 00:00:00 2001
+From a44b00fc6c73b0f35bf0a89f2d261d3560bf2025 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:25:38 -0700
-Subject: [PATCH 13/34] Step 8.3: Add helpers to body template
+Subject: [PATCH 13/34] Step 7.3: Add helpers to body template
 
 ---
  simple-todos.js | 12 ++++++++++--
@@ -724,13 +724,13 @@ index 19f7ffd..546fbe2 100644
    });
  
 -- 
-2.2.1
+2.6.3
 
 
-From d7e04b692a361153918f4a88548dfdc1c0220367 Mon Sep 17 00:00:00 2001
+From c3602209d76651d88761c667824f1b4f3fe5e125 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:26:17 -0700
-Subject: [PATCH 14/34] Step 8.4: Add incompleteCount helper to body
+Subject: [PATCH 14/34] Step 7.4: Add incompleteCount helper to body
 
 ---
  simple-todos.js | 3 +++
@@ -751,13 +751,13 @@ index 546fbe2..81bc5a9 100644
    });
  
 -- 
-2.2.1
+2.6.3
 
 
-From 48c14895d510dd095da3e114a40152d9291cbb83 Mon Sep 17 00:00:00 2001
+From 64d03503aa6830e56ef98f2d24fea4b079c4516d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:26:37 -0700
-Subject: [PATCH 15/34] Step 8.5: Display incompleteCount
+Subject: [PATCH 15/34] Step 7.5: Display incompleteCount
 
 ---
  simple-todos.html | 2 +-
@@ -777,13 +777,13 @@ index 7d837a9..cb9b6f1 100644
        <label class="hide-completed">
          <input type="checkbox" checked="{{hideCompleted}}" />
 -- 
-2.2.1
+2.6.3
 
 
-From 36e2490f9302894bb63ce241343da41519b03600 Mon Sep 17 00:00:00 2001
+From 34072bdcbf906041634046dc2131bcafc71b9294 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:27:03 -0700
-Subject: [PATCH 16/34] Step 9.1: Add accounts-ui and accounts-password
+Subject: [PATCH 16/34] Step 8.1: Add accounts-ui and accounts-password
 
 ---
  .meteor/packages |  2 ++
@@ -852,13 +852,13 @@ index 410e1d9..26385bb 100644
  tracker@1.0.7
  ui@1.0.6
 -- 
-2.2.1
+2.6.3
 
 
-From 788b22e96afdbb0fb604834f4d08c61bb0178628 Mon Sep 17 00:00:00 2001
+From fb26978b41b31ce197bda1062ce61384cb15f548 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:27:23 -0700
-Subject: [PATCH 17/34] Step 9.2: Include loginButtons
+Subject: [PATCH 17/34] Step 8.2: Include loginButtons
 
 ---
  simple-todos.html | 2 ++
@@ -878,13 +878,13 @@ index cb9b6f1..55f385c 100644
          <input type="text" name="text" placeholder="Type to add new tasks" />
        </form>
 -- 
-2.2.1
+2.6.3
 
 
-From ddf3246896747a89f96aa64788f3daeca2e9a5c6 Mon Sep 17 00:00:00 2001
+From ea56ab8a78ec620f9a59a5cf66a82ee3bc06774f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:27:46 -0700
-Subject: [PATCH 18/34] Step 9.3: Configure accounts-ui
+Subject: [PATCH 18/34] Step 8.3: Configure accounts-ui
 
 ---
  simple-todos.js | 4 ++++
@@ -904,13 +904,13 @@ index 81bc5a9..0d524f7 100644
 +  });
  }
 -- 
-2.2.1
+2.6.3
 
 
-From cd80f2966275060c64e4418c44cf13669386ce4d Mon Sep 17 00:00:00 2001
+From dff06692877ca27f212f12140ad7ec4d660edff3 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:28:24 -0700
-Subject: [PATCH 19/34] Step 9.4: Update insert to include user data
+Subject: [PATCH 19/34] Step 8.4: Update insert to include user data
 
 ---
  simple-todos.js | 4 +++-
@@ -932,13 +932,13 @@ index 0d524f7..cf0bd1e 100644
  
        // Clear form
 -- 
-2.2.1
+2.6.3
 
 
-From 29cff394ae08784db32c90affdc3bf8686b21d83 Mon Sep 17 00:00:00 2001
+From 65abbd15b9ec559cabc422af22e39291f176b6c0 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:28:47 -0700
-Subject: [PATCH 20/34] Step 9.5: Only show add task form if logged in
+Subject: [PATCH 20/34] Step 8.5: Only show add task form if logged in
 
 ---
  simple-todos.html | 8 +++++---
@@ -964,13 +964,13 @@ index 55f385c..9e4b61a 100644
  
      <ul>
 -- 
-2.2.1
+2.6.3
 
 
-From d7ad84ff5ae149e78621c85a1d2fd32959439f29 Mon Sep 17 00:00:00 2001
+From e1f7287dbb7750163d7dca971a6d10c8301014aa Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:29:11 -0700
-Subject: [PATCH 21/34] Step 9.6: Display username next to task
+Subject: [PATCH 21/34] Step 8.6: Display username next to task
 
 ---
  simple-todos.html | 2 +-
@@ -989,13 +989,13 @@ index 9e4b61a..55c1dc9 100644
    </li>
  </template>
 -- 
-2.2.1
+2.6.3
 
 
-From 59808d546321d201594a14dfa6a84c4a28eab53a Mon Sep 17 00:00:00 2001
+From 189b5aadecdaa2a5c44992f1abd27a5f9495bf8b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:29:52 -0700
-Subject: [PATCH 22/34] Step 10.1: Remove insecure package
+Subject: [PATCH 22/34] Step 9.1: Remove insecure package
 
 ---
  .meteor/packages | 1 -
@@ -1026,13 +1026,13 @@ index 26385bb..6a03dd0 100644
  json@1.0.3
  launch-screen@1.0.2
 -- 
-2.2.1
+2.6.3
 
 
-From c209b47dcce29206ee5235e09817558440905a6e Mon Sep 17 00:00:00 2001
+From 7a680b88da2fc82820ee481f7f4f1a0b1b4a947e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:30:20 -0700
-Subject: [PATCH 23/34] Step 10.2: Define some methods
+Subject: [PATCH 23/34] Step 9.2: Define some methods
 
 ---
  simple-todos.js | 22 ++++++++++++++++++++++
@@ -1069,13 +1069,13 @@ index cf0bd1e..40edc1a 100644
 +  }
 +});
 -- 
-2.2.1
+2.6.3
 
 
-From 7f422feef91339c9ffe9afd0a6069a14297f45b4 Mon Sep 17 00:00:00 2001
+From c3613e3ede173c3624d5a93409fdbd947ff44825 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:31:24 -0700
-Subject: [PATCH 24/34] Step 10.3: Replace insert with addTask method
+Subject: [PATCH 24/34] Step 9.3: Replace insert with addTask method
 
 ---
  simple-todos.js | 7 +------
@@ -1100,13 +1100,13 @@ index 40edc1a..3f35197 100644
        // Clear form
        event.target.text.value = "";
 -- 
-2.2.1
+2.6.3
 
 
-From 40f20dec61f94269f434f8e6600f52e48dab9c59 Mon Sep 17 00:00:00 2001
+From 27f8d1a79a05667342a7ffdbe19074d8398a248c Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:31:46 -0700
-Subject: [PATCH 25/34] Step 10.4: Replace update and remove with methods
+Subject: [PATCH 25/34] Step 9.4: Replace update and remove with methods
 
 ---
  simple-todos.js | 6 ++----
@@ -1132,13 +1132,13 @@ index 3f35197..d477b50 100644
    });
  
 -- 
-2.2.1
+2.6.3
 
 
-From 6d476642901e702bac6ead65d5522dbe85e7852c Mon Sep 17 00:00:00 2001
+From ed3ca0156c0ba6a15bd134e40d5178fb82dfed41 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:32:19 -0700
-Subject: [PATCH 26/34] Step 11.1: Remove autopublish
+Subject: [PATCH 26/34] Step 10.1: Remove autopublish
 
 ---
  .meteor/packages | 1 -
@@ -1169,13 +1169,13 @@ index 6a03dd0..6766561 100644
  base64@1.0.3
  binary-heap@1.0.3
 -- 
-2.2.1
+2.6.3
 
 
-From b292ba8028b19999a63e84d48fb2ca15d1e30110 Mon Sep 17 00:00:00 2001
+From fa380edb61cf1a07044f23afa76acb51b7afaf50 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:33:17 -0700
-Subject: [PATCH 27/34] Step 11.2: Add publish and subscribe
+Subject: [PATCH 27/34] Step 10.2: Add publish and subscribe
 
 ---
  simple-todos.js | 9 +++++++++
@@ -1203,13 +1203,13 @@ index d477b50..31eda5c 100644
      tasks: function () {
        if (Session.get("hideCompleted")) {
 -- 
-2.2.1
+2.6.3
 
 
-From 2c186456f68d31fbc51ef87cf10d8ff5a60f7cfe Mon Sep 17 00:00:00 2001
+From 75c795b419486b4dc7c81d353e4156185d4d73a8 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:33:43 -0700
-Subject: [PATCH 28/34] Step 11.3: Add private button
+Subject: [PATCH 28/34] Step 10.3: Add private button
 
 ---
  simple-todos.html | 10 ++++++++++
@@ -1237,13 +1237,13 @@ index 55c1dc9..bd18923 100644
    </li>
  </template>
 -- 
-2.2.1
+2.6.3
 
 
-From d1a2cc5eefa0b830f5f952cb6a94a496d7bb13aa Mon Sep 17 00:00:00 2001
+From e20dcfc13016f7f9a3642de3dd0c5530056adae2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:34:13 -0700
-Subject: [PATCH 29/34] Step 11.4: Add private class to private tasks
+Subject: [PATCH 29/34] Step 10.4: Add private class to private tasks
 
 ---
  simple-todos.html | 2 +-
@@ -1263,13 +1263,13 @@ index bd18923..08854e2 100644
  
      <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
 -- 
-2.2.1
+2.6.3
 
 
-From ba34429a728da182231069f71f46ece369baa31b Mon Sep 17 00:00:00 2001
+From f5ff7942bb745e53c1d94d6d2555449544928754 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:34:47 -0700
-Subject: [PATCH 30/34] Step 11.5: Define helper to check ownership
+Subject: [PATCH 30/34] Step 10.5: Define helper to check ownership
 
 ---
  simple-todos.js | 6 ++++++
@@ -1293,13 +1293,13 @@ index 31eda5c..db6e512 100644
      "click .toggle-checked": function () {
        // Set the checked property to the opposite of its current value
 -- 
-2.2.1
+2.6.3
 
 
-From 47e1ff964973d319585bc7f5eb45b7ea78581028 Mon Sep 17 00:00:00 2001
+From c12c07a4480a0db0679c9af90fddcae0e843c816 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:35:31 -0700
-Subject: [PATCH 31/34] Step 11.6: Define method to set tasks to private
+Subject: [PATCH 31/34] Step 10.6: Define method to set tasks to private
 
 ---
  simple-todos.js | 10 ++++++++++
@@ -1326,13 +1326,13 @@ index db6e512..ff07739 100644
    }
  });
 -- 
-2.2.1
+2.6.3
 
 
-From 06f0e314c1dfe3dc8a44288e71d02cac85a32c0c Mon Sep 17 00:00:00 2001
+From a7412e05eb2294eba0ac8c3737acc9e996da9b0d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:35:55 -0700
-Subject: [PATCH 32/34] Step 11.7: Add event handler to call the setPrivate
+Subject: [PATCH 32/34] Step 10.7: Add event handler to call the setPrivate
  method
 
 ---
@@ -1354,13 +1354,13 @@ index ff07739..937e361 100644
    });
  
 -- 
-2.2.1
+2.6.3
 
 
-From 6682fe168d69eb11b7fe280b67ae87fc6c06425a Mon Sep 17 00:00:00 2001
+From b027b618497c1c1d5f8c6d4d259e802018a6bab2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:36:38 -0700
-Subject: [PATCH 33/34] Step 11.8: Only publish tasks the user is allowed to
+Subject: [PATCH 33/34] Step 10.8: Only publish tasks the user is allowed to
  see
 
 ---
@@ -1388,13 +1388,13 @@ index 937e361..fea68a1 100644
  }
  
 -- 
-2.2.1
+2.6.3
 
 
-From b5957208d50a064a4a22780c7ef76259691b2c7a Mon Sep 17 00:00:00 2001
+From 17b00f034ea0273a4eff10ab9ec4774fb7f98a7e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:37:36 -0700
-Subject: [PATCH 34/34] Step 11.9: Add some extra security to methods
+Subject: [PATCH 34/34] Step 10.9: Add some extra security to methods
 
 ---
  simple-todos.js | 12 ++++++++++++
@@ -1427,5 +1427,5 @@ index fea68a1..9bf41bb 100644
    },
    setPrivate: function (taskId, setToPrivate) {
 -- 
-2.2.1
+2.6.3
 
diff --git a/generated/react.multi.patch b/generated/react.multi.patch
index 6c08057..eaf44eb 100644
--- a/generated/react.multi.patch
+++ b/generated/react.multi.patch
@@ -201,7 +201,7 @@ index 0000000..4f8c65d
 +  });
 +}
 -- 
-2.2.1
+2.6.3
 
 
 From 96bd5130dbd707aa497a0effa85cb7316cd7d560 Mon Sep 17 00:00:00 2001
@@ -265,7 +265,7 @@ index 410e1d9..288ee5f 100644
  reactive-var@1.0.5
  reload@1.1.3
 -- 
-2.2.1
+2.6.3
 
 
 From 3cec511c67cb3b78b43329d12b55da7efb2a107e Mon Sep 17 00:00:00 2001
@@ -299,7 +299,7 @@ index e296a58..1aae2d4 100644
 -  <p>You've pressed the button {{counter}} times.</p>
 -</template>
 -- 
-2.2.1
+2.6.3
 
 
 From 36c59c642fc6a7b48ebe0378c5f75488854479c7 Mon Sep 17 00:00:00 2001
@@ -358,7 +358,7 @@ index 0000000..a7e2d2f
 +  });
 +}
 -- 
-2.2.1
+2.6.3
 
 
 From 1b8a7577860c7d9f0f0afa6996cf8fa6fe92d3ec Mon Sep 17 00:00:00 2001
@@ -408,7 +408,7 @@ index 0000000..27ac66e
 +  }
 +});
 -- 
-2.2.1
+2.6.3
 
 
 From c676d9f668e3adb9c4f214bdafaa8f388d63678b Mon Sep 17 00:00:00 2001
@@ -441,7 +441,7 @@ index 0000000..c49e7ac
 +  }
 +});
 -- 
-2.2.1
+2.6.3
 
 
 From ec0e0aee25ff51d8f3096ea446537113aded6ab3 Mon Sep 17 00:00:00 2001
@@ -586,7 +586,7 @@ index b6b4052..cec3ae6 100644
 +}
 \ No newline at end of file
 -- 
-2.2.1
+2.6.3
 
 
 From b21327904ff8de4d51618d88edc6aabb39060c65 Mon Sep 17 00:00:00 2001
@@ -610,7 +610,7 @@ index a7e2d2f..a67b030 100644
    // This code is executed on the client only
  
 -- 
-2.2.1
+2.6.3
 
 
 From ce86ff010f94a8a1cc2c8e6f9331df080565682b Mon Sep 17 00:00:00 2001
@@ -655,7 +655,7 @@ index 27ac66e..60f1400 100644
      });
    },
 -- 
-2.2.1
+2.6.3
 
 
 From 8a0525ce1e84b872ca35743b7101f14ec627b41f Mon Sep 17 00:00:00 2001
@@ -686,7 +686,7 @@ index 60f1400..7b798bb 100644
  
          <ul>
 -- 
-2.2.1
+2.6.3
 
 
 From 1b87eff8bd37fc375f506c32b9c4d765f15b301f Mon Sep 17 00:00:00 2001
@@ -725,7 +725,7 @@ index 7b798bb..67184cc 100644
      return (
        <div className="container">
 -- 
-2.2.1
+2.6.3
 
 
 From 4bd9bbafd1845dd9aee21da655f0dcde7b4b3da5 Mon Sep 17 00:00:00 2001
@@ -751,7 +751,7 @@ index 67184cc..64197bd 100644
    },
  
 -- 
-2.2.1
+2.6.3
 
 
 From 2560d9ad137bf546344670d81fcaaee6ef38c560 Mon Sep 17 00:00:00 2001
@@ -811,13 +811,13 @@ index c49e7ac..d1c618b 100644
    }
  });
 -- 
-2.2.1
+2.6.3
 
 
-From 922d90961e4cdab0aaef6c07438d853b2d16e32a Mon Sep 17 00:00:00 2001
+From a71020ec83f6fb09b25cee37f67cff63d6e4288f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:21:30 -0700
-Subject: [PATCH 14/41] Step 8.1: Add hide completed checkbox to App component
+Subject: [PATCH 14/41] Step 7.1: Add hide completed checkbox to App component
 
 ---
  App.jsx | 9 +++++++++
@@ -844,13 +844,13 @@ index 64197bd..ef39e73 100644
              <input
                type="text"
 -- 
-2.2.1
+2.6.3
 
 
-From a6bea499cba226edcf0f537615cc0ecfc0f47230 Mon Sep 17 00:00:00 2001
+From 6bb6193375f38796df91d54826a96e3ef6af8103 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:07 -0700
-Subject: [PATCH 15/41] Step 8.2: Add getInitialState to App component
+Subject: [PATCH 15/41] Step 7.2: Add getInitialState to App component
 
 ---
  App.jsx | 6 ++++++
@@ -874,13 +874,13 @@ index ef39e73..144582d 100644
    getMeteorData() {
      return {
 -- 
-2.2.1
+2.6.3
 
 
-From 59dab20a8dbb012f3313dc660a1266612298e786 Mon Sep 17 00:00:00 2001
+From 3a8ff2979cbfbc22f4d4ee4cea2ab8116a09f80d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:32 -0700
-Subject: [PATCH 16/41] Step 8.3: Add toggleHideCompleted handler to App
+Subject: [PATCH 16/41] Step 7.3: Add toggleHideCompleted handler to App
 
 ---
  App.jsx | 6 ++++++
@@ -904,13 +904,13 @@ index 144582d..6799fca 100644
      return (
        <div className="container">
 -- 
-2.2.1
+2.6.3
 
 
-From f48c03507b9438ad4c1e9a48a2d5b82b1bd354ea Mon Sep 17 00:00:00 2001
+From 2fedbda3e9d6c8d16833dc83ca5b5da0d1e43b6d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:02 -0700
-Subject: [PATCH 17/41] Step 8.4: Replace getMeteorData to filter tasks
+Subject: [PATCH 17/41] Step 7.4: Replace getMeteorData to filter tasks
 
 ---
  App.jsx | 11 +++++++++--
@@ -940,13 +940,13 @@ index 6799fca..105577e 100644
  
    renderTasks() {
 -- 
-2.2.1
+2.6.3
 
 
-From 0ffc7a42c13617ffa11d1460f1251531043813fd Mon Sep 17 00:00:00 2001
+From b2ed418abe28a56d510bb9c7c3a7c188fa08716c Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:44 -0700
-Subject: [PATCH 18/41] Step 8.5: Update getMeteorData to return
+Subject: [PATCH 18/41] Step 7.5: Update getMeteorData to return
  incompleteCount
 
 ---
@@ -968,13 +968,13 @@ index 105577e..09415f3 100644
    },
  
 -- 
-2.2.1
+2.6.3
 
 
-From 8173671b2f2e8411b20194d818abadea83f974f0 Mon Sep 17 00:00:00 2001
+From e31d982d438d30fc818918839a1e712c04ad4e3f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:24:09 -0700
-Subject: [PATCH 19/41] Step 8.6: Display incompleteCount in the header
+Subject: [PATCH 19/41] Step 7.6: Display incompleteCount in the header
 
 ---
  App.jsx | 2 +-
@@ -994,13 +994,13 @@ index 09415f3..f5b8224 100644
            <label className="hide-completed">
              <input
 -- 
-2.2.1
+2.6.3
 
 
-From 1c45b6bfb12ee5980a15e6e5ae014ee2bdfaf08f Mon Sep 17 00:00:00 2001
+From a599f3d8550c8162a787a6637dae40b6a2159f13 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:02 -0700
-Subject: [PATCH 20/41] Step 9.1: Add accounts-ui and accounts-password
+Subject: [PATCH 20/41] Step 8.1: Add accounts-ui and accounts-password
  packages
 
 ---
@@ -1070,13 +1070,13 @@ index 288ee5f..e964910 100644
  tracker@1.0.7
  ui@1.0.6
 -- 
-2.2.1
+2.6.3
 
 
-From 476e97407f34d17fff6ad29ed0e69e7f91524cbb Mon Sep 17 00:00:00 2001
+From 21d2e4a6783402d4933a9ca0500cb769d5327666 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:59 -0700
-Subject: [PATCH 21/41] Step 9.2: Create Accounts UI wrapper component
+Subject: [PATCH 21/41] Step 8.2: Create Accounts UI wrapper component
 
 ---
  AccountsUIWrapper.jsx | 15 +++++++++++++++
@@ -1105,13 +1105,13 @@ index 0000000..87fd3b3
 +  }
 +});
 -- 
-2.2.1
+2.6.3
 
 
-From 2fc5338aece0c67370206bd0a53b77e4c94efad7 Mon Sep 17 00:00:00 2001
+From bc7817296faba6af012a505fce83224239265bc2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:27:36 -0700
-Subject: [PATCH 22/41] Step 9.3: Include sign in form
+Subject: [PATCH 22/41] Step 8.3: Include sign in form
 
 ---
  App.jsx | 2 ++
@@ -1131,13 +1131,13 @@ index f5b8224..e829c27 100644
              <input
                type="text"
 -- 
-2.2.1
+2.6.3
 
 
-From 0872f25fd7507e5f2750a97c9dad479469306e31 Mon Sep 17 00:00:00 2001
+From 54e66f77114ea2a129f100044a928d17a672f384 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:28:08 -0700
-Subject: [PATCH 23/41] Step 9.4: Configure accounts-ui to only require
+Subject: [PATCH 23/41] Step 8.4: Configure accounts-ui to only require
  username
 
 ---
@@ -1159,13 +1159,13 @@ index a67b030..36ce4bc 100644
    Meteor.startup(function () {
      // Use Meteor.startup to render the component after the page is ready
 -- 
-2.2.1
+2.6.3
 
 
-From ea3a5c3919625bafc8d8137303cac4bcd56563ae Mon Sep 17 00:00:00 2001
+From f0a2cf2b0a5f80c132f7919f75a3e8ef11cfc358 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:28:46 -0700
-Subject: [PATCH 24/41] Step 9.5: Update insert to save username and owner
+Subject: [PATCH 24/41] Step 8.5: Update insert to save username and owner
 
 ---
  App.jsx | 4 +++-
@@ -1187,13 +1187,13 @@ index e829c27..dd7862f 100644
  
      // Clear form
 -- 
-2.2.1
+2.6.3
 
 
-From 9b01c38c2ec27fed6653fa5e6efa2b83bc34cd8b Mon Sep 17 00:00:00 2001
+From 504545b21c79495c0aac900a3593d1cf1c163173 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:29:16 -0700
-Subject: [PATCH 25/41] Step 9.6: Update getMeteorData to return data about
+Subject: [PATCH 25/41] Step 8.6: Update getMeteorData to return data about
  user
 
 ---
@@ -1215,13 +1215,13 @@ index dd7862f..dfedd85 100644
    },
  
 -- 
-2.2.1
+2.6.3
 
 
-From 5721735aea4bffdfadfe2d1e6113c7bac5d4fb61 Mon Sep 17 00:00:00 2001
+From 516863b2fd6390dc734655c6bcb4e8904f791453 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:06 -0700
-Subject: [PATCH 26/41] Step 9.7: Wrap new task form to only show when logged
+Subject: [PATCH 26/41] Step 8.7: Wrap new task form to only show when logged
  in
 
 ---
@@ -1254,13 +1254,13 @@ index dfedd85..b8824a4 100644
  
          <ul>
 -- 
-2.2.1
+2.6.3
 
 
-From 30dc469cf13d5f65ad304fde4f1e216e9f4aa452 Mon Sep 17 00:00:00 2001
+From 957ff40676c9812b679cb5465da3158fc7972ede Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:48 -0700
-Subject: [PATCH 27/41] Step 9.8: Update Task component to show username
+Subject: [PATCH 27/41] Step 8.8: Update Task component to show username
 
 ---
  Task.jsx | 4 +++-
@@ -1282,13 +1282,13 @@ index d1c618b..2caead7 100644
      );
    }
 -- 
-2.2.1
+2.6.3
 
 
-From 820425c995deada233144a4212871f42f4be1410 Mon Sep 17 00:00:00 2001
+From ce706ab836a91ca69aa6d452d94dcf53745ca86f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:31:22 -0700
-Subject: [PATCH 28/41] Step 10.1: Remove insecure package
+Subject: [PATCH 28/41] Step 9.1: Remove insecure package
 
 ---
  .meteor/packages | 1 -
@@ -1320,13 +1320,13 @@ index e964910..0d54bf9 100644
  json@1.0.3
  jsx@0.1.1
 -- 
-2.2.1
+2.6.3
 
 
-From e711321a7f138e24b849c17b16e1d229768d0c11 Mon Sep 17 00:00:00 2001
+From 15908792b5dcd489651d58fd2eb1ce2ba57bcd61 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:21 -0700
-Subject: [PATCH 29/41] Step 10.2: Add methods for add, remove, update task
+Subject: [PATCH 29/41] Step 9.2: Add methods for add, remove, update task
 
 ---
  simple-todos-react.jsx | 24 ++++++++++++++++++++++++
@@ -1365,13 +1365,13 @@ index 36ce4bc..b1aa692 100644
 +  }
 +});
 -- 
-2.2.1
+2.6.3
 
 
-From dc0883c23649fb89b4489c97e2f1127c4cfeef2c Mon Sep 17 00:00:00 2001
+From cd4b47f1454072749c24fdedbce321142ebd655e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:59 -0700
-Subject: [PATCH 30/41] Step 10.3: Update App component to use addTask method
+Subject: [PATCH 30/41] Step 9.3: Update App component to use addTask method
 
 ---
  App.jsx | 7 +------
@@ -1396,13 +1396,13 @@ index b8824a4..858f96b 100644
      // Clear form
      React.findDOMNode(this.refs.textInput).value = "";
 -- 
-2.2.1
+2.6.3
 
 
-From 0e519b181c0888a67f1424ac5d354c3f78a13c16 Mon Sep 17 00:00:00 2001
+From 90c412b9304aea15c54c18145065b84ce1180661 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:33:38 -0700
-Subject: [PATCH 31/41] Step 10.4: Update Task to use setChecked and removeTask
+Subject: [PATCH 31/41] Step 9.4: Update Task to use setChecked and removeTask
  methods
 
 ---
@@ -1430,13 +1430,13 @@ index 2caead7..32577ed 100644
  
    render() {
 -- 
-2.2.1
+2.6.3
 
 
-From c25ceadfb6a01c7892e8c0fa89c20c7ced190194 Mon Sep 17 00:00:00 2001
+From 6afc10c8d0ac6f5ac44977d8c56717a8170a33a3 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:34:33 -0700
-Subject: [PATCH 32/41] Step 11.1: Remove autopublish package
+Subject: [PATCH 32/41] Step 10.1: Remove autopublish package
 
 ---
  .meteor/packages | 1 -
@@ -1468,13 +1468,13 @@ index 0d54bf9..777cca4 100644
  babel-compiler@5.6.15
  babel-runtime@0.1.1
 -- 
-2.2.1
+2.6.3
 
 
-From 54e487630478cd1389a58c08816bd578af1fceaf Mon Sep 17 00:00:00 2001
+From 97a7e438cbdb2520ecc85ad72c72259ec4e40512 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:35:03 -0700
-Subject: [PATCH 33/41] Step 11.2: Add publish to server and subscribe to
+Subject: [PATCH 33/41] Step 10.2: Add publish to server and subscribe to
  client
 
 ---
@@ -1507,13 +1507,13 @@ index b1aa692..f62ed9e 100644
    addTask(text) {
      // Make sure the user is logged in before inserting a task
 -- 
-2.2.1
+2.6.3
 
 
-From f35bac8c484061a0e0200806c994e5b8a39d89ea Mon Sep 17 00:00:00 2001
+From 6d696fc4f3dbafe299417c666b4d0c95a9c9158c Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:29 -0700
-Subject: [PATCH 34/41] Step 11.3: Add setPrivate method
+Subject: [PATCH 34/41] Step 10.3: Add setPrivate method
 
 ---
  simple-todos-react.jsx | 11 +++++++++++
@@ -1541,13 +1541,13 @@ index f62ed9e..c2a3196 100644
    }
  });
 -- 
-2.2.1
+2.6.3
 
 
-From 625b356e7ed1bfa66c3a36d1fb37e8373c7b5095 Mon Sep 17 00:00:00 2001
+From f49eebf8f9918a72230a816593629f7cebdc3b88 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:59 -0700
-Subject: [PATCH 35/41] Step 11.4: Update renderTasks to pass in
+Subject: [PATCH 35/41] Step 10.4: Update renderTasks to pass in
  showPrivateButton
 
 ---
@@ -1574,13 +1574,13 @@ index 858f96b..82915ec 100644
    },
  
 -- 
-2.2.1
+2.6.3
 
 
-From 319d7619de668f136a04378ae182a9b9c17480a4 Mon Sep 17 00:00:00 2001
+From b6aeca4bc89337e773f55d237d15170b627868f2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:37:28 -0700
-Subject: [PATCH 36/41] Step 11.5: Add a new prop type for Task component
+Subject: [PATCH 36/41] Step 10.5: Add a new prop type for Task component
 
 ---
  Task.jsx | 3 ++-
@@ -1601,13 +1601,13 @@ index 32577ed..c85416a 100644
  
    toggleChecked() {
 -- 
-2.2.1
+2.6.3
 
 
-From 9a487d4eb60b2d224d2b858da28123344315ca17 Mon Sep 17 00:00:00 2001
+From f756da1b62f9a66e92be6a466e447f638440c1b8 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:04 -0700
-Subject: [PATCH 37/41] Step 11.6: Add private button, shown only to owner
+Subject: [PATCH 37/41] Step 10.6: Add private button, shown only to owner
 
 ---
  Task.jsx | 6 ++++++
@@ -1631,13 +1631,13 @@ index c85416a..1bbd4fb 100644
            <strong>{this.props.task.username}</strong>: {this.props.task.text}
          </span>
 -- 
-2.2.1
+2.6.3
 
 
-From 4f1dae36828297dd73d3447c29fd9f34f308e78b Mon Sep 17 00:00:00 2001
+From 3c9f11ad31373841936201283053081564c44bb7 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:33 -0700
-Subject: [PATCH 38/41] Step 11.7: Add private button event handler to Task
+Subject: [PATCH 38/41] Step 10.7: Add private button event handler to Task
 
 ---
  Task.jsx | 4 ++++
@@ -1659,13 +1659,13 @@ index 1bbd4fb..75827dd 100644
      // Give tasks a different className when they are checked off,
      // so that we can style them nicely in CSS
 -- 
-2.2.1
+2.6.3
 
 
-From 67fa7b381d5b51de0c78ee129a000aadf95de4bc Mon Sep 17 00:00:00 2001
+From efd858216049ea41a66676313da29b41efd726a4 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:22 -0700
-Subject: [PATCH 39/41] Step 11.8: Add private className to Task when needed
+Subject: [PATCH 39/41] Step 10.8: Add private className to Task when needed
 
 ---
  Task.jsx | 4 +++-
@@ -1687,13 +1687,13 @@ index 75827dd..37eadd3 100644
      return (
        <li className={taskClassName}>
 -- 
-2.2.1
+2.6.3
 
 
-From e527227d30c447c3d7ffd3723d6540f361c9fe42 Mon Sep 17 00:00:00 2001
+From e1cc035800424d4326aaeb1892806d0049913dac Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:58 -0700
-Subject: [PATCH 40/41] Step 11.9: Only publish tasks the current user can see
+Subject: [PATCH 40/41] Step 10.9: Only publish tasks the current user can see
 
 ---
  simple-todos-react.jsx | 8 +++++++-
@@ -1720,13 +1720,13 @@ index c2a3196..24849d5 100644
  }
  
 -- 
-2.2.1
+2.6.3
 
 
-From b847140c6490cf3a1734199deb26d5758ea0c9ac Mon Sep 17 00:00:00 2001
+From 3babdf6e68e7324735500a9203460b15915608ce Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:40:55 -0700
-Subject: [PATCH 41/41] Step 11.10: Add extra security to methods
+Subject: [PATCH 41/41] Step 10.10: Add extra security to methods
 
 ---
  simple-todos-react.jsx | 12 ++++++++++++
@@ -1760,5 +1760,5 @@ index 24849d5..2b4ada2 100644
    },
  
 -- 
-2.2.1
+2.6.3
 
-- 
2.13.6 (Apple Git-96)


From 5fbe04228e61650a5a760e53f8cea70cd4f2cc71 Mon Sep 17 00:00:00 2001
From: David Glasser <glasser@davidglasser.net>
Date: Fri, 11 Mar 2016 19:47:36 -0800
Subject: [PATCH 100/164] Remove step 6 and renumber everything after it

---
 content/angular/metadata.js    | 17 +++-----
 content/angular/step04.md      |  2 +-
 content/angular/step06.md      | 19 +++++++++
 content/angular/step07.md      | 67 ++++++++++++++++++++++++++-----
 content/angular/step08.md      | 76 ++++++++++++++++++-----------------
 content/angular/step09.md      | 65 ++++++++----------------------
 content/angular/step10.md      | 55 +++++++++++++++++---------
 content/angular/step11.md      | 57 +++-----------------------
 content/angular/step12.md      | 13 ------
 content/blaze/metadata.js      | 17 +++-----
 content/blaze/step07.md        | 37 +++++++++++++++++
 content/blaze/step08.md        | 49 ++++++++++++++++-------
 content/blaze/step09.md        | 53 ++++++++-----------------
 content/blaze/step10.md        | 55 ++++++++++++++++++--------
 content/blaze/step11.md        | 61 ++++++----------------------
 content/blaze/step12.md        | 21 ----------
 content/react/metadata.js      | 17 +++-----
 content/react/step07.md        | 33 ++++++++++++++++
 content/react/step08.md        | 57 +++++++++++++++++++++-----
 content/react/step09.md        | 63 +++++++----------------------
 content/react/step10.md        | 67 +++++++++++++++++++++++--------
 content/react/step11.md        | 71 ++++++---------------------------
 content/react/step12.md        | 21 ----------
 content/shared/explanations.md |  2 +-
 content/shared/nextSteps.md    |  2 +-
 content/shared/step06.md       | 88 +++++++++++++++++++++++++++++++++++++----
 content/shared/step07.md       | 90 ------------------------------------------
 27 files changed, 571 insertions(+), 604 deletions(-)
 create mode 100644 content/angular/step06.md
 delete mode 100644 content/angular/step12.md
 create mode 100644 content/blaze/step07.md
 delete mode 100644 content/blaze/step12.md
 create mode 100644 content/react/step07.md
 delete mode 100644 content/react/step12.md
 delete mode 100644 content/shared/step07.md

diff --git a/content/angular/metadata.js b/content/angular/metadata.js
index fe548de..b3f12f8 100644
--- a/content/angular/metadata.js
+++ b/content/angular/metadata.js
@@ -36,39 +36,34 @@ TutorialRegistry.registerTutorial("angular", {
       template: 'angular-step05'
     },
     {
-      title: 'Deploying your app',
-      slug: "deploying-your-app",
-      template: 'shared-step06'
-    },
-    {
       title: 'Running on mobile',
       slug: "running-on-mobile",
-      template: 'angular-step07'
+      template: 'angular-step06'
     },
     {
       title: 'Filtering Collections',
       slug: "filtering-collections",
-      template: 'angular-step08'
+      template: 'angular-step07'
     },
     {
       title: 'Adding user accounts',
       slug: "adding-user-accounts",
-      template: 'angular-step09'
+      template: 'angular-step08'
     },
     {
       title: 'Security with methods',
       slug: "security-with-methods",
-      template: 'angular-step10'
+      template: 'angular-step09'
     },
     {
       title: 'Publish and subscribe',
       slug: "publish-and-subscribe",
-      template: 'angular-step11'
+      template: 'angular-step10'
     },
     {
       title: 'Next steps',
       slug: "next-steps",
-      template: 'angular-step12'
+      template: 'angular-step11'
     }
   ]
 });
diff --git a/content/angular/step04.md b/content/angular/step04.md
index 17a4695..25819a4 100644
--- a/content/angular/step04.md
+++ b/content/angular/step04.md
@@ -24,7 +24,7 @@ In our case above, we are listening to the `submit` event on our form to call th
 
 Inside our scope function, we are adding a task to the `tasks` collection by simply calling `$scope.tasks.push()`. We can assign any properties to the task object, such as the time created, since we don't ever have to define a schema for the collection.
 
-Being able to insert anything into the database from the client isn't very secure, but it's okay for now. In step 10 we'll learn how we can make our app secure and restrict how data is inserted into the database.
+Being able to insert anything into the database from the client isn't very secure, but it's okay for now. In step 9 we'll learn how we can make our app secure and restrict how data is inserted into the database.
 
 ### Sorting our tasks
 
diff --git a/content/angular/step06.md b/content/angular/step06.md
new file mode 100644
index 0000000..f656b5f
--- /dev/null
+++ b/content/angular/step06.md
@@ -0,0 +1,19 @@
+{{#template name="angularSpecialPart06"}}
+### Setting up Angular for mobile
+
+Angular needs the main document to be ready so it can bootstrap, but different devices have different events for `ready`.
+
+To solve this, we need to change the way we bootstrap our Angular app.
+Remove the current bootstrap by removing `ng-app` from the `<body>` tag:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="6.1"}}
+
+Then add the following code right after `Meteor.isClient`:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="6.2"}}
+
+{{/template}}
+
+{{#template name="angular-step06"}}
+{{> sharedStep06 specialContent="angularSpecialPart06"}}
+{{/template}}
diff --git a/content/angular/step07.md b/content/angular/step07.md
index 081e4ee..4332c24 100644
--- a/content/angular/step07.md
+++ b/content/angular/step07.md
@@ -1,19 +1,68 @@
-{{#template name="angularSpecialPart07"}}
-### Setting up Angular for mobile
+{{#template name="angular-step07"}}
+
+# Filtering collections
 
-Angular needs the main document to be ready so it can bootstrap, but different devices have different events for `ready`.
+In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to see only incomplete tasks.
 
-To solve this, we need to change the way we bootstrap our Angular app.
-Remove the current bootstrap by removing `ng-app` from the `<body>` tag:
+We're going to learn how to use Mongo's filtering API.
+
+First, we need to add a checkbox to our HTML:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="7.1"}}
 
-Then add the following code right after `Meteor.isClient`:
+This checkbox binds to the scope's `hideCompleted` variable.
+> We are using `$parent` because it creates a new child scope.
+
+Now, we need to update our `$scope.tasks` query each time `hideCompleted` changes.
+
+### Filtering collection syntax
+
+The query that returns all tasks (the current query looks like that:
+
+```js
+Tasks.find({}, { sort: { createdAt: -1 } })
+```
+
+and the query to return only the not completed todos looks like that:
+
+```js
+Tasks.find({ checked: {$ne: true} }, { sort: { createdAt: -1 } })
+```
+
+### Watching the checkbox
+
+So let's create a scope variable that will hold the wanted query and will change together with the checkbox.
+Inside our controller:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="7.2"}}
 
-{{/template}}
+and let's change our `$scope.tasks` definition accordingly:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="7.3"}}
+
+**but we are missing one more thing** - The expression we are sending `$meteor.collection` is a Meteor expression and
+**Meteor has to know that the Angular `query` parameter has changed**.
+
+### Connecting Angular bindings to Meteor's reactivity
+
+To make Meteor understand Angular bindings and the other way around, we use [$scope.getReactively](http://angular-meteor.com/api/getReactively) function that turns Angular
+scope variables into [Meteor reactive variables](http://docs.meteor.com/#/full/reactivevar_pkg).
+
+So now our definition should look like that:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="7.4"}}
+
+Now if you check the box, the task list will only show tasks that haven't been completed.
+
+> To learn more about the [getReactively](http://angular-meteor.com/api/getReactively) feature
+> you can try the [advanced tutorial](http://angular-meteor.com/tutorial/step_12).
+
+### One more feature: Showing a count of incomplete tasks
+
+Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a scope function and change one line of the HTML.
+
+{{> DiffBox tutorialName="simple-todos-angular" step="7.5"}}
+
+{{> DiffBox tutorialName="simple-todos-angular" step="7.6"}}
 
-{{#template name="angular-step07"}}
-{{> sharedStep07 specialContent="angularSpecialPart07"}}
 {{/template}}
diff --git a/content/angular/step08.md b/content/angular/step08.md
index b2e4d2c..67f89dc 100644
--- a/content/angular/step08.md
+++ b/content/angular/step08.md
@@ -1,68 +1,70 @@
 {{#template name="angular-step08"}}
 
-# Filtering collections
+# Adding user accounts
 
-In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to see only incomplete tasks.
+Meteor comes with an accounts system and a drop-in login user interface that lets you add multi-user functionality to your app in minutes.
 
-We're going to learn how to use Mongo's filtering API.
+To enable the accounts system and UI, we need to add the relevant packages. In your app directory, run the following command:
 
-First, we need to add a checkbox to our HTML:
+```bash
+meteor add accounts-password dotansimha:accounts-ui-angular
+```
 
-{{> DiffBox tutorialName="simple-todos-angular" step="8.1"}}
+`accounts-password` is a package that includes all the logic for password based authentication.
 
-This checkbox binds to the scope's `hideCompleted` variable.
-> We are using `$parent` because it creates a new child scope.
+`dotansimha:accounts-ui-angular` includes the `<login-buttons>` directive that contains all the HTML and CSS we need for user authentication forms.
+ 
+Now let's add dependency to `account.ui` module in our module definition:
 
-Now, we need to update our `$scope.tasks` query each time `hideCompleted` changes.
+{{> DiffBox tutorialName="simple-todos-angular" step="8.2"}}
 
-### Filtering collection syntax
+In the HTML, right under the checkbox, include the following code to add a login dropdown:
 
-The query that returns all tasks (the current query looks like that:
+{{> DiffBox tutorialName="simple-todos-angular" step="8.3"}}
 
-```js
-Tasks.find({}, { sort: { createdAt: -1 } })
-```
+Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
-and the query to return only the not completed todos looks like that:
+{{> DiffBox tutorialName="simple-todos-angular" step="8.4"}}
 
-```js
-Tasks.find({ checked: {$ne: true} }, { sort: { createdAt: -1 } })
-```
+Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
 
-### Watching the checkbox
+1. Only display the new task input field to logged in users
+2. Show which user created each task
 
-So let's create a scope variable that will hold the wanted query and will change together with the checkbox.
-Inside our controller:
+To do this, we will add two new fields to the `tasks` collection:
 
-{{> DiffBox tutorialName="simple-todos-angular" step="8.2"}}
+1. `owner` - the `_id` of the user that created the task.
+2. `username` - the `username` of the user that created the task. We will save the username directly in the task object so that we don't have to look up the user every time we display the task.
 
-and let's change our `$scope.tasks` definition accordingly:
+First, let's add some code to save these fields into the `addTask` function:
 
-{{> DiffBox tutorialName="simple-todos-angular" step="8.3"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="8.5"}}
 
-**but we are missing one more thing** - The expression we are sending `$meteor.collection` is a Meteor expression and
-**Meteor has to know that the Angular `query` parameter has changed**.
+Then, in our HTML, add an `ng-show` directive to only show the form when there is a logged in user:
 
-### Connecting Angular bindings to Meteor's reactivity
+{{> DiffBox tutorialName="simple-todos-angular" step="8.6"}}
 
-To make Meteor understand Angular bindings and the other way around, we use [$scope.getReactively](http://angular-meteor.com/api/getReactively) function that turns Angular
-scope variables into [Meteor reactive variables](http://docs.meteor.com/#/full/reactivevar_pkg).
+Finally, add a statement to display the `username` field on each task right before the text:
 
-So now our definition should look like that:
+{{> DiffBox tutorialName="simple-todos-angular" step="8.7"}}
 
-{{> DiffBox tutorialName="simple-todos-angular" step="8.4"}}
+Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
 
-Now if you check the box, the task list will only show tasks that haven't been completed.
+### Automatic accounts UI
 
-> To learn more about the [getReactively](http://angular-meteor.com/api/getReactively) feature
-> you can try the [advanced tutorial](http://angular-meteor.com/tutorial/step_12).
+If our app has the `accounts-ui` package, all we have to do to add a login dropdown is include the `loginButtons` template with [meteor-include](http://angular-meteor.com/api/meteor-include) directive.
+This dropdown detects which login methods have been added to the app and displays the appropriate controls. In our case, the only enabled login method is `accounts-password`, so the dropdown displays a password field. If you are adventurous, you can add the `accounts-facebook` package to enable Facebook login in your app - the Facebook button will automatically appear in the dropdown.
 
-### One more feature: Showing a count of incomplete tasks
+### Getting information about the logged-in user
 
-Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a scope function and change one line of the HTML.
+In your HTML, you can use the built-in `$root.currentUser` variable to check if a user is logged in and get information about them. For example, `{{dstache}}$root.currentUser.username}}` will display the logged in user's username.
 
-{{> DiffBox tutorialName="simple-todos-angular" step="8.5"}}
+In your JavaScript code, you can use `Meteor.userId()` to get the current user's `_id`, or `Meteor.user()` to get the whole user document.
 
-{{> DiffBox tutorialName="simple-todos-angular" step="8.6"}}
+### Custom templates
+
+You can choose not to use the `accounts-ui` package template and create your own Angular login templates.
+You can read more about it in the [chapter about angular-material](http://angular-meteor.com/tutorial/step_18) in the advanced tutorial.
 
+In the next step, we will learn how to make our app more secure by doing all of our data validation on the server instead of the client.
 {{/template}}
diff --git a/content/angular/step09.md b/content/angular/step09.md
index b4aabbe..94b77a1 100644
--- a/content/angular/step09.md
+++ b/content/angular/step09.md
@@ -1,70 +1,39 @@
 {{#template name="angular-step09"}}
 
-# Adding user accounts
+# Security with methods
 
-Meteor comes with an accounts system and a drop-in login user interface that lets you add multi-user functionality to your app in minutes.
+Before this step, any user of the app could edit any part of the database. This might be okay for very small internal apps or demos, but any real application needs to control permissions for its data. In Meteor, the best way to do this is by declaring _methods_. Instead of the client code directly calling `insert`, `update`, and `remove`, it will instead call methods that will check if the user is authorized to complete the action and then make any changes to the database on the client's behalf.
 
-To enable the accounts system and UI, we need to add the relevant packages. In your app directory, run the following command:
+### Removing `insecure`
+
+Every newly created Meteor project has the `insecure` package added by default. This is the package that allows us to edit the database from the client. It's useful when prototyping, but now we are taking off the training wheels. To remove this package, go to your app directory and run:
 
 ```bash
-meteor add accounts-password dotansimha:accounts-ui-angular
+meteor remove insecure
 ```
 
-`accounts-password` is a package that includes all the logic for password based authentication.
+If you try to use the app after removing this package, you will notice that none of the inputs or buttons work anymore. This is because all client-side database permissions have been revoked. Now we need to rewrite some parts of our app to use methods.
+
+### Defining methods
 
-`dotansimha:accounts-ui-angular` includes the `<login-buttons>` directive that contains all the HTML and CSS we need for user authentication forms.
- 
-Now let's add dependency to `account.ui` module in our module definition:
+First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Optimistic UI_.
 
 {{> DiffBox tutorialName="simple-todos-angular" step="9.2"}}
 
-In the HTML, right under the checkbox, include the following code to add a login dropdown:
+Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="9.3"}}
 
-Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
+and the way we handle the changes in the template:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="9.4"}}
 
-Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
-
-1. Only display the new task input field to logged in users
-2. Show which user created each task
-
-To do this, we will add two new fields to the `tasks` collection:
-
-1. `owner` - the `_id` of the user that created the task.
-2. `username` - the `username` of the user that created the task. We will save the username directly in the task object so that we don't have to look up the user every time we display the task.
-
-First, let's add some code to save these fields into the `addTask` function:
-
-{{> DiffBox tutorialName="simple-todos-angular" step="9.5"}}
-
-Then, in our HTML, add an `ng-show` directive to only show the form when there is a logged in user:
-
-{{> DiffBox tutorialName="simple-todos-angular" step="9.6"}}
-
-Finally, add a statement to display the `username` field on each task right before the text:
-
-{{> DiffBox tutorialName="simple-todos-angular" step="9.7"}}
-
-Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
-
-### Automatic accounts UI
-
-If our app has the `accounts-ui` package, all we have to do to add a login dropdown is include the `loginButtons` template with [meteor-include](http://angular-meteor.com/api/meteor-include) directive.
-This dropdown detects which login methods have been added to the app and displays the appropriate controls. In our case, the only enabled login method is `accounts-password`, so the dropdown displays a password field. If you are adventurous, you can add the `accounts-facebook` package to enable Facebook login in your app - the Facebook button will automatically appear in the dropdown.
-
-### Getting information about the logged-in user
-
-In your HTML, you can use the built-in `$root.currentUser` variable to check if a user is logged in and get information about them. For example, `{{dstache}}$root.currentUser.username}}` will display the logged in user's username.
-
-In your JavaScript code, you can use `Meteor.userId()` to get the current user's `_id`, or `Meteor.user()` to get the whole user document.
+Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
-### Custom templates
+1. When we insert tasks into the database, we can now securely verify that the user is logged in, that the `createdAt` field is correct, and that the `owner` and `username` fields are correct and the user isn't impersonating anyone.
+2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
+3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
 
-You can choose not to use the `accounts-ui` package template and create your own Angular login templates.
-You can read more about it in the [chapter about angular-material](http://angular-meteor.com/tutorial/step_18) in the advanced tutorial.
+{{> step09OptimisticUI}}
 
-In the next step, we will learn how to make our app more secure by doing all of our data validation on the server instead of the client.
 {{/template}}
diff --git a/content/angular/step10.md b/content/angular/step10.md
index 8de205d..f47f78c 100644
--- a/content/angular/step10.md
+++ b/content/angular/step10.md
@@ -1,39 +1,58 @@
 {{#template name="angular-step10"}}
 
-# Security with methods
+# Filtering data with publish and subscribe
 
-Before this step, any user of the app could edit any part of the database. This might be okay for very small internal apps or demos, but any real application needs to control permissions for its data. In Meteor, the best way to do this is by declaring _methods_. Instead of the client code directly calling `insert`, `update`, and `remove`, it will instead call methods that will check if the user is authorized to complete the action and then make any changes to the database on the client's behalf.
+Now that we have moved all of our app's sensitive code into methods, we need to learn about the other half of Meteor's security story. Until now, we have worked assuming the entire database is present on the client, meaning if we call `Tasks.find()` we will get every task in the collection. That's not good if users of our application want to store privacy-sensitive data. We need a way of controlling which data Meteor sends to the client-side database.
 
-### Removing `insecure`
-
-Every newly created Meteor project has the `insecure` package added by default. This is the package that allows us to edit the database from the client. It's useful when prototyping, but now we are taking off the training wheels. To remove this package, go to your app directory and run:
+Just like with `insecure` in the last step, all new Meteor apps start with the `autopublish` package. Let's remove it and see what happens:
 
 ```bash
-meteor remove insecure
+meteor remove autopublish
 ```
 
-If you try to use the app after removing this package, you will notice that none of the inputs or buttons work anymore. This is because all client-side database permissions have been revoked. Now we need to rewrite some parts of our app to use methods.
-
-### Defining methods
+When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and [$scope.$meteorSubscribe](http://angular-meteor.com/api/subscribe).
 
-First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Optimistic UI_.
+Let's add them now.
 
 {{> DiffBox tutorialName="simple-todos-angular" step="10.2"}}
 
-Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
-
 {{> DiffBox tutorialName="simple-todos-angular" step="10.3"}}
 
-and the way we handle the changes in the template:
+Once you have added this code, all of the tasks will reappear.
+
+Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When [$scope.$meteorSubscribe](http://angular-meteor.com/api/subscribe) is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
+
+### Implementing private tasks
+
+First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
 
 {{> DiffBox tutorialName="simple-todos-angular" step="10.4"}}
 
-Now all of our inputs and buttons will start working again. What did we gain from all of this work?
+{{> DiffBox tutorialName="simple-todos-angular" step="10.5"}}
+
+We need to modify our JavaScript code in two places:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="10.6"}}
+
+{{> DiffBox tutorialName="simple-todos-angular" step="10.7"}}
+
+### Selectively publishing tasks based on privacy status
+
+Now that we have a way of setting which tasks are private, we should modify our
+publication function to only send the tasks that a user is authorized to see:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="10.8"}}
+
+To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
+
+### Extra method security
+
+In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="10.9"}}
 
-1. When we insert tasks into the database, we can now securely verify that the user is logged in, that the `createdAt` field is correct, and that the `owner` and `username` fields are correct and the user isn't impersonating anyone.
-2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
-3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
+> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
-{{> step10OptimisticUI}}
+We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
 
 {{/template}}
diff --git a/content/angular/step11.md b/content/angular/step11.md
index 4e86bb2..c4b8caa 100644
--- a/content/angular/step11.md
+++ b/content/angular/step11.md
@@ -1,58 +1,13 @@
 {{#template name="angular-step11"}}
 
-# Filtering data with publish and subscribe
+# What's next?
 
-Now that we have moved all of our app's sensitive code into methods, we need to learn about the other half of Meteor's security story. Until now, we have worked assuming the entire database is present on the client, meaning if we call `Tasks.find()` we will get every task in the collection. That's not good if users of our application want to store privacy-sensitive data. We need a way of controlling which data Meteor sends to the client-side database.
+Congratulations on your newly built Meteor app! Don't forget to deploy it again
+so your friends can use the new features.
 
-Just like with `insecure` in the last step, all new Meteor apps start with the `autopublish` package. Let's remove it and see what happens:
+Your app currently supports collaborating on a single todo list. To see how you
+could add more functionality, check out the [full angular-meteor tutorial](http://angular-meteor.com/).
 
-```bash
-meteor remove autopublish
-```
-
-When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and [$scope.$meteorSubscribe](http://angular-meteor.com/api/subscribe).
-
-Let's add them now.
-
-{{> DiffBox tutorialName="simple-todos-angular" step="11.2"}}
-
-{{> DiffBox tutorialName="simple-todos-angular" step="11.3"}}
-
-Once you have added this code, all of the tasks will reappear.
-
-Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When [$scope.$meteorSubscribe](http://angular-meteor.com/api/subscribe) is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
-
-### Implementing private tasks
-
-First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
-
-{{> DiffBox tutorialName="simple-todos-angular" step="11.4"}}
-
-{{> DiffBox tutorialName="simple-todos-angular" step="11.5"}}
-
-We need to modify our JavaScript code in two places:
-
-{{> DiffBox tutorialName="simple-todos-angular" step="11.6"}}
-
-{{> DiffBox tutorialName="simple-todos-angular" step="11.7"}}
-
-### Selectively publishing tasks based on privacy status
-
-Now that we have a way of setting which tasks are private, we should modify our
-publication function to only send the tasks that a user is authorized to see:
-
-{{> DiffBox tutorialName="simple-todos-angular" step="11.8"}}
-
-To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
-
-### Extra method security
-
-In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
-
-{{> DiffBox tutorialName="simple-todos-angular" step="11.9"}}
-
-> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
-
-We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
+{{> step11NextSteps}}
 
 {{/template}}
diff --git a/content/angular/step12.md b/content/angular/step12.md
deleted file mode 100644
index b9b87e0..0000000
--- a/content/angular/step12.md
+++ /dev/null
@@ -1,13 +0,0 @@
-{{#template name="angular-step12"}}
-
-# What's next?
-
-Congratulations on your newly built Meteor app! Don't forget to deploy it again
-so your friends can use the new features.
-
-Your app currently supports collaborating on a single todo list. To see how you
-could add more functionality, check out the [full angular-meteor tutorial](http://angular-meteor.com/).
-
-{{> step12NextSteps}}
-
-{{/template}}
diff --git a/content/blaze/metadata.js b/content/blaze/metadata.js
index f3d1f3f..f19b52e 100644
--- a/content/blaze/metadata.js
+++ b/content/blaze/metadata.js
@@ -36,39 +36,34 @@ TutorialRegistry.registerTutorial("blaze", {
       template: 'blaze-step05'
     },
     {
-      title: 'Deploying your app',
-      slug: "deploying-your-app",
-      template: 'shared-step06'
-    },
-    {
       title: 'Running on mobile',
       slug: "running-on-mobile",
-      template: 'sharedStep07'
+      template: 'sharedStep06'
     },
     {
       title: 'Temporary UI state',
       slug: "temporary-ui-state",
-      template: 'blaze-step08'
+      template: 'blaze-step07'
     },
     {
       title: 'Adding user accounts',
       slug: "adding-user-accounts",
-      template: 'blaze-step09'
+      template: 'blaze-step08'
     },
     {
       title: 'Security with methods',
       slug: "security-with-methods",
-      template: 'blaze-step10'
+      template: 'blaze-step09'
     },
     {
       title: 'Publish and subscribe',
       slug: "publish-and-subscribe",
-      template: 'blaze-step11'
+      template: 'blaze-step10'
     },
     {
       title: 'Next steps',
       slug: "next-steps",
-      template: 'blaze-step12'
+      template: 'blaze-step11'
     }
   ]
 });
diff --git a/content/blaze/step07.md b/content/blaze/step07.md
new file mode 100644
index 0000000..210b283
--- /dev/null
+++ b/content/blaze/step07.md
@@ -0,0 +1,37 @@
+{{#template name="blaze-step07"}}
+
+# Storing temporary UI state in Session
+
+In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to only see incomplete tasks. We're going to learn how to use `Session` to store temporary reactive state on the client.
+
+First, we need to add a checkbox to our HTML:
+
+{{> DiffBox tutorialName="simple-todos" step="7.1"}}
+
+Then, we need an event handler to update a `Session` variable when the checkbox
+is checked or unchecked. `Session` is a convenient place to store temporary UI
+state, and can be used in helpers just like a collection.
+
+{{> DiffBox tutorialName="simple-todos" step="7.2"}}
+
+Now, we need to update `Template.body.helpers`. The code below has a new if
+block to filter the tasks if the checkbox is checked, and a helper to make sure
+the checkbox represents the state of our Session variable.
+
+{{> DiffBox tutorialName="simple-todos" step="7.3"}}
+
+Now if you check the box, the task list will only show tasks that haven't been completed.
+
+### Session is a reactive data store for the client
+
+Until now, we have stored all of our state in collections, and the view updated automatically when we modified the data inside these collections. This is because Mongo.Collection is recognized by Meteor as a _reactive data source_, meaning Meteor knows when the data inside has changed. `Session` is the same way, but is not synced with the server like collections are. This makes `Session` a convenient place to store temporary UI state like the checkbox above. Just like with collections, we don't have to write any extra code for the template to update when the `Session` variable changes &mdash; just calling `Session.get(...)` inside the helper is enough.
+
+### One more feature: Showing a count of incomplete tasks
+
+Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a helper and change one line of the HTML.
+
+{{> DiffBox tutorialName="simple-todos" step="7.4"}}
+
+{{> DiffBox tutorialName="simple-todos" step="7.5"}}
+
+{{/template}}
diff --git a/content/blaze/step08.md b/content/blaze/step08.md
index 36a427b..f62e6a9 100644
--- a/content/blaze/step08.md
+++ b/content/blaze/step08.md
@@ -1,37 +1,56 @@
 {{#template name="blaze-step08"}}
 
-# Storing temporary UI state in Session
+# Adding user accounts
 
-In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to only see incomplete tasks. We're going to learn how to use `Session` to store temporary reactive state on the client.
+Meteor comes with an accounts system and a drop-in login user interface that lets you add multi-user functionality to your app in minutes.
 
-First, we need to add a checkbox to our HTML:
+To enable the accounts system and UI, we need to add the relevant packages. In your app directory, run the following command:
 
-{{> DiffBox tutorialName="simple-todos" step="8.1"}}
+```bash
+meteor add accounts-ui accounts-password
+```
 
-Then, we need an event handler to update a `Session` variable when the checkbox
-is checked or unchecked. `Session` is a convenient place to store temporary UI
-state, and can be used in helpers just like a collection.
+In the HTML, right under the checkbox, include the following code to add a login dropdown:
 
 {{> DiffBox tutorialName="simple-todos" step="8.2"}}
 
-Now, we need to update `Template.body.helpers`. The code below has a new if
-block to filter the tasks if the checkbox is checked, and a helper to make sure
-the checkbox represents the state of our Session variable.
+Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
 {{> DiffBox tutorialName="simple-todos" step="8.3"}}
 
-Now if you check the box, the task list will only show tasks that haven't been completed.
+Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
 
-### Session is a reactive data store for the client
+1. Only display the new task input field to logged in users
+2. Show which user created each task
 
-Until now, we have stored all of our state in collections, and the view updated automatically when we modified the data inside these collections. This is because Mongo.Collection is recognized by Meteor as a _reactive data source_, meaning Meteor knows when the data inside has changed. `Session` is the same way, but is not synced with the server like collections are. This makes `Session` a convenient place to store temporary UI state like the checkbox above. Just like with collections, we don't have to write any extra code for the template to update when the `Session` variable changes &mdash; just calling `Session.get(...)` inside the helper is enough.
+To do this, we will add two new fields to the `tasks` collection:
 
-### One more feature: Showing a count of incomplete tasks
+1. `owner` - the `_id` of the user that created the task.
+2. `username` - the `username` of the user that created the task. We will save the username directly in the task object so that we don't have to look up the user every time we display the task.
 
-Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a helper and change one line of the HTML.
+First, let's add some code to save these fields into the `submit .new-task` event handler:
 
 {{> DiffBox tutorialName="simple-todos" step="8.4"}}
 
+Then, in our HTML, add an `#if` block helper to only show the form when there is a logged in user:
+
 {{> DiffBox tutorialName="simple-todos" step="8.5"}}
 
+Finally, add a Spacebars statement to display the `username` field on each task right before the text:
+
+{{> DiffBox tutorialName="simple-todos" step="8.6"}}`
+
+Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
+
+### Automatic accounts UI
+
+If our app has the `accounts-ui` package, all we have to do to add a login dropdown is include the `loginButtons` template with `{{dstache}}> loginButtons}}`. This dropdown detects which login methods have been added to the app and displays the appropriate controls. In our case, the only enabled login method is `accounts-password`, so the dropdown displays a password field. If you are adventurous, you can add the `accounts-facebook` package to enable Facebook login in your app - the Facebook button will automatically appear in the dropdown.
+
+### Getting information about the logged-in user
+
+In your HTML, you can use the built-in `{{dstache}}currentUser}}` helper to check if a user is logged in and get information about them. For example, `{{dstache}}currentUser.username}}` will display the logged in user's username.
+
+In your JavaScript code, you can use `Meteor.userId()` to get the current user's `_id`, or `Meteor.user()` to get the whole user document.
+
+In the next step, we will learn how to make our app more secure by doing all of our data validation on the server instead of the client.
 {{/template}}
diff --git a/content/blaze/step09.md b/content/blaze/step09.md
index fcb7021..9042e07 100644
--- a/content/blaze/step09.md
+++ b/content/blaze/step09.md
@@ -1,56 +1,37 @@
 {{#template name="blaze-step09"}}
 
-# Adding user accounts
+# Security with methods
 
-Meteor comes with an accounts system and a drop-in login user interface that lets you add multi-user functionality to your app in minutes.
+Before this step, any user of the app could edit any part of the database. This might be okay for very small internal apps or demos, but any real application needs to control permissions for its data. In Meteor, the best way to do this is by declaring _methods_. Instead of the client code directly calling `insert`, `update`, and `remove`, it will instead call methods that will check if the user is authorized to complete the action and then make any changes to the database on the client's behalf.
 
-To enable the accounts system and UI, we need to add the relevant packages. In your app directory, run the following command:
+### Removing `insecure`
+
+Every newly created Meteor project has the `insecure` package added by default. This is the package that allows us to edit the database from the client. It's useful when prototyping, but now we are taking off the training wheels. To remove this package, go to your app directory and run:
 
 ```bash
-meteor add accounts-ui accounts-password
+meteor remove insecure
 ```
 
-In the HTML, right under the checkbox, include the following code to add a login dropdown:
-
-{{> DiffBox tutorialName="simple-todos" step="9.2"}}
-
-Then, in your JavaScript, add the following code to configure the accounts UI to use usernames instead of email addresses:
+If you try to use the app after removing this package, you will notice that none of the inputs or buttons work anymore. This is because all client-side database permissions have been revoked. Now we need to rewrite some parts of our app to use methods.
 
-{{> DiffBox tutorialName="simple-todos" step="9.3"}}
-
-Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
+### Defining methods
 
-1. Only display the new task input field to logged in users
-2. Show which user created each task
+First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Optimistic UI_.
 
-To do this, we will add two new fields to the `tasks` collection:
+{{> DiffBox tutorialName="simple-todos" step="9.2"}}
 
-1. `owner` - the `_id` of the user that created the task.
-2. `username` - the `username` of the user that created the task. We will save the username directly in the task object so that we don't have to look up the user every time we display the task.
+Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
-First, let's add some code to save these fields into the `submit .new-task` event handler:
+{{> DiffBox tutorialName="simple-todos" step="9.3"}}
 
 {{> DiffBox tutorialName="simple-todos" step="9.4"}}
 
-Then, in our HTML, add an `#if` block helper to only show the form when there is a logged in user:
-
-{{> DiffBox tutorialName="simple-todos" step="9.5"}}
-
-Finally, add a Spacebars statement to display the `username` field on each task right before the text:
-
-{{> DiffBox tutorialName="simple-todos" step="9.6"}}`
-
-Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
-
-### Automatic accounts UI
-
-If our app has the `accounts-ui` package, all we have to do to add a login dropdown is include the `loginButtons` template with `{{dstache}}> loginButtons}}`. This dropdown detects which login methods have been added to the app and displays the appropriate controls. In our case, the only enabled login method is `accounts-password`, so the dropdown displays a password field. If you are adventurous, you can add the `accounts-facebook` package to enable Facebook login in your app - the Facebook button will automatically appear in the dropdown.
-
-### Getting information about the logged-in user
+Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
-In your HTML, you can use the built-in `{{dstache}}currentUser}}` helper to check if a user is logged in and get information about them. For example, `{{dstache}}currentUser.username}}` will display the logged in user's username.
+1. When we insert tasks into the database, we can now securely verify that the user is logged in, that the `createdAt` field is correct, and that the `owner` and `username` fields are correct and the user isn't impersonating anyone.
+2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
+3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
 
-In your JavaScript code, you can use `Meteor.userId()` to get the current user's `_id`, or `Meteor.user()` to get the whole user document.
+{{> step09OptimisticUI}}
 
-In the next step, we will learn how to make our app more secure by doing all of our data validation on the server instead of the client.
 {{/template}}
diff --git a/content/blaze/step10.md b/content/blaze/step10.md
index 7789eb4..0ba8e21 100644
--- a/content/blaze/step10.md
+++ b/content/blaze/step10.md
@@ -1,37 +1,60 @@
 {{#template name="blaze-step10"}}
 
-# Security with methods
+# Filtering data with publish and subscribe
 
-Before this step, any user of the app could edit any part of the database. This might be okay for very small internal apps or demos, but any real application needs to control permissions for its data. In Meteor, the best way to do this is by declaring _methods_. Instead of the client code directly calling `insert`, `update`, and `remove`, it will instead call methods that will check if the user is authorized to complete the action and then make any changes to the database on the client's behalf.
+Now that we have moved all of our app's sensitive code into methods, we need to learn about the other half of Meteor's security story. Until now, we have worked assuming the entire database is present on the client, meaning if we call `Tasks.find()` we will get every task in the collection. That's not good if users of our application want to store privacy-sensitive data. We need a way of controlling which data Meteor sends to the client-side database.
 
-### Removing `insecure`
-
-Every newly created Meteor project has the `insecure` package added by default. This is the package that allows us to edit the database from the client. It's useful when prototyping, but now we are taking off the training wheels. To remove this package, go to your app directory and run:
+Just like with `insecure` in the last step, all new Meteor apps start with the `autopublish` package. Let's remove it and see what happens:
 
 ```bash
-meteor remove insecure
+meteor remove autopublish
 ```
 
-If you try to use the app after removing this package, you will notice that none of the inputs or buttons work anymore. This is because all client-side database permissions have been revoked. Now we need to rewrite some parts of our app to use methods.
-
-### Defining methods
+When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and `Meteor.subscribe`.
 
-First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Optimistic UI_.
+Let's add them now.
 
 {{> DiffBox tutorialName="simple-todos" step="10.2"}}
 
-Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
+Once you have added this code, all of the tasks will reappear.
+
+Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When `Meteor.subscribe` is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
+
+### Implementing private tasks
+
+First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
 
 {{> DiffBox tutorialName="simple-todos" step="10.3"}}
 
+Let's make sure our task has a special class if it is marked private:
+
 {{> DiffBox tutorialName="simple-todos" step="10.4"}}
 
-Now all of our inputs and buttons will start working again. What did we gain from all of this work?
+We need to modify our JavaScript code in three places:
+
+{{> DiffBox tutorialName="simple-todos" step="10.5"}}
+
+{{> DiffBox tutorialName="simple-todos" step="10.6"}}
+
+{{> DiffBox tutorialName="simple-todos" step="10.7"}}
+
+### Selectively publishing tasks based on privacy status
+
+Now that we have a way of setting which tasks are private, we should modify our
+publication function to only send the tasks that a user is authorized to see:
+
+{{> DiffBox tutorialName="simple-todos" step="10.8"}}
+
+To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
+
+### Extra method security
+
+In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
+
+{{> DiffBox tutorialName="simple-todos" step="10.9"}}
 
-1. When we insert tasks into the database, we can now securely verify that the user is logged in, that the `createdAt` field is correct, and that the `owner` and `username` fields are correct and the user isn't impersonating anyone.
-2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
-3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
+> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
-{{> step10OptimisticUI}}
+We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
 
 {{/template}}
diff --git a/content/blaze/step11.md b/content/blaze/step11.md
index 79e8747..b7dfe93 100644
--- a/content/blaze/step11.md
+++ b/content/blaze/step11.md
@@ -1,60 +1,21 @@
 {{#template name="blaze-step11"}}
 
-# Filtering data with publish and subscribe
+# What's next?
 
-Now that we have moved all of our app's sensitive code into methods, we need to learn about the other half of Meteor's security story. Until now, we have worked assuming the entire database is present on the client, meaning if we call `Tasks.find()` we will get every task in the collection. That's not good if users of our application want to store privacy-sensitive data. We need a way of controlling which data Meteor sends to the client-side database.
+Congratulations on your newly built Meteor app! Don't forget to deploy it again
+so your friends can use the new features.
 
-Just like with `insecure` in the last step, all new Meteor apps start with the `autopublish` package. Let's remove it and see what happens:
+Your app currently supports collaborating on a single todo list. To see how you
+could add more functionality, check out the Todos example &mdash; a more
+complete app that can handle sharing multiple lists. Also, try Local Market, a
+cross-platform customer engagement app that shows off native hardware
+functionality and social features.
 
 ```bash
-meteor remove autopublish
+meteor create --example todos
+meteor create --example localmarket
 ```
 
-When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and `Meteor.subscribe`.
-
-Let's add them now.
-
-{{> DiffBox tutorialName="simple-todos" step="11.2"}}
-
-Once you have added this code, all of the tasks will reappear.
-
-Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When `Meteor.subscribe` is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
-
-### Implementing private tasks
-
-First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
-
-{{> DiffBox tutorialName="simple-todos" step="11.3"}}
-
-Let's make sure our task has a special class if it is marked private:
-
-{{> DiffBox tutorialName="simple-todos" step="11.4"}}
-
-We need to modify our JavaScript code in three places:
-
-{{> DiffBox tutorialName="simple-todos" step="11.5"}}
-
-{{> DiffBox tutorialName="simple-todos" step="11.6"}}
-
-{{> DiffBox tutorialName="simple-todos" step="11.7"}}
-
-### Selectively publishing tasks based on privacy status
-
-Now that we have a way of setting which tasks are private, we should modify our
-publication function to only send the tasks that a user is authorized to see:
-
-{{> DiffBox tutorialName="simple-todos" step="11.8"}}
-
-To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
-
-### Extra method security
-
-In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
-
-{{> DiffBox tutorialName="simple-todos" step="11.9"}}
-
-> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
-
-We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
+{{> step11NextSteps}}
 
 {{/template}}
diff --git a/content/blaze/step12.md b/content/blaze/step12.md
deleted file mode 100644
index 04ff5b6..0000000
--- a/content/blaze/step12.md
+++ /dev/null
@@ -1,21 +0,0 @@
-{{#template name="blaze-step12"}}
-
-# What's next?
-
-Congratulations on your newly built Meteor app! Don't forget to deploy it again
-so your friends can use the new features.
-
-Your app currently supports collaborating on a single todo list. To see how you
-could add more functionality, check out the Todos example &mdash; a more
-complete app that can handle sharing multiple lists. Also, try Local Market, a
-cross-platform customer engagement app that shows off native hardware
-functionality and social features.
-
-```bash
-meteor create --example todos
-meteor create --example localmarket
-```
-
-{{> step12NextSteps}}
-
-{{/template}}
diff --git a/content/react/metadata.js b/content/react/metadata.js
index 7712ee0..88a41e0 100644
--- a/content/react/metadata.js
+++ b/content/react/metadata.js
@@ -36,39 +36,34 @@ TutorialRegistry.registerTutorial("react", {
       template: 'react-step05'
     },
     {
-      title: 'Deploying your app',
-      slug: "deploying-your-app",
-      template: "shared-step06"
-    },
-    {
       title: 'Running on mobile',
       slug: "running-on-mobile",
-      template: "sharedStep07"
+      template: "sharedStep06"
     },
     {
       title: 'Temporary UI state',
       slug: "temporary-ui-state",
-      template: 'react-step08'
+      template: 'react-step07'
     },
     {
       title: 'Adding user accounts',
       slug: "adding-user-accounts",
-      template: 'react-step09'
+      template: 'react-step08'
     },
     {
       title: 'Security with methods',
       slug: "security-with-methods",
-      template: 'react-step10'
+      template: 'react-step09'
     },
     {
       title: 'Publish and subscribe',
       slug: "publish-and-subscribe",
-      template: 'react-step11'
+      template: 'react-step10'
     },
     {
       title: 'Next steps',
       slug: "next-steps",
-      template: 'react-step12'
+      template: 'react-step11'
     }
   ]
 });
diff --git a/content/react/step07.md b/content/react/step07.md
new file mode 100644
index 0000000..1daa917
--- /dev/null
+++ b/content/react/step07.md
@@ -0,0 +1,33 @@
+{{#template name="react-step07"}}
+
+# Storing temporary UI data in component state
+
+In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to only see incomplete tasks. We're going to learn how to use React's component state to store temporary information that is only used on the client.
+
+First, we need to add a checkbox to our `App` component:
+
+{{> DiffBox step="7.1" tutorialName="simple-todos-react"}}
+
+You can see that it reads from `this.state.hideCompleted`. React components have a special field called `state` where you can store encapsulated component data. We need to define a `getInitialState` method on our component to initialize this field:
+
+{{> DiffBox step="7.2" tutorialName="simple-todos-react"}}
+
+We can update `this.state` from an event handler by calling `this.setState`, which will update the state property asynchronously and then cause the component to re-render:
+
+{{> DiffBox step="7.3" tutorialName="simple-todos-react"}}
+
+Now, we need to update `getMeteorData` to filter out completed tasks when `this.state.hideCompleted` is true:
+
+{{> DiffBox step="7.4" tutorialName="simple-todos-react"}}
+
+Now if you check the box, the task list will only show tasks that haven't been completed.
+
+### One more feature: Showing a count of incomplete tasks
+
+Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to return a count from `getMeteorData` and add a line to our `render` method. Since we already have the data in the client-side Minimongo collection, adding this extra count doesn't involve asking the server for anything.
+
+{{> DiffBox step="7.5" tutorialName="simple-todos-react"}}
+
+{{> DiffBox step="7.6" tutorialName="simple-todos-react"}}
+
+{{/template}}
diff --git a/content/react/step08.md b/content/react/step08.md
index 22debcf..842c958 100644
--- a/content/react/step08.md
+++ b/content/react/step08.md
@@ -1,33 +1,70 @@
 {{#template name="react-step08"}}
 
-# Storing temporary UI data in component state
+# Adding user accounts
 
-In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to only see incomplete tasks. We're going to learn how to use React's component state to store temporary information that is only used on the client.
+Meteor comes with an accounts system and a drop-in login user interface that lets you add multi-user functionality to your app in minutes.
 
-First, we need to add a checkbox to our `App` component:
+> Currently, this UI component uses Blaze, Meteor's default UI engine. In the future, there might also be a React-specific component for this.
 
-{{> DiffBox step="8.1" tutorialName="simple-todos-react"}}
+To enable the accounts system and UI, we need to add the relevant packages. In your app directory, run the following command:
 
-You can see that it reads from `this.state.hideCompleted`. React components have a special field called `state` where you can store encapsulated component data. We need to define a `getInitialState` method on our component to initialize this field:
+```bash
+meteor add accounts-ui accounts-password
+```
+
+### Wrapping a Blaze component in React
+
+To use the Blaze UI component from the `accounts-ui` package, we need to wrap it in a React component. To do so, let's create a new component called `AccountsUIWrapper` in a new file:
 
 {{> DiffBox step="8.2" tutorialName="simple-todos-react"}}
 
-We can update `this.state` from an event handler by calling `this.setState`, which will update the state property asynchronously and then cause the component to re-render:
+Let's include the component we just defined inside App:
 
 {{> DiffBox step="8.3" tutorialName="simple-todos-react"}}
 
-Now, we need to update `getMeteorData` to filter out completed tasks when `this.state.hideCompleted` is true:
+Then, add the following code to configure the accounts UI to use usernames instead of email addresses:
 
 {{> DiffBox step="8.4" tutorialName="simple-todos-react"}}
 
-Now if you check the box, the task list will only show tasks that haven't been completed.
+### Adding user-related functionality
+
+Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two features:
+
+1. Only display the new task input field to logged in users
+2. Show which user created each task
 
-### One more feature: Showing a count of incomplete tasks
+To do this, we will add two new fields to the `tasks` collection:
 
-Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to return a count from `getMeteorData` and add a line to our `render` method. Since we already have the data in the client-side Minimongo collection, adding this extra count doesn't involve asking the server for anything.
+1. `owner` - the `_id` of the user that created the task.
+2. `username` - the `username` of the user that created the task. We will save the username directly in the task object so that we don't have to look up the user every time we display the task.
+
+First, let's add some code to save these fields into the `handleSubmit` event handler:
 
 {{> DiffBox step="8.5" tutorialName="simple-todos-react"}}
 
+Modify the `return` statement on `getMeteorData` to get information about the currently logged in user:
+
 {{> DiffBox step="8.6" tutorialName="simple-todos-react"}}
 
+Then, in our render method, add a conditional statement to only show the form when there is a logged in user:
+
+{{> DiffBox step="8.7" tutorialName="simple-todos-react"}}
+
+Finally, add a statement to display the `username` field on each task right before the text:
+
+{{> DiffBox step="8.8" tutorialName="simple-todos-react"}}
+
+In your browser, add some tasks and notice that your username shows up. Old tasks that we added before this step won't have usernames attached; you can just delete them.
+
+Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
+
+### Automatic accounts UI
+
+If our app has the `accounts-ui` package, all we have to do to add a login dropdown is render the included UI component. This dropdown detects which login methods have been added to the app and displays the appropriate controls. In our case, the only enabled login method is `accounts-password`, so the dropdown displays a password field. If you are adventurous, you can add the `accounts-facebook` package to enable Facebook login in your app - the Facebook button will automatically appear in the dropdown.
+
+### Getting information about the logged-in user
+
+In your `getMeteorData` method, you can use `Meteor.user()` to check if a user is logged in and get information about them. For example, `Meteor.user().username` contains the logged in user's username. You can also use `Meteor.userId()` to just get the current user's `_id`.
+
+In the next step, we will learn how to make our app more secure by doing data validation on the server.
 {{/template}}
diff --git a/content/react/step09.md b/content/react/step09.md
index df84200..ee65076 100644
--- a/content/react/step09.md
+++ b/content/react/step09.md
@@ -1,70 +1,37 @@
 {{#template name="react-step09"}}
 
-# Adding user accounts
+# Security with methods
 
-Meteor comes with an accounts system and a drop-in login user interface that lets you add multi-user functionality to your app in minutes.
+Before this step, any user of the app could edit any part of the database. This might be okay for very small internal apps or demos, but any real application needs to control permissions for its data. In Meteor, the best way to do this is by declaring _methods_. Instead of the client code directly calling `insert`, `update`, and `remove`, it will instead call methods that will check if the user is authorized to complete the action and then make any changes to the database on the client's behalf.
 
-> Currently, this UI component uses Blaze, Meteor's default UI engine. In the future, there might also be a React-specific component for this.
+### Removing `insecure`
 
-To enable the accounts system and UI, we need to add the relevant packages. In your app directory, run the following command:
+Every newly created Meteor project has the `insecure` package added by default. This is the package that allows us to edit the database from the client. It's useful when prototyping, but now we are taking off the training wheels. To remove this package, go to your app directory and run:
 
 ```bash
-meteor add accounts-ui accounts-password
+meteor remove insecure
 ```
 
-### Wrapping a Blaze component in React
+If you try to use the app after removing this package, you will notice that none of the inputs or buttons work anymore. This is because all client-side database permissions have been revoked. Now we need to rewrite some parts of our app to use methods.
 
-To use the Blaze UI component from the `accounts-ui` package, we need to wrap it in a React component. To do so, let's create a new component called `AccountsUIWrapper` in a new file:
+### Defining methods
+
+First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Optimistic UI_.
 
 {{> DiffBox step="9.2" tutorialName="simple-todos-react"}}
 
-Let's include the component we just defined inside App:
+Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
 
 {{> DiffBox step="9.3" tutorialName="simple-todos-react"}}
 
-Then, add the following code to configure the accounts UI to use usernames instead of email addresses:
-
 {{> DiffBox step="9.4" tutorialName="simple-todos-react"}}
 
-### Adding user-related functionality
-
-Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two features:
-
-1. Only display the new task input field to logged in users
-2. Show which user created each task
-
-To do this, we will add two new fields to the `tasks` collection:
-
-1. `owner` - the `_id` of the user that created the task.
-2. `username` - the `username` of the user that created the task. We will save the username directly in the task object so that we don't have to look up the user every time we display the task.
-
-First, let's add some code to save these fields into the `handleSubmit` event handler:
-
-{{> DiffBox step="9.5" tutorialName="simple-todos-react"}}
-
-Modify the `return` statement on `getMeteorData` to get information about the currently logged in user:
-
-{{> DiffBox step="9.6" tutorialName="simple-todos-react"}}
-
-Then, in our render method, add a conditional statement to only show the form when there is a logged in user:
-
-{{> DiffBox step="9.7" tutorialName="simple-todos-react"}}
-
-Finally, add a statement to display the `username` field on each task right before the text:
-
-{{> DiffBox step="9.8" tutorialName="simple-todos-react"}}
-
-In your browser, add some tasks and notice that your username shows up. Old tasks that we added before this step won't have usernames attached; you can just delete them.
-
-Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
-
-### Automatic accounts UI
-
-If our app has the `accounts-ui` package, all we have to do to add a login dropdown is render the included UI component. This dropdown detects which login methods have been added to the app and displays the appropriate controls. In our case, the only enabled login method is `accounts-password`, so the dropdown displays a password field. If you are adventurous, you can add the `accounts-facebook` package to enable Facebook login in your app - the Facebook button will automatically appear in the dropdown.
+Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
-### Getting information about the logged-in user
+1. When we insert tasks into the database, we can now securely verify that the user is logged in, that the `createdAt` field is correct, and that the `owner` and `username` fields are correct and the user isn't impersonating anyone.
+2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
+3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
 
-In your `getMeteorData` method, you can use `Meteor.user()` to check if a user is logged in and get information about them. For example, `Meteor.user().username` contains the logged in user's username. You can also use `Meteor.userId()` to just get the current user's `_id`.
+{{> step09OptimisticUI}}
 
-In the next step, we will learn how to make our app more secure by doing data validation on the server.
 {{/template}}
diff --git a/content/react/step10.md b/content/react/step10.md
index 71bf30e..4cc80fe 100644
--- a/content/react/step10.md
+++ b/content/react/step10.md
@@ -1,37 +1,70 @@
 {{#template name="react-step10"}}
 
-# Security with methods
+# Filtering data with publish and subscribe
 
-Before this step, any user of the app could edit any part of the database. This might be okay for very small internal apps or demos, but any real application needs to control permissions for its data. In Meteor, the best way to do this is by declaring _methods_. Instead of the client code directly calling `insert`, `update`, and `remove`, it will instead call methods that will check if the user is authorized to complete the action and then make any changes to the database on the client's behalf.
+Now that we have moved all of our app's sensitive code into methods, we need to learn about the other half of Meteor's security story. Until now, we have worked assuming the entire database is present on the client, meaning if we call `Tasks.find()` we will get every task in the collection. That's not good if users of our application want to store privacy-sensitive data. We need a way of controlling which data Meteor sends to the client-side database.
 
-### Removing `insecure`
-
-Every newly created Meteor project has the `insecure` package added by default. This is the package that allows us to edit the database from the client. It's useful when prototyping, but now we are taking off the training wheels. To remove this package, go to your app directory and run:
+Just like with `insecure` in the last step, all new Meteor apps start with the `autopublish` package, which automatically synchronizes all of the database contents to the client. Let's remove it and see what happens:
 
 ```bash
-meteor remove insecure
+meteor remove autopublish
 ```
 
-If you try to use the app after removing this package, you will notice that none of the inputs or buttons work anymore. This is because all client-side database permissions have been revoked. Now we need to rewrite some parts of our app to use methods.
-
-### Defining methods
+When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and `Meteor.subscribe`.
 
-First, we need to define some methods. We need one method for each database operation we want to perform on the client. Methods should be defined in code that is executed on the client and the server - we will discuss this a bit later in the section titled _Optimistic UI_.
+Let's add them now.
 
 {{> DiffBox step="10.2" tutorialName="simple-todos-react"}}
 
-Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
+Once you have added this code, all of the tasks will reappear.
+
+Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When `Meteor.subscribe` is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
+
+### Adding a button to make tasks private
+
+Let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. We want the label to indicate the current status: public or private.
 
-{{> DiffBox step="10.3" tutorialName="simple-todos-react"}}
+First, we need to add a new method that we can call to set a task's private status:
+
+{{> DiffBox step="10.3" tutorialName="simple-todos-react"}} 
+
+Now, we need to pass a new property to the `Task` to decide whether we want
+to show the private button; the button should show up only if the currently
+logged in user owns this task:
 
 {{> DiffBox step="10.4" tutorialName="simple-todos-react"}}
 
-Now all of our inputs and buttons will start working again. What did we gain from all of this work?
+{{> DiffBox step="10.5" tutorialName="simple-todos-react"}}
+
+Let's add the button, using this new prop to decide whether it should be displayed:
+
+{{> DiffBox step="10.6" tutorialName="simple-todos-react"}}
+
+We need to define the event handler called by the button:
+
+{{> DiffBox step="10.7" tutorialName="simple-todos-react"}}
+
+One last thing, let's update the class of the `<li>` element in the `Task` component to reflect it's privacy status:
+
+{{> DiffBox step="10.8" tutorialName="simple-todos-react"}}
+
+### Selectively publishing tasks based on privacy status
+
+Now that we have a way of setting which tasks are private, we should modify our
+publication function to only send the tasks that a user is authorized to see:
+
+{{> DiffBox step="10.9" tutorialName="simple-todos-react"}}
+
+To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
+
+### Extra method security
+
+In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
+
+{{> DiffBox step="10.10" tutorialName="simple-todos-react"}}
 
-1. When we insert tasks into the database, we can now securely verify that the user is logged in, that the `createdAt` field is correct, and that the `owner` and `username` fields are correct and the user isn't impersonating anyone.
-2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
-3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
+> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
-{{> step10OptimisticUI}}
+We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
 
 {{/template}}
diff --git a/content/react/step11.md b/content/react/step11.md
index 9ffc9c4..0c876b2 100644
--- a/content/react/step11.md
+++ b/content/react/step11.md
@@ -1,70 +1,21 @@
 {{#template name="react-step11"}}
 
-# Filtering data with publish and subscribe
+# What's next?
 
-Now that we have moved all of our app's sensitive code into methods, we need to learn about the other half of Meteor's security story. Until now, we have worked assuming the entire database is present on the client, meaning if we call `Tasks.find()` we will get every task in the collection. That's not good if users of our application want to store privacy-sensitive data. We need a way of controlling which data Meteor sends to the client-side database.
+Congratulations on your newly built Meteor app! Don't forget to deploy it again
+so your friends can use the new features.
 
-Just like with `insecure` in the last step, all new Meteor apps start with the `autopublish` package, which automatically synchronizes all of the database contents to the client. Let's remove it and see what happens:
+Your app currently supports collaborating on a single todo list. To see how you
+could add more functionality, check out the Todos example &mdash; a more
+complete app that can handle sharing multiple lists. Also, try Local Market, a
+cross-platform customer engagement app that shows off native hardware
+functionality and social features.
 
 ```bash
-meteor remove autopublish
+meteor create --example todos
+meteor create --example localmarket
 ```
 
-When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and `Meteor.subscribe`.
-
-Let's add them now.
-
-{{> DiffBox step="11.2" tutorialName="simple-todos-react"}}
-
-Once you have added this code, all of the tasks will reappear.
-
-Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When `Meteor.subscribe` is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
-
-### Adding a button to make tasks private
-
-Let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. We want the label to indicate the current status: public or private.
-
-First, we need to add a new method that we can call to set a task's private status:
-
-{{> DiffBox step="11.3" tutorialName="simple-todos-react"}} 
-
-Now, we need to pass a new property to the `Task` to decide whether we want
-to show the private button; the button should show up only if the currently
-logged in user owns this task:
-
-{{> DiffBox step="11.4" tutorialName="simple-todos-react"}}
-
-{{> DiffBox step="11.5" tutorialName="simple-todos-react"}}
-
-Let's add the button, using this new prop to decide whether it should be displayed:
-
-{{> DiffBox step="11.6" tutorialName="simple-todos-react"}}
-
-We need to define the event handler called by the button:
-
-{{> DiffBox step="11.7" tutorialName="simple-todos-react"}}
-
-One last thing, let's update the class of the `<li>` element in the `Task` component to reflect it's privacy status:
-
-{{> DiffBox step="11.8" tutorialName="simple-todos-react"}}
-
-### Selectively publishing tasks based on privacy status
-
-Now that we have a way of setting which tasks are private, we should modify our
-publication function to only send the tasks that a user is authorized to see:
-
-{{> DiffBox step="11.9" tutorialName="simple-todos-react"}}
-
-To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
-
-### Extra method security
-
-In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
-
-{{> DiffBox step="11.10" tutorialName="simple-todos-react"}}
-
-> Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
-
-We're done with our private task feature! Now our app is secure from attackers trying to view or modify someone's private tasks.
+{{> step11NextSteps}}
 
 {{/template}}
diff --git a/content/react/step12.md b/content/react/step12.md
deleted file mode 100644
index ad3e677..0000000
--- a/content/react/step12.md
+++ /dev/null
@@ -1,21 +0,0 @@
-{{#template name="react-step12"}}
-
-# What's next?
-
-Congratulations on your newly built Meteor app! Don't forget to deploy it again
-so your friends can use the new features.
-
-Your app currently supports collaborating on a single todo list. To see how you
-could add more functionality, check out the Todos example &mdash; a more
-complete app that can handle sharing multiple lists. Also, try Local Market, a
-cross-platform customer engagement app that shows off native hardware
-functionality and social features.
-
-```bash
-meteor create --example todos
-meteor create --example localmarket
-```
-
-{{> step12NextSteps}}
-
-{{/template}}
diff --git a/content/shared/explanations.md b/content/shared/explanations.md
index a48263c..b097315 100644
--- a/content/shared/explanations.md
+++ b/content/shared/explanations.md
@@ -28,7 +28,7 @@ Insert a few more tasks from the database console with different text. In the ne
 
 {{/template}}
 
-{{#template name="step10OptimisticUI"}}
+{{#template name="step09OptimisticUI"}}
 
 ### Optimistic UI
 
diff --git a/content/shared/nextSteps.md b/content/shared/nextSteps.md
index 6367522..9344685 100644
--- a/content/shared/nextSteps.md
+++ b/content/shared/nextSteps.md
@@ -1,4 +1,4 @@
-{{#template name="step12NextSteps"}}
+{{#template name="step11NextSteps"}}
 
 Here are some options for where you can go next:
 
diff --git a/content/shared/step06.md b/content/shared/step06.md
index e2216d7..3a97293 100644
--- a/content/shared/step06.md
+++ b/content/shared/step06.md
@@ -1,18 +1,90 @@
-{{#template name="shared-step06"}}
+{{#template name="sharedStep06"}}
 
-# Deploying your app
+# Running your app on Android or iOS
 
-Now that we have a working todo list app, we can share it with our friends! Meteor makes it really easy to put an app up on the internet where other people can use it.
+> Currently, Meteor on Windows does not support mobile builds. If you are using Meteor on Windows, you should skip this step.
 
-Simply go to your app directory, and type:
+So far, we've been building our app and testing only in a web browser, but Meteor has been designed to work across different platforms - your simple todo list website can become an iOS or Android app in just a few commands.
+
+Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to skip to the next step.
+
+{{#if specialContent}}
+  {{> Template.dynamic template=specialContent}}
+{{/if}}
+
+### Running on an iOS simulator (Mac Only)
+
+If you have a Mac, you can run your app inside the iOS simulator.
+
+Go to your app folder and type:
+
+```bash
+meteor install-sdk ios
+```
+
+This will run you through the setup necessary to build an iOS app from your project. When you're done, type:
+
+```bash
+meteor add-platform ios
+meteor run ios
+```
+
+You will see the iOS simulator pop up with your app running inside.
+
+### Running on an Android emulator
+
+In the terminal, go to your app folder and type:
 
 ```bash
-meteor deploy my_app_name.meteor.com
+meteor install-sdk android
 ```
 
-Once you answer all of the prompts and the upload completes, you can go to `http://my_app_name.meteor.com` and use your app from anywhere. 
+This will help you install all of the necessary tools to build an Android app from your project. When you are done installing everything, type:
+
+```bash
+meteor add-platform android
+```
+
+After you agree to the license terms, type:
+
+```bash
+meteor run android
+```
+
+After some initialization, you will see an Android emulator pop up, running your app inside a native Android wrapper. The emulator can be somewhat slow, so if you want to see what it's really like using your app, you should run it on an actual device.
+
+### Running on an Android device
+
+First, complete all of the steps above to set up the Android tools on your system. Then, make sure you have [USB Debugging enabled on your phone](http://developer.android.com/tools/device.html#developer-device-options) and the phone is plugged into your computer with a USB cable. Also, you must quit the Android emulator before running on a device.
+
+Then, run the following command:
+
+```bash
+meteor run android-device
+```
+
+The app will be built and installed on your device. If you want to point your app to the server you deployed in the previous step, run:
+
+```bash
+meteor run android-device --mobile-server my_app_name.meteor.com
+```
+
+### Running on an iPhone or iPad (Mac Only; requires Apple developer account)
+
+If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
+
+```bash
+meteor run ios-device
+```
+
+This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
+
+If you want to point your app at the previously deployed server, run:
+
+```bash
+meteor run ios-device --mobile-server my_app_name.meteor.com
+```
 
-Try opening the app on multiple devices such as your phone and your friend's computer. Add, remove, and check off some tasks and you will see that the UI of your app is really fast. That's because Meteor doesn't wait for the server to respond before updating the interface - we'll talk about this more in step 11.
+Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features.
 
-Congratulations, you've made a working app that you can now use with your friends! In later steps we will add more functionality involving multiple users, private tasks, and search. First, we'll take a detour to see that while we were building a web app, we also created a pretty nice mobile app along the way.
 {{/template}}
diff --git a/content/shared/step07.md b/content/shared/step07.md
deleted file mode 100644
index b50f258..0000000
--- a/content/shared/step07.md
+++ /dev/null
@@ -1,90 +0,0 @@
-{{#template name="sharedStep07"}}
-
-# Running your app on Android or iOS
-
-> Currently, Meteor on Windows does not support mobile builds. If you are using Meteor on Windows, you should skip this step.
-
-So far, we've been building our app and testing only in a web browser, but Meteor has been designed to work across different platforms - your simple todo list website can become an iOS or Android app in just a few commands.
-
-Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to skip to the next step.
-
-{{#if specialContent}}
-  {{> Template.dynamic template=specialContent}}
-{{/if}}
-
-### Running on an iOS simulator (Mac Only)
-
-If you have a Mac, you can run your app inside the iOS simulator.
-
-Go to your app folder and type:
-
-```bash
-meteor install-sdk ios
-```
-
-This will run you through the setup necessary to build an iOS app from your project. When you're done, type:
-
-```bash
-meteor add-platform ios
-meteor run ios
-```
-
-You will see the iOS simulator pop up with your app running inside.
-
-### Running on an Android emulator
-
-In the terminal, go to your app folder and type:
-
-```bash
-meteor install-sdk android
-```
-
-This will help you install all of the necessary tools to build an Android app from your project. When you are done installing everything, type:
-
-```bash
-meteor add-platform android
-```
-
-After you agree to the license terms, type:
-
-```bash
-meteor run android
-```
-
-After some initialization, you will see an Android emulator pop up, running your app inside a native Android wrapper. The emulator can be somewhat slow, so if you want to see what it's really like using your app, you should run it on an actual device.
-
-### Running on an Android device
-
-First, complete all of the steps above to set up the Android tools on your system. Then, make sure you have [USB Debugging enabled on your phone](http://developer.android.com/tools/device.html#developer-device-options) and the phone is plugged into your computer with a USB cable. Also, you must quit the Android emulator before running on a device.
-
-Then, run the following command:
-
-```bash
-meteor run android-device
-```
-
-The app will be built and installed on your device. If you want to point your app to the server you deployed in the previous step, run:
-
-```bash
-meteor run android-device --mobile-server my_app_name.meteor.com
-```
-
-### Running on an iPhone or iPad (Mac Only; requires Apple developer account)
-
-If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
-
-```bash
-meteor run ios-device
-```
-
-This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
-
-If you want to point your app at the previously deployed server, run:
-
-```bash
-meteor run ios-device --mobile-server my_app_name.meteor.com
-```
-
-Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features.
-
-{{/template}}
-- 
2.13.6 (Apple Git-96)


From f9dcdabd22039452ec8511e82dd0302ddfdad0a6 Mon Sep 17 00:00:00 2001
From: David Glasser <glasser@davidglasser.net>
Date: Fri, 11 Mar 2016 19:49:03 -0800
Subject: [PATCH 101/164] Delete further references to deployment

---
 content/angular/step11.md |  3 +--
 content/blaze/step11.md   |  3 +--
 content/react/step11.md   |  3 +--
 content/shared/step06.md  | 14 ++------------
 4 files changed, 5 insertions(+), 18 deletions(-)

diff --git a/content/angular/step11.md b/content/angular/step11.md
index c4b8caa..55e7619 100644
--- a/content/angular/step11.md
+++ b/content/angular/step11.md
@@ -2,8 +2,7 @@
 
 # What's next?
 
-Congratulations on your newly built Meteor app! Don't forget to deploy it again
-so your friends can use the new features.
+Congratulations on your newly built Meteor app!
 
 Your app currently supports collaborating on a single todo list. To see how you
 could add more functionality, check out the [full angular-meteor tutorial](http://angular-meteor.com/).
diff --git a/content/blaze/step11.md b/content/blaze/step11.md
index b7dfe93..a457202 100644
--- a/content/blaze/step11.md
+++ b/content/blaze/step11.md
@@ -2,8 +2,7 @@
 
 # What's next?
 
-Congratulations on your newly built Meteor app! Don't forget to deploy it again
-so your friends can use the new features.
+Congratulations on your newly built Meteor app!
 
 Your app currently supports collaborating on a single todo list. To see how you
 could add more functionality, check out the Todos example &mdash; a more
diff --git a/content/react/step11.md b/content/react/step11.md
index 0c876b2..0a788ca 100644
--- a/content/react/step11.md
+++ b/content/react/step11.md
@@ -2,8 +2,7 @@
 
 # What's next?
 
-Congratulations on your newly built Meteor app! Don't forget to deploy it again
-so your friends can use the new features.
+Congratulations on your newly built Meteor app!
 
 Your app currently supports collaborating on a single todo list. To see how you
 could add more functionality, check out the Todos example &mdash; a more
diff --git a/content/shared/step06.md b/content/shared/step06.md
index 3a97293..792386d 100644
--- a/content/shared/step06.md
+++ b/content/shared/step06.md
@@ -63,11 +63,7 @@ Then, run the following command:
 meteor run android-device
 ```
 
-The app will be built and installed on your device. If you want to point your app to the server you deployed in the previous step, run:
-
-```bash
-meteor run android-device --mobile-server my_app_name.meteor.com
-```
+The app will be built and installed on your device.
 
 ### Running on an iPhone or iPad (Mac Only; requires Apple developer account)
 
@@ -79,12 +75,6 @@ meteor run ios-device
 
 This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
 
-If you want to point your app at the previously deployed server, run:
-
-```bash
-meteor run ios-device --mobile-server my_app_name.meteor.com
-```
-
-Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features.
+Now that we have seen how easy it is to run our app on mobile, let's get to adding some more features.
 
 {{/template}}
-- 
2.13.6 (Apple Git-96)


From 17ef93f8624a9dbaeb25fc76f9a82895097a8807 Mon Sep 17 00:00:00 2001
From: David Glasser <glasser@davidglasser.net>
Date: Fri, 11 Mar 2016 19:57:57 -0800
Subject: [PATCH 102/164] Update package.js

---
 package.js | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/package.js b/package.js
index bc7689c..8396643 100644
--- a/package.js
+++ b/package.js
@@ -32,34 +32,34 @@ Package.onUse(function (api) {
     'content/angular/step03.md',
     'content/angular/step04.md',
     'content/angular/step05.md',
+    'content/angular/step06.md',
     'content/angular/step07.md',
     'content/angular/step08.md',
     'content/angular/step09.md',
     'content/angular/step10.md',
     'content/angular/step11.md',
-    'content/angular/step12.md',
 
     'content/blaze/step01.md',
     'content/blaze/step02.md',
     'content/blaze/step03.md',
     'content/blaze/step04.md',
     'content/blaze/step05.md',
+    'content/blaze/step07.md',
     'content/blaze/step08.md',
     'content/blaze/step09.md',
     'content/blaze/step10.md',
     'content/blaze/step11.md',
-    'content/blaze/step12.md',
 
     'content/react/step01.md',
     'content/react/step02.md',
     'content/react/step03.md',
     'content/react/step04.md',
     'content/react/step05.md',
+    'content/react/step07.md',
     'content/react/step08.md',
     'content/react/step09.md',
     'content/react/step10.md',
     'content/react/step11.md',
-    'content/react/step12.md',
     'content/step00.html',
 
     'content/shared/explanations.md',
@@ -67,7 +67,6 @@ Package.onUse(function (api) {
     'content/shared/adding-css.js',
     'content/shared/nextSteps.md',
     'content/shared/step06.md',
-    'content/shared/step07.md',
 
     'generated/react.multi.patch',
     'generated/blaze.multi.patch',
-- 
2.13.6 (Apple Git-96)


From 3b2878bb8d2ac5bfe71a553b6d17e95e653ac848 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Thu, 17 Mar 2016 13:52:54 +1100
Subject: [PATCH 103/164] First pass at 1.3 for blaze

---
 content/.DS_Store                      |  Bin 0 -> 6148 bytes
 content/blaze/metadata.js              |    7 +-
 content/blaze/step01.md                |   11 +-
 content/blaze/step02.md                |   10 +
 content/blaze/step03.md                |    4 +-
 content/blaze/step05.md                |   11 +-
 content/blaze/step07.md                |   33 +-
 content/blaze/step08.md                |   10 +-
 content/blaze/step10.md                |   18 +-
 content/blaze/{step11.md => step12.md} |    2 +-
 content/shared/explanations.md         |    8 +
 content/shared/step11.md               |    5 +
 generated/blaze.multi.patch            | 1987 ++++++++++++++++++++------------
 package.js                             |    3 +-
 repos/blaze                            |    2 +-
 15 files changed, 1339 insertions(+), 772 deletions(-)
 create mode 100644 content/.DS_Store
 rename content/blaze/{step11.md => step12.md} (93%)
 create mode 100644 content/shared/step11.md

diff --git a/content/.DS_Store b/content/.DS_Store
new file mode 100644
index 0000000000000000000000000000000000000000..a378de81401aac5716a4c16a2551671661960e44
GIT binary patch
literal 6148
zcmeHK&59F25bn-qb;jAi99CFRq3`Ap@h9tTh`SdN49t=}xDvaW#xx8)%giKU4GVMf
z1$+!2zz0zLc?I$4&uduK-H|NOs|M+U>aV7{s(R+@p??S=bTG|s5fT$Z0#L+O2+eN<
z`%%}V<vfVg)R1Ccor=5=Yq8$3nGE3EZ4*Iq!pRG=GJo`%IL%d6_j;dcYpcC|>2eTW
ziFP_sC*FxV(bIHN%+s3J(`vxWaeO^hnH0P{R#`nclKL>0GpQe!k9aN1Cm4KG6gdP~
zn~RZ>^KrcUpwKl}T9&4st#NX!bXLp<#Z+h2$!g(oe05mL8Ke%mmLpXup>kE9nW8Sx
z*h5}VV6Y(m5(eQo-dim8@89jR{_T6`UAE}=dtG)1?DHTDf*Us<j>Or^SFhi^efR#u
z$4_6seYbN(;iopT>u?D_z*r$|mX<m%^mFhoGnSDaJp-Nr&%j19;1;VO+Q_%_FXb8V
z4E#$5aD8B)h>63-qFFki!Q&(Lw-Hgm#=8U}bC@`6EJ6<mwW)wMmAWeiwdvqzE-rD{
zShVScnvtQ78=1Nr3N@pHpP6t%6N|p}40r}EGO%SIW8D7_|9t<ynB<>41D=8ZiUHa_
zNDl_^Np5dl`#9Wd8R#=m6pU*u{z?JEY{d|ZTk#&K5%4oK027CeMeu<5gMgvIH=cpN
G%D_(*7IF>%

literal 0
HcmV?d00001

diff --git a/content/blaze/metadata.js b/content/blaze/metadata.js
index f19b52e..f7d9bcf 100644
--- a/content/blaze/metadata.js
+++ b/content/blaze/metadata.js
@@ -61,9 +61,14 @@ TutorialRegistry.registerTutorial("blaze", {
       template: 'blaze-step10'
     },
     {
+      title: 'Testing',
+      slug: "teesting",
+      template: 'sharedStep11'
+    },
+    {
       title: 'Next steps',
       slug: "next-steps",
-      template: 'blaze-step11'
+      template: 'blaze-step12'
     }
   ]
 });
diff --git a/content/blaze/step01.md b/content/blaze/step01.md
index 8b0a5d6..f62bfb6 100644
--- a/content/blaze/step01.md
+++ b/content/blaze/step01.md
@@ -12,10 +12,13 @@ meteor create simple-todos
 This will create a new folder called `simple-todos` with all of the files that a Meteor app needs:
 
 ```bash
-simple-todos.js       # a JavaScript file loaded on both client and server
-simple-todos.html     # an HTML file that defines view templates
-simple-todos.css      # a CSS file to define your app's styles
+client/main.js        # a JavaScript entry point loaded on the client
+client/main.html      # an HTML file that defines view templates
+client/main.css       # a CSS file to define your app's styles
+server/main.js        # a JavaScript entry point loaded on the server
+package.json          # a control file for installing NPM packages
 .meteor               # internal Meteor files
+.gitignore            # a control file for git
 ```
 
 To run the newly created app:
@@ -27,7 +30,7 @@ meteor
 
 Open your web browser and go to `http://localhost:3000` to see the app running.
 
-You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `simple-todos.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
+You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `client/main.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
 
 Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application. If you find a bug or error in the tutorial, please file an issue or submit a pull request [on GitHub](https://github.com/meteor/tutorials).
 {{/template}}
diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index 384b348..a1ee699 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -3,10 +3,20 @@
 
 To start working on our todo list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
 
+First, let's remove the body from our HTML entry point (leaving just the `<head>` tag):
+
 {{> DiffBox tutorialName="simple-todos" step="2.1"}}
 
+Then we create some new files in the `imports/` directory:
+
 {{> DiffBox tutorialName="simple-todos" step="2.2"}}
 
+{{> DiffBox tutorialName="simple-todos" step="2.3"}}
+
+Files inside `imports/` are not eagerly loaded, so we'll need to import `imports/ui/body.js` from our frontend JS entrypoint (`client/main.js`---note that we remove the rest of the code from this file):
+
+{{> DiffBox tutorialName="simple-todos" step="2.4"}}
+
 In our browser, the app will now look much like this:
 
 > #### Todo List
diff --git a/content/blaze/step03.md b/content/blaze/step03.md
index 9c9e37f..e1b5f62 100644
--- a/content/blaze/step03.md
+++ b/content/blaze/step03.md
@@ -4,9 +4,9 @@
 
 {{> step03CollectionsIntro}}
 
-Let's update our JavaScript code to get our tasks from a collection instead of a static array:
+Let's update our client-side JavaScript code to get our tasks from a collection instead of a static array:
 
-{{> DiffBox tutorialName="simple-todos" step="3.1"}}
+{{> DiffBox tutorialName="simple-todos" step="3.3"}}
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
diff --git a/content/blaze/step05.md b/content/blaze/step05.md
index 8c62f68..e19c9e6 100644
--- a/content/blaze/step05.md
+++ b/content/blaze/step05.md
@@ -4,13 +4,20 @@
 
 Until now, we have only interacted with a collection by inserting documents. Now, we will learn how to update and remove them.
 
-Let's add two elements to our `task` template, a checkbox and a delete button:
+Let's work on our `task` template---starting by moving it to it's own file, with some new features, a checkbox and a delete button:
 
 {{> DiffBox tutorialName="simple-todos" step="5.1"}}
 
+We also need to remove the old definition of the `task` template from the `imports/ui/body.html` file.
+
 We have added UI elements, but they don't do anything yet. We should add some event handlers:
 
-{{> DiffBox tutorialName="simple-todos" step="5.2"}}
+{{> DiffBox tutorialName="simple-todos" step="5.3"}}
+
+The `body` template uses the `task` template, so we need to import it as well:
+
+{{> DiffBox tutorialName="simple-todos" step="5.4"}}
+
 
 ### Getting data in event handlers
 
diff --git a/content/blaze/step07.md b/content/blaze/step07.md
index 210b283..4ec621d 100644
--- a/content/blaze/step07.md
+++ b/content/blaze/step07.md
@@ -1,37 +1,46 @@
 {{#template name="blaze-step07"}}
 
-# Storing temporary UI state in Session
+# Storing temporary UI state in a Reactive Dictionary
 
-In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to only see incomplete tasks. We're going to learn how to use `Session` to store temporary reactive state on the client.
+In this step, we'll add a client-side data filtering feature to our app, so that users can check a box to only see incomplete tasks. We're going to learn how to use a [`ReactiveDict`](https://atmospherejs.com/meteor/reactive-dict) to store temporary reactive state on the client. A `ReactiveDict` is like a normal JS object with keys and values, but with built-in reactivity.
 
 First, we need to add a checkbox to our HTML:
 
 {{> DiffBox tutorialName="simple-todos" step="7.1"}}
 
-Then, we need an event handler to update a `Session` variable when the checkbox
-is checked or unchecked. `Session` is a convenient place to store temporary UI
-state, and can be used in helpers just like a collection.
+Now we need to add the `reactive-dict` package:
 
-{{> DiffBox tutorialName="simple-todos" step="7.2"}}
+```bash
+meteor add reactive-dict
+```
+
+Then we need to set up a new `ReactiveDict` and attach it to the body template instance (as this is where we'll store the checkbox's state) when it is first created:
+
+{{> DiffBox tutorialName="simple-todos" step="7.3"}}
+
+Then, we need an event handler to update the `ReactiveDict` variable when the checkbox
+is checked or unchecked. An event handler takes two arguments, the second of which is the same template instance which was `this` in the `onCreated` callback:
+
+{{> DiffBox tutorialName="simple-todos" step="7.4"}}
 
 Now, we need to update `Template.body.helpers`. The code below has a new if
 block to filter the tasks if the checkbox is checked, and a helper to make sure
-the checkbox represents the state of our Session variable.
+the checkbox represents the state of our internal `state` dictionary.
 
-{{> DiffBox tutorialName="simple-todos" step="7.3"}}
+{{> DiffBox tutorialName="simple-todos" step="7.5"}}
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
-### Session is a reactive data store for the client
+### ReactiveDicts are reactive data stores for the client
 
-Until now, we have stored all of our state in collections, and the view updated automatically when we modified the data inside these collections. This is because Mongo.Collection is recognized by Meteor as a _reactive data source_, meaning Meteor knows when the data inside has changed. `Session` is the same way, but is not synced with the server like collections are. This makes `Session` a convenient place to store temporary UI state like the checkbox above. Just like with collections, we don't have to write any extra code for the template to update when the `Session` variable changes &mdash; just calling `Session.get(...)` inside the helper is enough.
+Until now, we have stored all of our state in collections, and the view updated automatically when we modified the data inside these collections. This is because Mongo.Collection is recognized by Meteor as a _reactive data source_, meaning Meteor knows when the data inside has changed. `ReactiveDict` is the same way, but is not synced with the server like collections are. This makes a `ReactiveDict` a convenient place to store temporary UI state like the checkbox above. Just like with collections, we don't have to write any extra code for the template to update when the `ReactiveDict` variable changes &mdash; just calling `instance.state.get(...)` inside the helper is enough.
 
 ### One more feature: Showing a count of incomplete tasks
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a helper and change one line of the HTML.
 
-{{> DiffBox tutorialName="simple-todos" step="7.4"}}
+{{> DiffBox tutorialName="simple-todos" step="7.6"}}
 
-{{> DiffBox tutorialName="simple-todos" step="7.5"}}
+{{> DiffBox tutorialName="simple-todos" step="7.7"}}
 
 {{/template}}
diff --git a/content/blaze/step08.md b/content/blaze/step08.md
index f62e6a9..3a39b1e 100644
--- a/content/blaze/step08.md
+++ b/content/blaze/step08.md
@@ -18,6 +18,10 @@ Then, in your JavaScript, add the following code to configure the accounts UI to
 
 {{> DiffBox tutorialName="simple-todos" step="8.3"}}
 
+We'll need to import that configuration from our JavaScript entrypoint also:
+
+{{> DiffBox tutorialName="simple-todos" step="8.4"}}
+
 Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
 
 1. Only display the new task input field to logged in users
@@ -30,15 +34,15 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `submit .new-task` event handler:
 
-{{> DiffBox tutorialName="simple-todos" step="8.4"}}
+{{> DiffBox tutorialName="simple-todos" step="8.5"}}
 
 Then, in our HTML, add an `#if` block helper to only show the form when there is a logged in user:
 
-{{> DiffBox tutorialName="simple-todos" step="8.5"}}
+{{> DiffBox tutorialName="simple-todos" step="8.6"}}
 
 Finally, add a Spacebars statement to display the `username` field on each task right before the text:
 
-{{> DiffBox tutorialName="simple-todos" step="8.6"}}`
+{{> DiffBox tutorialName="simple-todos" step="8.7"}}
 
 Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
 
diff --git a/content/blaze/step10.md b/content/blaze/step10.md
index 0ba8e21..7ac6d39 100644
--- a/content/blaze/step10.md
+++ b/content/blaze/step10.md
@@ -12,10 +12,14 @@ meteor remove autopublish
 
 When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and `Meteor.subscribe`.
 
-Let's add them now.
+First lets add a publication for all tasks:
 
 {{> DiffBox tutorialName="simple-todos" step="10.2"}}
 
+And then let's subscribe to that publication when the `body` template is created:
+
+{{> DiffBox tutorialName="simple-todos" step="10.3"}}
+
 Once you have added this code, all of the tasks will reappear.
 
 Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When `Meteor.subscribe` is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
@@ -24,26 +28,26 @@ Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`
 
 First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
 
-{{> DiffBox tutorialName="simple-todos" step="10.3"}}
+{{> DiffBox tutorialName="simple-todos" step="10.4"}}
 
 Let's make sure our task has a special class if it is marked private:
 
-{{> DiffBox tutorialName="simple-todos" step="10.4"}}
+{{> DiffBox tutorialName="simple-todos" step="10.5"}}
 
 We need to modify our JavaScript code in three places:
 
-{{> DiffBox tutorialName="simple-todos" step="10.5"}}
-
 {{> DiffBox tutorialName="simple-todos" step="10.6"}}
 
 {{> DiffBox tutorialName="simple-todos" step="10.7"}}
 
+{{> DiffBox tutorialName="simple-todos" step="10.8"}}
+
 ### Selectively publishing tasks based on privacy status
 
 Now that we have a way of setting which tasks are private, we should modify our
 publication function to only send the tasks that a user is authorized to see:
 
-{{> DiffBox tutorialName="simple-todos" step="10.8"}}
+{{> DiffBox tutorialName="simple-todos" step="10.9"}}
 
 To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
 
@@ -51,7 +55,7 @@ To test that this functionality works, you can use your browser's private browsi
 
 In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
 
-{{> DiffBox tutorialName="simple-todos" step="10.9"}}
+{{> DiffBox tutorialName="simple-todos" step="10.10"}}
 
 > Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
diff --git a/content/blaze/step11.md b/content/blaze/step12.md
similarity index 93%
rename from content/blaze/step11.md
rename to content/blaze/step12.md
index a457202..29a1c88 100644
--- a/content/blaze/step11.md
+++ b/content/blaze/step12.md
@@ -1,4 +1,4 @@
-{{#template name="blaze-step11"}}
+{{#template name="blaze-step12"}}
 
 # What's next?
 
diff --git a/content/shared/explanations.md b/content/shared/explanations.md
index b097315..54bb468 100644
--- a/content/shared/explanations.md
+++ b/content/shared/explanations.md
@@ -4,6 +4,14 @@ Collections are Meteor's way of storing persistent data. The special thing about
 
 Creating a new collection is as easy as calling `MyCollection = new Mongo.Collection("my-collection");` in your JavaScript. On the server, this sets up a MongoDB collection called `my-collection`; on the client, this creates a cache connected to the server collection. We'll learn more about the client/server divide in step 12, but for now we can write our code with the assumption that the entire database is present on the client.
 
+To create the collection, we define a new `todos` module that creates a Mongo collection and exports it:
+
+{{> DiffBox tutorialName="simple-todos" step="3.1"}}
+
+We need to import that module on the server (this creates the MongoDB collection and sets up the plumbing to get the data to the client):
+
+{{> DiffBox tutorialName="simple-todos" step="3.2"}}
+
 {{/template}}
 
 {{#template name="step03InsertingTasksFromConsole"}}
diff --git a/content/shared/step11.md b/content/shared/step11.md
new file mode 100644
index 0000000..e84d5e5
--- /dev/null
+++ b/content/shared/step11.md
@@ -0,0 +1,5 @@
+{{#template name="sharedStep11"}}
+
+# Testing
+
+{{/template}}
diff --git a/generated/blaze.multi.patch b/generated/blaze.multi.patch
index 3edc69f..fcbf0d5 100644
--- a/generated/blaze.multi.patch
+++ b/generated/blaze.multi.patch
@@ -1,20 +1,24 @@
-From 8e14e687c3fe4add10f1d93215051d27faf3dd7c Mon Sep 17 00:00:00 2001
+From 1d9c7079a2ffb10bff504c472b2175c1ed7bf1b2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:05:51 -0700
-Subject: [PATCH 01/34] Step 1: Run `meteor create`
+Subject: [PATCH 01/46] Step 1: Run `meteor create`
 
 ---
- .meteor/.finished-upgraders |  8 ++++++++
+ .gitignore                  |  1 +
+ .meteor/.finished-upgraders | 13 +++++++++
  .meteor/.gitignore          |  1 +
- .meteor/.id                 |  7 +++++++
- .meteor/packages            |  9 +++++++++
+ .meteor/.id                 |  7 +++++
+ .meteor/packages            | 21 ++++++++++++++
  .meteor/platforms           |  2 ++
  .meteor/release             |  1 +
- .meteor/versions            | 48 +++++++++++++++++++++++++++++++++++++++++++++
- simple-todos.css            |  1 +
- simple-todos.html           | 14 +++++++++++++
- simple-todos.js             | 23 ++++++++++++++++++++++
- 10 files changed, 114 insertions(+)
+ .meteor/versions            | 69 +++++++++++++++++++++++++++++++++++++++++++++
+ client/main.css             |  1 +
+ client/main.html            | 25 ++++++++++++++++
+ client/main.js              | 22 +++++++++++++++
+ package.json                | 10 +++++++
+ server/main.js              |  5 ++++
+ 13 files changed, 178 insertions(+)
+ create mode 100644 .gitignore
  create mode 100644 .meteor/.finished-upgraders
  create mode 100644 .meteor/.gitignore
  create mode 100644 .meteor/.id
@@ -22,16 +26,25 @@ Subject: [PATCH 01/34] Step 1: Run `meteor create`
  create mode 100644 .meteor/platforms
  create mode 100644 .meteor/release
  create mode 100644 .meteor/versions
- create mode 100644 simple-todos.css
- create mode 100644 simple-todos.html
- create mode 100644 simple-todos.js
+ create mode 100644 client/main.css
+ create mode 100644 client/main.html
+ create mode 100644 client/main.js
+ create mode 100644 package.json
+ create mode 100644 server/main.js
 
+diff --git a/.gitignore b/.gitignore
+new file mode 100644
+index 0000000..3c3629e
+--- /dev/null
++++ b/.gitignore
+@@ -0,0 +1 @@
++node_modules
 diff --git a/.meteor/.finished-upgraders b/.meteor/.finished-upgraders
 new file mode 100644
-index 0000000..8a76103
+index 0000000..dacc2c0
 --- /dev/null
 +++ b/.meteor/.finished-upgraders
-@@ -0,0 +1,8 @@
+@@ -0,0 +1,13 @@
 +# This file contains information which helps Meteor properly upgrade your
 +# app when you run 'meteor update'. You should check it into version control
 +# with your project.
@@ -40,6 +53,11 @@ index 0000000..8a76103
 +notices-for-0.9.1
 +0.9.4-platform-file
 +notices-for-facebook-graph-api-2
++1.2.0-standard-minifiers-package
++1.2.0-meteor-platform-split
++1.2.0-cordova-changes
++1.2.0-breaking-changes
++1.3.0-split-minifiers-package
 diff --git a/.meteor/.gitignore b/.meteor/.gitignore
 new file mode 100644
 index 0000000..4083037
@@ -62,19 +80,31 @@ index 0000000..9a3be4f
 +1v2pn7n1jbklfu1hg4tnm
 diff --git a/.meteor/packages b/.meteor/packages
 new file mode 100644
-index 0000000..99704e0
+index 0000000..d4c8001
 --- /dev/null
 +++ b/.meteor/packages
-@@ -0,0 +1,9 @@
+@@ -0,0 +1,21 @@
 +# Meteor packages used by this project, one per line.
 +# Check this file (and the other files in this directory) into your repository.
 +#
 +# 'meteor add' and 'meteor remove' will edit this file for you,
 +# but you can also edit it by hand.
 +
-+meteor-platform
-+autopublish
-+insecure
++meteor-base             # Packages every Meteor app needs to have
++mobile-experience       # Packages for a great mobile UX
++mongo                   # The database Meteor supports right now
++blaze-html-templates    # Compile .html files into Meteor Blaze views
++reactive-var            # Reactive variable for tracker
++jquery                  # Helpful client-side library
++tracker                 # Meteor's client-side reactive programming library
++
++standard-minifier-css   # CSS minifier run for production mode
++standard-minifier-js    # JS minifier run for production mode
++es5-shim                # ECMAScript 5 compatibility for older browsers.
++ecmascript              # Enable ECMAScript2015+ syntax in app code
++
++autopublish             # Publish all data to the clients (for prototyping)
++insecure                # Allow all DB writes from clients (for prototyping)
 diff --git a/.meteor/platforms b/.meteor/platforms
 new file mode 100644
 index 0000000..efeba1b
@@ -85,231 +115,348 @@ index 0000000..efeba1b
 +browser
 diff --git a/.meteor/release b/.meteor/release
 new file mode 100644
-index 0000000..dab6b55
+index 0000000..ab70657
 --- /dev/null
 +++ b/.meteor/release
 @@ -0,0 +1 @@
-+METEOR@1.1.0.2
++METEOR@1.3-rc.2
 diff --git a/.meteor/versions b/.meteor/versions
 new file mode 100644
-index 0000000..410e1d9
+index 0000000..c3395d2
 --- /dev/null
 +++ b/.meteor/versions
-@@ -0,0 +1,48 @@
-+autopublish@1.0.3
-+autoupdate@1.2.1
-+base64@1.0.3
-+binary-heap@1.0.3
-+blaze@2.1.2
-+blaze-tools@1.0.3
-+boilerplate-generator@1.0.3
-+callback-hook@1.0.3
-+check@1.0.5
-+ddp@1.1.0
-+deps@1.0.7
-+ejson@1.0.6
-+fastclick@1.0.3
-+geojson-utils@1.0.3
-+html-tools@1.0.4
-+htmljs@1.0.4
-+http@1.1.0
-+id-map@1.0.3
-+insecure@1.0.3
-+jquery@1.11.3_2
-+json@1.0.3
-+launch-screen@1.0.2
-+livedata@1.0.13
-+logging@1.0.7
-+meteor@1.1.6
-+meteor-platform@1.2.2
-+minifiers@1.1.5
-+minimongo@1.0.8
-+mobile-status-bar@1.0.3
-+mongo@1.1.0
-+observe-sequence@1.0.6
-+ordered-dict@1.0.3
-+random@1.0.3
-+reactive-dict@1.1.0
-+reactive-var@1.0.5
-+reload@1.1.3
-+retry@1.0.3
-+routepolicy@1.0.5
-+session@1.1.0
-+spacebars@1.0.6
-+spacebars-compiler@1.0.6
-+templating@1.1.1
-+tracker@1.0.7
-+ui@1.0.6
-+underscore@1.0.3
-+url@1.0.4
-+webapp@1.2.0
-+webapp-hashing@1.0.3
-diff --git a/simple-todos.css b/simple-todos.css
+@@ -0,0 +1,69 @@
++allow-deny@1.0.2-rc.2
++autopublish@1.0.5-rc.2
++autoupdate@1.2.6-rc.2
++babel-compiler@6.5.1-rc.2
++babel-runtime@0.1.6-rc.2
++base64@1.0.6-rc.2
++binary-heap@1.0.6-rc.2
++blaze@2.1.5-rc.2
++blaze-html-templates@1.0.2-rc.2
++blaze-tools@1.0.6-rc.2
++boilerplate-generator@1.0.6-rc.2
++caching-compiler@1.0.2-rc.2
++caching-html-compiler@1.0.4-rc.2
++callback-hook@1.0.6-rc.2
++check@1.1.2-rc.2
++ddp@1.2.3-rc.2
++ddp-client@1.2.3-rc.2
++ddp-common@1.2.3-rc.2
++ddp-server@1.2.4-rc.2
++deps@1.0.10-rc.2
++diff-sequence@1.0.3-rc.2
++ecmascript@0.4.1-rc.2
++ecmascript-runtime@0.2.8-rc.2
++ejson@1.0.9-rc.2
++es5-shim@4.5.8-rc.2
++fastclick@1.0.9-rc.2
++geojson-utils@1.0.6-rc.2
++hot-code-push@1.0.2-rc.2
++html-tools@1.0.7-rc.2
++htmljs@1.0.7-rc.2
++http@1.1.3-rc.2
++id-map@1.0.5-rc.2
++insecure@1.0.5-rc.2
++jquery@1.11.6-rc.2
++launch-screen@1.0.7-rc.2
++livedata@1.0.16-rc.2
++logging@1.0.10-rc.2
++meteor@1.1.12-rc.2
++meteor-base@1.0.2-rc.2
++minifier-css@1.1.9-rc.2
++minifier-js@1.1.9-rc.2
++minimongo@1.0.12-rc.2
++mobile-experience@1.0.2-rc.2
++mobile-status-bar@1.0.9-rc.2
++modules@0.5.1-rc.2
++modules-runtime@0.6.1-rc.2
++mongo@1.1.5-rc.2
++mongo-id@1.0.2-rc.2
++npm-mongo@1.4.41-rc.2
++observe-sequence@1.0.9-rc.2
++ordered-dict@1.0.5-rc.2
++promise@0.6.4-rc.2
++random@1.0.7-rc.2
++reactive-var@1.0.7-rc.2
++reload@1.1.6-rc.2
++retry@1.0.5-rc.2
++routepolicy@1.0.8-rc.2
++spacebars@1.0.9-rc.2
++spacebars-compiler@1.0.9-rc.2
++standard-minifier-css@1.0.4-rc.2
++standard-minifier-js@1.0.4-rc.2
++templating@1.1.7-rc.2
++templating-tools@1.0.2-rc.2
++tracker@1.0.11-rc.2
++ui@1.0.9-rc.2
++underscore@1.0.6-rc.2
++url@1.0.7-rc.2
++webapp@1.2.6-rc.2
++webapp-hashing@1.0.7-rc.2
+diff --git a/client/main.css b/client/main.css
 new file mode 100644
 index 0000000..b6b4052
 --- /dev/null
-+++ b/simple-todos.css
++++ b/client/main.css
 @@ -0,0 +1 @@
 +/* CSS declarations go here */
-diff --git a/simple-todos.html b/simple-todos.html
+diff --git a/client/main.html b/client/main.html
 new file mode 100644
-index 0000000..b08c7c3
+index 0000000..6fe0dc5
 --- /dev/null
-+++ b/simple-todos.html
-@@ -0,0 +1,14 @@
++++ b/client/main.html
+@@ -0,0 +1,25 @@
 +<head>
-+  <title>simple-todos</title>
++  <title>simple</title>
 +</head>
 +
 +<body>
 +  <h1>Welcome to Meteor!</h1>
 +
 +  {{> hello}}
++  {{> info}}
 +</body>
 +
 +<template name="hello">
 +  <button>Click Me</button>
 +  <p>You've pressed the button {{counter}} times.</p>
 +</template>
-diff --git a/simple-todos.js b/simple-todos.js
++
++<template name="info">
++  <h2>Learn Meteor!</h2>
++  <ul>
++    <li><a href="https://www.meteor.com/try">Do the Tutorial</a></li>
++    <li><a href="http://guide.meteor.com">Follow the Guide</a></li>
++    <li><a href="https://docs.meteor.com">Read the Docs</a></li>
++    <li><a href="https://forums.meteor.com">Discussions</a></li>
++  </ul>
++</template>
+diff --git a/client/main.js b/client/main.js
 new file mode 100644
-index 0000000..4f8c65d
+index 0000000..ecb3282
 --- /dev/null
-+++ b/simple-todos.js
-@@ -0,0 +1,23 @@
-+if (Meteor.isClient) {
++++ b/client/main.js
+@@ -0,0 +1,22 @@
++import { Template } from 'meteor/templating';
++import { ReactiveVar } from 'meteor/reactive-var';
++
++import './main.html';
++
++Template.hello.onCreated(function helloOnCreated() {
 +  // counter starts at 0
-+  Session.setDefault('counter', 0);
++  this.counter = new ReactiveVar(0);
++});
 +
-+  Template.hello.helpers({
-+    counter: function () {
-+      return Session.get('counter');
-+    }
-+  });
++Template.hello.helpers({
++  counter() {
++    return Template.instance().counter.get();
++  },
++});
 +
-+  Template.hello.events({
-+    'click button': function () {
-+      // increment the counter when button is clicked
-+      Session.set('counter', Session.get('counter') + 1);
-+    }
-+  });
++Template.hello.events({
++  'click button'(event, instance) {
++    // increment the counter when button is clicked
++    instance.counter.set(instance.counter.get() + 1);
++  },
++});
+diff --git a/package.json b/package.json
+new file mode 100644
+index 0000000..4164b14
+--- /dev/null
++++ b/package.json
+@@ -0,0 +1,10 @@
++{
++  "name": "simple-todos",
++  "private": true,
++  "scripts": {
++    "start": "meteor run"
++  },
++  "dependencies": {
++    "meteor-node-stubs": "~0.2.0"
++  }
 +}
+diff --git a/server/main.js b/server/main.js
+new file mode 100644
+index 0000000..31a9e0e
+--- /dev/null
++++ b/server/main.js
+@@ -0,0 +1,5 @@
++import { Meteor } from 'meteor/meteor';
 +
-+if (Meteor.isServer) {
-+  Meteor.startup(function () {
-+    // code to run on server at startup
-+  });
-+}
++Meteor.startup(() => {
++  // code to run on server at startup
++});
 -- 
-2.6.3
+2.1.3
 
 
-From be5979a8eae5766f74314e57f41037f4977d1372 Mon Sep 17 00:00:00 2001
+From 1bca6e0184b74c344463a577a01d7a3dbad1f8be Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:07:22 -0700
-Subject: [PATCH 02/34] Step 2.1: Replace starter HTML code
+Subject: [PATCH 02/46] Step 2.1: Remove starter HTML code
 
 ---
- simple-todos.html | 19 +++++++++++++------
- 1 file changed, 13 insertions(+), 6 deletions(-)
-
-diff --git a/simple-todos.html b/simple-todos.html
-index b08c7c3..95624e7 100644
---- a/simple-todos.html
-+++ b/simple-todos.html
-@@ -1,14 +1,21 @@
+ client/main.html | 22 ----------------------
+ 1 file changed, 22 deletions(-)
+
+diff --git a/client/main.html b/client/main.html
+index 6fe0dc5..7c48505 100644
+--- a/client/main.html
++++ b/client/main.html
+@@ -1,25 +1,3 @@
  <head>
--  <title>simple-todos</title>
-+  <title>Todo List</title>
+   <title>simple</title>
  </head>
- 
- <body>
+-
+-<body>
 -  <h1>Welcome to Meteor!</h1>
+-
+-  {{> hello}}
+-  {{> info}}
+-</body>
+-
+-<template name="hello">
+-  <button>Click Me</button>
+-  <p>You've pressed the button {{counter}} times.</p>
+-</template>
+-
+-<template name="info">
+-  <h2>Learn Meteor!</h2>
+-  <ul>
+-    <li><a href="https://www.meteor.com/try">Do the Tutorial</a></li>
+-    <li><a href="http://guide.meteor.com">Follow the Guide</a></li>
+-    <li><a href="https://docs.meteor.com">Read the Docs</a></li>
+-    <li><a href="https://forums.meteor.com">Discussions</a></li>
+-  </ul>
+-</template>
+-- 
+2.1.3
+
+
+From 07b752c2a16a711e2596f2167a66ef700f3e4d2c Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 13:11:52 +1100
+Subject: [PATCH 03/46] Step 2.2: Replace starter HTML code
+
+---
+ imports/ui/body.html | 17 +++++++++++++++++
+ 1 file changed, 17 insertions(+)
+ create mode 100644 imports/ui/body.html
+
+diff --git a/imports/ui/body.html b/imports/ui/body.html
+new file mode 100644
+index 0000000..23a6507
+--- /dev/null
++++ b/imports/ui/body.html
+@@ -0,0 +1,17 @@
++<body>
 +  <div class="container">
 +    <header>
 +      <h1>Todo List</h1>
 +    </header>
- 
--  {{> hello}}
++
 +    <ul>
 +      {{#each tasks}}
 +        {{> task}}
 +      {{/each}}
 +    </ul>
 +  </div>
- </body>
- 
--<template name="hello">
--  <button>Click Me</button>
--  <p>You've pressed the button {{counter}} times.</p>
++</body>
++
 +<template name="task">
 +  <li>{{text}}</li>
- </template>
++</template>
 -- 
-2.6.3
+2.1.3
 
 
-From eda253878e20ba2577f28fe6fd7c3ce5090aec18 Mon Sep 17 00:00:00 2001
+From 7abbdb9a538a32b82c018df9ab9772cefdfb402b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:07:50 -0700
-Subject: [PATCH 03/34] Step 2.2: Replace starter JS code
+Subject: [PATCH 04/46] Step 2.3: Replace starter JS code
 
 ---
- simple-todos.js | 27 +++++++--------------------
- 1 file changed, 7 insertions(+), 20 deletions(-)
-
-diff --git a/simple-todos.js b/simple-todos.js
-index 4f8c65d..871b655 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -1,23 +1,10 @@
- if (Meteor.isClient) {
--  // counter starts at 0
--  Session.setDefault('counter', 0);
+ imports/ui/body.js | 11 +++++++++++
+ 1 file changed, 11 insertions(+)
+ create mode 100644 imports/ui/body.js
+
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+new file mode 100644
+index 0000000..3ad20b1
+--- /dev/null
++++ b/imports/ui/body.js
+@@ -0,0 +1,11 @@
++import { Template } from 'meteor/templating';
++
++import './body.html';
++
++Template.body.helpers({
++  tasks: [
++    { text: 'This is task 1' },
++    { text: 'This is task 2' },
++    { text: 'This is task 3' },
++  ],
++});
+-- 
+2.1.3
+
+
+From f33c2b6553d6a5502605de8b044b1e448894322d Mon Sep 17 00:00:00 2001
+From: Sashko Stubailo <sashko@stubailo.com>
+Date: Tue, 14 Jul 2015 19:08:17 -0700
+Subject: [PATCH 05/46] Step 2.4: Import starter JS
+
+---
+ client/main.js | 23 +----------------------
+ 1 file changed, 1 insertion(+), 22 deletions(-)
+
+diff --git a/client/main.js b/client/main.js
+index ecb3282..4e7c1a4 100644
+--- a/client/main.js
++++ b/client/main.js
+@@ -1,22 +1 @@
+-import { Template } from 'meteor/templating';
+-import { ReactiveVar } from 'meteor/reactive-var';
 -
--  Template.hello.helpers({
--    counter: function () {
--      return Session.get('counter');
--    }
--  });
+-import './main.html';
 -
--  Template.hello.events({
--    'click button': function () {
--      // increment the counter when button is clicked
--      Session.set('counter', Session.get('counter') + 1);
--    }
--  });
--}
+-Template.hello.onCreated(function helloOnCreated() {
+-  // counter starts at 0
+-  this.counter = new ReactiveVar(0);
+-});
 -
--if (Meteor.isServer) {
--  Meteor.startup(function () {
--    // code to run on server at startup
-+  // This code only runs on the client
-+  Template.body.helpers({
-+    tasks: [
-+      { text: "This is task 1" },
-+      { text: "This is task 2" },
-+      { text: "This is task 3" }
-+    ]
-   });
- }
+-Template.hello.helpers({
+-  counter() {
+-    return Template.instance().counter.get();
+-  },
+-});
+-
+-Template.hello.events({
+-  'click button'(event, instance) {
+-    // increment the counter when button is clicked
+-    instance.counter.set(instance.counter.get() + 1);
+-  },
+-});
++import '../imports/ui/body.js';
 -- 
-2.6.3
+2.1.3
 
 
-From e15faa0c628c7756e51d2470432f9aa548729739 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Tue, 14 Jul 2015 19:08:17 -0700
-Subject: [PATCH 04/34] Step 2.3: Add CSS
+From 39465319a937823b78df23fe36b1dd5a4bcd65c3 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:13:09 +1100
+Subject: [PATCH 06/46] Step 2.5: Add CSS
 
 ---
- simple-todos.css | 125 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ client/main.css | 125 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  1 file changed, 125 insertions(+)
 
-diff --git a/simple-todos.css b/simple-todos.css
+diff --git a/client/main.css b/client/main.css
 index b6b4052..ed5e77e 100644
---- a/simple-todos.css
-+++ b/simple-todos.css
+--- a/client/main.css
++++ b/client/main.css
 @@ -1 +1,126 @@
  /* CSS declarations go here */
 +body {
@@ -438,57 +585,106 @@ index b6b4052..ed5e77e 100644
 +  }
 +}
 -- 
-2.6.3
+2.1.3
 
 
-From f78906af3d2d15fdb1851ff28122f9e08bc4ac9f Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Tue, 14 Jul 2015 19:08:48 -0700
-Subject: [PATCH 05/34] Step 3.1: Define Tasks collection and load tasks from
- it
+From f7d73475384e80357eb9c7a5ca041d2546f60d62 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:15:47 +1100
+Subject: [PATCH 07/46] Step 3.1: Create tasks collection
+
+---
+ imports/api/tasks.js | 5 +++++
+ 1 file changed, 5 insertions(+)
+ create mode 100644 imports/api/tasks.js
+
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+new file mode 100644
+index 0000000..a9ab038
+--- /dev/null
++++ b/imports/api/tasks.js
+@@ -0,0 +1,5 @@
++import { Mongo } from 'meteor/mongo';
++
++const Tasks = new Mongo.Collection('tasks');
++
++export { Tasks };
+-- 
+2.1.3
+
+
+From ad62355a6a8ee24c21e37478504512596fe5201c Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:20:32 +1100
+Subject: [PATCH 08/46] Step 3.2: Load tasks collection on the server
 
 ---
- simple-todos.js | 10 +++++-----
+ server/main.js | 6 +-----
+ 1 file changed, 1 insertion(+), 5 deletions(-)
+
+diff --git a/server/main.js b/server/main.js
+index 31a9e0e..ab941a4 100644
+--- a/server/main.js
++++ b/server/main.js
+@@ -1,5 +1 @@
+-import { Meteor } from 'meteor/meteor';
+-
+-Meteor.startup(() => {
+-  // code to run on server at startup
+-});
++import '../imports/api/tasks.js';
+-- 
+2.1.3
+
+
+From 6aff55c365b0b5507877d5a66dd62d3a65a38cb2 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:16:03 +1100
+Subject: [PATCH 09/46] Step 3.3: Load tasks from Tasks collection
+
+---
+ imports/ui/body.js | 10 +++++-----
  1 file changed, 5 insertions(+), 5 deletions(-)
 
-diff --git a/simple-todos.js b/simple-todos.js
-index 871b655..69fdf2c 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -1,10 +1,10 @@
-+Tasks = new Mongo.Collection("tasks");
-+
- if (Meteor.isClient) {
-   // This code only runs on the client
-   Template.body.helpers({
--    tasks: [
--      { text: "This is task 1" },
--      { text: "This is task 2" },
--      { text: "This is task 3" }
--    ]
-+    tasks: function () {
-+      return Tasks.find({});
-+    }
-   });
- }
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+index 3ad20b1..fc36022 100644
+--- a/imports/ui/body.js
++++ b/imports/ui/body.js
+@@ -1,11 +1,11 @@
+ import { Template } from 'meteor/templating';
+ 
++import { Tasks } from '../api/tasks.js';
++
+ import './body.html';
+ 
+ Template.body.helpers({
+-  tasks: [
+-    { text: 'This is task 1' },
+-    { text: 'This is task 2' },
+-    { text: 'This is task 3' },
+-  ],
++  tasks() {
++    return Tasks.find({});
++  },
+ });
 -- 
-2.6.3
+2.1.3
 
 
-From 8434ab7042eb750c50ab58efd7231f1c97c630ed Mon Sep 17 00:00:00 2001
+From 9e387992b0911ef28958d5ec6d7380134da81c72 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:10:21 -0700
-Subject: [PATCH 06/34] Step 4.1: Add form for new tasks
+Subject: [PATCH 10/46] Step 4.1: Add form for new tasks
 
 ---
- simple-todos.html | 4 ++++
+ imports/ui/body.html | 4 ++++
  1 file changed, 4 insertions(+)
 
-diff --git a/simple-todos.html b/simple-todos.html
-index 95624e7..e31aef1 100644
---- a/simple-todos.html
-+++ b/simple-todos.html
-@@ -6,6 +6,10 @@
+diff --git a/imports/ui/body.html b/imports/ui/body.html
+index 23a6507..0a1f952 100644
+--- a/imports/ui/body.html
++++ b/imports/ui/body.html
+@@ -2,6 +2,10 @@
    <div class="container">
      <header>
        <h1>Todo List</h1>
@@ -500,95 +696,94 @@ index 95624e7..e31aef1 100644
  
      <ul>
 -- 
-2.6.3
+2.1.3
 
 
-From 7a1ace1482bbdd5ce38aa5db28ecb20ce0e12863 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Tue, 14 Jul 2015 19:11:45 -0700
-Subject: [PATCH 07/34] Step 4.2: Add event handler for form submit
+From c86ea9c4669be127531e6e3245841d2f76486fae Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:19:59 +1100
+Subject: [PATCH 11/46] Step 4.2: Add event handler for form submit
 
 ---
- simple-todos.js | 19 +++++++++++++++++++
- 1 file changed, 19 insertions(+)
-
-diff --git a/simple-todos.js b/simple-todos.js
-index 69fdf2c..8bfe857 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -7,4 +7,23 @@ if (Meteor.isClient) {
-       return Tasks.find({});
-     }
-   });
+ imports/ui/body.js | 20 ++++++++++++++++++++
+ 1 file changed, 20 insertions(+)
+
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+index fc36022..42ad1d5 100644
+--- a/imports/ui/body.js
++++ b/imports/ui/body.js
+@@ -9,3 +9,23 @@ Template.body.helpers({
+     return Tasks.find({});
+   },
+ });
 +
-+  Template.body.events({
-+    "submit .new-task": function (event) {
-+      // Prevent default browser form submit
-+      event.preventDefault();
++Template.body.events({
++  'submit .new-task'(event) {
++    // Prevent default browser form submit
++    event.preventDefault();
 +
-+      // Get value from form element
-+      var text = event.target.text.value;
++    // Get value from form element
++    const target = event.target;
++    const text = target.text.value;
 +
-+      // Insert a task into the collection
-+      Tasks.insert({
-+        text: text,
-+        createdAt: new Date() // current time
-+      });
++    // Insert a task into the collection
++    Tasks.insert({
++      text,
++      createdAt: new Date(), // current time
++    });
 +
-+      // Clear form
-+      event.target.text.value = "";
-+    }
-+  });
- }
++    // Clear form
++    target.text.value = '';
++  },
++});
 -- 
-2.6.3
+2.1.3
 
 
-From a06c2235fa31bb876edc2f62ba62310dee40ab6c Mon Sep 17 00:00:00 2001
+From 28a7f6c41c48d3caf0b18e6dce1b32011b0b2f52 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:12:14 -0700
-Subject: [PATCH 08/34] Step 4.3: Show newest tasks at the top
+Subject: [PATCH 12/46] Step 4.3: Show newest tasks at the top
 
 ---
- simple-todos.js | 3 ++-
+ imports/ui/body.js | 3 ++-
  1 file changed, 2 insertions(+), 1 deletion(-)
 
-diff --git a/simple-todos.js b/simple-todos.js
-index 8bfe857..545a1db 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -4,7 +4,8 @@ if (Meteor.isClient) {
-   // This code only runs on the client
-   Template.body.helpers({
-     tasks: function () {
--      return Tasks.find({});
-+      // Show newest tasks at the top
-+      return Tasks.find({}, {sort: {createdAt: -1}});
-     }
-   });
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+index 42ad1d5..6fbc9d5 100644
+--- a/imports/ui/body.js
++++ b/imports/ui/body.js
+@@ -6,7 +6,8 @@ import './body.html';
+ 
+ Template.body.helpers({
+   tasks() {
+-    return Tasks.find({});
++    // Show newest tasks at the top
++    return Tasks.find({}, { sort: { createdAt: -1 } });
+   },
+ });
  
 -- 
-2.6.3
+2.1.3
 
 
-From 5cdfa73dcd1a1973bf31e76ffb0e6af96d9a2d8a Mon Sep 17 00:00:00 2001
+From 3588b089c96167bfed5239d14491a00580c43aea Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:12:57 -0700
-Subject: [PATCH 09/34] Step 5.1: Add buttons to Task component
+Subject: [PATCH 13/46] Step 5.1: Add buttons to Task component
 
 ---
- simple-todos.html | 8 +++++++-
- 1 file changed, 7 insertions(+), 1 deletion(-)
+ imports/ui/task.html | 9 +++++++++
+ 1 file changed, 9 insertions(+)
+ create mode 100644 imports/ui/task.html
 
-diff --git a/simple-todos.html b/simple-todos.html
-index e31aef1..94341cc 100644
---- a/simple-todos.html
-+++ b/simple-todos.html
-@@ -21,5 +21,11 @@
- </body>
- 
- <template name="task">
--  <li>{{text}}</li>
+diff --git a/imports/ui/task.html b/imports/ui/task.html
+new file mode 100644
+index 0000000..c4ab8e5
+--- /dev/null
++++ b/imports/ui/task.html
+@@ -0,0 +1,9 @@
++<template name="task">
 +  <li class="{{#if checked}}checked{{/if}}">
 +    <button class="delete">&times;</button>
 +
@@ -596,59 +791,112 @@ index e31aef1..94341cc 100644
 +
 +    <span class="text">{{text}}</span>
 +  </li>
- </template>
++</template>
 -- 
-2.6.3
+2.1.3
 
 
-From 383896358ebfb53c237a8611fc11a86aa71fbbf6 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Tue, 14 Jul 2015 19:13:40 -0700
-Subject: [PATCH 10/34] Step 5.2: Add event handlers for Task buttons
+From 07235612b5bcbbaf82b8e453ee216878db2b1750 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:23:12 +1100
+Subject: [PATCH 14/46] Step 5.2: Remove Tasks component from Body file
 
 ---
- simple-todos.js | 12 ++++++++++++
- 1 file changed, 12 insertions(+)
-
-diff --git a/simple-todos.js b/simple-todos.js
-index 545a1db..36bdc0c 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -27,4 +27,16 @@ if (Meteor.isClient) {
-       event.target.text.value = "";
-     }
-   });
+ imports/ui/body.html | 4 ----
+ 1 file changed, 4 deletions(-)
+
+diff --git a/imports/ui/body.html b/imports/ui/body.html
+index 0a1f952..c40a87b 100644
+--- a/imports/ui/body.html
++++ b/imports/ui/body.html
+@@ -15,7 +15,3 @@
+     </ul>
+   </div>
+ </body>
+-
+-<template name="task">
+-  <li>{{text}}</li>
+-</template>
+-- 
+2.1.3
+
+
+From 1fd0a2c27aaaffac17a1ca533fac433c4f09f19e Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:26:44 +1100
+Subject: [PATCH 15/46] Step 5.3: Add event handlers for Task buttons
+
+---
+ imports/ui/task.js | 17 +++++++++++++++++
+ 1 file changed, 17 insertions(+)
+ create mode 100644 imports/ui/task.js
+
+diff --git a/imports/ui/task.js b/imports/ui/task.js
+new file mode 100644
+index 0000000..782f932
+--- /dev/null
++++ b/imports/ui/task.js
+@@ -0,0 +1,17 @@
++import { Template } from 'meteor/templating';
 +
-+  Template.task.events({
-+    "click .toggle-checked": function () {
-+      // Set the checked property to the opposite of its current value
-+      Tasks.update(this._id, {
-+        $set: {checked: ! this.checked}
-+      });
-+    },
-+    "click .delete": function () {
-+      Tasks.remove(this._id);
-+    }
-+  });
- }
++import { Tasks } from '../api/tasks.js';
++
++import './task.html';
++
++Template.task.events({
++  'click .toggle-checked'() {
++    // Set the checked property to the opposite of its current value
++    Tasks.update(this._id, {
++      $set: { checked: ! this.checked },
++    });
++  },
++  'click .delete'() {
++    Tasks.remove(this._id);
++  },
++});
 -- 
-2.6.3
+2.1.3
+
 
+From ad56ff1c15c42de7d18f15ca9cd49e38bc2301e1 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:26:57 +1100
+Subject: [PATCH 16/46] Step 5.4: Import Task component from the body
 
-From 38cbb935edd47cf82fba70f2c3f865d0c5a1a55b Mon Sep 17 00:00:00 2001
+---
+ imports/ui/body.js | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+index 6fbc9d5..bac22c6 100644
+--- a/imports/ui/body.js
++++ b/imports/ui/body.js
+@@ -2,6 +2,7 @@ import { Template } from 'meteor/templating';
+ 
+ import { Tasks } from '../api/tasks.js';
+ 
++import './task.js';
+ import './body.html';
+ 
+ Template.body.helpers({
+-- 
+2.1.3
+
+
+From de6ce06e8dc8b450598be076c0978ed948cc796a Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:24:18 -0700
-Subject: [PATCH 11/34] Step 7.1: Add hide-completed checkbox to HTML
+Subject: [PATCH 17/46] Step 7.1: Add hide-completed checkbox to HTML
 
 ---
- simple-todos.html | 5 +++++
+ imports/ui/body.html | 5 +++++
  1 file changed, 5 insertions(+)
 
-diff --git a/simple-todos.html b/simple-todos.html
-index 94341cc..7d837a9 100644
---- a/simple-todos.html
-+++ b/simple-todos.html
-@@ -7,6 +7,11 @@
+diff --git a/imports/ui/body.html b/imports/ui/body.html
+index c40a87b..a581239 100644
+--- a/imports/ui/body.html
++++ b/imports/ui/body.html
+@@ -3,6 +3,11 @@
      <header>
        <h1>Todo List</h1>
  
@@ -661,113 +909,180 @@ index 94341cc..7d837a9 100644
          <input type="text" name="text" placeholder="Type to add new tasks" />
        </form>
 -- 
-2.6.3
+2.1.3
 
 
-From 47aef71308f768acf9bd65a5ae9234e3ed720feb Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Tue, 14 Jul 2015 19:24:58 -0700
-Subject: [PATCH 12/34] Step 7.2: Add event handler for checkbox
+From d7788574938a2b66e21ae6e04669e8ae89184e6d Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:33:00 +1100
+Subject: [PATCH 18/46] Step 7.2: Add reactive-dict package
 
 ---
- simple-todos.js | 3 +++
- 1 file changed, 3 insertions(+)
+ .meteor/packages | 1 +
+ .meteor/versions | 1 +
+ 2 files changed, 2 insertions(+)
 
-diff --git a/simple-todos.js b/simple-todos.js
-index 36bdc0c..19f7ffd 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -25,6 +25,9 @@ if (Meteor.isClient) {
+diff --git a/.meteor/packages b/.meteor/packages
+index d4c8001..a113025 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -19,3 +19,4 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
  
-       // Clear form
-       event.target.text.value = "";
-+    },
-+    "change .hide-completed input": function (event) {
-+      Session.set("hideCompleted", event.target.checked);
-     }
-   });
+ autopublish             # Publish all data to the clients (for prototyping)
+ insecure                # Allow all DB writes from clients (for prototyping)
++reactive-dict
+diff --git a/.meteor/versions b/.meteor/versions
+index c3395d2..ccbd7bb 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -51,6 +51,7 @@ observe-sequence@1.0.9-rc.2
+ ordered-dict@1.0.5-rc.2
+ promise@0.6.4-rc.2
+ random@1.0.7-rc.2
++reactive-dict@1.1.5-rc.2
+ reactive-var@1.0.7-rc.2
+ reload@1.1.6-rc.2
+ retry@1.0.5-rc.2
+-- 
+2.1.3
+
+
+From 0fdee1674646037fd9ce48d1b2b326472796b934 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:29:41 +1100
+Subject: [PATCH 19/46] Step 7.3: Add state dictionary to the body
+
+---
+ imports/ui/body.js | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+index bac22c6..d429b10 100644
+--- a/imports/ui/body.js
++++ b/imports/ui/body.js
+@@ -1,10 +1,15 @@
+ import { Template } from 'meteor/templating';
++import { ReactiveDict } from 'meteor/reactive-dict';
  
+ import { Tasks } from '../api/tasks.js';
+ 
+ import './task.js';
+ import './body.html';
+ 
++Template.body.onCreated(function bodyOnCreated() {
++  this.state = new ReactiveDict();
++});
++
+ Template.body.helpers({
+   tasks() {
+     // Show newest tasks at the top
 -- 
-2.6.3
+2.1.3
 
 
-From a44b00fc6c73b0f35bf0a89f2d261d3560bf2025 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Tue, 14 Jul 2015 19:25:38 -0700
-Subject: [PATCH 13/34] Step 7.3: Add helpers to body template
+From 5a829eaf0add55a644414a18bce3dd680ff5426e Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:30:11 +1100
+Subject: [PATCH 20/46] Step 7.4: Add event handler for checkbox
 
 ---
- simple-todos.js | 12 ++++++++++--
- 1 file changed, 10 insertions(+), 2 deletions(-)
-
-diff --git a/simple-todos.js b/simple-todos.js
-index 19f7ffd..546fbe2 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -4,8 +4,16 @@ if (Meteor.isClient) {
-   // This code only runs on the client
-   Template.body.helpers({
-     tasks: function () {
--      // Show newest tasks at the top
--      return Tasks.find({}, {sort: {createdAt: -1}});
-+      if (Session.get("hideCompleted")) {
-+        // If hide completed is checked, filter tasks
-+        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});
-+      } else {
-+        // Otherwise, return all of the tasks
-+        return Tasks.find({}, {sort: {createdAt: -1}});
-+      }
-+    },
-+    hideCompleted: function () {
-+      return Session.get("hideCompleted");
-     }
-   });
+ imports/ui/body.js | 3 +++
+ 1 file changed, 3 insertions(+)
+
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+index d429b10..856dad4 100644
+--- a/imports/ui/body.js
++++ b/imports/ui/body.js
+@@ -35,4 +35,7 @@ Template.body.events({
+     // Clear form
+     target.text.value = '';
+   },
++  'change .hide-completed input'(event, instance) {
++    instance.state.set('hideCompleted', event.target.checked);
++  },
+ });
+-- 
+2.1.3
+
+
+From 6acc630abe8ac8bef50a6abb5540c297e760bb53 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:31:16 +1100
+Subject: [PATCH 21/46] Step 7.5: Add helpers to body template
+
+---
+ imports/ui/body.js | 11 ++++++++++-
+ 1 file changed, 10 insertions(+), 1 deletion(-)
+
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+index 856dad4..a207bf0 100644
+--- a/imports/ui/body.js
++++ b/imports/ui/body.js
+@@ -12,9 +12,18 @@ Template.body.onCreated(function bodyOnCreated() {
+ 
+ Template.body.helpers({
+   tasks() {
+-    // Show newest tasks at the top
++    const instance = Template.instance();
++    if (instance.state.get('hideCompleted')) {
++      // If hide completed is checked, filter tasks
++      return Tasks.find({ checked: { $ne: true } }, { sort: { createdAt: -1 } });
++    }
++    // Otherwise, return all of the tasks
+     return Tasks.find({}, { sort: { createdAt: -1 } });
+   },
++  hideCompleted() {
++    const instance = Template.instance();
++    return instance.state.get('hideCompleted');
++  },
+ });
  
+ Template.body.events({
 -- 
-2.6.3
+2.1.3
 
 
-From c3602209d76651d88761c667824f1b4f3fe5e125 Mon Sep 17 00:00:00 2001
+From d6c151918eedd35801c1d24f1584e68c0930445a Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:26:17 -0700
-Subject: [PATCH 14/34] Step 7.4: Add incompleteCount helper to body
+Subject: [PATCH 22/46] Step 7.6: Add incompleteCount helper to body
 
 ---
- simple-todos.js | 3 +++
+ imports/ui/body.js | 3 +++
  1 file changed, 3 insertions(+)
 
-diff --git a/simple-todos.js b/simple-todos.js
-index 546fbe2..81bc5a9 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -14,6 +14,9 @@ if (Meteor.isClient) {
-     },
-     hideCompleted: function () {
-       return Session.get("hideCompleted");
-+    },
-+    incompleteCount: function () {
-+      return Tasks.find({checked: {$ne: true}}).count();
-     }
-   });
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+index a207bf0..f25871e 100644
+--- a/imports/ui/body.js
++++ b/imports/ui/body.js
+@@ -24,6 +24,9 @@ Template.body.helpers({
+     const instance = Template.instance();
+     return instance.state.get('hideCompleted');
+   },
++  incompleteCount() {
++    return Tasks.find({ checked: { $ne: true } }).count();
++  },
+ });
  
+ Template.body.events({
 -- 
-2.6.3
+2.1.3
 
 
-From 64d03503aa6830e56ef98f2d24fea4b079c4516d Mon Sep 17 00:00:00 2001
+From 2fca40720ee52fa8ce8379ff7ea5135eaf04a010 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:26:37 -0700
-Subject: [PATCH 15/34] Step 7.5: Display incompleteCount
+Subject: [PATCH 23/46] Step 7.7: Display incompleteCount
 
 ---
- simple-todos.html | 2 +-
+ imports/ui/body.html | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-diff --git a/simple-todos.html b/simple-todos.html
-index 7d837a9..cb9b6f1 100644
---- a/simple-todos.html
-+++ b/simple-todos.html
-@@ -5,7 +5,7 @@
+diff --git a/imports/ui/body.html b/imports/ui/body.html
+index a581239..a734c03 100644
+--- a/imports/ui/body.html
++++ b/imports/ui/body.html
+@@ -1,7 +1,7 @@
  <body>
    <div class="container">
      <header>
@@ -777,98 +1092,109 @@ index 7d837a9..cb9b6f1 100644
        <label class="hide-completed">
          <input type="checkbox" checked="{{hideCompleted}}" />
 -- 
-2.6.3
+2.1.3
 
 
-From 34072bdcbf906041634046dc2131bcafc71b9294 Mon Sep 17 00:00:00 2001
+From e7a71591be2d788d098e02fe4142eef79078fc19 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:27:03 -0700
-Subject: [PATCH 16/34] Step 8.1: Add accounts-ui and accounts-password
+Subject: [PATCH 24/46] Step 8.1: Add accounts-ui and accounts-password
 
 ---
  .meteor/packages |  2 ++
- .meteor/versions | 11 +++++++++++
- 2 files changed, 13 insertions(+)
+ .meteor/versions | 14 ++++++++++++++
+ 2 files changed, 16 insertions(+)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 99704e0..21b8d34 100644
+index a113025..5c68b39 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -7,3 +7,5 @@
- meteor-platform
- autopublish
- insecure
+@@ -20,3 +20,5 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
+ autopublish             # Publish all data to the clients (for prototyping)
+ insecure                # Allow all DB writes from clients (for prototyping)
+ reactive-dict
 +accounts-ui
 +accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index 410e1d9..26385bb 100644
+index ccbd7bb..b739407 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
 @@ -1,3 +1,7 @@
-+accounts-base@1.2.0
-+accounts-password@1.1.1
-+accounts-ui@1.1.5
-+accounts-ui-unstyled@1.1.7
- autopublish@1.0.3
- autoupdate@1.2.1
- base64@1.0.3
-@@ -10,6 +14,7 @@ check@1.0.5
- ddp@1.1.0
- deps@1.0.7
- ejson@1.0.6
-+email@1.0.6
- fastclick@1.0.3
- geojson-utils@1.0.3
- html-tools@1.0.4
-@@ -20,7 +25,9 @@ insecure@1.0.3
- jquery@1.11.3_2
- json@1.0.3
- launch-screen@1.0.2
-+less@1.0.14
- livedata@1.0.13
-+localstorage@1.0.3
- logging@1.0.7
- meteor@1.1.6
- meteor-platform@1.2.2
-@@ -28,6 +35,7 @@ minifiers@1.1.5
- minimongo@1.0.8
- mobile-status-bar@1.0.3
- mongo@1.1.0
++accounts-base@1.2.4-rc.2
++accounts-password@1.1.6-rc.2
++accounts-ui@1.1.7-rc.2
++accounts-ui-unstyled@1.1.10-rc.2
+ allow-deny@1.0.2-rc.2
+ autopublish@1.0.5-rc.2
+ autoupdate@1.2.6-rc.2
+@@ -16,12 +20,14 @@ check@1.1.2-rc.2
+ ddp@1.2.3-rc.2
+ ddp-client@1.2.3-rc.2
+ ddp-common@1.2.3-rc.2
++ddp-rate-limiter@1.0.2-rc.2
+ ddp-server@1.2.4-rc.2
+ deps@1.0.10-rc.2
+ diff-sequence@1.0.3-rc.2
+ ecmascript@0.4.1-rc.2
+ ecmascript-runtime@0.2.8-rc.2
+ ejson@1.0.9-rc.2
++email@1.0.10-rc.2
+ es5-shim@4.5.8-rc.2
+ fastclick@1.0.9-rc.2
+ geojson-utils@1.0.6-rc.2
+@@ -33,7 +39,9 @@ id-map@1.0.5-rc.2
+ insecure@1.0.5-rc.2
+ jquery@1.11.6-rc.2
+ launch-screen@1.0.7-rc.2
++less@2.5.5-rc.2
+ livedata@1.0.16-rc.2
++localstorage@1.0.7-rc.2
+ logging@1.0.10-rc.2
+ meteor@1.1.12-rc.2
+ meteor-base@1.0.2-rc.2
+@@ -46,18 +54,24 @@ modules@0.5.1-rc.2
+ modules-runtime@0.6.1-rc.2
+ mongo@1.1.5-rc.2
+ mongo-id@1.0.2-rc.2
 +npm-bcrypt@0.7.8_2
- observe-sequence@1.0.6
- ordered-dict@1.0.3
- random@1.0.3
-@@ -36,9 +44,12 @@ reactive-var@1.0.5
- reload@1.1.3
- retry@1.0.3
- routepolicy@1.0.5
-+service-configuration@1.0.4
- session@1.1.0
-+sha@1.0.3
- spacebars@1.0.6
- spacebars-compiler@1.0.6
-+srp@1.0.3
- templating@1.1.1
- tracker@1.0.7
- ui@1.0.6
+ npm-mongo@1.4.41-rc.2
+ observe-sequence@1.0.9-rc.2
+ ordered-dict@1.0.5-rc.2
+ promise@0.6.4-rc.2
+ random@1.0.7-rc.2
++rate-limit@1.0.2-rc.2
+ reactive-dict@1.1.5-rc.2
+ reactive-var@1.0.7-rc.2
+ reload@1.1.6-rc.2
+ retry@1.0.5-rc.2
+ routepolicy@1.0.8-rc.2
++service-configuration@1.0.7-rc.2
++session@1.1.3-rc.2
++sha@1.0.5-rc.2
+ spacebars@1.0.9-rc.2
+ spacebars-compiler@1.0.9-rc.2
++srp@1.0.6-rc.2
+ standard-minifier-css@1.0.4-rc.2
+ standard-minifier-js@1.0.4-rc.2
+ templating@1.1.7-rc.2
 -- 
-2.6.3
+2.1.3
 
 
-From fb26978b41b31ce197bda1062ce61384cb15f548 Mon Sep 17 00:00:00 2001
+From 58bc4b455dae5d3e7ed27fc692eae44b16a77bb3 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:27:23 -0700
-Subject: [PATCH 17/34] Step 8.2: Include loginButtons
+Subject: [PATCH 25/46] Step 8.2: Include loginButtons
 
 ---
- simple-todos.html | 2 ++
+ imports/ui/body.html | 2 ++
  1 file changed, 2 insertions(+)
 
-diff --git a/simple-todos.html b/simple-todos.html
-index cb9b6f1..55f385c 100644
---- a/simple-todos.html
-+++ b/simple-todos.html
-@@ -12,6 +12,8 @@
+diff --git a/imports/ui/body.html b/imports/ui/body.html
+index a734c03..353a82c 100644
+--- a/imports/ui/body.html
++++ b/imports/ui/body.html
+@@ -8,6 +8,8 @@
          Hide Completed Tasks
        </label>
  
@@ -878,77 +1204,99 @@ index cb9b6f1..55f385c 100644
          <input type="text" name="text" placeholder="Type to add new tasks" />
        </form>
 -- 
-2.6.3
+2.1.3
 
 
-From ea56ab8a78ec620f9a59a5cf66a82ee3bc06774f Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Tue, 14 Jul 2015 19:27:46 -0700
-Subject: [PATCH 18/34] Step 8.3: Configure accounts-ui
+From 99d87f8e3bcdd2ef6f8cb96d3971e09a66f344a1 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:36:02 +1100
+Subject: [PATCH 26/46] Step 8.3: Configure accounts-ui
 
 ---
- simple-todos.js | 4 ++++
- 1 file changed, 4 insertions(+)
+ imports/startup/accounts-config.js | 5 +++++
+ 1 file changed, 5 insertions(+)
+ create mode 100644 imports/startup/accounts-config.js
 
-diff --git a/simple-todos.js b/simple-todos.js
-index 81bc5a9..0d524f7 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -53,4 +53,8 @@ if (Meteor.isClient) {
-       Tasks.remove(this._id);
-     }
-   });
+diff --git a/imports/startup/accounts-config.js b/imports/startup/accounts-config.js
+new file mode 100644
+index 0000000..7e4f7e5
+--- /dev/null
++++ b/imports/startup/accounts-config.js
+@@ -0,0 +1,5 @@
++import { Accounts } from 'meteor/accounts-base';
 +
-+  Accounts.ui.config({
-+    passwordSignupFields: "USERNAME_ONLY"
-+  });
- }
++Accounts.ui.config({
++  passwordSignupFields: 'USERNAME_ONLY',
++});
 -- 
-2.6.3
+2.1.3
+
+
+From bac951b21ef76b2d815ba4c9a432c638230a8af4 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:36:36 +1100
+Subject: [PATCH 27/46] Step 8.4: Import accounts configuration
 
+---
+ client/main.js | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/client/main.js b/client/main.js
+index 4e7c1a4..739c50f 100644
+--- a/client/main.js
++++ b/client/main.js
+@@ -1 +1,2 @@
++import '../imports/startup/accounts-config.js';
+ import '../imports/ui/body.js';
+-- 
+2.1.3
 
-From dff06692877ca27f212f12140ad7ec4d660edff3 Mon Sep 17 00:00:00 2001
+
+From 5d36f08b552dba72dbbc8cfba6ddc5e1af7e9b92 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:28:24 -0700
-Subject: [PATCH 19/34] Step 8.4: Update insert to include user data
+Subject: [PATCH 28/46] Step 8.5: Update insert to include user data
 
 ---
- simple-todos.js | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
-
-diff --git a/simple-todos.js b/simple-todos.js
-index 0d524f7..cf0bd1e 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -31,7 +31,9 @@ if (Meteor.isClient) {
-       // Insert a task into the collection
-       Tasks.insert({
-         text: text,
--        createdAt: new Date() // current time
-+        createdAt: new Date(),            // current time
-+        owner: Meteor.userId(),           // _id of logged in user
-+        username: Meteor.user().username  // username of logged in user
-       });
+ imports/ui/body.js | 3 +++
+ 1 file changed, 3 insertions(+)
+
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+index f25871e..15a3c8e 100644
+--- a/imports/ui/body.js
++++ b/imports/ui/body.js
+@@ -1,3 +1,4 @@
++import { Meteor } from 'meteor/meteor';
+ import { Template } from 'meteor/templating';
+ import { ReactiveDict } from 'meteor/reactive-dict';
+ 
+@@ -42,6 +43,8 @@ Template.body.events({
+     Tasks.insert({
+       text,
+       createdAt: new Date(), // current time
++      owner: Meteor.userId(),
++      username: Meteor.user().username,
+     });
  
-       // Clear form
+     // Clear form
 -- 
-2.6.3
+2.1.3
 
 
-From 65abbd15b9ec559cabc422af22e39291f176b6c0 Mon Sep 17 00:00:00 2001
+From 826537bc83e8ac442b2bdb1898b7fba688cfe877 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:28:47 -0700
-Subject: [PATCH 20/34] Step 8.5: Only show add task form if logged in
+Subject: [PATCH 29/46] Step 8.6: Only show add task form if logged in
 
 ---
- simple-todos.html | 8 +++++---
+ imports/ui/body.html | 8 +++++---
  1 file changed, 5 insertions(+), 3 deletions(-)
 
-diff --git a/simple-todos.html b/simple-todos.html
-index 55f385c..9e4b61a 100644
---- a/simple-todos.html
-+++ b/simple-todos.html
-@@ -14,9 +14,11 @@
+diff --git a/imports/ui/body.html b/imports/ui/body.html
+index 353a82c..6cd1dba 100644
+--- a/imports/ui/body.html
++++ b/imports/ui/body.html
+@@ -10,9 +10,11 @@
  
        {{> loginButtons}}
  
@@ -964,23 +1312,23 @@ index 55f385c..9e4b61a 100644
  
      <ul>
 -- 
-2.6.3
+2.1.3
 
 
-From e1f7287dbb7750163d7dca971a6d10c8301014aa Mon Sep 17 00:00:00 2001
+From 0958888adeb5999647cebe5c4d9239a8be834a6f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:29:11 -0700
-Subject: [PATCH 21/34] Step 8.6: Display username next to task
+Subject: [PATCH 30/46] Step 8.7: Display username next to task
 
 ---
- simple-todos.html | 2 +-
+ imports/ui/task.html | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-diff --git a/simple-todos.html b/simple-todos.html
-index 9e4b61a..55c1dc9 100644
---- a/simple-todos.html
-+++ b/simple-todos.html
-@@ -35,6 +35,6 @@
+diff --git a/imports/ui/task.html b/imports/ui/task.html
+index c4ab8e5..c42e8fc 100644
+--- a/imports/ui/task.html
++++ b/imports/ui/task.html
+@@ -4,6 +4,6 @@
  
      <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
  
@@ -989,13 +1337,13 @@ index 9e4b61a..55c1dc9 100644
    </li>
  </template>
 -- 
-2.6.3
+2.1.3
 
 
-From 189b5aadecdaa2a5c44992f1abd27a5f9495bf8b Mon Sep 17 00:00:00 2001
+From 8f0bedc7c5f6874486b5b2717e33abe60e59e0bb Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:29:52 -0700
-Subject: [PATCH 22/34] Step 9.1: Remove insecure package
+Subject: [PATCH 31/46] Step 9.1: Remove insecure package
 
 ---
  .meteor/packages | 1 -
@@ -1003,142 +1351,160 @@ Subject: [PATCH 22/34] Step 9.1: Remove insecure package
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 21b8d34..bb3b694 100644
+index 5c68b39..d4578d9 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -6,6 +6,5 @@
+@@ -18,7 +18,6 @@ es5-shim                # ECMAScript 5 compatibility for older browsers.
+ ecmascript              # Enable ECMAScript2015+ syntax in app code
  
- meteor-platform
- autopublish
--insecure
+ autopublish             # Publish all data to the clients (for prototyping)
+-insecure                # Allow all DB writes from clients (for prototyping)
+ reactive-dict
  accounts-ui
  accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index 26385bb..6a03dd0 100644
+index b739407..3d9bd1e 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -21,7 +21,6 @@ html-tools@1.0.4
- htmljs@1.0.4
- http@1.1.0
- id-map@1.0.3
--insecure@1.0.3
- jquery@1.11.3_2
- json@1.0.3
- launch-screen@1.0.2
+@@ -36,7 +36,6 @@ html-tools@1.0.7-rc.2
+ htmljs@1.0.7-rc.2
+ http@1.1.3-rc.2
+ id-map@1.0.5-rc.2
+-insecure@1.0.5-rc.2
+ jquery@1.11.6-rc.2
+ launch-screen@1.0.7-rc.2
+ less@2.5.5-rc.2
 -- 
-2.6.3
+2.1.3
 
 
-From 7a680b88da2fc82820ee481f7f4f1a0b1b4a947e Mon Sep 17 00:00:00 2001
+From aa81d23d23aef1bc3f7a1be5331be354b2a2bc7e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:30:20 -0700
-Subject: [PATCH 23/34] Step 9.2: Define some methods
+Subject: [PATCH 32/46] Step 9.2: Define some methods
 
 ---
- simple-todos.js | 22 ++++++++++++++++++++++
- 1 file changed, 22 insertions(+)
-
-diff --git a/simple-todos.js b/simple-todos.js
-index cf0bd1e..40edc1a 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -60,3 +60,25 @@ if (Meteor.isClient) {
-     passwordSignupFields: "USERNAME_ONLY"
-   });
- }
-+
+ imports/api/tasks.js | 31 +++++++++++++++++++++++++++++++
+ 1 file changed, 31 insertions(+)
+
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index a9ab038..30194c5 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -1,5 +1,36 @@
++import { Meteor } from 'meteor/meteor';
+ import { Mongo } from 'meteor/mongo';
++import { check } from 'meteor/check';
+ 
+ const Tasks = new Mongo.Collection('tasks');
+ 
 +Meteor.methods({
-+  addTask: function (text) {
++  'tasks.insert'(text) {
++    check(text, String);
++
 +    // Make sure the user is logged in before inserting a task
 +    if (! Meteor.userId()) {
-+      throw new Meteor.Error("not-authorized");
++      throw new Meteor.Error('not-authorized');
 +    }
 +
 +    Tasks.insert({
-+      text: text,
++      text,
 +      createdAt: new Date(),
 +      owner: Meteor.userId(),
-+      username: Meteor.user().username
++      username: Meteor.user().username,
 +    });
 +  },
-+  deleteTask: function (taskId) {
++  'tasks.remove'(taskId) {
++    check(taskId, String);
++
 +    Tasks.remove(taskId);
 +  },
-+  setChecked: function (taskId, setChecked) {
-+    Tasks.update(taskId, { $set: { checked: setChecked} });
-+  }
++  'tasks.setChecked'(taskId, setChecked) {
++    check(taskId, String);
++    check(setChecked, Boolean);
++
++    Tasks.update(taskId, { $set: { checked: setChecked } });
++  },
 +});
++
+ export { Tasks };
 -- 
-2.6.3
+2.1.3
 
 
-From c3613e3ede173c3624d5a93409fdbd947ff44825 Mon Sep 17 00:00:00 2001
+From 6a9e4a34311cc0949b0d0310884781009287a6ce Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:31:24 -0700
-Subject: [PATCH 24/34] Step 9.3: Replace insert with addTask method
+Subject: [PATCH 33/46] Step 9.3: Replace insert with addTask method
 
 ---
- simple-todos.js | 7 +------
+ imports/ui/body.js | 7 +------
  1 file changed, 1 insertion(+), 6 deletions(-)
 
-diff --git a/simple-todos.js b/simple-todos.js
-index 40edc1a..3f35197 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -29,12 +29,7 @@ if (Meteor.isClient) {
-       var text = event.target.text.value;
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+index 15a3c8e..d83eaca 100644
+--- a/imports/ui/body.js
++++ b/imports/ui/body.js
+@@ -40,12 +40,7 @@ Template.body.events({
+     const text = target.text.value;
  
-       // Insert a task into the collection
--      Tasks.insert({
--        text: text,
--        createdAt: new Date(),            // current time
--        owner: Meteor.userId(),           // _id of logged in user
--        username: Meteor.user().username  // username of logged in user
--      });
-+      Meteor.call("addTask", text);
+     // Insert a task into the collection
+-    Tasks.insert({
+-      text,
+-      createdAt: new Date(), // current time
+-      owner: Meteor.userId(),
+-      username: Meteor.user().username,
+-    });
++    Meteor.call('tasks.insert', text);
  
-       // Clear form
-       event.target.text.value = "";
+     // Clear form
+     target.text.value = '';
 -- 
-2.6.3
+2.1.3
 
 
-From 27f8d1a79a05667342a7ffdbe19074d8398a248c Mon Sep 17 00:00:00 2001
+From 22369c263971a1308c0e48503f30f6239cfab59f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:31:46 -0700
-Subject: [PATCH 25/34] Step 9.4: Replace update and remove with methods
+Subject: [PATCH 34/46] Step 9.4: Replace update and remove with methods
 
 ---
- simple-todos.js | 6 ++----
- 1 file changed, 2 insertions(+), 4 deletions(-)
-
-diff --git a/simple-todos.js b/simple-todos.js
-index 3f35197..d477b50 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -42,12 +42,10 @@ if (Meteor.isClient) {
-   Template.task.events({
-     "click .toggle-checked": function () {
-       // Set the checked property to the opposite of its current value
--      Tasks.update(this._id, {
--        $set: {checked: ! this.checked}
--      });
-+      Meteor.call("setChecked", this._id, ! this.checked);
-     },
-     "click .delete": function () {
--      Tasks.remove(this._id);
-+      Meteor.call("deleteTask", this._id);
-     }
-   });
+ imports/ui/task.js | 9 +++------
+ 1 file changed, 3 insertions(+), 6 deletions(-)
+
+diff --git a/imports/ui/task.js b/imports/ui/task.js
+index 782f932..3775ceb 100644
+--- a/imports/ui/task.js
++++ b/imports/ui/task.js
+@@ -1,17 +1,14 @@
++import { Meteor } from 'meteor/meteor';
+ import { Template } from 'meteor/templating';
  
+-import { Tasks } from '../api/tasks.js';
+-
+ import './task.html';
+ 
+ Template.task.events({
+   'click .toggle-checked'() {
+     // Set the checked property to the opposite of its current value
+-    Tasks.update(this._id, {
+-      $set: { checked: ! this.checked },
+-    });
++    Meteor.call('tasks.setChecked', this._id, !this.checked);
+   },
+   'click .delete'() {
+-    Tasks.remove(this._id);
++    Meteor.call('tasks.remove', this._id);
+   },
+ });
 -- 
-2.6.3
+2.1.3
 
 
-From ed3ca0156c0ba6a15bd134e40d5178fb82dfed41 Mon Sep 17 00:00:00 2001
+From 7632ca1dc2e711e6b356c75e85398e72eeb7d636 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:32:19 -0700
-Subject: [PATCH 26/34] Step 10.1: Remove autopublish
+Subject: [PATCH 35/46] Step 10.1: Remove autopublish
 
 ---
  .meteor/packages | 1 -
@@ -1146,80 +1512,103 @@ Subject: [PATCH 26/34] Step 10.1: Remove autopublish
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index bb3b694..aaee953 100644
+index d4578d9..3ecf3a1 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -5,6 +5,5 @@
- # but you can also edit it by hand.
+@@ -17,7 +17,6 @@ standard-minifier-js    # JS minifier run for production mode
+ es5-shim                # ECMAScript 5 compatibility for older browsers.
+ ecmascript              # Enable ECMAScript2015+ syntax in app code
  
- meteor-platform
--autopublish
+-autopublish             # Publish all data to the clients (for prototyping)
+ reactive-dict
  accounts-ui
  accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index 6a03dd0..6766561 100644
+index 3d9bd1e..4f59e62 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -2,7 +2,6 @@ accounts-base@1.2.0
- accounts-password@1.1.1
- accounts-ui@1.1.5
- accounts-ui-unstyled@1.1.7
--autopublish@1.0.3
- autoupdate@1.2.1
- base64@1.0.3
- binary-heap@1.0.3
+@@ -3,7 +3,6 @@ accounts-password@1.1.6-rc.2
+ accounts-ui@1.1.7-rc.2
+ accounts-ui-unstyled@1.1.10-rc.2
+ allow-deny@1.0.2-rc.2
+-autopublish@1.0.5-rc.2
+ autoupdate@1.2.6-rc.2
+ babel-compiler@6.5.1-rc.2
+ babel-runtime@0.1.6-rc.2
 -- 
-2.6.3
+2.1.3
 
 
-From fa380edb61cf1a07044f23afa76acb51b7afaf50 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Tue, 14 Jul 2015 19:33:17 -0700
-Subject: [PATCH 27/34] Step 10.2: Add publish and subscribe
+From 1394681f2ba706a654785b75bc4cd21f72725d69 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:45:32 +1100
+Subject: [PATCH 36/46] Step 10.2: Add publication for tasks
 
 ---
- simple-todos.js | 9 +++++++++
- 1 file changed, 9 insertions(+)
-
-diff --git a/simple-todos.js b/simple-todos.js
-index d477b50..31eda5c 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -1,7 +1,16 @@
- Tasks = new Mongo.Collection("tasks");
+ imports/api/tasks.js | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index 30194c5..c048739 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -4,6 +4,13 @@ import { check } from 'meteor/check';
+ 
+ const Tasks = new Mongo.Collection('tasks');
  
 +if (Meteor.isServer) {
 +  // This code only runs on the server
-+  Meteor.publish("tasks", function () {
++  Meteor.publish('tasks', function tasksPublication() {
 +    return Tasks.find();
 +  });
 +}
 +
- if (Meteor.isClient) {
-   // This code only runs on the client
-+  Meteor.subscribe("tasks");
-+
-   Template.body.helpers({
-     tasks: function () {
-       if (Session.get("hideCompleted")) {
+ Meteor.methods({
+   'tasks.insert'(text) {
+     check(text, String);
 -- 
-2.6.3
+2.1.3
 
 
-From 75c795b419486b4dc7c81d353e4156185d4d73a8 Mon Sep 17 00:00:00 2001
+From f0d39217e0e172b9dc88fa4c50fa934cf78c9b91 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:45:58 +1100
+Subject: [PATCH 37/46] Step 10.3: Subscribe to tasks
+
+---
+ imports/ui/body.js | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/imports/ui/body.js b/imports/ui/body.js
+index d83eaca..59e5225 100644
+--- a/imports/ui/body.js
++++ b/imports/ui/body.js
+@@ -9,6 +9,7 @@ import './body.html';
+ 
+ Template.body.onCreated(function bodyOnCreated() {
+   this.state = new ReactiveDict();
++  Meteor.subscribe('tasks');
+ });
+ 
+ Template.body.helpers({
+-- 
+2.1.3
+
+
+From 6943418ace2de7446f1254b472114c73d056e954 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:33:43 -0700
-Subject: [PATCH 28/34] Step 10.3: Add private button
+Subject: [PATCH 38/46] Step 10.4: Add private button
 
 ---
- simple-todos.html | 10 ++++++++++
+ imports/ui/task.html | 10 ++++++++++
  1 file changed, 10 insertions(+)
 
-diff --git a/simple-todos.html b/simple-todos.html
-index 55c1dc9..bd18923 100644
---- a/simple-todos.html
-+++ b/simple-todos.html
-@@ -35,6 +35,16 @@
+diff --git a/imports/ui/task.html b/imports/ui/task.html
+index c42e8fc..b9108ea 100644
+--- a/imports/ui/task.html
++++ b/imports/ui/task.html
+@@ -4,6 +4,16 @@
  
      <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
  
@@ -1237,25 +1626,23 @@ index 55c1dc9..bd18923 100644
    </li>
  </template>
 -- 
-2.6.3
+2.1.3
 
 
-From e20dcfc13016f7f9a3642de3dd0c5530056adae2 Mon Sep 17 00:00:00 2001
+From 38e94dd493444eacf0bb3142e9ded86d4afc2455 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:34:13 -0700
-Subject: [PATCH 29/34] Step 10.4: Add private class to private tasks
+Subject: [PATCH 39/46] Step 10.5: Add private class to private tasks
 
 ---
- simple-todos.html | 2 +-
+ imports/ui/task.html | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-diff --git a/simple-todos.html b/simple-todos.html
-index bd18923..08854e2 100644
---- a/simple-todos.html
-+++ b/simple-todos.html
-@@ -30,7 +30,7 @@
- </body>
- 
+diff --git a/imports/ui/task.html b/imports/ui/task.html
+index b9108ea..218789f 100644
+--- a/imports/ui/task.html
++++ b/imports/ui/task.html
+@@ -1,5 +1,5 @@
  <template name="task">
 -  <li class="{{#if checked}}checked{{/if}}">
 +  <li class="{{#if checked}}checked{{/if}} {{#if private}}private{{/if}}">
@@ -1263,169 +1650,293 @@ index bd18923..08854e2 100644
  
      <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
 -- 
-2.6.3
+2.1.3
 
 
-From f5ff7942bb745e53c1d94d6d2555449544928754 Mon Sep 17 00:00:00 2001
+From 671d4b124526ed7570f44ef318935cb53108f021 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:34:47 -0700
-Subject: [PATCH 30/34] Step 10.5: Define helper to check ownership
+Subject: [PATCH 40/46] Step 10.6: Define helper to check ownership
 
 ---
- simple-todos.js | 6 ++++++
+ imports/ui/task.js | 6 ++++++
  1 file changed, 6 insertions(+)
 
-diff --git a/simple-todos.js b/simple-todos.js
-index 31eda5c..db6e512 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -48,6 +48,12 @@ if (Meteor.isClient) {
-     }
-   });
+diff --git a/imports/ui/task.js b/imports/ui/task.js
+index 3775ceb..af4bcf6 100644
+--- a/imports/ui/task.js
++++ b/imports/ui/task.js
+@@ -3,6 +3,12 @@ import { Template } from 'meteor/templating';
  
-+  Template.task.helpers({
-+    isOwner: function () {
-+      return this.owner === Meteor.userId();
-+    }
-+  });
+ import './task.html';
+ 
++Template.task.helpers({
++  isOwner() {
++    return this.owner === Meteor.userId();
++  },
++});
 +
-   Template.task.events({
-     "click .toggle-checked": function () {
-       // Set the checked property to the opposite of its current value
+ Template.task.events({
+   'click .toggle-checked'() {
+     // Set the checked property to the opposite of its current value
 -- 
-2.6.3
+2.1.3
 
 
-From c12c07a4480a0db0679c9af90fddcae0e843c816 Mon Sep 17 00:00:00 2001
+From 915efc0ffae6ac361db95a6dfb0e327042d89c3e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:35:31 -0700
-Subject: [PATCH 31/34] Step 10.6: Define method to set tasks to private
+Subject: [PATCH 41/46] Step 10.7: Define method to set tasks to private
 
 ---
- simple-todos.js | 10 ++++++++++
- 1 file changed, 10 insertions(+)
-
-diff --git a/simple-todos.js b/simple-todos.js
-index db6e512..ff07739 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -88,5 +88,15 @@ Meteor.methods({
+ imports/api/tasks.js | 13 +++++++++++++
+ 1 file changed, 13 insertions(+)
+
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index c048739..1c3e891 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -38,6 +38,19 @@ Meteor.methods({
+ 
+     Tasks.update(taskId, { $set: { checked: setChecked } });
    },
-   setChecked: function (taskId, setChecked) {
-     Tasks.update(taskId, { $set: { checked: setChecked} });
-+  },
-+  setPrivate: function (taskId, setToPrivate) {
-+    var task = Tasks.findOne(taskId);
++  'tasks.setPrivate'(taskId, setToPrivate) {
++    check(taskId, String);
++    check(setToPrivate, Boolean);
++
++    const task = Tasks.findOne(taskId);
 +
 +    // Make sure only the task owner can make a task private
 +    if (task.owner !== Meteor.userId()) {
-+      throw new Meteor.Error("not-authorized");
++      throw new Meteor.Error('not-authorized');
 +    }
 +
 +    Tasks.update(taskId, { $set: { private: setToPrivate } });
-   }
++  },
  });
+ 
+ export { Tasks };
 -- 
-2.6.3
+2.1.3
 
 
-From a7412e05eb2294eba0ac8c3737acc9e996da9b0d Mon Sep 17 00:00:00 2001
+From 12fc5a9ffcd73fba07a2d954c1e9d90bdd5c8c13 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:35:55 -0700
-Subject: [PATCH 32/34] Step 10.7: Add event handler to call the setPrivate
+Subject: [PATCH 42/46] Step 10.8: Add event handler to call the setPrivate
  method
 
 ---
- simple-todos.js | 3 +++
+ imports/ui/task.js | 3 +++
  1 file changed, 3 insertions(+)
 
-diff --git a/simple-todos.js b/simple-todos.js
-index ff07739..937e361 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -61,6 +61,9 @@ if (Meteor.isClient) {
-     },
-     "click .delete": function () {
-       Meteor.call("deleteTask", this._id);
-+    },
-+    "click .toggle-private": function () {
-+      Meteor.call("setPrivate", this._id, ! this.private);
-     }
-   });
- 
+diff --git a/imports/ui/task.js b/imports/ui/task.js
+index af4bcf6..6b51496 100644
+--- a/imports/ui/task.js
++++ b/imports/ui/task.js
+@@ -17,4 +17,7 @@ Template.task.events({
+   'click .delete'() {
+     Meteor.call('tasks.remove', this._id);
+   },
++  'click .toggle-private'() {
++    Meteor.call('tasks.setPrivate', this._id, !this.private);
++  },
+ });
 -- 
-2.6.3
+2.1.3
 
 
-From b027b618497c1c1d5f8c6d4d259e802018a6bab2 Mon Sep 17 00:00:00 2001
+From e26fa2b01321672c241a1b168a8fe8f975dcab38 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:36:38 -0700
-Subject: [PATCH 33/34] Step 10.8: Only publish tasks the user is allowed to
+Subject: [PATCH 43/46] Step 10.9: Only publish tasks the user is allowed to
  see
 
 ---
- simple-todos.js | 8 +++++++-
+ imports/api/tasks.js | 8 +++++++-
  1 file changed, 7 insertions(+), 1 deletion(-)
 
-diff --git a/simple-todos.js b/simple-todos.js
-index 937e361..fea68a1 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -2,8 +2,14 @@ Tasks = new Mongo.Collection("tasks");
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index 1c3e891..afbcb81 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -6,8 +6,14 @@ const Tasks = new Mongo.Collection('tasks');
  
  if (Meteor.isServer) {
    // This code only runs on the server
 +  // Only publish tasks that are public or belong to the current user
-   Meteor.publish("tasks", function () {
+   Meteor.publish('tasks', function tasksPublication() {
 -    return Tasks.find();
 +    return Tasks.find({
 +      $or: [
-+        { private: {$ne: true} },
-+        { owner: this.userId }
-+      ]
++        { private: { $ne: true } },
++        { owner: this.userId },
++      ],
 +    });
    });
  }
  
 -- 
-2.6.3
+2.1.3
 
 
-From 17b00f034ea0273a4eff10ab9ec4774fb7f98a7e Mon Sep 17 00:00:00 2001
+From 1214baf6ab1ded4093e239bcd688cb9ed7234f9a Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:37:36 -0700
-Subject: [PATCH 34/34] Step 10.9: Add some extra security to methods
+Subject: [PATCH 44/46] Step 10.10: Add some extra security to methods
 
 ---
- simple-todos.js | 12 ++++++++++++
- 1 file changed, 12 insertions(+)
-
-diff --git a/simple-todos.js b/simple-todos.js
-index fea68a1..9bf41bb 100644
---- a/simple-todos.js
-+++ b/simple-todos.js
-@@ -93,9 +93,21 @@ Meteor.methods({
-     });
-   },
-   deleteTask: function (taskId) {
-+    var task = Tasks.findOne(taskId);
+ imports/api/tasks.js | 13 +++++++++++++
+ 1 file changed, 13 insertions(+)
+
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index afbcb81..222dd81 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -26,6 +26,7 @@ Meteor.methods({
+       throw new Meteor.Error('not-authorized');
+     }
+ 
++
+     Tasks.insert({
+       text,
+       createdAt: new Date(),
+@@ -36,12 +37,24 @@ Meteor.methods({
+   'tasks.remove'(taskId) {
+     check(taskId, String);
+ 
++    const task = Tasks.findOne(taskId);
 +    if (task.private && task.owner !== Meteor.userId()) {
 +      // If the task is private, make sure only the owner can delete it
-+      throw new Meteor.Error("not-authorized");
++      throw new Meteor.Error('not-authorized');
 +    }
 +
      Tasks.remove(taskId);
    },
-   setChecked: function (taskId, setChecked) {
-+    var task = Tasks.findOne(taskId);
+   'tasks.setChecked'(taskId, setChecked) {
+     check(taskId, String);
+     check(setChecked, Boolean);
+ 
++    const task = Tasks.findOne(taskId);
 +    if (task.private && task.owner !== Meteor.userId()) {
 +      // If the task is private, make sure only the owner can check it off
-+      throw new Meteor.Error("not-authorized");
++      throw new Meteor.Error('not-authorized');
 +    }
 +
-     Tasks.update(taskId, { $set: { checked: setChecked} });
+     Tasks.update(taskId, { $set: { checked: setChecked } });
    },
-   setPrivate: function (taskId, setToPrivate) {
+   'tasks.setPrivate'(taskId, setToPrivate) {
+-- 
+2.1.3
+
+
+From aee10beeee8932f432f25b4f4074238c3c8cab50 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:51:38 +1100
+Subject: [PATCH 45/46] Step 11.1: Added practicalmeteor:mocha package
+
+---
+ .meteor/packages | 1 +
+ .meteor/versions | 7 +++++++
+ 2 files changed, 8 insertions(+)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index 3ecf3a1..6e6d2d4 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -20,3 +20,4 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
+ reactive-dict
+ accounts-ui
+ accounts-password
++practicalmeteor:mocha@2.1.1-rc.1
+diff --git a/.meteor/versions b/.meteor/versions
+index 4f59e62..a03c196 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -16,6 +16,7 @@ caching-compiler@1.0.2-rc.2
+ caching-html-compiler@1.0.4-rc.2
+ callback-hook@1.0.6-rc.2
+ check@1.1.2-rc.2
++coffeescript@1.0.15-rc.2
+ ddp@1.2.3-rc.2
+ ddp-client@1.2.3-rc.2
+ ddp-common@1.2.3-rc.2
+@@ -56,6 +57,11 @@ npm-bcrypt@0.7.8_2
+ npm-mongo@1.4.41-rc.2
+ observe-sequence@1.0.9-rc.2
+ ordered-dict@1.0.5-rc.2
++practicalmeteor:chai@2.1.0_1
++practicalmeteor:loglevel@1.2.0_2
++practicalmeteor:mocha@2.1.1-rc.1
++practicalmeteor:mocha-core@0.1.4
++practicalmeteor:sinon@1.14.1_2
+ promise@0.6.4-rc.2
+ random@1.0.7-rc.2
+ rate-limit@1.0.2-rc.2
+@@ -74,6 +80,7 @@ standard-minifier-css@1.0.4-rc.2
+ standard-minifier-js@1.0.4-rc.2
+ templating@1.1.7-rc.2
+ templating-tools@1.0.2-rc.2
++tmeasday:test-reporter-helpers@0.2.1
+ tracker@1.0.11-rc.2
+ ui@1.0.9-rc.2
+ underscore@1.0.6-rc.2
+-- 
+2.1.3
+
+
+From cf019568a922750076a3e9b5297bb689231744c6 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Thu, 17 Mar 2016 12:52:51 +1100
+Subject: [PATCH 46/46] Step 11.2: Added a simple method test
+
+---
+ imports/api/tasks.tests.js | 36 ++++++++++++++++++++++++++++++++++++
+ 1 file changed, 36 insertions(+)
+ create mode 100644 imports/api/tasks.tests.js
+
+diff --git a/imports/api/tasks.tests.js b/imports/api/tasks.tests.js
+new file mode 100644
+index 0000000..212a91d
+--- /dev/null
++++ b/imports/api/tasks.tests.js
+@@ -0,0 +1,36 @@
++/* eslint-env mocha */
++
++import { Meteor } from 'meteor/meteor';
++import { Random } from 'meteor/random';
++import { assert } from 'meteor/practicalmeteor:chai';
++
++import { Tasks } from './tasks.js';
++
++if (Meteor.isServer) {
++  describe('Tasks', () => {
++    describe('methods', () => {
++      const userId = Random.id();
++      let taskId;
++
++      beforeEach(() => {
++        Tasks.remove({});
++        taskId = Tasks.insert({
++          text: 'test task',
++          createdAt: new Date(),
++          owner: userId,
++          username: 'tmeasday',
++        });
++      });
++
++      it('can delete owned task', () => {
++        const deleteTask = Meteor.server.method_handlers['tasks.remove'];
++
++        // Call delete task with a faked user context, so the server thinks we have userId
++        const invocation = { userId };
++        deleteTask.apply(invocation, [taskId]);
++
++        assert.equal(Tasks.find().count(), 0);
++      });
++    });
++  });
++}
 -- 
-2.6.3
+2.1.3
 
diff --git a/package.js b/package.js
index 8396643..bb54449 100644
--- a/package.js
+++ b/package.js
@@ -48,7 +48,7 @@ Package.onUse(function (api) {
     'content/blaze/step08.md',
     'content/blaze/step09.md',
     'content/blaze/step10.md',
-    'content/blaze/step11.md',
+    'content/blaze/step12.md',
 
     'content/react/step01.md',
     'content/react/step02.md',
@@ -67,6 +67,7 @@ Package.onUse(function (api) {
     'content/shared/adding-css.js',
     'content/shared/nextSteps.md',
     'content/shared/step06.md',
+    'content/shared/step11.md',
 
     'generated/react.multi.patch',
     'generated/blaze.multi.patch',
diff --git a/repos/blaze b/repos/blaze
index 17b00f0..cf01956 160000
--- a/repos/blaze
+++ b/repos/blaze
@@ -1 +1 @@
-Subproject commit 17b00f034ea0273a4eff10ab9ec4774fb7f98a7e
+Subproject commit cf019568a922750076a3e9b5297bb689231744c6
-- 
2.13.6 (Apple Git-96)


From 55e080d1480d96334c7de39c333a1106e7e30bd9 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Thu, 17 Mar 2016 15:04:27 +1100
Subject: [PATCH 104/164] Some content for testing article

---
 content/blaze/step01.md  |  1 +
 content/shared/step11.md | 28 ++++++++++++++++++++++++++++
 2 files changed, 29 insertions(+)

diff --git a/content/blaze/step01.md b/content/blaze/step01.md
index f62bfb6..8bd0c58 100644
--- a/content/blaze/step01.md
+++ b/content/blaze/step01.md
@@ -25,6 +25,7 @@ To run the newly created app:
 
 ```bash
 cd simple-todos
+meteor npm install
 meteor
 ```
 
diff --git a/content/shared/step11.md b/content/shared/step11.md
index e84d5e5..0b3510f 100644
--- a/content/shared/step11.md
+++ b/content/shared/step11.md
@@ -2,4 +2,32 @@
 
 # Testing
 
+Now we've created a few features for our application, let's add a test to ensure that we don't regress and that it works the way we expect. 
+
+We'll write a test that exercises one of our Methods (which form the "write" part of our app's API), and verifies it works correctly.
+
+To do so, we'll add a [test driver](http://guide.meteor.com/testing.html#test-driver) for the [Mocha](https://mochajs.org) JavaScript test framework:
+
+```bash
+meteor add practicalmeteor:mocha
+```
+
+We can now run our app in "test mode" by calling out a special command and specifying to use the driver (you'll need to stop the regular app from running, or specify an alternate port with `--port XYZ`:
+
+```bash
+meteor test --driver-package practicalmeteor:mocha
+```
+
+If you do so, you should see an empty test results page in your browser window.
+
+Let's add a simple test:
+
+{{> DiffBox tutorialName="simple-todos" step="11.2"}}
+
+This test runs only on the server, which allows us to easily control the database and call the method "as" any user we like without having to go through login steps. 
+
+We use Mocha's builtin `describe`, `it`, and `beforeEach` syntax to ensure the database has a single task when the test starts, and then directly call the method's implementation as the task's owner. Then we can check that the task is deleted after the method call.
+
+There's a lot more you can do in a Meteor test! You can read more about it in the Meteor Guide [article on testing](http://guide.meteor.com/testing.html).
+
 {{/template}}
-- 
2.13.6 (Apple Git-96)


From ecc7a3ba12f2681ed0c586402539b2c2fc10332b Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 12:44:17 +1100
Subject: [PATCH 105/164] Updated to address Sashko's comments

---
 content/blaze/step02.md        |   6 +-
 content/blaze/step07.md        |   6 +-
 content/blaze/step08.md        |   5 +-
 content/blaze/step09.md        |   1 +
 content/blaze/step10.md        |   2 +
 content/shared/explanations.md |   7 +-
 content/shared/step11.md       |  12 +-
 generated/blaze.multi.patch    | 374 +++++++++++++++++++++++------------------
 repos/blaze                    |   2 +-
 9 files changed, 240 insertions(+), 175 deletions(-)

diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index a1ee699..36257d4 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -13,10 +13,12 @@ Then we create some new files in the `imports/` directory:
 
 {{> DiffBox tutorialName="simple-todos" step="2.3"}}
 
-Files inside `imports/` are not eagerly loaded, so we'll need to import `imports/ui/body.js` from our frontend JS entrypoint (`client/main.js`---note that we remove the rest of the code from this file):
+Files inside `imports/` only load if they are imported, so we'll need to import `imports/ui/body.js` from our frontend JS entrypoint (`client/main.js`---note that we remove the rest of the code from this file):
 
 {{> DiffBox tutorialName="simple-todos" step="2.4"}}
 
+You can read more about how imports work and how to structure your code in the [Application Structure article](http://guide.meteor.com/structure.html) of the Meteor Guide.
+
 In our browser, the app will now look much like this:
 
 > #### Todo List
@@ -28,7 +30,7 @@ Now let's find out what all these bits of code are doing!
 
 ### HTML files in Meteor define templates
 
-Meteor parses all of the HTML files in your app folder and identifies three top-level tags: **&lt;head>**, **&lt;body>**, and **&lt;template>**.
+Meteor parses HTML files and identifies three top-level tags: **&lt;head>**, **&lt;body>**, and **&lt;template>**.
 
 Everything inside any &lt;head> tags is added to the `head` section of the HTML sent to the client, and everything inside &lt;body> tags is added to the `body` section, just like in a regular HTML file. 
 
diff --git a/content/blaze/step07.md b/content/blaze/step07.md
index 4ec621d..cc20997 100644
--- a/content/blaze/step07.md
+++ b/content/blaze/step07.md
@@ -24,8 +24,7 @@ is checked or unchecked. An event handler takes two arguments, the second of whi
 {{> DiffBox tutorialName="simple-todos" step="7.4"}}
 
 Now, we need to update `Template.body.helpers`. The code below has a new if
-block to filter the tasks if the checkbox is checked, and a helper to make sure
-the checkbox represents the state of our internal `state` dictionary.
+block to filter the tasks if the checkbox is checked:
 
 {{> DiffBox tutorialName="simple-todos" step="7.5"}}
 
@@ -35,6 +34,9 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 Until now, we have stored all of our state in collections, and the view updated automatically when we modified the data inside these collections. This is because Mongo.Collection is recognized by Meteor as a _reactive data source_, meaning Meteor knows when the data inside has changed. `ReactiveDict` is the same way, but is not synced with the server like collections are. This makes a `ReactiveDict` a convenient place to store temporary UI state like the checkbox above. Just like with collections, we don't have to write any extra code for the template to update when the `ReactiveDict` variable changes &mdash; just calling `instance.state.get(...)` inside the helper is enough.
 
+You can read more about patterns for writing components in the [Blaze article](http://guide.meteor.com/blaze.html) of the Meteor Guide.
+
+
 ### One more feature: Showing a count of incomplete tasks
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a helper and change one line of the HTML.
diff --git a/content/blaze/step08.md b/content/blaze/step08.md
index 3a39b1e..87380c6 100644
--- a/content/blaze/step08.md
+++ b/content/blaze/step08.md
@@ -18,7 +18,7 @@ Then, in your JavaScript, add the following code to configure the accounts UI to
 
 {{> DiffBox tutorialName="simple-todos" step="8.3"}}
 
-We'll need to import that configuration from our JavaScript entrypoint also:
+We'll need to import that configuration from our *client-side JavaScript entrypoint* also:
 
 {{> DiffBox tutorialName="simple-todos" step="8.4"}}
 
@@ -58,3 +58,6 @@ In your JavaScript code, you can use `Meteor.userId()` to get the current user's
 
 In the next step, we will learn how to make our app more secure by doing all of our data validation on the server instead of the client.
 {{/template}}
+
+You can read more about using accounts in Meteor in the [Accounts article](http://guide.meteor.com/accounts.html) of the Meteor Guide.
+
diff --git a/content/blaze/step09.md b/content/blaze/step09.md
index 9042e07..fe53c22 100644
--- a/content/blaze/step09.md
+++ b/content/blaze/step09.md
@@ -34,4 +34,5 @@ Now all of our inputs and buttons will start working again. What did we gain fro
 
 {{> step09OptimisticUI}}
 
+
 {{/template}}
diff --git a/content/blaze/step10.md b/content/blaze/step10.md
index 7ac6d39..c674237 100644
--- a/content/blaze/step10.md
+++ b/content/blaze/step10.md
@@ -24,6 +24,8 @@ Once you have added this code, all of the tasks will reappear.
 
 Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When `Meteor.subscribe` is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
 
+You can read more about publications in the [Data Loading article](http://guide.meteor.com/data-loading.html) of the Meteor Guide.
+
 ### Implementing private tasks
 
 First, let's add another property to tasks called "private" and a button for users to mark a task as private. This button should only show up for the owner of a task. It will display the current state of the item.
diff --git a/content/shared/explanations.md b/content/shared/explanations.md
index 54bb468..9c306c0 100644
--- a/content/shared/explanations.md
+++ b/content/shared/explanations.md
@@ -2,12 +2,16 @@
 
 Collections are Meteor's way of storing persistent data. The special thing about collections in Meteor is that they can be accessed from both the server and the client, making it easy to write view logic without having to write a lot of server code. They also update themselves automatically, so a view component backed by a collection will automatically display the most up-to-date data.
 
+You can read more about collections in the [Collections article](http://guide.meteor.com/collections.html) of the Meteor Guide.
+
 Creating a new collection is as easy as calling `MyCollection = new Mongo.Collection("my-collection");` in your JavaScript. On the server, this sets up a MongoDB collection called `my-collection`; on the client, this creates a cache connected to the server collection. We'll learn more about the client/server divide in step 12, but for now we can write our code with the assumption that the entire database is present on the client.
 
 To create the collection, we define a new `todos` module that creates a Mongo collection and exports it:
 
 {{> DiffBox tutorialName="simple-todos" step="3.1"}}
 
+Notice that we place this file in a new `imports/api` directory. This is a sensible place to store the API of your application---for now the collections that we'll use, and later the Publications that read from them and the Methods that write to them. You can read more about how to structure your code in the [Application Structure article](http://guide.meteor.com/structure.html) of the Meteor Guide.
+
 We need to import that module on the server (this creates the MongoDB collection and sets up the plumbing to get the data to the client):
 
 {{> DiffBox tutorialName="simple-todos" step="3.2"}}
@@ -51,6 +55,7 @@ What this means is that a newly created task actually appears on the screen _bef
 
 If the result from the server comes back and is consistent with the simulation on the client, everything remains as is. If the result on the server is different from the result of the simulation on the client, the UI is patched to reflect the actual state of the server.
 
-With Meteor methods and optimistic UI, you get the best of both worlds &mdash; the security of server code and no round-trip delay. Read more in our [blog post about optimistic UI](http://info.meteor.com/blog/optimistic-ui-with-meteor-latency-compensation).
+
+You can read more about methods and optimistic UI in the [Methods article](http://guide.meteor.com/methods.html) of the Meteor Guide, and our [blog post about optimistic UI](http://info.meteor.com/blog/optimistic-ui-with-meteor-latency-compensation).
 
 {{/template}}
diff --git a/content/shared/step11.md b/content/shared/step11.md
index 0b3510f..7edc408 100644
--- a/content/shared/step11.md
+++ b/content/shared/step11.md
@@ -20,13 +20,19 @@ meteor test --driver-package practicalmeteor:mocha
 
 If you do so, you should see an empty test results page in your browser window.
 
-Let's add a simple test:
+Let's add a simple test (that doesn't do anything yet):
 
 {{> DiffBox tutorialName="simple-todos" step="11.2"}}
 
-This test runs only on the server, which allows us to easily control the database and call the method "as" any user we like without having to go through login steps. 
+In any test we need to ensure the database is in the state we expect before beginning. We can use Mocha's `beforeEach` construct to that easily:
 
-We use Mocha's builtin `describe`, `it`, and `beforeEach` syntax to ensure the database has a single task when the test starts, and then directly call the method's implementation as the task's owner. Then we can check that the task is deleted after the method call.
+{{> DiffBox tutorialName="simple-todos" step="11.3"}}
+
+Here we create a single task that's associated with a random `userId` that'll be different for each test run. 
+
+Now we can write the test to call the `task.remove` method "as" that user and verify the task is deleted:
+
+{{> DiffBox tutorialName="simple-todos" step="11.4"}}
 
 There's a lot more you can do in a Meteor test! You can read more about it in the Meteor Guide [article on testing](http://guide.meteor.com/testing.html).
 
diff --git a/generated/blaze.multi.patch b/generated/blaze.multi.patch
index fcbf0d5..eba50c5 100644
--- a/generated/blaze.multi.patch
+++ b/generated/blaze.multi.patch
@@ -1,7 +1,7 @@
-From 1d9c7079a2ffb10bff504c472b2175c1ed7bf1b2 Mon Sep 17 00:00:00 2001
+From 51e340b7cd2b944bd0929206b1871f1c044c2aa2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:05:51 -0700
-Subject: [PATCH 01/46] Step 1: Run `meteor create`
+Subject: [PATCH 01/48] Step 1: Run `meteor create`
 
 ---
  .gitignore                  |  1 +
@@ -292,10 +292,10 @@ index 0000000..31a9e0e
 2.1.3
 
 
-From 1bca6e0184b74c344463a577a01d7a3dbad1f8be Mon Sep 17 00:00:00 2001
+From 431f75b28f8ee985b3ac341da6c4d752d204b135 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:07:22 -0700
-Subject: [PATCH 02/46] Step 2.1: Remove starter HTML code
+Subject: [PATCH 02/48] Step 2.1: Remove starter HTML code
 
 ---
  client/main.html | 22 ----------------------
@@ -335,10 +335,10 @@ index 6fe0dc5..7c48505 100644
 2.1.3
 
 
-From 07b752c2a16a711e2596f2167a66ef700f3e4d2c Mon Sep 17 00:00:00 2001
+From 99cffc464f80899ce34cf446179e8041c9f5114c Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 13:11:52 +1100
-Subject: [PATCH 03/46] Step 2.2: Replace starter HTML code
+Subject: [PATCH 03/48] Step 2.2: Add starter HTML code
 
 ---
  imports/ui/body.html | 17 +++++++++++++++++
@@ -372,10 +372,10 @@ index 0000000..23a6507
 2.1.3
 
 
-From 7abbdb9a538a32b82c018df9ab9772cefdfb402b Mon Sep 17 00:00:00 2001
+From 30e9ac16a2de85e74d5a6d92b16e41b37e7faf5e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:07:50 -0700
-Subject: [PATCH 04/46] Step 2.3: Replace starter JS code
+Subject: [PATCH 04/48] Step 2.3: Add starter JS code
 
 ---
  imports/ui/body.js | 11 +++++++++++
@@ -403,10 +403,10 @@ index 0000000..3ad20b1
 2.1.3
 
 
-From f33c2b6553d6a5502605de8b044b1e448894322d Mon Sep 17 00:00:00 2001
+From d63fe20a79a2dd9be0034b72bba93d9654d10d31 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:08:17 -0700
-Subject: [PATCH 05/46] Step 2.4: Import starter JS
+Subject: [PATCH 05/48] Step 2.4: Import starter JS
 
 ---
  client/main.js | 23 +----------------------
@@ -444,10 +444,10 @@ index ecb3282..4e7c1a4 100644
 2.1.3
 
 
-From 39465319a937823b78df23fe36b1dd5a4bcd65c3 Mon Sep 17 00:00:00 2001
+From 63f980943c048f8084f5a42543ba3e13b4088800 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:13:09 +1100
-Subject: [PATCH 06/46] Step 2.5: Add CSS
+Subject: [PATCH 06/48] Step 2.5: Add CSS
 
 ---
  client/main.css | 125 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
@@ -588,35 +588,33 @@ index b6b4052..ed5e77e 100644
 2.1.3
 
 
-From f7d73475384e80357eb9c7a5ca041d2546f60d62 Mon Sep 17 00:00:00 2001
+From bbe752d39cf04a51376c1cd089b053615cf08df9 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:15:47 +1100
-Subject: [PATCH 07/46] Step 3.1: Create tasks collection
+Subject: [PATCH 07/48] Step 3.1: Create tasks collection
 
 ---
- imports/api/tasks.js | 5 +++++
- 1 file changed, 5 insertions(+)
+ imports/api/tasks.js | 3 +++
+ 1 file changed, 3 insertions(+)
  create mode 100644 imports/api/tasks.js
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
 new file mode 100644
-index 0000000..a9ab038
+index 0000000..3bed819
 --- /dev/null
 +++ b/imports/api/tasks.js
-@@ -0,0 +1,5 @@
+@@ -0,0 +1,3 @@
 +import { Mongo } from 'meteor/mongo';
 +
-+const Tasks = new Mongo.Collection('tasks');
-+
-+export { Tasks };
++export const Tasks = new Mongo.Collection('tasks');
 -- 
 2.1.3
 
 
-From ad62355a6a8ee24c21e37478504512596fe5201c Mon Sep 17 00:00:00 2001
+From 85ec00cdd88b93b68d2f3c517060594a8f015062 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:20:32 +1100
-Subject: [PATCH 08/46] Step 3.2: Load tasks collection on the server
+Subject: [PATCH 08/48] Step 3.2: Load tasks collection on the server
 
 ---
  server/main.js | 6 +-----
@@ -637,10 +635,10 @@ index 31a9e0e..ab941a4 100644
 2.1.3
 
 
-From 6aff55c365b0b5507877d5a66dd62d3a65a38cb2 Mon Sep 17 00:00:00 2001
+From f6b008980d6f04b93e05bf777bdb0378308f4b57 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:16:03 +1100
-Subject: [PATCH 09/46] Step 3.3: Load tasks from Tasks collection
+Subject: [PATCH 09/48] Step 3.3: Load tasks from Tasks collection
 
 ---
  imports/ui/body.js | 10 +++++-----
@@ -671,10 +669,10 @@ index 3ad20b1..fc36022 100644
 2.1.3
 
 
-From 9e387992b0911ef28958d5ec6d7380134da81c72 Mon Sep 17 00:00:00 2001
+From 5181113b59242497a2593b844337a93944b7d78a Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:10:21 -0700
-Subject: [PATCH 10/46] Step 4.1: Add form for new tasks
+Subject: [PATCH 10/48] Step 4.1: Add form for new tasks
 
 ---
  imports/ui/body.html | 4 ++++
@@ -699,10 +697,10 @@ index 23a6507..0a1f952 100644
 2.1.3
 
 
-From c86ea9c4669be127531e6e3245841d2f76486fae Mon Sep 17 00:00:00 2001
+From 828c084621cc5bd0d9373d54f4eda6188260bbda Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:19:59 +1100
-Subject: [PATCH 11/46] Step 4.2: Add event handler for form submit
+Subject: [PATCH 11/48] Step 4.2: Add event handler for form submit
 
 ---
  imports/ui/body.js | 20 ++++++++++++++++++++
@@ -740,10 +738,10 @@ index fc36022..42ad1d5 100644
 2.1.3
 
 
-From 28a7f6c41c48d3caf0b18e6dce1b32011b0b2f52 Mon Sep 17 00:00:00 2001
+From 0dc5c4c9c5bb0f8f769ef704a90a981de6090847 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:12:14 -0700
-Subject: [PATCH 12/46] Step 4.3: Show newest tasks at the top
+Subject: [PATCH 12/48] Step 4.3: Show newest tasks at the top
 
 ---
  imports/ui/body.js | 3 ++-
@@ -767,10 +765,10 @@ index 42ad1d5..6fbc9d5 100644
 2.1.3
 
 
-From 3588b089c96167bfed5239d14491a00580c43aea Mon Sep 17 00:00:00 2001
+From 89bc3233dc87cba97d7e5a89f659dfc463b8da53 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:12:57 -0700
-Subject: [PATCH 13/46] Step 5.1: Add buttons to Task component
+Subject: [PATCH 13/48] Step 5.1: Add buttons to Task component
 
 ---
  imports/ui/task.html | 9 +++++++++
@@ -796,10 +794,10 @@ index 0000000..c4ab8e5
 2.1.3
 
 
-From 07235612b5bcbbaf82b8e453ee216878db2b1750 Mon Sep 17 00:00:00 2001
+From acb70c80fb362a856eb7254d5b7dbe8492e2dc83 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:23:12 +1100
-Subject: [PATCH 14/46] Step 5.2: Remove Tasks component from Body file
+Subject: [PATCH 14/48] Step 5.2: Remove Tasks component from Body file
 
 ---
  imports/ui/body.html | 4 ----
@@ -821,10 +819,10 @@ index 0a1f952..c40a87b 100644
 2.1.3
 
 
-From 1fd0a2c27aaaffac17a1ca533fac433c4f09f19e Mon Sep 17 00:00:00 2001
+From 4f27c1302376e197c5e69b476f19d9cd13522ade Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:26:44 +1100
-Subject: [PATCH 15/46] Step 5.3: Add event handlers for Task buttons
+Subject: [PATCH 15/48] Step 5.3: Add event handlers for Task buttons
 
 ---
  imports/ui/task.js | 17 +++++++++++++++++
@@ -858,10 +856,10 @@ index 0000000..782f932
 2.1.3
 
 
-From ad56ff1c15c42de7d18f15ca9cd49e38bc2301e1 Mon Sep 17 00:00:00 2001
+From a26ed7b132ec652a7c4cd9f088f7eb3300e86389 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:26:57 +1100
-Subject: [PATCH 16/46] Step 5.4: Import Task component from the body
+Subject: [PATCH 16/48] Step 5.4: Import Task component from the body
 
 ---
  imports/ui/body.js | 1 +
@@ -883,17 +881,17 @@ index 6fbc9d5..bac22c6 100644
 2.1.3
 
 
-From de6ce06e8dc8b450598be076c0978ed948cc796a Mon Sep 17 00:00:00 2001
+From 4bfaa6f070101cb0caf35ab30343e1126b0e6701 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:24:18 -0700
-Subject: [PATCH 17/46] Step 7.1: Add hide-completed checkbox to HTML
+Subject: [PATCH 17/48] Step 7.1: Add hide-completed checkbox to HTML
 
 ---
  imports/ui/body.html | 5 +++++
  1 file changed, 5 insertions(+)
 
 diff --git a/imports/ui/body.html b/imports/ui/body.html
-index c40a87b..a581239 100644
+index c40a87b..b634377 100644
 --- a/imports/ui/body.html
 +++ b/imports/ui/body.html
 @@ -3,6 +3,11 @@
@@ -901,7 +899,7 @@ index c40a87b..a581239 100644
        <h1>Todo List</h1>
  
 +      <label class="hide-completed">
-+        <input type="checkbox" checked="{{hideCompleted}}" />
++        <input type="checkbox" />
 +        Hide Completed Tasks
 +      </label>
 +
@@ -912,10 +910,10 @@ index c40a87b..a581239 100644
 2.1.3
 
 
-From d7788574938a2b66e21ae6e04669e8ae89184e6d Mon Sep 17 00:00:00 2001
+From 11349ad2cad437421ad9fadb05f000fc2f24d928 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:33:00 +1100
-Subject: [PATCH 18/46] Step 7.2: Add reactive-dict package
+Subject: [PATCH 18/48] Step 7.2: Add reactive-dict package
 
 ---
  .meteor/packages | 1 +
@@ -947,10 +945,10 @@ index c3395d2..ccbd7bb 100644
 2.1.3
 
 
-From 0fdee1674646037fd9ce48d1b2b326472796b934 Mon Sep 17 00:00:00 2001
+From 349bd90805ba098d08c9445c00fb6776f2cb8b08 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:29:41 +1100
-Subject: [PATCH 19/46] Step 7.3: Add state dictionary to the body
+Subject: [PATCH 19/48] Step 7.3: Add state dictionary to the body
 
 ---
  imports/ui/body.js | 5 +++++
@@ -980,10 +978,10 @@ index bac22c6..d429b10 100644
 2.1.3
 
 
-From 5a829eaf0add55a644414a18bce3dd680ff5426e Mon Sep 17 00:00:00 2001
+From caa11a11d808123299380ee26229c9f358ba1775 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:30:11 +1100
-Subject: [PATCH 20/46] Step 7.4: Add event handler for checkbox
+Subject: [PATCH 20/48] Step 7.4: Add event handler for checkbox
 
 ---
  imports/ui/body.js | 3 +++
@@ -1005,20 +1003,20 @@ index d429b10..856dad4 100644
 2.1.3
 
 
-From 6acc630abe8ac8bef50a6abb5540c297e760bb53 Mon Sep 17 00:00:00 2001
+From 10e30f2ff2b42a53bd675433f65d21ac2beb679e Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:31:16 +1100
-Subject: [PATCH 21/46] Step 7.5: Add helpers to body template
+Subject: [PATCH 21/48] Step 7.5: Add helpers to body template
 
 ---
- imports/ui/body.js | 11 ++++++++++-
- 1 file changed, 10 insertions(+), 1 deletion(-)
+ imports/ui/body.js | 7 ++++++-
+ 1 file changed, 6 insertions(+), 1 deletion(-)
 
 diff --git a/imports/ui/body.js b/imports/ui/body.js
-index 856dad4..a207bf0 100644
+index 856dad4..18422ae 100644
 --- a/imports/ui/body.js
 +++ b/imports/ui/body.js
-@@ -12,9 +12,18 @@ Template.body.onCreated(function bodyOnCreated() {
+@@ -12,7 +12,12 @@ Template.body.onCreated(function bodyOnCreated() {
  
  Template.body.helpers({
    tasks() {
@@ -1031,33 +1029,27 @@ index 856dad4..a207bf0 100644
 +    // Otherwise, return all of the tasks
      return Tasks.find({}, { sort: { createdAt: -1 } });
    },
-+  hideCompleted() {
-+    const instance = Template.instance();
-+    return instance.state.get('hideCompleted');
-+  },
  });
- 
- Template.body.events({
 -- 
 2.1.3
 
 
-From d6c151918eedd35801c1d24f1584e68c0930445a Mon Sep 17 00:00:00 2001
+From 79b34c54716abd5aaa1a5d9f5068a8bd7c24e35b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:26:17 -0700
-Subject: [PATCH 22/46] Step 7.6: Add incompleteCount helper to body
+Subject: [PATCH 22/48] Step 7.6: Add incompleteCount helper to body
 
 ---
  imports/ui/body.js | 3 +++
  1 file changed, 3 insertions(+)
 
 diff --git a/imports/ui/body.js b/imports/ui/body.js
-index a207bf0..f25871e 100644
+index 18422ae..3ca9a47 100644
 --- a/imports/ui/body.js
 +++ b/imports/ui/body.js
-@@ -24,6 +24,9 @@ Template.body.helpers({
-     const instance = Template.instance();
-     return instance.state.get('hideCompleted');
+@@ -20,6 +20,9 @@ Template.body.helpers({
+     // Otherwise, return all of the tasks
+     return Tasks.find({}, { sort: { createdAt: -1 } });
    },
 +  incompleteCount() {
 +    return Tasks.find({ checked: { $ne: true } }).count();
@@ -1069,17 +1061,17 @@ index a207bf0..f25871e 100644
 2.1.3
 
 
-From 2fca40720ee52fa8ce8379ff7ea5135eaf04a010 Mon Sep 17 00:00:00 2001
+From b26b4d486c9136a3db7beb5d63759b7fa1cdf0b3 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:26:37 -0700
-Subject: [PATCH 23/46] Step 7.7: Display incompleteCount
+Subject: [PATCH 23/48] Step 7.7: Display incompleteCount
 
 ---
  imports/ui/body.html | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
 diff --git a/imports/ui/body.html b/imports/ui/body.html
-index a581239..a734c03 100644
+index b634377..6738d6c 100644
 --- a/imports/ui/body.html
 +++ b/imports/ui/body.html
 @@ -1,7 +1,7 @@
@@ -1090,15 +1082,15 @@ index a581239..a734c03 100644
 +      <h1>Todo List ({{incompleteCount}})</h1>
  
        <label class="hide-completed">
-         <input type="checkbox" checked="{{hideCompleted}}" />
+         <input type="checkbox" />
 -- 
 2.1.3
 
 
-From e7a71591be2d788d098e02fe4142eef79078fc19 Mon Sep 17 00:00:00 2001
+From eaa7cfb2bf6257ec2f64f9cfe454c688de9cc6c3 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:27:03 -0700
-Subject: [PATCH 24/46] Step 8.1: Add accounts-ui and accounts-password
+Subject: [PATCH 24/48] Step 8.1: Add accounts-ui and accounts-password
 
 ---
  .meteor/packages |  2 ++
@@ -1181,17 +1173,17 @@ index ccbd7bb..b739407 100644
 2.1.3
 
 
-From 58bc4b455dae5d3e7ed27fc692eae44b16a77bb3 Mon Sep 17 00:00:00 2001
+From bc9fb936699c1ce8a0643e5c563043d560a04811 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:27:23 -0700
-Subject: [PATCH 25/46] Step 8.2: Include loginButtons
+Subject: [PATCH 25/48] Step 8.2: Include loginButtons
 
 ---
  imports/ui/body.html | 2 ++
  1 file changed, 2 insertions(+)
 
 diff --git a/imports/ui/body.html b/imports/ui/body.html
-index a734c03..353a82c 100644
+index 6738d6c..6c60a17 100644
 --- a/imports/ui/body.html
 +++ b/imports/ui/body.html
 @@ -8,6 +8,8 @@
@@ -1207,10 +1199,10 @@ index a734c03..353a82c 100644
 2.1.3
 
 
-From 99d87f8e3bcdd2ef6f8cb96d3971e09a66f344a1 Mon Sep 17 00:00:00 2001
+From 7c48c9aa89e26eac39cc67046f85e54bab5889fe Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:36:02 +1100
-Subject: [PATCH 26/46] Step 8.3: Configure accounts-ui
+Subject: [PATCH 26/48] Step 8.3: Configure accounts-ui
 
 ---
  imports/startup/accounts-config.js | 5 +++++
@@ -1232,10 +1224,10 @@ index 0000000..7e4f7e5
 2.1.3
 
 
-From bac951b21ef76b2d815ba4c9a432c638230a8af4 Mon Sep 17 00:00:00 2001
+From 47fde1a42d5d6d1b765b2f16d0f0cc48e0567be1 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:36:36 +1100
-Subject: [PATCH 27/46] Step 8.4: Import accounts configuration
+Subject: [PATCH 27/48] Step 8.4: Import accounts configuration
 
 ---
  client/main.js | 1 +
@@ -1252,17 +1244,17 @@ index 4e7c1a4..739c50f 100644
 2.1.3
 
 
-From 5d36f08b552dba72dbbc8cfba6ddc5e1af7e9b92 Mon Sep 17 00:00:00 2001
+From 2e4234a228346ca731731166ca12aa38c857d82d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:28:24 -0700
-Subject: [PATCH 28/46] Step 8.5: Update insert to include user data
+Subject: [PATCH 28/48] Step 8.5: Update insert to include user data
 
 ---
  imports/ui/body.js | 3 +++
  1 file changed, 3 insertions(+)
 
 diff --git a/imports/ui/body.js b/imports/ui/body.js
-index f25871e..15a3c8e 100644
+index 3ca9a47..08fad55 100644
 --- a/imports/ui/body.js
 +++ b/imports/ui/body.js
 @@ -1,3 +1,4 @@
@@ -1270,7 +1262,7 @@ index f25871e..15a3c8e 100644
  import { Template } from 'meteor/templating';
  import { ReactiveDict } from 'meteor/reactive-dict';
  
-@@ -42,6 +43,8 @@ Template.body.events({
+@@ -38,6 +39,8 @@ Template.body.events({
      Tasks.insert({
        text,
        createdAt: new Date(), // current time
@@ -1283,17 +1275,17 @@ index f25871e..15a3c8e 100644
 2.1.3
 
 
-From 826537bc83e8ac442b2bdb1898b7fba688cfe877 Mon Sep 17 00:00:00 2001
+From 7083c5b56ba521ed7f34a7039bb3510e6f522534 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:28:47 -0700
-Subject: [PATCH 29/46] Step 8.6: Only show add task form if logged in
+Subject: [PATCH 29/48] Step 8.6: Only show add task form if logged in
 
 ---
  imports/ui/body.html | 8 +++++---
  1 file changed, 5 insertions(+), 3 deletions(-)
 
 diff --git a/imports/ui/body.html b/imports/ui/body.html
-index 353a82c..6cd1dba 100644
+index 6c60a17..6a9e4e1 100644
 --- a/imports/ui/body.html
 +++ b/imports/ui/body.html
 @@ -10,9 +10,11 @@
@@ -1315,10 +1307,10 @@ index 353a82c..6cd1dba 100644
 2.1.3
 
 
-From 0958888adeb5999647cebe5c4d9239a8be834a6f Mon Sep 17 00:00:00 2001
+From da75b1705c5d5ae3470f47406c261d4303f95a87 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:29:11 -0700
-Subject: [PATCH 30/46] Step 8.7: Display username next to task
+Subject: [PATCH 30/48] Step 8.7: Display username next to task
 
 ---
  imports/ui/task.html | 2 +-
@@ -1340,10 +1332,10 @@ index c4ab8e5..c42e8fc 100644
 2.1.3
 
 
-From 8f0bedc7c5f6874486b5b2717e33abe60e59e0bb Mon Sep 17 00:00:00 2001
+From fc20c31540886a1c6b63673217f63e485c076cec Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:29:52 -0700
-Subject: [PATCH 31/46] Step 9.1: Remove insecure package
+Subject: [PATCH 31/48] Step 9.1: Remove insecure package
 
 ---
  .meteor/packages | 1 -
@@ -1378,26 +1370,26 @@ index b739407..3d9bd1e 100644
 2.1.3
 
 
-From aa81d23d23aef1bc3f7a1be5331be354b2a2bc7e Mon Sep 17 00:00:00 2001
+From aa0357a3c29f7fdedfbb7ff2b109e990831bb399 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:30:20 -0700
-Subject: [PATCH 32/46] Step 9.2: Define some methods
+Subject: [PATCH 32/48] Step 9.2: Define some methods
 
 ---
  imports/api/tasks.js | 31 +++++++++++++++++++++++++++++++
  1 file changed, 31 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index a9ab038..30194c5 100644
+index 3bed819..0201eb4 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
-@@ -1,5 +1,36 @@
+@@ -1,3 +1,34 @@
 +import { Meteor } from 'meteor/meteor';
  import { Mongo } from 'meteor/mongo';
 +import { check } from 'meteor/check';
  
- const Tasks = new Mongo.Collection('tasks');
- 
+ export const Tasks = new Mongo.Collection('tasks');
++
 +Meteor.methods({
 +  'tasks.insert'(text) {
 +    check(text, String);
@@ -1426,26 +1418,24 @@ index a9ab038..30194c5 100644
 +    Tasks.update(taskId, { $set: { checked: setChecked } });
 +  },
 +});
-+
- export { Tasks };
 -- 
 2.1.3
 
 
-From 6a9e4a34311cc0949b0d0310884781009287a6ce Mon Sep 17 00:00:00 2001
+From f6f479327894e4d8f1cd559cdb587c93a86acb33 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:31:24 -0700
-Subject: [PATCH 33/46] Step 9.3: Replace insert with addTask method
+Subject: [PATCH 33/48] Step 9.3: Replace insert with addTask method
 
 ---
  imports/ui/body.js | 7 +------
  1 file changed, 1 insertion(+), 6 deletions(-)
 
 diff --git a/imports/ui/body.js b/imports/ui/body.js
-index 15a3c8e..d83eaca 100644
+index 08fad55..988f6a5 100644
 --- a/imports/ui/body.js
 +++ b/imports/ui/body.js
-@@ -40,12 +40,7 @@ Template.body.events({
+@@ -36,12 +36,7 @@ Template.body.events({
      const text = target.text.value;
  
      // Insert a task into the collection
@@ -1463,10 +1453,10 @@ index 15a3c8e..d83eaca 100644
 2.1.3
 
 
-From 22369c263971a1308c0e48503f30f6239cfab59f Mon Sep 17 00:00:00 2001
+From 574d23454196ee22d0ea3bc6cd152b41e37e42cd Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:31:46 -0700
-Subject: [PATCH 34/46] Step 9.4: Replace update and remove with methods
+Subject: [PATCH 34/48] Step 9.4: Replace update and remove with methods
 
 ---
  imports/ui/task.js | 9 +++------
@@ -1501,10 +1491,10 @@ index 782f932..3775ceb 100644
 2.1.3
 
 
-From 7632ca1dc2e711e6b356c75e85398e72eeb7d636 Mon Sep 17 00:00:00 2001
+From d96e7791d8be06e726b02b9a40abdc23630d99e6 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:32:19 -0700
-Subject: [PATCH 35/46] Step 10.1: Remove autopublish
+Subject: [PATCH 35/48] Step 10.1: Remove autopublish
 
 ---
  .meteor/packages | 1 -
@@ -1539,22 +1529,22 @@ index 3d9bd1e..4f59e62 100644
 2.1.3
 
 
-From 1394681f2ba706a654785b75bc4cd21f72725d69 Mon Sep 17 00:00:00 2001
+From 09284b4286add29217f39a59c7b7c63b93d6a74f Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:45:32 +1100
-Subject: [PATCH 36/46] Step 10.2: Add publication for tasks
+Subject: [PATCH 36/48] Step 10.2: Add publication for tasks
 
 ---
  imports/api/tasks.js | 7 +++++++
  1 file changed, 7 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 30194c5..c048739 100644
+index 0201eb4..234a839 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -4,6 +4,13 @@ import { check } from 'meteor/check';
  
- const Tasks = new Mongo.Collection('tasks');
+ export const Tasks = new Mongo.Collection('tasks');
  
 +if (Meteor.isServer) {
 +  // This code only runs on the server
@@ -1570,17 +1560,17 @@ index 30194c5..c048739 100644
 2.1.3
 
 
-From f0d39217e0e172b9dc88fa4c50fa934cf78c9b91 Mon Sep 17 00:00:00 2001
+From cf3557458e16d0477f61cd2cdc5d07adbe225de6 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:45:58 +1100
-Subject: [PATCH 37/46] Step 10.3: Subscribe to tasks
+Subject: [PATCH 37/48] Step 10.3: Subscribe to tasks
 
 ---
  imports/ui/body.js | 1 +
  1 file changed, 1 insertion(+)
 
 diff --git a/imports/ui/body.js b/imports/ui/body.js
-index d83eaca..59e5225 100644
+index 988f6a5..8a4407f 100644
 --- a/imports/ui/body.js
 +++ b/imports/ui/body.js
 @@ -9,6 +9,7 @@ import './body.html';
@@ -1595,10 +1585,10 @@ index d83eaca..59e5225 100644
 2.1.3
 
 
-From 6943418ace2de7446f1254b472114c73d056e954 Mon Sep 17 00:00:00 2001
+From 559e0285e8d2ff713e00997b6f95463433fffa40 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:33:43 -0700
-Subject: [PATCH 38/46] Step 10.4: Add private button
+Subject: [PATCH 38/48] Step 10.4: Add private button
 
 ---
  imports/ui/task.html | 10 ++++++++++
@@ -1629,10 +1619,10 @@ index c42e8fc..b9108ea 100644
 2.1.3
 
 
-From 38e94dd493444eacf0bb3142e9ded86d4afc2455 Mon Sep 17 00:00:00 2001
+From 0518f1f4682540652dfabb104fe9f8274ecab735 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:34:13 -0700
-Subject: [PATCH 39/46] Step 10.5: Add private class to private tasks
+Subject: [PATCH 39/48] Step 10.5: Add private class to private tasks
 
 ---
  imports/ui/task.html | 2 +-
@@ -1653,10 +1643,10 @@ index b9108ea..218789f 100644
 2.1.3
 
 
-From 671d4b124526ed7570f44ef318935cb53108f021 Mon Sep 17 00:00:00 2001
+From 5f5dfb0eda840c8e796e07696e8412385453ead6 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:34:47 -0700
-Subject: [PATCH 40/46] Step 10.6: Define helper to check ownership
+Subject: [PATCH 40/48] Step 10.6: Define helper to check ownership
 
 ---
  imports/ui/task.js | 6 ++++++
@@ -1683,20 +1673,20 @@ index 3775ceb..af4bcf6 100644
 2.1.3
 
 
-From 915efc0ffae6ac361db95a6dfb0e327042d89c3e Mon Sep 17 00:00:00 2001
+From f3a0faebe7b53432e719148d109202a3179e207d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:35:31 -0700
-Subject: [PATCH 41/46] Step 10.7: Define method to set tasks to private
+Subject: [PATCH 41/48] Step 10.7: Define method to set tasks to private
 
 ---
  imports/api/tasks.js | 13 +++++++++++++
  1 file changed, 13 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index c048739..1c3e891 100644
+index 234a839..f1d2c92 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
-@@ -38,6 +38,19 @@ Meteor.methods({
+@@ -38,4 +38,17 @@ Meteor.methods({
  
      Tasks.update(taskId, { $set: { checked: setChecked } });
    },
@@ -1714,16 +1704,14 @@ index c048739..1c3e891 100644
 +    Tasks.update(taskId, { $set: { private: setToPrivate } });
 +  },
  });
- 
- export { Tasks };
 -- 
 2.1.3
 
 
-From 12fc5a9ffcd73fba07a2d954c1e9d90bdd5c8c13 Mon Sep 17 00:00:00 2001
+From e666e1411463ac2e076bd6b966c6ec9c85b504bd Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:35:55 -0700
-Subject: [PATCH 42/46] Step 10.8: Add event handler to call the setPrivate
+Subject: [PATCH 42/48] Step 10.8: Add event handler to call the setPrivate
  method
 
 ---
@@ -1746,10 +1734,10 @@ index af4bcf6..6b51496 100644
 2.1.3
 
 
-From e26fa2b01321672c241a1b168a8fe8f975dcab38 Mon Sep 17 00:00:00 2001
+From 1501ba07e7032887345eddef0fe542bfc8a21283 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:36:38 -0700
-Subject: [PATCH 43/46] Step 10.9: Only publish tasks the user is allowed to
+Subject: [PATCH 43/48] Step 10.9: Only publish tasks the user is allowed to
  see
 
 ---
@@ -1757,10 +1745,10 @@ Subject: [PATCH 43/46] Step 10.9: Only publish tasks the user is allowed to
  1 file changed, 7 insertions(+), 1 deletion(-)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 1c3e891..afbcb81 100644
+index f1d2c92..441feee 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
-@@ -6,8 +6,14 @@ const Tasks = new Mongo.Collection('tasks');
+@@ -6,8 +6,14 @@ export const Tasks = new Mongo.Collection('tasks');
  
  if (Meteor.isServer) {
    // This code only runs on the server
@@ -1780,28 +1768,20 @@ index 1c3e891..afbcb81 100644
 2.1.3
 
 
-From 1214baf6ab1ded4093e239bcd688cb9ed7234f9a Mon Sep 17 00:00:00 2001
+From b47254b75a77b7e17374a0cfefaa2b491db047bf Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:37:36 -0700
-Subject: [PATCH 44/46] Step 10.10: Add some extra security to methods
+Subject: [PATCH 44/48] Step 10.10: Add some extra security to methods
 
 ---
- imports/api/tasks.js | 13 +++++++++++++
- 1 file changed, 13 insertions(+)
+ imports/api/tasks.js | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index afbcb81..222dd81 100644
+index 441feee..9d5b56a 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
-@@ -26,6 +26,7 @@ Meteor.methods({
-       throw new Meteor.Error('not-authorized');
-     }
- 
-+
-     Tasks.insert({
-       text,
-       createdAt: new Date(),
-@@ -36,12 +37,24 @@ Meteor.methods({
+@@ -36,12 +36,24 @@ Meteor.methods({
    'tasks.remove'(taskId) {
      check(taskId, String);
  
@@ -1830,10 +1810,10 @@ index afbcb81..222dd81 100644
 2.1.3
 
 
-From aee10beeee8932f432f25b4f4074238c3c8cab50 Mon Sep 17 00:00:00 2001
+From c9b1dd8bbc52eeebc6ea8d8c80147d11fc3a582d Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:51:38 +1100
-Subject: [PATCH 45/46] Step 11.1: Added practicalmeteor:mocha package
+Subject: [PATCH 45/48] Step 11.1: Added practicalmeteor:mocha package
 
 ---
  .meteor/packages | 1 +
@@ -1885,33 +1865,62 @@ index 4f59e62..a03c196 100644
 2.1.3
 
 
-From cf019568a922750076a3e9b5297bb689231744c6 Mon Sep 17 00:00:00 2001
+From 92f2ca1d2865a5fd196879bb0185fd2edf3c619c Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
-Date: Thu, 17 Mar 2016 12:52:51 +1100
-Subject: [PATCH 46/46] Step 11.2: Added a simple method test
+Date: Fri, 18 Mar 2016 12:36:41 +1100
+Subject: [PATCH 46/48] Step 11.2: Add a scaffold for a method test
 
 ---
- imports/api/tasks.tests.js | 36 ++++++++++++++++++++++++++++++++++++
- 1 file changed, 36 insertions(+)
+ imports/api/tasks.tests.js | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
  create mode 100644 imports/api/tasks.tests.js
 
 diff --git a/imports/api/tasks.tests.js b/imports/api/tasks.tests.js
 new file mode 100644
-index 0000000..212a91d
+index 0000000..05287ba
 --- /dev/null
 +++ b/imports/api/tasks.tests.js
-@@ -0,0 +1,36 @@
+@@ -0,0 +1,12 @@
 +/* eslint-env mocha */
 +
 +import { Meteor } from 'meteor/meteor';
-+import { Random } from 'meteor/random';
-+import { assert } from 'meteor/practicalmeteor:chai';
-+
-+import { Tasks } from './tasks.js';
 +
 +if (Meteor.isServer) {
 +  describe('Tasks', () => {
 +    describe('methods', () => {
++      it('can delete owned task', () => {
++      });
++    });
++  });
++}
+-- 
+2.1.3
+
+
+From cd403a50cacba784de11a7a94e6d55bc884b33fb Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 12:37:45 +1100
+Subject: [PATCH 47/48] Step 11.3: Prepare the database for each test
+
+---
+ imports/api/tasks.tests.js | 16 ++++++++++++++++
+ 1 file changed, 16 insertions(+)
+
+diff --git a/imports/api/tasks.tests.js b/imports/api/tasks.tests.js
+index 05287ba..1359e85 100644
+--- a/imports/api/tasks.tests.js
++++ b/imports/api/tasks.tests.js
+@@ -1,10 +1,26 @@
+ /* eslint-env mocha */
+ 
+ import { Meteor } from 'meteor/meteor';
++import { Random } from 'meteor/random';
++
++import { Tasks } from './tasks.js';
+ 
+ if (Meteor.isServer) {
+   describe('Tasks', () => {
+     describe('methods', () => {
 +      const userId = Random.id();
 +      let taskId;
 +
@@ -1925,18 +1934,53 @@ index 0000000..212a91d
 +        });
 +      });
 +
-+      it('can delete owned task', () => {
+       it('can delete owned task', () => {
+       });
+     });
+-- 
+2.1.3
+
+
+From 9a08b96bae018a4ecb3d23dada624accdb817cb0 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 12:39:33 +1100
+Subject: [PATCH 48/48] Step 11.4: Added test to check delete method
+
+---
+ imports/api/tasks.tests.js | 13 +++++++++++++
+ 1 file changed, 13 insertions(+)
+
+diff --git a/imports/api/tasks.tests.js b/imports/api/tasks.tests.js
+index 1359e85..9b61c5a 100644
+--- a/imports/api/tasks.tests.js
++++ b/imports/api/tasks.tests.js
+@@ -2,6 +2,7 @@
+ 
+ import { Meteor } from 'meteor/meteor';
+ import { Random } from 'meteor/random';
++import { assert } from 'meteor/practicalmeteor:chai';
+ 
+ import { Tasks } from './tasks.js';
+ 
+@@ -22,6 +23,18 @@ if (Meteor.isServer) {
+       });
+ 
+       it('can delete owned task', () => {
++        // Find the internal implementation of the task method so we can
++        // test it in isolation
 +        const deleteTask = Meteor.server.method_handlers['tasks.remove'];
 +
-+        // Call delete task with a faked user context, so the server thinks we have userId
++        // Set up a fake method invocation that looks like what the method expects
 +        const invocation = { userId };
++
++        // Run the method with `this` set to the fake invocation
 +        deleteTask.apply(invocation, [taskId]);
 +
++        // Verify that the method does what we expected
 +        assert.equal(Tasks.find().count(), 0);
-+      });
-+    });
-+  });
-+}
+       });
+     });
+   });
 -- 
 2.1.3
 
diff --git a/repos/blaze b/repos/blaze
index cf01956..9a08b96 160000
--- a/repos/blaze
+++ b/repos/blaze
@@ -1 +1 @@
-Subproject commit cf019568a922750076a3e9b5297bb689231744c6
+Subproject commit 9a08b96bae018a4ecb3d23dada624accdb817cb0
-- 
2.13.6 (Apple Git-96)


From cd21922f33b353c4111298c9bd12eb8383b9fb7c Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 17:51:12 +1100
Subject: [PATCH 106/164] Updated react tutorial

---
 content/angular/step03.md           |    3 +-
 content/blaze/metadata.js           |    2 +-
 content/blaze/step03.md             |    2 +-
 content/react/metadata.js           |    7 +-
 content/react/step01.md             |   33 -
 content/react/step02.md             |   28 +-
 content/react/step03.md             |   19 +-
 content/react/step04.md             |    4 +-
 content/react/step07.md             |    6 +-
 content/react/step08.md             |   16 +-
 content/react/step10.md             |   30 +-
 content/shared/explanations.md      |    4 +-
 content/{blaze => shared}/step01.md |   19 +-
 content/shared/step11.md            |    2 +
 generated/react.multi.patch         | 2252 +++++++++++++++++++++--------------
 package.js                          |    3 +-
 repos/react                         |    2 +-
 17 files changed, 1444 insertions(+), 988 deletions(-)
 delete mode 100644 content/react/step01.md
 rename content/{blaze => shared}/step01.md (61%)

diff --git a/content/angular/step03.md b/content/angular/step03.md
index ca93037..8966389 100644
--- a/content/angular/step03.md
+++ b/content/angular/step03.md
@@ -2,7 +2,8 @@
 
 # Storing tasks in a collection
 
-{{> step03CollectionsIntro}}
+{{! XXX: should be "simple-todos-angular"}}
+{{> step03CollectionsIntro tutorialName="simple-todos"}}
 
 Let's update our JavaScript code to get our tasks from a collection instead of a static array:
 
diff --git a/content/blaze/metadata.js b/content/blaze/metadata.js
index f7d9bcf..b7c55b4 100644
--- a/content/blaze/metadata.js
+++ b/content/blaze/metadata.js
@@ -13,7 +13,7 @@ TutorialRegistry.registerTutorial("blaze", {
     {
       title: 'Creating an app',
       slug: "creating-an-app",
-      template: 'blaze-step01'
+      template: 'sharedStep01'
     },
     {
       title: 'Templates',
diff --git a/content/blaze/step03.md b/content/blaze/step03.md
index e1b5f62..a55219b 100644
--- a/content/blaze/step03.md
+++ b/content/blaze/step03.md
@@ -2,7 +2,7 @@
 
 # Storing tasks in a collection
 
-{{> step03CollectionsIntro}}
+{{> step03CollectionsIntro tutorialName="simple-todos"}}
 
 Let's update our client-side JavaScript code to get our tasks from a collection instead of a static array:
 
diff --git a/content/react/metadata.js b/content/react/metadata.js
index 88a41e0..02a1278 100644
--- a/content/react/metadata.js
+++ b/content/react/metadata.js
@@ -13,7 +13,7 @@ TutorialRegistry.registerTutorial("react", {
     {
       title: "Creating an app",
       slug: "creating-an-app",
-      template: "react-step01"
+      template: "sharedStep01"
     },
     {
       title: 'Components',
@@ -61,6 +61,11 @@ TutorialRegistry.registerTutorial("react", {
       template: 'react-step10'
     },
     {
+      title: 'Testing',
+      slug: "teesting",
+      template: 'sharedStep11'
+    },
+    {
       title: 'Next steps',
       slug: "next-steps",
       template: 'react-step11'
diff --git a/content/react/step01.md b/content/react/step01.md
deleted file mode 100644
index 8365993..0000000
--- a/content/react/step01.md
+++ /dev/null
@@ -1,33 +0,0 @@
-{{#template name="react-step01"}}
-# Creating your first app
-
-In this tutorial, we are going to create a simple app to manage a todo list and collaborate with others on those tasks.
-
-To create the app, open your terminal and type:
-
-```bash
-meteor create simple-todos-react
-```
-
-This will create a new folder called `simple-todos-react` with all of the files that a Meteor app needs:
-
-```bash
-simple-todos-react.js     # a JavaScript file loaded on both client and server
-simple-todos-react.html   # an HTML file that defines view templates
-simple-todos-react.css    # a CSS file to define your app's styles
-.meteor                   # internal Meteor files
-```
-
-To run the newly created app:
-
-```bash
-cd simple-todos-react
-meteor
-```
-
-Open your web browser and go to `http://localhost:3000` to see the app running.
-
-You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `simple-todos-react.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
-
-Now that you have some experience editing the files in your Meteor app, let's start working on a simple React todo list application. If you find a bug or error in the tutorial, please file an issue or submit a pull request [on GitHub](https://github.com/meteor/tutorials).
-{{/template}}
diff --git a/content/react/step02.md b/content/react/step02.md
index fb6c238..c1deb73 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -1,12 +1,12 @@
 {{#template name="react-step02"}}
 # Defining views with React components
 
-To start working with React as our view library, let's add the `react` package, which includes everything you need to get started using React in Meteor: the React library itself, automatic compilation of `.jsx` files, and a `ReactMeteorData` mixin for loading data. We'll see how to use all of these parts in the coming steps.
+To start working with React as our view library, let's add some NPM packages which will allow us to get started with React.
 
 Open a new terminal in the same directory as your running app, and type:
 
 ```sh
-meteor add react
+meteor npm install --save react react-dom
 ```
 
 ### Replace the starter code
@@ -17,7 +17,7 @@ First, replace the content of the initial HTML file:
 
 {{> DiffBox tutorialName="simple-todos-react" step="2.2"}}
 
-Second, **delete `simple-todos-react.js`** and create three new files:
+Second, **delete `main/client.js`** and create three new files:
 
 {{> DiffBox tutorialName="simple-todos-react" step="2.3"}}
 
@@ -29,7 +29,9 @@ We just added three things to our app:
 
 1. An `App` React component
 2. A `Task` React component
-3. Some code wrapped inside `if (Meteor.isClient) { ... }`, which defines code to execute in the browser, and `Meteor.startup`, which knows how to call code when the page is loaded and ready.
+3. Some initialization code (in our `client/main.js` client JavaScript entrypoint), in a `Meteor.startup` block, which knows how to call code when the page is loaded and ready. This code loads the other components and renders them into the `#render-target` html element.
+
+You can read more about how imports work and how to structure your code in the [Application Structure article](http://guide.meteor.com/structure.html) of the Meteor Guide.
 
 Later in the tutorial, we will refer to these components when adding or changing code.
 
@@ -54,27 +56,13 @@ Everything inside &lt;template> tags is compiled into Meteor _templates_, which
 
 ### Define view components with React
 
-In React, view components are classes defined with `React.createClass`. Your component can have any methods you like, but there are several methods such as `render` that have special functions. Components can also receive data from their parents through attributes called `props`. We'll go over some of the more common features of React in this tutorial; you can also check out [Facebook's React tutorial](https://facebook.github.io/react/docs/tutorial.html).
+In React, view components are subclasses of `React.Component` (which we import with `import { Component } from 'react';`). Your component can have any methods you like, but there are several methods such as `render` that have special functions. Components can also receive data from their parents through attributes called `props`. We'll go over some of the more common features of React in this tutorial; you can also check out [Facebook's React tutorial](https://facebook.github.io/react/docs/tutorial.html).
 
 ### Return markup from the render method with JSX
 
 The most important method in every React component is `render()`, which is called by React to get a description of the HTML that this component should display. The HTML content is written using a JavaScript extension called JSX, which kind of looks like writing HTML inside your JavaScript. You can see some obvious differences already: in JSX, you use the `className` attribute instead of `class`. An important thing to know about JSX is that it isn't a templating language like Spacebars or Angular - it actually compiles directly to regular JavaScript. Read more about JSX [in the React docs](https://facebook.github.io/react/docs/jsx-in-depth.html).
 
-### JSX files can use ES2015 features
-
-If you haven't tried next-generation JavaScript features yet, some of the syntax in the code snippet might look weird. This is because `.jsx` files compiled with the `react` package also include support for some commonly used features of ES2015, the next version of JavaScript. Some of these features include:
-
-1. Arrow functions: `(arg) => {return result;}`
-2. Shorthand for methods: `render() { ... }`
-3. `const` and `let` instead of `var`
-
-Read about the features that Meteor supports in the [ecmascript README](https://github.com/meteor/meteor/blob/master/packages/ecmascript/README.md). For more information about ECMAScript 2015, see some of the articles below:
-
-* [Luke Hoban's "ES6 features"](http://git.io/es6features)
-
-* [Kyle Simpson's "You don't know JS: ES6 and beyond"](https://github.com/getify/You-Dont-Know-JS/tree/master/es6%20%26%20beyond)
-
-* [Nikolas C. Zakas "Understanding ECMAScript 6"](https://github.com/nzakas/understandinges6)
+JSX is supported by the `ecmascript` Atmosphere package, which is included in all new Meteor apps by default.
 
 {{> addingCSS cssFileName="simple-todos-react.css"}}
 
diff --git a/content/react/step03.md b/content/react/step03.md
index cdd11dc..72ad42f 100644
--- a/content/react/step03.md
+++ b/content/react/step03.md
@@ -2,17 +2,24 @@
 
 # Storing tasks in a collection
 
-{{> step03CollectionsIntro}}
+{{> step03CollectionsIntro tutorialName="simple-todos-react"}}
 
-Let's add a line of code to define our first collection:
+### Using data from a collection inside a React component
 
-{{> DiffBox step="3.1" tutorialName="simple-todos-react"}}
+To use data from a Meteor collection inside a React component, we can use a Atmosphere package `react-meteor-data` which allows us to create a "data container" to feed Meteor's reactive data into React's component heirarchy.
 
-### Using data from a collection inside a React component
+We need to install that package alongside a NPM package it utilizes, `react-addons-pure-render-mixin`:
+
+```bash
+meteor npm install --save react-addons-pure-render-mixin
+meteor add react-meteor-data
+```
+
+To use `react-meteor-data`, we need to wrap our component in a *container* using the `createContainer` Higher Order Component:
 
-To use data from a Meteor collection inside a React component, include the `ReactMeteorData` mixin in a component. With this mixin in your component, you can define a method called `getMeteorData` which knows how to keep track of changes in data. The object you return from `getMeteorData` can be accessed on `this.data` inside the `render` method. Let's do this now:
+{{> DiffBox step="3.4" tutorialName="simple-todos-react"}}
 
-{{> DiffBox step="3.2" tutorialName="simple-todos-react"}}
+The wrapped `App` component fetches tasks from the `Tasks` collection and supplies them to the underlying `App` component it wraps as the `tasks` prop. It does this in a reactive way, so that when the contents of the database changes, the `App` re-renders, as we'll soon see!
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
diff --git a/content/react/step04.md b/content/react/step04.md
index 433afe2..d9e9075 100644
--- a/content/react/step04.md
+++ b/content/react/step04.md
@@ -20,7 +20,7 @@ Now your app has a new input field. To add a task, just type into the input fiel
 
 ### Listening for events in React
 
-As you can see, in React you handle DOM events by directly referencing a method on the component. Inside the event handler, you can reference elements from the component by giving them a `ref` property and using `React.findDOMNode`. Read more about the different kinds of events React supports, and how the event system works, in the [React docs](https://facebook.github.io/react/docs/events.html).
+As you can see, in React you handle DOM events by directly referencing a method on the component. Inside the event handler, you can reference elements from the component by giving them a `ref` property and using `ReactDOM.findDOMNode`. Read more about the different kinds of events React supports, and how the event system works, in the [React docs](https://facebook.github.io/react/docs/events.html).
 
 ### Inserting into a collection
 
@@ -32,7 +32,7 @@ Being able to insert anything into the database from the client isn't very secur
 
 Currently, our code displays all new tasks at the bottom of the list. That's not very good for a task list, because we want to see the newest tasks first.
 
-We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code. Just add a sort option to the `find` call inside `getMeteorData` on the `App` component:
+We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code. Just add a sort option to the `find` call inside the data container wrapping the `App` component:
 
 {{> DiffBox step="4.3" tutorialName="simple-todos-react"}}
 
diff --git a/content/react/step07.md b/content/react/step07.md
index 1daa917..9610b2b 100644
--- a/content/react/step07.md
+++ b/content/react/step07.md
@@ -8,7 +8,7 @@ First, we need to add a checkbox to our `App` component:
 
 {{> DiffBox step="7.1" tutorialName="simple-todos-react"}}
 
-You can see that it reads from `this.state.hideCompleted`. React components have a special field called `state` where you can store encapsulated component data. We need to define a `getInitialState` method on our component to initialize this field:
+You can see that it reads from `this.state.hideCompleted`. React components have a special field called `state` where you can store encapsulated component data. We'll need to initialize the value of `this.state.hideCompleted` in the component's constructor:
 
 {{> DiffBox step="7.2" tutorialName="simple-todos-react"}}
 
@@ -16,7 +16,7 @@ We can update `this.state` from an event handler by calling `this.setState`, whi
 
 {{> DiffBox step="7.3" tutorialName="simple-todos-react"}}
 
-Now, we need to update `getMeteorData` to filter out completed tasks when `this.state.hideCompleted` is true:
+Now, we need to update our `renderTasks` function to filter out completed tasks when `this.state.hideCompleted` is true:
 
 {{> DiffBox step="7.4" tutorialName="simple-todos-react"}}
 
@@ -24,7 +24,7 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 ### One more feature: Showing a count of incomplete tasks
 
-Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to return a count from `getMeteorData` and add a line to our `render` method. Since we already have the data in the client-side Minimongo collection, adding this extra count doesn't involve asking the server for anything.
+Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to fetch a count in our data container and add a line to our `render` method. Since we already have the data in the client-side Minimongo collection, adding this extra count doesn't involve asking the server for anything.
 
 {{> DiffBox step="7.5" tutorialName="simple-todos-react"}}
 
diff --git a/content/react/step08.md b/content/react/step08.md
index 842c958..75a955c 100644
--- a/content/react/step08.md
+++ b/content/react/step08.md
@@ -26,6 +26,10 @@ Then, add the following code to configure the accounts UI to use usernames inste
 
 {{> DiffBox step="8.4" tutorialName="simple-todos-react"}}
 
+We also need to import that configuration code in our client side entrypoint: 
+
+{{> DiffBox step="8.5" tutorialName="simple-todos-react"}}
+
 ### Adding user-related functionality
 
 Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two features:
@@ -40,19 +44,19 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `handleSubmit` event handler:
 
-{{> DiffBox step="8.5" tutorialName="simple-todos-react"}}
+{{> DiffBox step="8.6" tutorialName="simple-todos-react"}}
 
-Modify the `return` statement on `getMeteorData` to get information about the currently logged in user:
+Modify the data container to get information about the currently logged in user:
 
-{{> DiffBox step="8.6" tutorialName="simple-todos-react"}}
+{{> DiffBox step="8.7" tutorialName="simple-todos-react"}}
 
 Then, in our render method, add a conditional statement to only show the form when there is a logged in user:
 
-{{> DiffBox step="8.7" tutorialName="simple-todos-react"}}
+{{> DiffBox step="8.8" tutorialName="simple-todos-react"}}
 
 Finally, add a statement to display the `username` field on each task right before the text:
 
-{{> DiffBox step="8.8" tutorialName="simple-todos-react"}}
+{{> DiffBox step="8.9" tutorialName="simple-todos-react"}}
 
 In your browser, add some tasks and notice that your username shows up. Old tasks that we added before this step won't have usernames attached; you can just delete them.
 
@@ -64,7 +68,7 @@ If our app has the `accounts-ui` package, all we have to do to add a login dropd
 
 ### Getting information about the logged-in user
 
-In your `getMeteorData` method, you can use `Meteor.user()` to check if a user is logged in and get information about them. For example, `Meteor.user().username` contains the logged in user's username. You can also use `Meteor.userId()` to just get the current user's `_id`.
+In your data container, you can use `Meteor.user()` to check if a user is logged in and get information about them. For example, `Meteor.user().username` contains the logged in user's username. You can also use `Meteor.userId()` to just get the current user's `_id`.
 
 In the next step, we will learn how to make our app more secure by doing data validation on the server.
 {{/template}}
diff --git a/content/react/step10.md b/content/react/step10.md
index 4cc80fe..3ce0628 100644
--- a/content/react/step10.md
+++ b/content/react/step10.md
@@ -12,10 +12,14 @@ meteor remove autopublish
 
 When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and `Meteor.subscribe`.
 
-Let's add them now.
+First lets add a publication for all tasks:
 
 {{> DiffBox step="10.2" tutorialName="simple-todos-react"}}
 
+And then let's subscribe to that publication when the `App` component is created:
+
+{{> DiffBox step="10.3" tutorialName="simple-todos-react"}}
+
 Once you have added this code, all of the tasks will reappear.
 
 Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When `Meteor.subscribe` is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
@@ -26,34 +30,40 @@ Let's add another property to tasks called "private" and a button for users to m
 
 First, we need to add a new method that we can call to set a task's private status:
 
-{{> DiffBox step="10.3" tutorialName="simple-todos-react"}} 
+{{> DiffBox step="10.4" tutorialName="simple-todos-react"}} 
 
 Now, we need to pass a new property to the `Task` to decide whether we want
 to show the private button; the button should show up only if the currently
 logged in user owns this task:
 
-{{> DiffBox step="10.4" tutorialName="simple-todos-react"}}
-
 {{> DiffBox step="10.5" tutorialName="simple-todos-react"}}
 
-Let's add the button, using this new prop to decide whether it should be displayed:
-
 {{> DiffBox step="10.6" tutorialName="simple-todos-react"}}
 
-We need to define the event handler called by the button:
+Let's add the button, using this new prop to decide whether it should be displayed:
 
 {{> DiffBox step="10.7" tutorialName="simple-todos-react"}}
 
-One last thing, let's update the class of the `<li>` element in the `Task` component to reflect it's privacy status:
+We need to define the event handler called by the button:
 
 {{> DiffBox step="10.8" tutorialName="simple-todos-react"}}
 
+One last thing, let's update the class of the `<li>` element in the `Task` component to reflect it's privacy status. We'll use the `classnames` NPM Package for this:
+
+```bash
+meteor npm install --save classnames
+```
+
+Then we'll use that package to choose a class based on the task are rendering:
+
+{{> DiffBox step="10.10" tutorialName="simple-todos-react"}}
+
 ### Selectively publishing tasks based on privacy status
 
 Now that we have a way of setting which tasks are private, we should modify our
 publication function to only send the tasks that a user is authorized to see:
 
-{{> DiffBox step="10.9" tutorialName="simple-todos-react"}}
+{{> DiffBox step="10.11" tutorialName="simple-todos-react"}}
 
 To test that this functionality works, you can use your browser's private browsing mode to log in as a different user. Put the two windows side by side and mark a task private to confirm that the other user can't see it. Now make it public again and it will reappear!
 
@@ -61,7 +71,7 @@ To test that this functionality works, you can use your browser's private browsi
 
 In order to finish up our private task feature, we need to add checks to our `deleteTask` and `setChecked` methods to make sure only the task owner can delete or check off a private task:
 
-{{> DiffBox step="10.10" tutorialName="simple-todos-react"}}
+{{> DiffBox step="10.12" tutorialName="simple-todos-react"}}
 
 > Notice that with this code anyone can delete any public task. With some small modifications to the code, you should be able to make it so that only the owner can delete their tasks.
 
diff --git a/content/shared/explanations.md b/content/shared/explanations.md
index 9c306c0..b92d498 100644
--- a/content/shared/explanations.md
+++ b/content/shared/explanations.md
@@ -8,13 +8,13 @@ Creating a new collection is as easy as calling `MyCollection = new Mongo.Collec
 
 To create the collection, we define a new `todos` module that creates a Mongo collection and exports it:
 
-{{> DiffBox tutorialName="simple-todos" step="3.1"}}
+{{> DiffBox tutorialName=tutorialName step="3.1"}}
 
 Notice that we place this file in a new `imports/api` directory. This is a sensible place to store the API of your application---for now the collections that we'll use, and later the Publications that read from them and the Methods that write to them. You can read more about how to structure your code in the [Application Structure article](http://guide.meteor.com/structure.html) of the Meteor Guide.
 
 We need to import that module on the server (this creates the MongoDB collection and sets up the plumbing to get the data to the client):
 
-{{> DiffBox tutorialName="simple-todos" step="3.2"}}
+{{> DiffBox tutorialName=tutorialName step="3.2"}}
 
 {{/template}}
 
diff --git a/content/blaze/step01.md b/content/shared/step01.md
similarity index 61%
rename from content/blaze/step01.md
rename to content/shared/step01.md
index 8bd0c58..e342bdd 100644
--- a/content/blaze/step01.md
+++ b/content/shared/step01.md
@@ -1,4 +1,5 @@
-{{#template name="blaze-step01"}}
+{{#template name="sharedStep01"}}
+
 # Creating your first app
 
 In this tutorial, we are going to create a simple app to manage a 'to do' list and collaborate with others on those tasks.
@@ -33,5 +34,21 @@ Open your web browser and go to `http://localhost:3000` to see the app running.
 
 You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `client/main.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
 
+### ES2015 JavaScript features
+
+If you haven't tried next-generation JavaScript features yet, some of the syntax in the intial app code, and throughout this tutorial, might look weird. This is Meteor ships by default with support for many features of ES2015, the next version of JavaScript. Some of these features include:
+
+1. Arrow functions: `(arg) => {return result;}`
+2. Shorthand for methods: `render() { ... }`
+3. `const` and `let` instead of `var`
+
+Read about the features that Meteor supports in the [ecmascript docs](https://docs.meteor.com/#/full/ecmascript). For more information about ECMAScript 2015, see some of the articles below:
+
+* [Luke Hoban's "ES6 features"](http://git.io/es6features)
+
+* [Kyle Simpson's "You don't know JS: ES6 and beyond"](https://github.com/getify/You-Dont-Know-JS/tree/master/es6%20%26%20beyond)
+
+* [Nikolas C. Zakas "Understanding ECMAScript 6"](https://github.com/nzakas/understandinges6)
+
 Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application. If you find a bug or error in the tutorial, please file an issue or submit a pull request [on GitHub](https://github.com/meteor/tutorials).
 {{/template}}
diff --git a/content/shared/step11.md b/content/shared/step11.md
index 7edc408..13ace58 100644
--- a/content/shared/step11.md
+++ b/content/shared/step11.md
@@ -37,3 +37,5 @@ Now we can write the test to call the `task.remove` method "as" that user and ve
 There's a lot more you can do in a Meteor test! You can read more about it in the Meteor Guide [article on testing](http://guide.meteor.com/testing.html).
 
 {{/template}}
+
+s
\ No newline at end of file
diff --git a/generated/react.multi.patch b/generated/react.multi.patch
index eaf44eb..a15c163 100644
--- a/generated/react.multi.patch
+++ b/generated/react.multi.patch
@@ -1,20 +1,24 @@
-From d7a5e7f791c6f6659c4767f8bb4afa853d793647 Mon Sep 17 00:00:00 2001
+From d3a12b372dfe330e34f1627e14f92f2b38228402 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:00:51 -0700
-Subject: [PATCH 01/41] Step 1: Run `meteor create`
+Subject: [PATCH 01/50] Step 1: Run `meteor create`
 
 ---
- .meteor/.finished-upgraders |  8 ++++++++
+ .gitignore                  |  1 +
+ .meteor/.finished-upgraders | 13 +++++++++
  .meteor/.gitignore          |  1 +
- .meteor/.id                 |  7 +++++++
- .meteor/packages            |  9 +++++++++
+ .meteor/.id                 |  7 +++++
+ .meteor/packages            | 21 ++++++++++++++
  .meteor/platforms           |  2 ++
  .meteor/release             |  1 +
- .meteor/versions            | 48 +++++++++++++++++++++++++++++++++++++++++++++
- simple-todos-react.css      |  1 +
- simple-todos-react.html     | 14 +++++++++++++
- simple-todos-react.js       | 23 ++++++++++++++++++++++
- 10 files changed, 114 insertions(+)
+ .meteor/versions            | 69 +++++++++++++++++++++++++++++++++++++++++++++
+ client/main.css             |  1 +
+ client/main.html            | 25 ++++++++++++++++
+ client/main.js              | 22 +++++++++++++++
+ package.json                | 10 +++++++
+ server/main.js              |  5 ++++
+ 13 files changed, 178 insertions(+)
+ create mode 100644 .gitignore
  create mode 100644 .meteor/.finished-upgraders
  create mode 100644 .meteor/.gitignore
  create mode 100644 .meteor/.id
@@ -22,16 +26,25 @@ Subject: [PATCH 01/41] Step 1: Run `meteor create`
  create mode 100644 .meteor/platforms
  create mode 100644 .meteor/release
  create mode 100644 .meteor/versions
- create mode 100644 simple-todos-react.css
- create mode 100644 simple-todos-react.html
- create mode 100644 simple-todos-react.js
+ create mode 100644 client/main.css
+ create mode 100644 client/main.html
+ create mode 100644 client/main.js
+ create mode 100644 package.json
+ create mode 100644 server/main.js
 
+diff --git a/.gitignore b/.gitignore
+new file mode 100644
+index 0000000..c2658d7
+--- /dev/null
++++ b/.gitignore
+@@ -0,0 +1 @@
++node_modules/
 diff --git a/.meteor/.finished-upgraders b/.meteor/.finished-upgraders
 new file mode 100644
-index 0000000..8a76103
+index 0000000..dacc2c0
 --- /dev/null
 +++ b/.meteor/.finished-upgraders
-@@ -0,0 +1,8 @@
+@@ -0,0 +1,13 @@
 +# This file contains information which helps Meteor properly upgrade your
 +# app when you run 'meteor update'. You should check it into version control
 +# with your project.
@@ -40,6 +53,11 @@ index 0000000..8a76103
 +notices-for-0.9.1
 +0.9.4-platform-file
 +notices-for-facebook-graph-api-2
++1.2.0-standard-minifiers-package
++1.2.0-meteor-platform-split
++1.2.0-cordova-changes
++1.2.0-breaking-changes
++1.3.0-split-minifiers-package
 diff --git a/.meteor/.gitignore b/.meteor/.gitignore
 new file mode 100644
 index 0000000..4083037
@@ -49,7 +67,7 @@ index 0000000..4083037
 +local
 diff --git a/.meteor/.id b/.meteor/.id
 new file mode 100644
-index 0000000..3bab3ba
+index 0000000..9a3be4f
 --- /dev/null
 +++ b/.meteor/.id
 @@ -0,0 +1,7 @@
@@ -59,22 +77,34 @@ index 0000000..3bab3ba
 +#   - ensuring you don't accidentally deploy one app on top of another
 +#   - providing package authors with aggregated statistics
 +
-+ucqipf8prm38bs7dxj
++1v2pn7n1jbklfu1hg4tnm
 diff --git a/.meteor/packages b/.meteor/packages
 new file mode 100644
-index 0000000..99704e0
+index 0000000..d4c8001
 --- /dev/null
 +++ b/.meteor/packages
-@@ -0,0 +1,9 @@
+@@ -0,0 +1,21 @@
 +# Meteor packages used by this project, one per line.
 +# Check this file (and the other files in this directory) into your repository.
 +#
 +# 'meteor add' and 'meteor remove' will edit this file for you,
 +# but you can also edit it by hand.
 +
-+meteor-platform
-+autopublish
-+insecure
++meteor-base             # Packages every Meteor app needs to have
++mobile-experience       # Packages for a great mobile UX
++mongo                   # The database Meteor supports right now
++blaze-html-templates    # Compile .html files into Meteor Blaze views
++reactive-var            # Reactive variable for tracker
++jquery                  # Helpful client-side library
++tracker                 # Meteor's client-side reactive programming library
++
++standard-minifier-css   # CSS minifier run for production mode
++standard-minifier-js    # JS minifier run for production mode
++es5-shim                # ECMAScript 5 compatibility for older browsers.
++ecmascript              # Enable ECMAScript2015+ syntax in app code
++
++autopublish             # Publish all data to the clients (for prototyping)
++insecure                # Allow all DB writes from clients (for prototyping)
 diff --git a/.meteor/platforms b/.meteor/platforms
 new file mode 100644
 index 0000000..efeba1b
@@ -85,205 +115,226 @@ index 0000000..efeba1b
 +browser
 diff --git a/.meteor/release b/.meteor/release
 new file mode 100644
-index 0000000..dab6b55
+index 0000000..ab70657
 --- /dev/null
 +++ b/.meteor/release
 @@ -0,0 +1 @@
-+METEOR@1.1.0.2
++METEOR@1.3-rc.2
 diff --git a/.meteor/versions b/.meteor/versions
 new file mode 100644
-index 0000000..410e1d9
+index 0000000..c3395d2
 --- /dev/null
 +++ b/.meteor/versions
-@@ -0,0 +1,48 @@
-+autopublish@1.0.3
-+autoupdate@1.2.1
-+base64@1.0.3
-+binary-heap@1.0.3
-+blaze@2.1.2
-+blaze-tools@1.0.3
-+boilerplate-generator@1.0.3
-+callback-hook@1.0.3
-+check@1.0.5
-+ddp@1.1.0
-+deps@1.0.7
-+ejson@1.0.6
-+fastclick@1.0.3
-+geojson-utils@1.0.3
-+html-tools@1.0.4
-+htmljs@1.0.4
-+http@1.1.0
-+id-map@1.0.3
-+insecure@1.0.3
-+jquery@1.11.3_2
-+json@1.0.3
-+launch-screen@1.0.2
-+livedata@1.0.13
-+logging@1.0.7
-+meteor@1.1.6
-+meteor-platform@1.2.2
-+minifiers@1.1.5
-+minimongo@1.0.8
-+mobile-status-bar@1.0.3
-+mongo@1.1.0
-+observe-sequence@1.0.6
-+ordered-dict@1.0.3
-+random@1.0.3
-+reactive-dict@1.1.0
-+reactive-var@1.0.5
-+reload@1.1.3
-+retry@1.0.3
-+routepolicy@1.0.5
-+session@1.1.0
-+spacebars@1.0.6
-+spacebars-compiler@1.0.6
-+templating@1.1.1
-+tracker@1.0.7
-+ui@1.0.6
-+underscore@1.0.3
-+url@1.0.4
-+webapp@1.2.0
-+webapp-hashing@1.0.3
-diff --git a/simple-todos-react.css b/simple-todos-react.css
+@@ -0,0 +1,69 @@
++allow-deny@1.0.2-rc.2
++autopublish@1.0.5-rc.2
++autoupdate@1.2.6-rc.2
++babel-compiler@6.5.1-rc.2
++babel-runtime@0.1.6-rc.2
++base64@1.0.6-rc.2
++binary-heap@1.0.6-rc.2
++blaze@2.1.5-rc.2
++blaze-html-templates@1.0.2-rc.2
++blaze-tools@1.0.6-rc.2
++boilerplate-generator@1.0.6-rc.2
++caching-compiler@1.0.2-rc.2
++caching-html-compiler@1.0.4-rc.2
++callback-hook@1.0.6-rc.2
++check@1.1.2-rc.2
++ddp@1.2.3-rc.2
++ddp-client@1.2.3-rc.2
++ddp-common@1.2.3-rc.2
++ddp-server@1.2.4-rc.2
++deps@1.0.10-rc.2
++diff-sequence@1.0.3-rc.2
++ecmascript@0.4.1-rc.2
++ecmascript-runtime@0.2.8-rc.2
++ejson@1.0.9-rc.2
++es5-shim@4.5.8-rc.2
++fastclick@1.0.9-rc.2
++geojson-utils@1.0.6-rc.2
++hot-code-push@1.0.2-rc.2
++html-tools@1.0.7-rc.2
++htmljs@1.0.7-rc.2
++http@1.1.3-rc.2
++id-map@1.0.5-rc.2
++insecure@1.0.5-rc.2
++jquery@1.11.6-rc.2
++launch-screen@1.0.7-rc.2
++livedata@1.0.16-rc.2
++logging@1.0.10-rc.2
++meteor@1.1.12-rc.2
++meteor-base@1.0.2-rc.2
++minifier-css@1.1.9-rc.2
++minifier-js@1.1.9-rc.2
++minimongo@1.0.12-rc.2
++mobile-experience@1.0.2-rc.2
++mobile-status-bar@1.0.9-rc.2
++modules@0.5.1-rc.2
++modules-runtime@0.6.1-rc.2
++mongo@1.1.5-rc.2
++mongo-id@1.0.2-rc.2
++npm-mongo@1.4.41-rc.2
++observe-sequence@1.0.9-rc.2
++ordered-dict@1.0.5-rc.2
++promise@0.6.4-rc.2
++random@1.0.7-rc.2
++reactive-var@1.0.7-rc.2
++reload@1.1.6-rc.2
++retry@1.0.5-rc.2
++routepolicy@1.0.8-rc.2
++spacebars@1.0.9-rc.2
++spacebars-compiler@1.0.9-rc.2
++standard-minifier-css@1.0.4-rc.2
++standard-minifier-js@1.0.4-rc.2
++templating@1.1.7-rc.2
++templating-tools@1.0.2-rc.2
++tracker@1.0.11-rc.2
++ui@1.0.9-rc.2
++underscore@1.0.6-rc.2
++url@1.0.7-rc.2
++webapp@1.2.6-rc.2
++webapp-hashing@1.0.7-rc.2
+diff --git a/client/main.css b/client/main.css
 new file mode 100644
 index 0000000..b6b4052
 --- /dev/null
-+++ b/simple-todos-react.css
++++ b/client/main.css
 @@ -0,0 +1 @@
 +/* CSS declarations go here */
-diff --git a/simple-todos-react.html b/simple-todos-react.html
+diff --git a/client/main.html b/client/main.html
 new file mode 100644
-index 0000000..e296a58
+index 0000000..6fe0dc5
 --- /dev/null
-+++ b/simple-todos-react.html
-@@ -0,0 +1,14 @@
++++ b/client/main.html
+@@ -0,0 +1,25 @@
 +<head>
-+  <title>simple-todos-react</title>
++  <title>simple</title>
 +</head>
 +
 +<body>
 +  <h1>Welcome to Meteor!</h1>
 +
 +  {{> hello}}
++  {{> info}}
 +</body>
 +
 +<template name="hello">
 +  <button>Click Me</button>
 +  <p>You've pressed the button {{counter}} times.</p>
 +</template>
-diff --git a/simple-todos-react.js b/simple-todos-react.js
++
++<template name="info">
++  <h2>Learn Meteor!</h2>
++  <ul>
++    <li><a href="https://www.meteor.com/try">Do the Tutorial</a></li>
++    <li><a href="http://guide.meteor.com">Follow the Guide</a></li>
++    <li><a href="https://docs.meteor.com">Read the Docs</a></li>
++    <li><a href="https://forums.meteor.com">Discussions</a></li>
++  </ul>
++</template>
+diff --git a/client/main.js b/client/main.js
 new file mode 100644
-index 0000000..4f8c65d
+index 0000000..ecb3282
 --- /dev/null
-+++ b/simple-todos-react.js
-@@ -0,0 +1,23 @@
-+if (Meteor.isClient) {
++++ b/client/main.js
+@@ -0,0 +1,22 @@
++import { Template } from 'meteor/templating';
++import { ReactiveVar } from 'meteor/reactive-var';
++
++import './main.html';
++
++Template.hello.onCreated(function helloOnCreated() {
 +  // counter starts at 0
-+  Session.setDefault('counter', 0);
++  this.counter = new ReactiveVar(0);
++});
 +
-+  Template.hello.helpers({
-+    counter: function () {
-+      return Session.get('counter');
-+    }
-+  });
++Template.hello.helpers({
++  counter() {
++    return Template.instance().counter.get();
++  },
++});
 +
-+  Template.hello.events({
-+    'click button': function () {
-+      // increment the counter when button is clicked
-+      Session.set('counter', Session.get('counter') + 1);
-+    }
-+  });
++Template.hello.events({
++  'click button'(event, instance) {
++    // increment the counter when button is clicked
++    instance.counter.set(instance.counter.get() + 1);
++  },
++});
+diff --git a/package.json b/package.json
+new file mode 100644
+index 0000000..4164b14
+--- /dev/null
++++ b/package.json
+@@ -0,0 +1,10 @@
++{
++  "name": "simple-todos",
++  "private": true,
++  "scripts": {
++    "start": "meteor run"
++  },
++  "dependencies": {
++    "meteor-node-stubs": "~0.2.0"
++  }
 +}
+diff --git a/server/main.js b/server/main.js
+new file mode 100644
+index 0000000..31a9e0e
+--- /dev/null
++++ b/server/main.js
+@@ -0,0 +1,5 @@
++import { Meteor } from 'meteor/meteor';
 +
-+if (Meteor.isServer) {
-+  Meteor.startup(function () {
-+    // code to run on server at startup
-+  });
-+}
++Meteor.startup(() => {
++  // code to run on server at startup
++});
 -- 
-2.6.3
+2.1.3
 
 
-From 96bd5130dbd707aa497a0effa85cb7316cd7d560 Mon Sep 17 00:00:00 2001
+From 6fa59132fa2b03127c5f57f4e3ccfdf2ff8a79a8 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:02:01 -0700
-Subject: [PATCH 02/41] Step 2.1: Add the React package
+Subject: [PATCH 02/50] Step 2.1: Add the React NPM packages
 
 ---
- .meteor/packages |  1 +
- .meteor/versions | 10 ++++++++++
- 2 files changed, 11 insertions(+)
+ package.json | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
 
-diff --git a/.meteor/packages b/.meteor/packages
-index 99704e0..10cd8b0 100644
---- a/.meteor/packages
-+++ b/.meteor/packages
-@@ -7,3 +7,4 @@
- meteor-platform
- autopublish
- insecure
-+react
-diff --git a/.meteor/versions b/.meteor/versions
-index 410e1d9..288ee5f 100644
---- a/.meteor/versions
-+++ b/.meteor/versions
-@@ -1,5 +1,7 @@
- autopublish@1.0.3
- autoupdate@1.2.1
-+babel-compiler@5.6.15
-+babel-runtime@0.1.1
- base64@1.0.3
- binary-heap@1.0.3
- blaze@2.1.2
-@@ -7,6 +9,8 @@ blaze-tools@1.0.3
- boilerplate-generator@1.0.3
- callback-hook@1.0.3
- check@1.0.5
-+coffeescript@1.0.6
-+cosmos:browserify@0.4.0
- ddp@1.1.0
- deps@1.0.7
- ejson@1.0.6
-@@ -19,6 +23,7 @@ id-map@1.0.3
- insecure@1.0.3
- jquery@1.11.3_2
- json@1.0.3
-+jsx@0.1.1
- launch-screen@1.0.2
- livedata@1.0.13
- logging@1.0.7
-@@ -31,6 +36,11 @@ mongo@1.1.0
- observe-sequence@1.0.6
- ordered-dict@1.0.3
- random@1.0.3
-+react@0.1.2
-+react-meteor-data@0.1.0
-+react-runtime@0.13.3_2
-+react-runtime-dev@0.13.3_2
-+react-runtime-prod@0.13.3_1
- reactive-dict@1.1.0
- reactive-var@1.0.5
- reload@1.1.3
+diff --git a/package.json b/package.json
+index 4164b14..9cb9d8e 100644
+--- a/package.json
++++ b/package.json
+@@ -5,6 +5,8 @@
+     "start": "meteor run"
+   },
+   "dependencies": {
+-    "meteor-node-stubs": "~0.2.0"
++    "meteor-node-stubs": "~0.2.0",
++    "react": "^0.14.7",
++    "react-dom": "^0.14.7"
+   }
+ }
 -- 
-2.6.3
+2.1.3
 
 
-From 3cec511c67cb3b78b43329d12b55da7efb2a107e Mon Sep 17 00:00:00 2001
+From 4b2bbac70a870bd6ea8895e831fcfdb8cb7a6943 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:03:54 -0700
-Subject: [PATCH 03/41] Step 2.2: Replace starter HTML code
+Subject: [PATCH 03/50] Step 2.2: Replace starter HTML code
 
 ---
- simple-todos-react.html | 11 ++---------
- 1 file changed, 2 insertions(+), 9 deletions(-)
-
-diff --git a/simple-todos-react.html b/simple-todos-react.html
-index e296a58..1aae2d4 100644
---- a/simple-todos-react.html
-+++ b/simple-todos-react.html
-@@ -1,14 +1,7 @@
+ client/main.html | 22 ++--------------------
+ 1 file changed, 2 insertions(+), 20 deletions(-)
+
+diff --git a/client/main.html b/client/main.html
+index 6fe0dc5..1aae2d4 100644
+--- a/client/main.html
++++ b/client/main.html
+@@ -1,25 +1,7 @@
  <head>
--  <title>simple-todos-react</title>
+-  <title>simple</title>
 +  <title>Todo List</title>
  </head>
  
@@ -291,6 +342,7 @@ index e296a58..1aae2d4 100644
 -  <h1>Welcome to Meteor!</h1>
 -
 -  {{> hello}}
+-  {{> info}}
 +  <div id="render-target"></div>
  </body>
 -
@@ -298,100 +350,114 @@ index e296a58..1aae2d4 100644
 -  <button>Click Me</button>
 -  <p>You've pressed the button {{counter}} times.</p>
 -</template>
+-
+-<template name="info">
+-  <h2>Learn Meteor!</h2>
+-  <ul>
+-    <li><a href="https://www.meteor.com/try">Do the Tutorial</a></li>
+-    <li><a href="http://guide.meteor.com">Follow the Guide</a></li>
+-    <li><a href="https://docs.meteor.com">Read the Docs</a></li>
+-    <li><a href="https://forums.meteor.com">Discussions</a></li>
+-  </ul>
+-</template>
 -- 
-2.6.3
+2.1.3
 
 
-From 36c59c642fc6a7b48ebe0378c5f75488854479c7 Mon Sep 17 00:00:00 2001
+From 7c8ec26337c4fff0ba049c8230b81835371c6af7 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:05:08 -0700
-Subject: [PATCH 04/41] Step 2.3: Replace starter JS
+Subject: [PATCH 04/50] Step 2.3: Replace starter JS
 
 ---
- simple-todos-react.js  | 23 -----------------------
- simple-todos-react.jsx |  8 ++++++++
- 2 files changed, 8 insertions(+), 23 deletions(-)
- delete mode 100644 simple-todos-react.js
- create mode 100644 simple-todos-react.jsx
+ client/main.js  | 22 ----------------------
+ client/main.jsx |  9 +++++++++
+ 2 files changed, 9 insertions(+), 22 deletions(-)
+ delete mode 100644 client/main.js
+ create mode 100644 client/main.jsx
 
-diff --git a/simple-todos-react.js b/simple-todos-react.js
+diff --git a/client/main.js b/client/main.js
 deleted file mode 100644
-index 4f8c65d..0000000
---- a/simple-todos-react.js
+index ecb3282..0000000
+--- a/client/main.js
 +++ /dev/null
-@@ -1,23 +0,0 @@
--if (Meteor.isClient) {
--  // counter starts at 0
--  Session.setDefault('counter', 0);
+@@ -1,22 +0,0 @@
+-import { Template } from 'meteor/templating';
+-import { ReactiveVar } from 'meteor/reactive-var';
+-
+-import './main.html';
 -
--  Template.hello.helpers({
--    counter: function () {
--      return Session.get('counter');
--    }
--  });
+-Template.hello.onCreated(function helloOnCreated() {
+-  // counter starts at 0
+-  this.counter = new ReactiveVar(0);
+-});
 -
--  Template.hello.events({
--    'click button': function () {
--      // increment the counter when button is clicked
--      Session.set('counter', Session.get('counter') + 1);
--    }
--  });
--}
+-Template.hello.helpers({
+-  counter() {
+-    return Template.instance().counter.get();
+-  },
+-});
 -
--if (Meteor.isServer) {
--  Meteor.startup(function () {
--    // code to run on server at startup
--  });
--}
-diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
+-Template.hello.events({
+-  'click button'(event, instance) {
+-    // increment the counter when button is clicked
+-    instance.counter.set(instance.counter.get() + 1);
+-  },
+-});
+diff --git a/client/main.jsx b/client/main.jsx
 new file mode 100644
-index 0000000..a7e2d2f
+index 0000000..9ba3d08
 --- /dev/null
-+++ b/simple-todos-react.jsx
-@@ -0,0 +1,8 @@
-+if (Meteor.isClient) {
-+  // This code is executed on the client only
-+
-+  Meteor.startup(function () {
-+    // Use Meteor.startup to render the component after the page is ready
-+    React.render(<App />, document.getElementById("render-target"));
-+  });
-+}
++++ b/client/main.jsx
+@@ -0,0 +1,9 @@
++import React from 'react';
++import { Meteor } from 'meteor/meteor';
++import { render } from 'react-dom';
++
++import App from '../imports/ui/App.jsx';
++
++Meteor.startup(() => {
++  render(<App />, document.getElementById('render-target'));
++});
 -- 
-2.6.3
+2.1.3
 
 
-From 1b8a7577860c7d9f0f0afa6996cf8fa6fe92d3ec Mon Sep 17 00:00:00 2001
+From ccf6c7a8a47ee9899d60d1b2b82eb2de32c89513 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:05:58 -0700
-Subject: [PATCH 05/41] Step 2.4: Create App component
+Subject: [PATCH 05/50] Step 2.4: Create App component
 
 ---
- App.jsx | 30 ++++++++++++++++++++++++++++++
- 1 file changed, 30 insertions(+)
- create mode 100644 App.jsx
+ imports/ui/App.jsx | 34 ++++++++++++++++++++++++++++++++++
+ 1 file changed, 34 insertions(+)
+ create mode 100644 imports/ui/App.jsx
 
-diff --git a/App.jsx b/App.jsx
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
 new file mode 100644
-index 0000000..27ac66e
+index 0000000..0f8372d
 --- /dev/null
-+++ b/App.jsx
-@@ -0,0 +1,30 @@
++++ b/imports/ui/App.jsx
+@@ -0,0 +1,34 @@
++import React, { Component } from 'react';
++
++import Task from './Task.jsx';
++
 +// App component - represents the whole app
-+App = React.createClass({
++export default class App extends Component {
 +  getTasks() {
 +    return [
-+      { _id: 1, text: "This is task 1" },
-+      { _id: 2, text: "This is task 2" },
-+      { _id: 3, text: "This is task 3" }
++      { _id: 1, text: 'This is task 1' },
++      { _id: 2, text: 'This is task 2' },
++      { _id: 3, text: 'This is task 3' },
 +    ];
-+  },
++  }
 +
 +  renderTasks() {
-+    return this.getTasks().map((task) => {
-+      return <Task key={task._id} task={task} />;
-+    });
-+  },
++    return this.getTasks().map((task) => (
++      <Task key={task._id} task={task} />
++    ));
++  }
 +
 +  render() {
 +    return (
@@ -406,57 +472,60 @@ index 0000000..27ac66e
 +      </div>
 +    );
 +  }
-+});
++}
 -- 
-2.6.3
+2.1.3
 
 
-From c676d9f668e3adb9c4f214bdafaa8f388d63678b Mon Sep 17 00:00:00 2001
+From ef2c0f0e13af648e784f0c96fe573d923009f919 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:06:31 -0700
-Subject: [PATCH 06/41] Step 2.5: Create Task component
+Subject: [PATCH 06/50] Step 2.5: Create Task component
 
 ---
- Task.jsx | 13 +++++++++++++
- 1 file changed, 13 insertions(+)
- create mode 100644 Task.jsx
+ imports/ui/Task.jsx | 16 ++++++++++++++++
+ 1 file changed, 16 insertions(+)
+ create mode 100644 imports/ui/Task.jsx
 
-diff --git a/Task.jsx b/Task.jsx
+diff --git a/imports/ui/Task.jsx b/imports/ui/Task.jsx
 new file mode 100644
-index 0000000..c49e7ac
+index 0000000..a5000e0
 --- /dev/null
-+++ b/Task.jsx
-@@ -0,0 +1,13 @@
++++ b/imports/ui/Task.jsx
+@@ -0,0 +1,16 @@
++import React, { Component, PropTypes } from 'react';
++
 +// Task component - represents a single todo item
-+Task = React.createClass({
-+  propTypes: {
-+    // This component gets the task to display through a React prop.
-+    // We can use propTypes to indicate it is required
-+    task: React.PropTypes.object.isRequired
-+  },
++export default class Task extends Component {
 +  render() {
 +    return (
 +      <li>{this.props.task.text}</li>
 +    );
 +  }
-+});
++}
++
++Task.propTypes = {
++  // This component gets the task to display through a React prop.
++  // We can use propTypes to indicate it is required
++  task: PropTypes.object.isRequired,
++};
 -- 
-2.6.3
+2.1.3
 
 
-From ec0e0aee25ff51d8f3096ea446537113aded6ab3 Mon Sep 17 00:00:00 2001
+From 352a5bef57a9720dc5804d40413ea9e8b4e5aa17 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:07:02 -0700
-Subject: [PATCH 07/41] Step 2.6: Add CSS
+Subject: [PATCH 07/50] Step 2.6: Add CSS
 
 ---
- simple-todos-react.css | 125 +++++++++++++++++++++++++++++++++++++++++++++++++
+ client/main.css | 125 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  1 file changed, 125 insertions(+)
 
-diff --git a/simple-todos-react.css b/simple-todos-react.css
+diff --git a/client/main.css b/client/main.css
 index b6b4052..cec3ae6 100644
---- a/simple-todos-react.css
-+++ b/simple-todos-react.css
+--- a/client/main.css
++++ b/client/main.css
 @@ -1 +1,126 @@
  /* CSS declarations go here */
 +body {
@@ -586,693 +655,843 @@ index b6b4052..cec3ae6 100644
 +}
 \ No newline at end of file
 -- 
-2.6.3
+2.1.3
 
 
-From b21327904ff8de4d51618d88edc6aabb39060c65 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Mon, 13 Jul 2015 12:08:08 -0700
-Subject: [PATCH 08/41] Step 3.1: Define tasks collection
+From 499984e377212fb7e7f3286baf5501c72a5bf3dc Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 15:32:35 +1100
+Subject: [PATCH 08/50] Step 3.1: Create tasks collection
 
 ---
- simple-todos-react.jsx | 3 +++
+ imports/api/tasks.js | 3 +++
  1 file changed, 3 insertions(+)
+ create mode 100644 imports/api/tasks.js
 
-diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
-index a7e2d2f..a67b030 100644
---- a/simple-todos-react.jsx
-+++ b/simple-todos-react.jsx
-@@ -1,3 +1,6 @@
-+// Define a collection to hold our tasks
-+Tasks = new Mongo.Collection("tasks");
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+new file mode 100644
+index 0000000..3bed819
+--- /dev/null
++++ b/imports/api/tasks.js
+@@ -0,0 +1,3 @@
++import { Mongo } from 'meteor/mongo';
 +
- if (Meteor.isClient) {
-   // This code is executed on the client only
++export const Tasks = new Mongo.Collection('tasks');
+-- 
+2.1.3
+
+
+From ba41388b46796c004c22eb6de08abec1a4a09866 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 15:33:03 +1100
+Subject: [PATCH 09/50] Step 3.2: Load tasks collection on the server
+
+---
+ server/main.js | 6 +-----
+ 1 file changed, 1 insertion(+), 5 deletions(-)
+
+diff --git a/server/main.js b/server/main.js
+index 31a9e0e..ab941a4 100644
+--- a/server/main.js
++++ b/server/main.js
+@@ -1,5 +1 @@
+-import { Meteor } from 'meteor/meteor';
+-
+-Meteor.startup(() => {
+-  // code to run on server at startup
+-});
++import '../imports/api/tasks.js';
+-- 
+2.1.3
+
+
+From 84125e02c702cbb06498241bfc6d8d8158018bcc Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 15:37:12 +1100
+Subject: [PATCH 10/50] Step 3.3: Add react-meteor-data package
+
+---
+ .meteor/packages | 1 +
+ .meteor/versions | 1 +
+ package.json     | 1 +
+ 3 files changed, 3 insertions(+)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index d4c8001..c3506d5 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -19,3 +19,4 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
  
+ autopublish             # Publish all data to the clients (for prototyping)
+ insecure                # Allow all DB writes from clients (for prototyping)
++react-meteor-data@0.2.6-beta.16
+diff --git a/.meteor/versions b/.meteor/versions
+index c3395d2..c4bc9da 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -51,6 +51,7 @@ observe-sequence@1.0.9-rc.2
+ ordered-dict@1.0.5-rc.2
+ promise@0.6.4-rc.2
+ random@1.0.7-rc.2
++react-meteor-data@0.2.6-beta.16
+ reactive-var@1.0.7-rc.2
+ reload@1.1.6-rc.2
+ retry@1.0.5-rc.2
+diff --git a/package.json b/package.json
+index 9cb9d8e..fb213f3 100644
+--- a/package.json
++++ b/package.json
+@@ -7,6 +7,7 @@
+   "dependencies": {
+     "meteor-node-stubs": "~0.2.0",
+     "react": "^0.14.7",
++    "react-addons-pure-render-mixin": "^0.14.7",
+     "react-dom": "^0.14.7"
+   }
+ }
 -- 
-2.6.3
+2.1.3
 
 
-From ce86ff010f94a8a1cc2c8e6f9331df080565682b Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Mon, 13 Jul 2015 12:08:44 -0700
-Subject: [PATCH 09/41] Step 3.2: Modify App component to get tasks from
+From 3dda5b4d90f44b15eb5fd0c270e6e2cc8d01141a Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 15:37:54 +1100
+Subject: [PATCH 11/50] Step 3.4: Modify App component to get tasks from
  collection
 
 ---
- App.jsx | 18 +++++++++++-------
- 1 file changed, 11 insertions(+), 7 deletions(-)
-
-diff --git a/App.jsx b/App.jsx
-index 27ac66e..60f1400 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -1,15 +1,19 @@
+ imports/ui/App.jsx | 27 ++++++++++++++++-----------
+ 1 file changed, 16 insertions(+), 11 deletions(-)
+
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 0f8372d..8f1bf8b 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -1,19 +1,14 @@
+-import React, { Component } from 'react';
++import React, { Component, PropTypes } from 'react';
++import { createContainer } from 'meteor/react-meteor-data';
++
++import { Tasks } from '../api/tasks.js';
+ 
+ import Task from './Task.jsx';
+ 
  // App component - represents the whole app
- App = React.createClass({
+-export default class App extends Component {
 -  getTasks() {
 -    return [
--      { _id: 1, text: "This is task 1" },
--      { _id: 2, text: "This is task 2" },
--      { _id: 3, text: "This is task 3" }
+-      { _id: 1, text: 'This is task 1' },
+-      { _id: 2, text: 'This is task 2' },
+-      { _id: 3, text: 'This is task 3' },
 -    ];
+-  }
+-
++class App extends Component {
+   renderTasks() {
+-    return this.getTasks().map((task) => (
++    return this.props.tasks.map((task) => (
+       <Task key={task._id} task={task} />
+     ));
+   }
+@@ -32,3 +27,13 @@ export default class App extends Component {
+     );
+   }
+ }
 +
-+  // This mixin makes the getMeteorData method work
-+  mixins: [ReactMeteorData],
++App.propTypes = {
++  tasks: PropTypes.array.isRequired,
++};
 +
-+  // Loads items from the Tasks collection and puts them on this.data.tasks
-+  getMeteorData() {
-+    return {
-+      tasks: Tasks.find({}).fetch()
-+    }
-   },
- 
-   renderTasks() {
--    return this.getTasks().map((task) => {
-+    // Get tasks from this.data.tasks
-+    return this.data.tasks.map((task) => {
-       return <Task key={task._id} task={task} />;
-     });
-   },
++export default createContainer(() => {
++  return {
++    tasks: Tasks.find({}).fetch(),
++  };
++}, App);
 -- 
-2.6.3
+2.1.3
 
 
-From 8a0525ce1e84b872ca35743b7101f14ec627b41f Mon Sep 17 00:00:00 2001
+From b595a90b125e15632f84bbe16f7d46e1682418a0 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:13:37 -0700
-Subject: [PATCH 10/41] Step 4.1: Add form for new tasks
+Subject: [PATCH 12/50] Step 4.1: Add form for new tasks
 
 ---
- App.jsx | 7 +++++++
- 1 file changed, 7 insertions(+)
+ imports/ui/App.jsx | 8 ++++++++
+ 1 file changed, 8 insertions(+)
 
-diff --git a/App.jsx b/App.jsx
-index 60f1400..7b798bb 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -23,6 +23,13 @@ App = React.createClass({
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 8f1bf8b..c452da9 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -18,6 +18,14 @@ class App extends Component {
        <div className="container">
          <header>
            <h1>Todo List</h1>
 +
-+          <form className="new-task" onSubmit={this.handleSubmit} >
++          <form className="new-task" onSubmit={this.handleSubmit.bind(this)} >
 +            <input
 +              type="text"
 +              ref="textInput"
-+              placeholder="Type to add new tasks" />
++              placeholder="Type to add new tasks"
++            />
 +          </form>
          </header>
  
          <ul>
 -- 
-2.6.3
+2.1.3
 
 
-From 1b87eff8bd37fc375f506c32b9c4d765f15b301f Mon Sep 17 00:00:00 2001
+From 9e3e3dd400d5d18024b2a1ba92a6fab5512be5b3 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:14:08 -0700
-Subject: [PATCH 11/41] Step 4.2: Add handleSubmit method to App component
+Subject: [PATCH 13/50] Step 4.2: Add handleSubmit method to App component
 
 ---
- App.jsx | 15 +++++++++++++++
- 1 file changed, 15 insertions(+)
-
-diff --git a/App.jsx b/App.jsx
-index 7b798bb..67184cc 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -18,6 +18,21 @@ App = React.createClass({
-     });
-   },
+ imports/ui/App.jsx | 16 ++++++++++++++++
+ 1 file changed, 16 insertions(+)
+
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index c452da9..332bd6e 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -1,4 +1,5 @@
+ import React, { Component, PropTypes } from 'react';
++import ReactDOM from 'react-dom';
+ import { createContainer } from 'meteor/react-meteor-data';
  
+ import { Tasks } from '../api/tasks.js';
+@@ -7,6 +8,21 @@ import Task from './Task.jsx';
+ 
+ // App component - represents the whole app
+ class App extends Component {
 +  handleSubmit(event) {
 +    event.preventDefault();
 +
 +    // Find the text field via the React ref
-+    var text = React.findDOMNode(this.refs.textInput).value.trim();
++    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();
 +
 +    Tasks.insert({
-+      text: text,
-+      createdAt: new Date() // current time
++      text,
++      createdAt: new Date(), // current time
 +    });
 +
 +    // Clear form
-+    React.findDOMNode(this.refs.textInput).value = "";
-+  },
++    ReactDOM.findDOMNode(this.refs.textInput).value = '';
++  }
 +
-   render() {
-     return (
-       <div className="container">
+   renderTasks() {
+     return this.props.tasks.map((task) => (
+       <Task key={task._id} task={task} />
 -- 
-2.6.3
+2.1.3
 
 
-From 4bd9bbafd1845dd9aee21da655f0dcde7b4b3da5 Mon Sep 17 00:00:00 2001
+From 0f68a3dea14816f10c88b4d6491612cedd093aaa Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:14:40 -0700
-Subject: [PATCH 12/41] Step 4.3: Update getMeteorData to sort tasks by time
+Subject: [PATCH 14/50] Step 4.3: Update data container to sort tasks by time
 
 ---
- App.jsx | 2 +-
+ imports/ui/App.jsx | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-diff --git a/App.jsx b/App.jsx
-index 67184cc..64197bd 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -7,7 +7,7 @@ App = React.createClass({
-   // Loads items from the Tasks collection and puts them on this.data.tasks
-   getMeteorData() {
-     return {
--      tasks: Tasks.find({}).fetch()
-+      tasks: Tasks.find({}, {sort: {createdAt: -1}}).fetch()
-     }
-   },
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 332bd6e..546d198 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -58,6 +58,6 @@ App.propTypes = {
  
+ export default createContainer(() => {
+   return {
+-    tasks: Tasks.find({}).fetch(),
++    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),
+   };
+ }, App);
 -- 
-2.6.3
+2.1.3
 
 
-From 2560d9ad137bf546344670d81fcaaee6ef38c560 Mon Sep 17 00:00:00 2001
+From c8be3a08ea2ae3a778dab859d9f19dc71056c608 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:17:06 -0700
-Subject: [PATCH 13/41] Step 5.1: Update Task component to add features
+Subject: [PATCH 15/50] Step 5.1: Update Task component to add features
 
 ---
- Task.jsx | 32 +++++++++++++++++++++++++++++---
- 1 file changed, 29 insertions(+), 3 deletions(-)
-
-diff --git a/Task.jsx b/Task.jsx
-index c49e7ac..d1c618b 100644
---- a/Task.jsx
-+++ b/Task.jsx
-@@ -1,13 +1,39 @@
- // Task component - represents a single todo item
- Task = React.createClass({
-   propTypes: {
--    // This component gets the task to display through a React prop.
--    // We can use propTypes to indicate it is required
-     task: React.PropTypes.object.isRequired
-   },
+ imports/ui/Task.jsx | 32 +++++++++++++++++++++++++++++++-
+ 1 file changed, 31 insertions(+), 1 deletion(-)
+
+diff --git a/imports/ui/Task.jsx b/imports/ui/Task.jsx
+index a5000e0..3140871 100644
+--- a/imports/ui/Task.jsx
++++ b/imports/ui/Task.jsx
+@@ -1,10 +1,40 @@
+ import React, { Component, PropTypes } from 'react';
+ 
++import { Tasks } from '../api/tasks.js';
 +
+ // Task component - represents a single todo item
+ export default class Task extends Component {
 +  toggleChecked() {
 +    // Set the checked property to the opposite of its current value
 +    Tasks.update(this.props.task._id, {
-+      $set: {checked: ! this.props.task.checked}
++      $set: { checked: !this.props.task.checked },
 +    });
-+  },
++  }
 +
 +  deleteThisTask() {
 +    Tasks.remove(this.props.task._id);
-+  },
++  }
 +
    render() {
 +    // Give tasks a different className when they are checked off,
 +    // so that we can style them nicely in CSS
-+    const taskClassName = this.props.task.checked ? "checked" : "";
++    const taskClassName = this.props.task.checked ? 'checked' : '';
 +
      return (
 -      <li>{this.props.task.text}</li>
 +      <li className={taskClassName}>
-+        <button className="delete" onClick={this.deleteThisTask}>
++        <button className="delete" onClick={this.deleteThisTask.bind(this)}>
 +          &times;
 +        </button>
 +
 +        <input
 +          type="checkbox"
-+          readOnly={true}
++          readOnly
 +          checked={this.props.task.checked}
-+          onClick={this.toggleChecked} />
++          onClick={this.toggleChecked.bind(this)}
++        />
 +
 +        <span className="text">{this.props.task.text}</span>
 +      </li>
      );
    }
- });
+ }
 -- 
-2.6.3
+2.1.3
 
 
-From a71020ec83f6fb09b25cee37f67cff63d6e4288f Mon Sep 17 00:00:00 2001
+From a9478103c1fe847c2eaf3130b81944a9a7505350 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:21:30 -0700
-Subject: [PATCH 14/41] Step 7.1: Add hide completed checkbox to App component
+Subject: [PATCH 16/50] Step 7.1: Add hide completed checkbox to App component
 
 ---
- App.jsx | 9 +++++++++
- 1 file changed, 9 insertions(+)
-
-diff --git a/App.jsx b/App.jsx
-index 64197bd..ef39e73 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -39,6 +39,15 @@ App = React.createClass({
+ imports/ui/App.jsx | 10 ++++++++++
+ 1 file changed, 10 insertions(+)
+
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 546d198..31d7564 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -35,6 +35,16 @@ class App extends Component {
          <header>
            <h1>Todo List</h1>
  
 +          <label className="hide-completed">
 +            <input
 +              type="checkbox"
-+              readOnly={true}
++              readOnly
 +              checked={this.state.hideCompleted}
-+              onClick={this.toggleHideCompleted} />
++              onClick={this.toggleHideCompleted.bind(this)}
++            />
 +            Hide Completed Tasks
 +          </label>
 +
-           <form className="new-task" onSubmit={this.handleSubmit} >
+           <form className="new-task" onSubmit={this.handleSubmit.bind(this)} >
              <input
                type="text"
 -- 
-2.6.3
+2.1.3
 
 
-From 6bb6193375f38796df91d54826a96e3ef6af8103 Mon Sep 17 00:00:00 2001
+From 1a03ff5929c27f91e29e3021609922b092095e3b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:07 -0700
-Subject: [PATCH 15/41] Step 7.2: Add getInitialState to App component
+Subject: [PATCH 17/50] Step 7.2: Add intial state to App component
 
 ---
- App.jsx | 6 ++++++
- 1 file changed, 6 insertions(+)
+ imports/ui/App.jsx | 8 ++++++++
+ 1 file changed, 8 insertions(+)
 
-diff --git a/App.jsx b/App.jsx
-index ef39e73..144582d 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -4,6 +4,12 @@ App = React.createClass({
-   // This mixin makes the getMeteorData method work
-   mixins: [ReactMeteorData],
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 31d7564..246ad81 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -8,6 +8,14 @@ import Task from './Task.jsx';
  
-+  getInitialState() {
-+    return {
-+      hideCompleted: false
-+    }
-+  },
+ // App component - represents the whole app
+ class App extends Component {
++  constructor(props) {
++    super(props);
++
++    this.state = {
++      hideCompleted: false,
++    };
++  }
 +
-   // Loads items from the Tasks collection and puts them on this.data.tasks
-   getMeteorData() {
-     return {
+   handleSubmit(event) {
+     event.preventDefault();
+ 
 -- 
-2.6.3
+2.1.3
 
 
-From 3a8ff2979cbfbc22f4d4ee4cea2ab8116a09f80d Mon Sep 17 00:00:00 2001
+From d52f74743aeba73dccdffebf49d590af00d44c77 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:32 -0700
-Subject: [PATCH 16/41] Step 7.3: Add toggleHideCompleted handler to App
+Subject: [PATCH 18/50] Step 7.3: Add toggleHideCompleted handler to App
 
 ---
- App.jsx | 6 ++++++
+ imports/ui/App.jsx | 6 ++++++
  1 file changed, 6 insertions(+)
 
-diff --git a/App.jsx b/App.jsx
-index 144582d..6799fca 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -39,6 +39,12 @@ App = React.createClass({
-     React.findDOMNode(this.refs.textInput).value = "";
-   },
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 246ad81..3347daf 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -31,6 +31,12 @@ class App extends Component {
+     ReactDOM.findDOMNode(this.refs.textInput).value = '';
+   }
  
 +  toggleHideCompleted() {
 +    this.setState({
-+      hideCompleted: ! this.state.hideCompleted
++      hideCompleted: !this.state.hideCompleted,
 +    });
-+  },
++  }
 +
-   render() {
-     return (
-       <div className="container">
+   renderTasks() {
+     return this.props.tasks.map((task) => (
+       <Task key={task._id} task={task} />
 -- 
-2.6.3
+2.1.3
 
 
-From 2fedbda3e9d6c8d16833dc83ca5b5da0d1e43b6d Mon Sep 17 00:00:00 2001
+From aa63e1e665112a813a00779ba94ce1f4690e8b3e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:02 -0700
-Subject: [PATCH 17/41] Step 7.4: Replace getMeteorData to filter tasks
+Subject: [PATCH 19/50] Step 7.4: Filter tasks in renderTasks
 
 ---
- App.jsx | 11 +++++++++--
- 1 file changed, 9 insertions(+), 2 deletions(-)
-
-diff --git a/App.jsx b/App.jsx
-index 6799fca..105577e 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -12,9 +12,16 @@ App = React.createClass({
- 
-   // Loads items from the Tasks collection and puts them on this.data.tasks
-   getMeteorData() {
--    return {
--      tasks: Tasks.find({}, {sort: {createdAt: -1}}).fetch()
-+    let query = {};
-+
-+    if (this.state.hideCompleted) {
-+      // If hide completed is checked, filter tasks
-+      query = {checked: {$ne: true}};
-     }
-+
-+    return {
-+      tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch()
-+    };
-   },
+ imports/ui/App.jsx | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
+
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 3347daf..1500877 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -38,7 +38,11 @@ class App extends Component {
+   }
  
    renderTasks() {
+-    return this.props.tasks.map((task) => (
++    let filteredTasks = this.props.tasks;
++    if (this.state.hideCompleted) {
++      filteredTasks = filteredTasks.filter(task => !task.checked);
++    }
++    return filteredTasks.map((task) => (
+       <Task key={task._id} task={task} />
+     ));
+   }
 -- 
-2.6.3
+2.1.3
 
 
-From b2ed418abe28a56d510bb9c7c3a7c188fa08716c Mon Sep 17 00:00:00 2001
+From 80386648ade2b8379cb527a31778bddc56be21b9 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:44 -0700
-Subject: [PATCH 18/41] Step 7.5: Update getMeteorData to return
+Subject: [PATCH 20/50] Step 7.5: Update data container to return
  incompleteCount
 
 ---
- App.jsx | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
-
-diff --git a/App.jsx b/App.jsx
-index 105577e..09415f3 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -20,7 +20,8 @@ App = React.createClass({
-     }
- 
-     return {
--      tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch()
-+      tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch(),
-+      incompleteCount: Tasks.find({checked: {$ne: true}}).count()
-     };
-   },
- 
+ imports/ui/App.jsx | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 1500877..75714e5 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -87,5 +87,6 @@ App.propTypes = {
+ export default createContainer(() => {
+   return {
+     tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),
++    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),
+   };
+ }, App);
 -- 
-2.6.3
+2.1.3
 
 
-From e31d982d438d30fc818918839a1e712c04ad4e3f Mon Sep 17 00:00:00 2001
+From ccfc9d51bcdc179ca1040228d73c26aa4ce70e90 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:24:09 -0700
-Subject: [PATCH 19/41] Step 7.6: Display incompleteCount in the header
+Subject: [PATCH 21/50] Step 7.6: Display incompleteCount in the header
 
 ---
- App.jsx | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ imports/ui/App.jsx | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
 
-diff --git a/App.jsx b/App.jsx
-index 09415f3..f5b8224 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -57,7 +57,7 @@ App = React.createClass({
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 75714e5..78e5548 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -51,7 +51,7 @@ class App extends Component {
      return (
        <div className="container">
          <header>
 -          <h1>Todo List</h1>
-+          <h1>Todo List ({this.data.incompleteCount})</h1>
++          <h1>Todo List ({this.props.incompleteCount})</h1>
  
            <label className="hide-completed">
              <input
+@@ -82,6 +82,7 @@ class App extends Component {
+ 
+ App.propTypes = {
+   tasks: PropTypes.array.isRequired,
++  incompleteCount: PropTypes.number.isRequired,
+ };
+ 
+ export default createContainer(() => {
 -- 
-2.6.3
+2.1.3
 
 
-From a599f3d8550c8162a787a6637dae40b6a2159f13 Mon Sep 17 00:00:00 2001
+From dd7d7a62d2b51a47fb91b57f3e6e7c0bad18cc38 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:02 -0700
-Subject: [PATCH 20/41] Step 8.1: Add accounts-ui and accounts-password
+Subject: [PATCH 22/50] Step 8.1: Add accounts-ui and accounts-password
  packages
 
 ---
  .meteor/packages |  2 ++
- .meteor/versions | 11 +++++++++++
- 2 files changed, 13 insertions(+)
+ .meteor/versions | 15 +++++++++++++++
+ 2 files changed, 17 insertions(+)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 10cd8b0..b08108a 100644
+index c3506d5..6c10fa5 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -8,3 +8,5 @@ meteor-platform
- autopublish
- insecure
- react
+@@ -20,3 +20,5 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
+ autopublish             # Publish all data to the clients (for prototyping)
+ insecure                # Allow all DB writes from clients (for prototyping)
+ react-meteor-data@0.2.6-beta.16
 +accounts-ui
 +accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index 288ee5f..e964910 100644
+index c4bc9da..ecdd0db 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
 @@ -1,3 +1,7 @@
-+accounts-base@1.2.0
-+accounts-password@1.1.1
-+accounts-ui@1.1.5
-+accounts-ui-unstyled@1.1.7
- autopublish@1.0.3
- autoupdate@1.2.1
- babel-compiler@5.6.15
-@@ -14,6 +18,7 @@ cosmos:browserify@0.4.0
- ddp@1.1.0
- deps@1.0.7
- ejson@1.0.6
-+email@1.0.6
- fastclick@1.0.3
- geojson-utils@1.0.3
- html-tools@1.0.4
-@@ -25,7 +30,9 @@ jquery@1.11.3_2
- json@1.0.3
- jsx@0.1.1
- launch-screen@1.0.2
-+less@1.0.14
- livedata@1.0.13
-+localstorage@1.0.3
- logging@1.0.7
- meteor@1.1.6
- meteor-platform@1.2.2
-@@ -33,6 +40,7 @@ minifiers@1.1.5
- minimongo@1.0.8
- mobile-status-bar@1.0.3
- mongo@1.1.0
++accounts-base@1.2.4-rc.2
++accounts-password@1.1.6-rc.2
++accounts-ui@1.1.7-rc.2
++accounts-ui-unstyled@1.1.10-rc.2
+ allow-deny@1.0.2-rc.2
+ autopublish@1.0.5-rc.2
+ autoupdate@1.2.6-rc.2
+@@ -16,12 +20,14 @@ check@1.1.2-rc.2
+ ddp@1.2.3-rc.2
+ ddp-client@1.2.3-rc.2
+ ddp-common@1.2.3-rc.2
++ddp-rate-limiter@1.0.2-rc.2
+ ddp-server@1.2.4-rc.2
+ deps@1.0.10-rc.2
+ diff-sequence@1.0.3-rc.2
+ ecmascript@0.4.1-rc.2
+ ecmascript-runtime@0.2.8-rc.2
+ ejson@1.0.9-rc.2
++email@1.0.10-rc.2
+ es5-shim@4.5.8-rc.2
+ fastclick@1.0.9-rc.2
+ geojson-utils@1.0.6-rc.2
+@@ -33,7 +39,9 @@ id-map@1.0.5-rc.2
+ insecure@1.0.5-rc.2
+ jquery@1.11.6-rc.2
+ launch-screen@1.0.7-rc.2
++less@2.5.5-rc.2
+ livedata@1.0.16-rc.2
++localstorage@1.0.7-rc.2
+ logging@1.0.10-rc.2
+ meteor@1.1.12-rc.2
+ meteor-base@1.0.2-rc.2
+@@ -46,18 +54,25 @@ modules@0.5.1-rc.2
+ modules-runtime@0.6.1-rc.2
+ mongo@1.1.5-rc.2
+ mongo-id@1.0.2-rc.2
 +npm-bcrypt@0.7.8_2
- observe-sequence@1.0.6
- ordered-dict@1.0.3
- random@1.0.3
-@@ -46,9 +54,12 @@ reactive-var@1.0.5
- reload@1.1.3
- retry@1.0.3
- routepolicy@1.0.5
-+service-configuration@1.0.4
- session@1.1.0
-+sha@1.0.3
- spacebars@1.0.6
- spacebars-compiler@1.0.6
-+srp@1.0.3
- templating@1.1.1
- tracker@1.0.7
- ui@1.0.6
+ npm-mongo@1.4.41-rc.2
+ observe-sequence@1.0.9-rc.2
+ ordered-dict@1.0.5-rc.2
+ promise@0.6.4-rc.2
+ random@1.0.7-rc.2
++rate-limit@1.0.2-rc.2
+ react-meteor-data@0.2.6-beta.16
++reactive-dict@1.1.5-rc.2
+ reactive-var@1.0.7-rc.2
+ reload@1.1.6-rc.2
+ retry@1.0.5-rc.2
+ routepolicy@1.0.8-rc.2
++service-configuration@1.0.7-rc.2
++session@1.1.3-rc.2
++sha@1.0.5-rc.2
+ spacebars@1.0.9-rc.2
+ spacebars-compiler@1.0.9-rc.2
++srp@1.0.6-rc.2
+ standard-minifier-css@1.0.4-rc.2
+ standard-minifier-js@1.0.4-rc.2
+ templating@1.1.7-rc.2
 -- 
-2.6.3
+2.1.3
 
 
-From 21d2e4a6783402d4933a9ca0500cb769d5327666 Mon Sep 17 00:00:00 2001
+From cfb42777b34ec46a22101588c646109b77fbf2cd Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:59 -0700
-Subject: [PATCH 21/41] Step 8.2: Create Accounts UI wrapper component
+Subject: [PATCH 23/50] Step 8.2: Create Accounts UI wrapper component
 
 ---
- AccountsUIWrapper.jsx | 15 +++++++++++++++
- 1 file changed, 15 insertions(+)
- create mode 100644 AccountsUIWrapper.jsx
+ imports/ui/AccountsUIWrapper.jsx | 20 ++++++++++++++++++++
+ 1 file changed, 20 insertions(+)
+ create mode 100644 imports/ui/AccountsUIWrapper.jsx
 
-diff --git a/AccountsUIWrapper.jsx b/AccountsUIWrapper.jsx
+diff --git a/imports/ui/AccountsUIWrapper.jsx b/imports/ui/AccountsUIWrapper.jsx
 new file mode 100644
-index 0000000..87fd3b3
+index 0000000..208d5af
 --- /dev/null
-+++ b/AccountsUIWrapper.jsx
-@@ -0,0 +1,15 @@
-+AccountsUIWrapper = React.createClass({
++++ b/imports/ui/AccountsUIWrapper.jsx
+@@ -0,0 +1,20 @@
++import React, { Component } from 'react';
++import ReactDOM from 'react-dom';
++import { Template } from 'meteor/templating';
++import { Blaze } from 'meteor/blaze';
++
++export default class AccountsUIWrapper extends Component {
 +  componentDidMount() {
 +    // Use Meteor Blaze to render login buttons
 +    this.view = Blaze.render(Template.loginButtons,
-+      React.findDOMNode(this.refs.container));
-+  },
++      ReactDOM.findDOMNode(this.refs.container));
++  }
 +  componentWillUnmount() {
 +    // Clean up Blaze view
 +    Blaze.remove(this.view);
-+  },
++  }
 +  render() {
 +    // Just render a placeholder container that will be filled in
 +    return <span ref="container" />;
 +  }
-+});
++}
 -- 
-2.6.3
+2.1.3
 
 
-From bc7817296faba6af012a505fce83224239265bc2 Mon Sep 17 00:00:00 2001
+From aa6a33ec1a5c203a62ac0c7459ebb378f70bfc81 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:27:36 -0700
-Subject: [PATCH 22/41] Step 8.3: Include sign in form
+Subject: [PATCH 24/50] Step 8.3: Include sign in form
 
 ---
- App.jsx | 2 ++
- 1 file changed, 2 insertions(+)
+ imports/ui/App.jsx | 3 +++
+ 1 file changed, 3 insertions(+)
 
-diff --git a/App.jsx b/App.jsx
-index f5b8224..e829c27 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -68,6 +68,8 @@ App = React.createClass({
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 78e5548..1d0bbef 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -5,6 +5,7 @@ import { createContainer } from 'meteor/react-meteor-data';
+ import { Tasks } from '../api/tasks.js';
+ 
+ import Task from './Task.jsx';
++import AccountsUIWrapper from './AccountsUIWrapper.jsx';
+ 
+ // App component - represents the whole app
+ class App extends Component {
+@@ -63,6 +64,8 @@ class App extends Component {
              Hide Completed Tasks
            </label>
  
 +          <AccountsUIWrapper />
 +
-           <form className="new-task" onSubmit={this.handleSubmit} >
+           <form className="new-task" onSubmit={this.handleSubmit.bind(this)} >
              <input
                type="text"
 -- 
-2.6.3
+2.1.3
 
 
-From 54e66f77114ea2a129f100044a928d17a672f384 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Mon, 13 Jul 2015 12:28:08 -0700
-Subject: [PATCH 23/41] Step 8.4: Configure accounts-ui to only require
- username
+From ea28e3011eda90020f1329b3cdd8be37857bfdb8 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 16:13:48 +1100
+Subject: [PATCH 25/50] Step 8.4: Configure accounts-ui
 
 ---
- simple-todos-react.jsx | 3 +++
- 1 file changed, 3 insertions(+)
+ imports/startup/accounts-config.js | 5 +++++
+ 1 file changed, 5 insertions(+)
+ create mode 100644 imports/startup/accounts-config.js
 
-diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
-index a67b030..36ce4bc 100644
---- a/simple-todos-react.jsx
-+++ b/simple-todos-react.jsx
-@@ -3,6 +3,9 @@ Tasks = new Mongo.Collection("tasks");
+diff --git a/imports/startup/accounts-config.js b/imports/startup/accounts-config.js
+new file mode 100644
+index 0000000..7e4f7e5
+--- /dev/null
++++ b/imports/startup/accounts-config.js
+@@ -0,0 +1,5 @@
++import { Accounts } from 'meteor/accounts-base';
++
++Accounts.ui.config({
++  passwordSignupFields: 'USERNAME_ONLY',
++});
+-- 
+2.1.3
+
+
+From eef345667c247c8adca26d365a9d57fac1ca5c65 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 16:14:08 +1100
+Subject: [PATCH 26/50] Step 8.5: Import accounts configuration
+
+---
+ client/main.jsx | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/client/main.jsx b/client/main.jsx
+index 9ba3d08..b8c5033 100644
+--- a/client/main.jsx
++++ b/client/main.jsx
+@@ -2,6 +2,7 @@ import React from 'react';
+ import { Meteor } from 'meteor/meteor';
+ import { render } from 'react-dom';
  
- if (Meteor.isClient) {
-   // This code is executed on the client only
-+  Accounts.ui.config({
-+    passwordSignupFields: "USERNAME_ONLY"
-+  });
++import '../imports/startup/accounts-config.js';
+ import App from '../imports/ui/App.jsx';
  
-   Meteor.startup(function () {
-     // Use Meteor.startup to render the component after the page is ready
+ Meteor.startup(() => {
 -- 
-2.6.3
+2.1.3
 
 
-From f0a2cf2b0a5f80c132f7919f75a3e8ef11cfc358 Mon Sep 17 00:00:00 2001
+From 08ab8b186c3fbe9adb69bea457152e26b95617fb Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:28:46 -0700
-Subject: [PATCH 24/41] Step 8.5: Update insert to save username and owner
+Subject: [PATCH 27/50] Step 8.6: Update insert to save username and owner
 
 ---
- App.jsx | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
+ imports/ui/App.jsx | 3 +++
+ 1 file changed, 3 insertions(+)
 
-diff --git a/App.jsx b/App.jsx
-index e829c27..dd7862f 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -40,7 +40,9 @@ App = React.createClass({
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 1d0bbef..7694eb8 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -1,5 +1,6 @@
+ import React, { Component, PropTypes } from 'react';
+ import ReactDOM from 'react-dom';
++import { Meteor } from 'meteor/meteor';
+ import { createContainer } from 'meteor/react-meteor-data';
  
+ import { Tasks } from '../api/tasks.js';
+@@ -26,6 +27,8 @@ class App extends Component {
      Tasks.insert({
-       text: text,
--      createdAt: new Date() // current time
-+      createdAt: new Date(),            // current time
+       text,
+       createdAt: new Date(), // current time
 +      owner: Meteor.userId(),           // _id of logged in user
-+      username: Meteor.user().username  // username of logged in user
++      username: Meteor.user().username,  // username of logged in user
      });
  
      // Clear form
 -- 
-2.6.3
+2.1.3
 
 
-From 504545b21c79495c0aac900a3593d1cf1c163173 Mon Sep 17 00:00:00 2001
+From c49b83bef043096b8294bbb1e93483b66ce371a2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:29:16 -0700
-Subject: [PATCH 25/41] Step 8.6: Update getMeteorData to return data about
+Subject: [PATCH 28/50] Step 8.7: Update data container to return data about
  user
 
 ---
- App.jsx | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
-
-diff --git a/App.jsx b/App.jsx
-index dd7862f..dfedd85 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -21,7 +21,8 @@ App = React.createClass({
- 
-     return {
-       tasks: Tasks.find(query, {sort: {createdAt: -1}}).fetch(),
--      incompleteCount: Tasks.find({checked: {$ne: true}}).count()
-+      incompleteCount: Tasks.find({checked: {$ne: true}}).count(),
-+      currentUser: Meteor.user()
-     };
-   },
- 
+ imports/ui/App.jsx | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 7694eb8..ce0b541 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -95,5 +95,6 @@ export default createContainer(() => {
+   return {
+     tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),
+     incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),
++    currentUser: Meteor.user(),
+   };
+ }, App);
 -- 
-2.6.3
+2.1.3
 
 
-From 516863b2fd6390dc734655c6bcb4e8904f791453 Mon Sep 17 00:00:00 2001
+From b784c6a07138104abf3b7e7f537457b4b46f6a66 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:06 -0700
-Subject: [PATCH 26/41] Step 8.7: Wrap new task form to only show when logged
+Subject: [PATCH 29/50] Step 8.8: Wrap new task form to only show when logged
  in
 
 ---
- App.jsx | 14 ++++++++------
- 1 file changed, 8 insertions(+), 6 deletions(-)
-
-diff --git a/App.jsx b/App.jsx
-index dfedd85..b8824a4 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -73,12 +73,14 @@ App = React.createClass({
+ imports/ui/App.jsx | 17 ++++++++++-------
+ 1 file changed, 10 insertions(+), 7 deletions(-)
+
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index ce0b541..bbbb728 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -69,13 +69,15 @@ class App extends Component {
  
            <AccountsUIWrapper />
  
--          <form className="new-task" onSubmit={this.handleSubmit} >
+-          <form className="new-task" onSubmit={this.handleSubmit.bind(this)} >
 -            <input
 -              type="text"
 -              ref="textInput"
--              placeholder="Type to add new tasks" />
+-              placeholder="Type to add new tasks"
+-            />
 -          </form>
-+          { this.data.currentUser ?
-+            <form className="new-task" onSubmit={this.handleSubmit} >
++          { this.props.currentUser ?
++            <form className="new-task" onSubmit={this.handleSubmit.bind(this)} >
 +              <input
 +                type="text"
 +                ref="textInput"
-+                placeholder="Type to add new tasks" />
++                placeholder="Type to add new tasks"
++              />
 +            </form> : ''
 +          }
          </header>
  
          <ul>
+@@ -89,6 +91,7 @@ class App extends Component {
+ App.propTypes = {
+   tasks: PropTypes.array.isRequired,
+   incompleteCount: PropTypes.number.isRequired,
++  currentUser: PropTypes.object,
+ };
+ 
+ export default createContainer(() => {
 -- 
-2.6.3
+2.1.3
 
 
-From 957ff40676c9812b679cb5465da3158fc7972ede Mon Sep 17 00:00:00 2001
+From 083e8e6b5dff73a926e6efe5848f69dd5e42f2b6 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:48 -0700
-Subject: [PATCH 27/41] Step 8.8: Update Task component to show username
+Subject: [PATCH 30/50] Step 8.9: Update Task component to show username
 
 ---
- Task.jsx | 4 +++-
+ imports/ui/Task.jsx | 4 +++-
  1 file changed, 3 insertions(+), 1 deletion(-)
 
-diff --git a/Task.jsx b/Task.jsx
-index d1c618b..2caead7 100644
---- a/Task.jsx
-+++ b/Task.jsx
-@@ -32,7 +32,9 @@ Task = React.createClass({
-           checked={this.props.task.checked}
-           onClick={this.toggleChecked} />
+diff --git a/imports/ui/Task.jsx b/imports/ui/Task.jsx
+index 3140871..5650fa0 100644
+--- a/imports/ui/Task.jsx
++++ b/imports/ui/Task.jsx
+@@ -33,7 +33,9 @@ export default class Task extends Component {
+           onClick={this.toggleChecked.bind(this)}
+         />
  
 -        <span className="text">{this.props.task.text}</span>
 +        <span className="text">
@@ -1282,13 +1501,13 @@ index d1c618b..2caead7 100644
      );
    }
 -- 
-2.6.3
+2.1.3
 
 
-From ce706ab836a91ca69aa6d452d94dcf53745ca86f Mon Sep 17 00:00:00 2001
+From 932a216710a829d8df5c237b7d94e4490d7e41a1 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:31:22 -0700
-Subject: [PATCH 28/41] Step 9.1: Remove insecure package
+Subject: [PATCH 31/50] Step 9.1: Remove insecure package
 
 ---
  .meteor/packages | 1 -
@@ -1296,147 +1515,160 @@ Subject: [PATCH 28/41] Step 9.1: Remove insecure package
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index b08108a..6f2b627 100644
+index 6c10fa5..d6d446f 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -6,7 +6,6 @@
+@@ -18,7 +18,6 @@ es5-shim                # ECMAScript 5 compatibility for older browsers.
+ ecmascript              # Enable ECMAScript2015+ syntax in app code
  
- meteor-platform
- autopublish
--insecure
- react
+ autopublish             # Publish all data to the clients (for prototyping)
+-insecure                # Allow all DB writes from clients (for prototyping)
+ react-meteor-data@0.2.6-beta.16
  accounts-ui
  accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index e964910..0d54bf9 100644
+index ecdd0db..011fbef 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -25,7 +25,6 @@ html-tools@1.0.4
- htmljs@1.0.4
- http@1.1.0
- id-map@1.0.3
--insecure@1.0.3
- jquery@1.11.3_2
- json@1.0.3
- jsx@0.1.1
+@@ -36,7 +36,6 @@ html-tools@1.0.7-rc.2
+ htmljs@1.0.7-rc.2
+ http@1.1.3-rc.2
+ id-map@1.0.5-rc.2
+-insecure@1.0.5-rc.2
+ jquery@1.11.6-rc.2
+ launch-screen@1.0.7-rc.2
+ less@2.5.5-rc.2
 -- 
-2.6.3
+2.1.3
 
 
-From 15908792b5dcd489651d58fd2eb1ce2ba57bcd61 Mon Sep 17 00:00:00 2001
+From 14b3e9e5c84ea1b06b70ee51014b933cb3108a5b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:21 -0700
-Subject: [PATCH 29/41] Step 9.2: Add methods for add, remove, update task
+Subject: [PATCH 32/50] Step 9.2: Add methods for add, remove, update task
 
 ---
- simple-todos-react.jsx | 24 ++++++++++++++++++++++++
- 1 file changed, 24 insertions(+)
-
-diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
-index 36ce4bc..b1aa692 100644
---- a/simple-todos-react.jsx
-+++ b/simple-todos-react.jsx
-@@ -12,3 +12,27 @@ if (Meteor.isClient) {
-     React.render(<App />, document.getElementById("render-target"));
-   });
- }
+ imports/api/tasks.js | 31 +++++++++++++++++++++++++++++++
+ 1 file changed, 31 insertions(+)
+
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index 3bed819..0201eb4 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -1,3 +1,34 @@
++import { Meteor } from 'meteor/meteor';
+ import { Mongo } from 'meteor/mongo';
++import { check } from 'meteor/check';
+ 
+ export const Tasks = new Mongo.Collection('tasks');
 +
 +Meteor.methods({
-+  addTask(text) {
++  'tasks.insert'(text) {
++    check(text, String);
++
 +    // Make sure the user is logged in before inserting a task
 +    if (! Meteor.userId()) {
-+      throw new Meteor.Error("not-authorized");
++      throw new Meteor.Error('not-authorized');
 +    }
 +
 +    Tasks.insert({
-+      text: text,
++      text,
 +      createdAt: new Date(),
 +      owner: Meteor.userId(),
-+      username: Meteor.user().username
++      username: Meteor.user().username,
 +    });
 +  },
++  'tasks.remove'(taskId) {
++    check(taskId, String);
 +
-+  removeTask(taskId) {
 +    Tasks.remove(taskId);
 +  },
++  'tasks.setChecked'(taskId, setChecked) {
++    check(taskId, String);
++    check(setChecked, Boolean);
 +
-+  setChecked(taskId, setChecked) {
-+    Tasks.update(taskId, { $set: { checked: setChecked} });
-+  }
++    Tasks.update(taskId, { $set: { checked: setChecked } });
++  },
 +});
 -- 
-2.6.3
+2.1.3
 
 
-From cd4b47f1454072749c24fdedbce321142ebd655e Mon Sep 17 00:00:00 2001
+From 2da4b190163f07eb2234487a2455325fb6a770dd Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:59 -0700
-Subject: [PATCH 30/41] Step 9.3: Update App component to use addTask method
+Subject: [PATCH 33/50] Step 9.3: Update App component to use tasks.insert
+ method
 
 ---
- App.jsx | 7 +------
+ imports/ui/App.jsx | 7 +------
  1 file changed, 1 insertion(+), 6 deletions(-)
 
-diff --git a/App.jsx b/App.jsx
-index b8824a4..858f96b 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -39,12 +39,7 @@ App = React.createClass({
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index bbbb728..4f41c39 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -24,12 +24,7 @@ class App extends Component {
      // Find the text field via the React ref
-     var text = React.findDOMNode(this.refs.textInput).value.trim();
+     const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();
  
 -    Tasks.insert({
--      text: text,
--      createdAt: new Date(),            // current time
+-      text,
+-      createdAt: new Date(), // current time
 -      owner: Meteor.userId(),           // _id of logged in user
--      username: Meteor.user().username  // username of logged in user
+-      username: Meteor.user().username,  // username of logged in user
 -    });
-+    Meteor.call("addTask", text);
++    Meteor.call('tasks.insert', text);
  
      // Clear form
-     React.findDOMNode(this.refs.textInput).value = "";
+     ReactDOM.findDOMNode(this.refs.textInput).value = '';
 -- 
-2.6.3
+2.1.3
 
 
-From 90c412b9304aea15c54c18145065b84ce1180661 Mon Sep 17 00:00:00 2001
+From 3113186e723246278d8a77c22ac9286c33915452 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:33:38 -0700
-Subject: [PATCH 31/41] Step 9.4: Update Task to use setChecked and removeTask
- methods
+Subject: [PATCH 34/50] Step 9.4: Replace update and remove with methods
 
 ---
- Task.jsx | 6 ++----
- 1 file changed, 2 insertions(+), 4 deletions(-)
-
-diff --git a/Task.jsx b/Task.jsx
-index 2caead7..32577ed 100644
---- a/Task.jsx
-+++ b/Task.jsx
-@@ -6,13 +6,11 @@ Task = React.createClass({
+ imports/ui/Task.jsx | 9 +++------
+ 1 file changed, 3 insertions(+), 6 deletions(-)
+
+diff --git a/imports/ui/Task.jsx b/imports/ui/Task.jsx
+index 5650fa0..ee040c5 100644
+--- a/imports/ui/Task.jsx
++++ b/imports/ui/Task.jsx
+@@ -1,18 +1,15 @@
+ import React, { Component, PropTypes } from 'react';
+-
+-import { Tasks } from '../api/tasks.js';
++import { Meteor } from 'meteor/meteor';
  
+ // Task component - represents a single todo item
+ export default class Task extends Component {
    toggleChecked() {
      // Set the checked property to the opposite of its current value
 -    Tasks.update(this.props.task._id, {
--      $set: {checked: ! this.props.task.checked}
+-      $set: { checked: !this.props.task.checked },
 -    });
-+    Meteor.call("setChecked", this.props.task._id, ! this.props.task.checked);
-   },
++    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);
+   }
  
    deleteThisTask() {
 -    Tasks.remove(this.props.task._id);
-+    Meteor.call("removeTask", this.props.task._id);
-   },
++    Meteor.call('tasks.remove', this.props.task._id);
+   }
  
    render() {
 -- 
-2.6.3
+2.1.3
 
 
-From 6afc10c8d0ac6f5ac44977d8c56717a8170a33a3 Mon Sep 17 00:00:00 2001
+From 49c6872b0241d0a3d5cda8a8acaac7187a8724bb Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:34:33 -0700
-Subject: [PATCH 32/41] Step 10.1: Remove autopublish package
+Subject: [PATCH 35/50] Step 10.1: Remove autopublish package
 
 ---
  .meteor/packages | 1 -
@@ -1444,186 +1676,208 @@ Subject: [PATCH 32/41] Step 10.1: Remove autopublish package
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 6f2b627..81dd35c 100644
+index d6d446f..6ec9016 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -5,7 +5,6 @@
- # but you can also edit it by hand.
+@@ -17,7 +17,6 @@ standard-minifier-js    # JS minifier run for production mode
+ es5-shim                # ECMAScript 5 compatibility for older browsers.
+ ecmascript              # Enable ECMAScript2015+ syntax in app code
  
- meteor-platform
--autopublish
- react
+-autopublish             # Publish all data to the clients (for prototyping)
+ react-meteor-data@0.2.6-beta.16
  accounts-ui
  accounts-password
 diff --git a/.meteor/versions b/.meteor/versions
-index 0d54bf9..777cca4 100644
+index 011fbef..cee5a46 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -2,7 +2,6 @@ accounts-base@1.2.0
- accounts-password@1.1.1
- accounts-ui@1.1.5
- accounts-ui-unstyled@1.1.7
--autopublish@1.0.3
- autoupdate@1.2.1
- babel-compiler@5.6.15
- babel-runtime@0.1.1
+@@ -3,7 +3,6 @@ accounts-password@1.1.6-rc.2
+ accounts-ui@1.1.7-rc.2
+ accounts-ui-unstyled@1.1.10-rc.2
+ allow-deny@1.0.2-rc.2
+-autopublish@1.0.5-rc.2
+ autoupdate@1.2.6-rc.2
+ babel-compiler@6.5.1-rc.2
+ babel-runtime@0.1.6-rc.2
 -- 
-2.6.3
+2.1.3
 
 
-From 97a7e438cbdb2520ecc85ad72c72259ec4e40512 Mon Sep 17 00:00:00 2001
-From: Sashko Stubailo <sashko@stubailo.com>
-Date: Mon, 13 Jul 2015 12:35:03 -0700
-Subject: [PATCH 33/41] Step 10.2: Add publish to server and subscribe to
- client
+From df8dda980a15cc866b3335c296508ab8ffb1b26e Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 16:27:05 +1100
+Subject: [PATCH 36/50] Step 10.2: Add publication for tasks
 
 ---
- simple-todos-react.jsx | 8 ++++++++
- 1 file changed, 8 insertions(+)
+ imports/api/tasks.js | 7 +++++++
+ 1 file changed, 7 insertions(+)
 
-diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
-index b1aa692..f62ed9e 100644
---- a/simple-todos-react.jsx
-+++ b/simple-todos-react.jsx
-@@ -7,12 +7,20 @@ if (Meteor.isClient) {
-     passwordSignupFields: "USERNAME_ONLY"
-   });
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index 0201eb4..234a839 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -4,6 +4,13 @@ import { check } from 'meteor/check';
  
-+  Meteor.subscribe("tasks");
-+
-   Meteor.startup(function () {
-     // Use Meteor.startup to render the component after the page is ready
-     React.render(<App />, document.getElementById("render-target"));
-   });
- }
+ export const Tasks = new Mongo.Collection('tasks');
  
 +if (Meteor.isServer) {
-+  Meteor.publish("tasks", function () {
++  // This code only runs on the server
++  Meteor.publish('tasks', function tasksPublication() {
 +    return Tasks.find();
 +  });
 +}
 +
  Meteor.methods({
-   addTask(text) {
-     // Make sure the user is logged in before inserting a task
+   'tasks.insert'(text) {
+     check(text, String);
 -- 
-2.6.3
+2.1.3
+
 
+From 5d258f06f6102a6f90767585e15ace14b3cef1ee Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 16:28:14 +1100
+Subject: [PATCH 37/50] Step 10.3: Subscribe to tasks in App container
 
-From 6d696fc4f3dbafe299417c666b4d0c95a9c9158c Mon Sep 17 00:00:00 2001
+---
+ imports/ui/App.jsx | 2 ++
+ 1 file changed, 2 insertions(+)
+
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index 4f41c39..d6e5f0a 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -90,6 +90,8 @@ App.propTypes = {
+ };
+ 
+ export default createContainer(() => {
++  Meteor.subscribe('tasks');
++
+   return {
+     tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),
+     incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),
+-- 
+2.1.3
+
+
+From f01138adb09b56b2137a7954097d7ee91c89c1c2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:29 -0700
-Subject: [PATCH 34/41] Step 10.3: Add setPrivate method
+Subject: [PATCH 38/50] Step 10.4: Add tasks.setPrivate method
 
 ---
- simple-todos-react.jsx | 11 +++++++++++
- 1 file changed, 11 insertions(+)
-
-diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
-index f62ed9e..c2a3196 100644
---- a/simple-todos-react.jsx
-+++ b/simple-todos-react.jsx
-@@ -42,5 +42,16 @@ Meteor.methods({
+ imports/api/tasks.js | 13 +++++++++++++
+ 1 file changed, 13 insertions(+)
+
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index 234a839..f1d2c92 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -38,4 +38,17 @@ Meteor.methods({
  
-   setChecked(taskId, setChecked) {
-     Tasks.update(taskId, { $set: { checked: setChecked} });
-+  },
+     Tasks.update(taskId, { $set: { checked: setChecked } });
+   },
++  'tasks.setPrivate'(taskId, setToPrivate) {
++    check(taskId, String);
++    check(setToPrivate, Boolean);
 +
-+  setPrivate(taskId, setToPrivate) {
 +    const task = Tasks.findOne(taskId);
 +
 +    // Make sure only the task owner can make a task private
 +    if (task.owner !== Meteor.userId()) {
-+      throw new Meteor.Error("not-authorized");
++      throw new Meteor.Error('not-authorized');
 +    }
 +
 +    Tasks.update(taskId, { $set: { private: setToPrivate } });
-   }
++  },
  });
 -- 
-2.6.3
+2.1.3
 
 
-From f49eebf8f9918a72230a816593629f7cebdc3b88 Mon Sep 17 00:00:00 2001
+From 4c57163c745caad5d9a610f1530141b001a87469 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:59 -0700
-Subject: [PATCH 35/41] Step 10.4: Update renderTasks to pass in
+Subject: [PATCH 39/50] Step 10.5: Update renderTasks to pass in
  showPrivateButton
 
 ---
- App.jsx | 8 +++++++-
- 1 file changed, 7 insertions(+), 1 deletion(-)
-
-diff --git a/App.jsx b/App.jsx
-index 858f96b..82915ec 100644
---- a/App.jsx
-+++ b/App.jsx
-@@ -29,7 +29,13 @@ App = React.createClass({
-   renderTasks() {
-     // Get tasks from this.data.tasks
-     return this.data.tasks.map((task) => {
--      return <Task key={task._id} task={task} />;
-+      const currentUserId = this.data.currentUser && this.data.currentUser._id;
+ imports/ui/App.jsx | 15 ++++++++++++---
+ 1 file changed, 12 insertions(+), 3 deletions(-)
+
+diff --git a/imports/ui/App.jsx b/imports/ui/App.jsx
+index d6e5f0a..06262c5 100644
+--- a/imports/ui/App.jsx
++++ b/imports/ui/App.jsx
+@@ -41,9 +41,18 @@ class App extends Component {
+     if (this.state.hideCompleted) {
+       filteredTasks = filteredTasks.filter(task => !task.checked);
+     }
+-    return filteredTasks.map((task) => (
+-      <Task key={task._id} task={task} />
+-    ));
++    return filteredTasks.map((task) => {
++      const currentUserId = this.props.currentUser && this.props.currentUser._id;
 +      const showPrivateButton = task.owner === currentUserId;
 +
-+      return <Task
-+        key={task._id}
-+        task={task}
-+        showPrivateButton={showPrivateButton} />;
-     });
-   },
++      return (
++        <Task
++          key={task._id}
++          task={task}
++          showPrivateButton={showPrivateButton}
++        />
++      );
++    });
+   }
  
+   render() {
 -- 
-2.6.3
+2.1.3
 
 
-From b6aeca4bc89337e773f55d237d15170b627868f2 Mon Sep 17 00:00:00 2001
+From 2fb05bd2519ddf5ad1d76acbc6784ee1cc109775 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:37:28 -0700
-Subject: [PATCH 36/41] Step 10.5: Add a new prop type for Task component
+Subject: [PATCH 40/50] Step 10.6: Add a new prop type for Task component
 
 ---
- Task.jsx | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
-
-diff --git a/Task.jsx b/Task.jsx
-index 32577ed..c85416a 100644
---- a/Task.jsx
-+++ b/Task.jsx
-@@ -1,7 +1,8 @@
- // Task component - represents a single todo item
- Task = React.createClass({
-   propTypes: {
--    task: React.PropTypes.object.isRequired
-+    task: React.PropTypes.object.isRequired,
-+    showPrivateButton: React.PropTypes.bool.isRequired
-   },
- 
-   toggleChecked() {
+ imports/ui/Task.jsx | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/imports/ui/Task.jsx b/imports/ui/Task.jsx
+index ee040c5..deba74a 100644
+--- a/imports/ui/Task.jsx
++++ b/imports/ui/Task.jsx
+@@ -42,4 +42,5 @@ Task.propTypes = {
+   // This component gets the task to display through a React prop.
+   // We can use propTypes to indicate it is required
+   task: PropTypes.object.isRequired,
++  showPrivateButton: React.PropTypes.bool.isRequired,
+ };
 -- 
-2.6.3
+2.1.3
 
 
-From f756da1b62f9a66e92be6a466e447f638440c1b8 Mon Sep 17 00:00:00 2001
+From 451b6de0329407ec45cd337e359325f15f1ad2e8 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:04 -0700
-Subject: [PATCH 37/41] Step 10.6: Add private button, shown only to owner
+Subject: [PATCH 41/50] Step 10.7: Add private button, shown only to owner
 
 ---
- Task.jsx | 6 ++++++
+ imports/ui/Task.jsx | 6 ++++++
  1 file changed, 6 insertions(+)
 
-diff --git a/Task.jsx b/Task.jsx
-index c85416a..1bbd4fb 100644
---- a/Task.jsx
-+++ b/Task.jsx
-@@ -31,6 +31,12 @@ Task = React.createClass({
-           checked={this.props.task.checked}
-           onClick={this.toggleChecked} />
+diff --git a/imports/ui/Task.jsx b/imports/ui/Task.jsx
+index deba74a..bec76ba 100644
+--- a/imports/ui/Task.jsx
++++ b/imports/ui/Task.jsx
+@@ -30,6 +30,12 @@ export default class Task extends Component {
+           onClick={this.toggleChecked.bind(this)}
+         />
  
 +        { this.props.showPrivateButton ? (
-+          <button className="toggle-private" onClick={this.togglePrivate}>
-+            { this.props.task.private ? "Private" : "Public" }
++          <button className="toggle-private" onClick={this.togglePrivate.bind(this)}>
++            { this.props.task.private ? 'Private' : 'Public' }
 +          </button>
 +        ) : ''}
 +
@@ -1631,134 +1885,336 @@ index c85416a..1bbd4fb 100644
            <strong>{this.props.task.username}</strong>: {this.props.task.text}
          </span>
 -- 
-2.6.3
+2.1.3
 
 
-From 3c9f11ad31373841936201283053081564c44bb7 Mon Sep 17 00:00:00 2001
+From 38178ac83badfcac39b7e2640e76f705ec99c41d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:33 -0700
-Subject: [PATCH 38/41] Step 10.7: Add private button event handler to Task
+Subject: [PATCH 42/50] Step 10.8: Add private button event handler to Task
 
 ---
- Task.jsx | 4 ++++
+ imports/ui/Task.jsx | 4 ++++
  1 file changed, 4 insertions(+)
 
-diff --git a/Task.jsx b/Task.jsx
-index 1bbd4fb..75827dd 100644
---- a/Task.jsx
-+++ b/Task.jsx
-@@ -14,6 +14,10 @@ Task = React.createClass({
-     Meteor.call("removeTask", this.props.task._id);
-   },
+diff --git a/imports/ui/Task.jsx b/imports/ui/Task.jsx
+index bec76ba..db0999e 100644
+--- a/imports/ui/Task.jsx
++++ b/imports/ui/Task.jsx
+@@ -12,6 +12,10 @@ export default class Task extends Component {
+     Meteor.call('tasks.remove', this.props.task._id);
+   }
  
 +  togglePrivate() {
-+    Meteor.call("setPrivate", this.props.task._id, ! this.props.task.private);
-+  },
++    Meteor.call('tasks.setPrivate', this.props.task._id, ! this.props.task.private);
++  }
 +
    render() {
      // Give tasks a different className when they are checked off,
      // so that we can style them nicely in CSS
 -- 
-2.6.3
+2.1.3
+
+
+From c91d2a5396784ea2bd9836975ee44bca275cfd51 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 16:33:06 +1100
+Subject: [PATCH 43/50] Step 10.9: Install the classnames NPM package
+
+---
+ package.json | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/package.json b/package.json
+index fb213f3..ad97bd8 100644
+--- a/package.json
++++ b/package.json
+@@ -5,6 +5,7 @@
+     "start": "meteor run"
+   },
+   "dependencies": {
++    "classnames": "^2.2.3",
+     "meteor-node-stubs": "~0.2.0",
+     "react": "^0.14.7",
+     "react-addons-pure-render-mixin": "^0.14.7",
+-- 
+2.1.3
 
 
-From efd858216049ea41a66676313da29b41efd726a4 Mon Sep 17 00:00:00 2001
+From 0103d4d006302d8b8268df20b97a716c048fe182 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:22 -0700
-Subject: [PATCH 39/41] Step 10.8: Add private className to Task when needed
+Subject: [PATCH 44/50] Step 10.10: Add private className to Task when needed
 
 ---
- Task.jsx | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
-
-diff --git a/Task.jsx b/Task.jsx
-index 75827dd..37eadd3 100644
---- a/Task.jsx
-+++ b/Task.jsx
-@@ -21,7 +21,9 @@ Task = React.createClass({
+ imports/ui/Task.jsx | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
+
+diff --git a/imports/ui/Task.jsx b/imports/ui/Task.jsx
+index db0999e..52450c3 100644
+--- a/imports/ui/Task.jsx
++++ b/imports/ui/Task.jsx
+@@ -1,5 +1,6 @@
+ import React, { Component, PropTypes } from 'react';
+ import { Meteor } from 'meteor/meteor';
++import classnames from 'classnames';
+ 
+ // Task component - represents a single todo item
+ export default class Task extends Component {
+@@ -19,7 +20,10 @@ export default class Task extends Component {
    render() {
      // Give tasks a different className when they are checked off,
      // so that we can style them nicely in CSS
--    const taskClassName = this.props.task.checked ? "checked" : "";
-+    // Add "checked" and/or "private" to the className when needed
-+    const taskClassName = (this.props.task.checked ? "checked" : "") + " " +
-+      (this.props.task.private ? "private" : "");
+-    const taskClassName = this.props.task.checked ? 'checked' : '';
++    const taskClassName = classnames({
++      checked: this.props.task.checked,
++      private: this.props.task.private,
++    });
  
      return (
        <li className={taskClassName}>
 -- 
-2.6.3
+2.1.3
 
 
-From e1cc035800424d4326aaeb1892806d0049913dac Mon Sep 17 00:00:00 2001
+From 255b2e9c631a472fd7be694d7beda1cd8f55367c Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:58 -0700
-Subject: [PATCH 40/41] Step 10.9: Only publish tasks the current user can see
+Subject: [PATCH 45/50] Step 10.11: Only publish tasks the current user can see
 
 ---
- simple-todos-react.jsx | 8 +++++++-
+ imports/api/tasks.js | 8 +++++++-
  1 file changed, 7 insertions(+), 1 deletion(-)
 
-diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
-index c2a3196..24849d5 100644
---- a/simple-todos-react.jsx
-+++ b/simple-todos-react.jsx
-@@ -16,8 +16,14 @@ if (Meteor.isClient) {
- }
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index f1d2c92..441feee 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -6,8 +6,14 @@ export const Tasks = new Mongo.Collection('tasks');
  
  if (Meteor.isServer) {
+   // This code only runs on the server
 +  // Only publish tasks that are public or belong to the current user
-   Meteor.publish("tasks", function () {
+   Meteor.publish('tasks', function tasksPublication() {
 -    return Tasks.find();
 +    return Tasks.find({
 +      $or: [
-+        { private: {$ne: true} },
-+        { owner: this.userId }
-+      ]
++        { private: { $ne: true } },
++        { owner: this.userId },
++      ],
 +    });
    });
  }
  
 -- 
-2.6.3
+2.1.3
 
 
-From 3babdf6e68e7324735500a9203460b15915608ce Mon Sep 17 00:00:00 2001
+From f645c84ea0fbf00dfe45819e5aacbe077fc73b9a Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:40:55 -0700
-Subject: [PATCH 41/41] Step 10.10: Add extra security to methods
+Subject: [PATCH 46/50] Step 10.12: Add extra security to methods
 
 ---
- simple-todos-react.jsx | 12 ++++++++++++
+ imports/api/tasks.js | 12 ++++++++++++
  1 file changed, 12 insertions(+)
 
-diff --git a/simple-todos-react.jsx b/simple-todos-react.jsx
-index 24849d5..2b4ada2 100644
---- a/simple-todos-react.jsx
-+++ b/simple-todos-react.jsx
-@@ -43,10 +43,22 @@ Meteor.methods({
-   },
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index 441feee..9d5b56a 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -36,12 +36,24 @@ Meteor.methods({
+   'tasks.remove'(taskId) {
+     check(taskId, String);
  
-   removeTask(taskId) {
 +    const task = Tasks.findOne(taskId);
 +    if (task.private && task.owner !== Meteor.userId()) {
 +      // If the task is private, make sure only the owner can delete it
-+      throw new Meteor.Error("not-authorized");
++      throw new Meteor.Error('not-authorized');
 +    }
 +
      Tasks.remove(taskId);
    },
+   'tasks.setChecked'(taskId, setChecked) {
+     check(taskId, String);
+     check(setChecked, Boolean);
  
-   setChecked(taskId, setChecked) {
 +    const task = Tasks.findOne(taskId);
 +    if (task.private && task.owner !== Meteor.userId()) {
 +      // If the task is private, make sure only the owner can check it off
-+      throw new Meteor.Error("not-authorized");
++      throw new Meteor.Error('not-authorized');
 +    }
 +
-     Tasks.update(taskId, { $set: { checked: setChecked} });
+     Tasks.update(taskId, { $set: { checked: setChecked } });
    },
+   'tasks.setPrivate'(taskId, setToPrivate) {
+-- 
+2.1.3
+
+
+From 5ab7e080629e31a930b958d30cad7648b85aab2e Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 16:35:58 +1100
+Subject: [PATCH 47/50] Step 11.1: Added practicalmeteor:mocha package
+
+---
+ .meteor/packages | 1 +
+ .meteor/versions | 6 ++++++
+ 2 files changed, 7 insertions(+)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index 6ec9016..7e39952 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -20,3 +20,4 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
+ react-meteor-data@0.2.6-beta.16
+ accounts-ui
+ accounts-password
++practicalmeteor:mocha
+diff --git a/.meteor/versions b/.meteor/versions
+index cee5a46..53843b3 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -16,6 +16,7 @@ caching-compiler@1.0.2-rc.2
+ caching-html-compiler@1.0.4-rc.2
+ callback-hook@1.0.6-rc.2
+ check@1.1.2-rc.2
++coffeescript@1.0.15-rc.2
+ ddp@1.2.3-rc.2
+ ddp-client@1.2.3-rc.2
+ ddp-common@1.2.3-rc.2
+@@ -56,6 +57,11 @@ npm-bcrypt@0.7.8_2
+ npm-mongo@1.4.41-rc.2
+ observe-sequence@1.0.9-rc.2
+ ordered-dict@1.0.5-rc.2
++practicalmeteor:chai@2.1.0_1
++practicalmeteor:loglevel@1.2.0_2
++practicalmeteor:mocha@2.1.0_7
++practicalmeteor:mocha-core@0.1.4
++practicalmeteor:sinon@1.14.1_2
+ promise@0.6.4-rc.2
+ random@1.0.7-rc.2
+ rate-limit@1.0.2-rc.2
+-- 
+2.1.3
+
+
+From ed6c9e21b030f2112546117b891c8ba5af078591 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 16:36:17 +1100
+Subject: [PATCH 48/50] Step 11.2: Add a scaffold for a method test
+
+---
+ imports/api/tasks.tests.js | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
+ create mode 100644 imports/api/tasks.tests.js
+
+diff --git a/imports/api/tasks.tests.js b/imports/api/tasks.tests.js
+new file mode 100644
+index 0000000..05287ba
+--- /dev/null
++++ b/imports/api/tasks.tests.js
+@@ -0,0 +1,12 @@
++/* eslint-env mocha */
++
++import { Meteor } from 'meteor/meteor';
++
++if (Meteor.isServer) {
++  describe('Tasks', () => {
++    describe('methods', () => {
++      it('can delete owned task', () => {
++      });
++    });
++  });
++}
+-- 
+2.1.3
+
+
+From e5d24a72761492da42eb982cc59a64371db7be4a Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 16:36:29 +1100
+Subject: [PATCH 49/50] Step 11.3: Prepare the database for each test
+
+---
+ imports/api/tasks.tests.js | 16 ++++++++++++++++
+ 1 file changed, 16 insertions(+)
+
+diff --git a/imports/api/tasks.tests.js b/imports/api/tasks.tests.js
+index 05287ba..1359e85 100644
+--- a/imports/api/tasks.tests.js
++++ b/imports/api/tasks.tests.js
+@@ -1,10 +1,26 @@
+ /* eslint-env mocha */
  
+ import { Meteor } from 'meteor/meteor';
++import { Random } from 'meteor/random';
++
++import { Tasks } from './tasks.js';
+ 
+ if (Meteor.isServer) {
+   describe('Tasks', () => {
+     describe('methods', () => {
++      const userId = Random.id();
++      let taskId;
++
++      beforeEach(() => {
++        Tasks.remove({});
++        taskId = Tasks.insert({
++          text: 'test task',
++          createdAt: new Date(),
++          owner: userId,
++          username: 'tmeasday',
++        });
++      });
++
+       it('can delete owned task', () => {
+       });
+     });
+-- 
+2.1.3
+
+
+From e2ede7952b00434f63386423bf8ecb0d9f5d7047 Mon Sep 17 00:00:00 2001
+From: Tom Coleman <tom@thesnail.org>
+Date: Fri, 18 Mar 2016 16:36:42 +1100
+Subject: [PATCH 50/50] Step 11.4: Added test to check delete method
+
+---
+ imports/api/tasks.tests.js | 13 +++++++++++++
+ 1 file changed, 13 insertions(+)
+
+diff --git a/imports/api/tasks.tests.js b/imports/api/tasks.tests.js
+index 1359e85..9b61c5a 100644
+--- a/imports/api/tasks.tests.js
++++ b/imports/api/tasks.tests.js
+@@ -2,6 +2,7 @@
+ 
+ import { Meteor } from 'meteor/meteor';
+ import { Random } from 'meteor/random';
++import { assert } from 'meteor/practicalmeteor:chai';
+ 
+ import { Tasks } from './tasks.js';
+ 
+@@ -22,6 +23,18 @@ if (Meteor.isServer) {
+       });
+ 
+       it('can delete owned task', () => {
++        // Find the internal implementation of the task method so we can
++        // test it in isolation
++        const deleteTask = Meteor.server.method_handlers['tasks.remove'];
++
++        // Set up a fake method invocation that looks like what the method expects
++        const invocation = { userId };
++
++        // Run the method with `this` set to the fake invocation
++        deleteTask.apply(invocation, [taskId]);
++
++        // Verify that the method does what we expected
++        assert.equal(Tasks.find().count(), 0);
+       });
+     });
+   });
 -- 
-2.6.3
+2.1.3
 
diff --git a/package.js b/package.js
index bb54449..e145de6 100644
--- a/package.js
+++ b/package.js
@@ -39,7 +39,6 @@ Package.onUse(function (api) {
     'content/angular/step10.md',
     'content/angular/step11.md',
 
-    'content/blaze/step01.md',
     'content/blaze/step02.md',
     'content/blaze/step03.md',
     'content/blaze/step04.md',
@@ -50,7 +49,6 @@ Package.onUse(function (api) {
     'content/blaze/step10.md',
     'content/blaze/step12.md',
 
-    'content/react/step01.md',
     'content/react/step02.md',
     'content/react/step03.md',
     'content/react/step04.md',
@@ -66,6 +64,7 @@ Package.onUse(function (api) {
     'content/shared/adding-css.md',
     'content/shared/adding-css.js',
     'content/shared/nextSteps.md',
+    'content/shared/step01.md',
     'content/shared/step06.md',
     'content/shared/step11.md',
 
diff --git a/repos/react b/repos/react
index 3babdf6..e2ede79 160000
--- a/repos/react
+++ b/repos/react
@@ -1 +1 @@
-Subproject commit 3babdf6e68e7324735500a9203460b15915608ce
+Subproject commit e2ede7952b00434f63386423bf8ecb0d9f5d7047
-- 
2.13.6 (Apple Git-96)


From 42fab5adf7d7ae0033638b2aa863f4eb3ad17fd0 Mon Sep 17 00:00:00 2001
From: Martijn Walraven <martijn@martijnwalraven.com>
Date: Wed, 23 Mar 2016 21:00:02 +0100
Subject: [PATCH 107/164] Modernize mobile step and reference mobile guide

---
 content/shared/step06.md | 54 ++++++++++++++----------------------------------
 1 file changed, 15 insertions(+), 39 deletions(-)

diff --git a/content/shared/step06.md b/content/shared/step06.md
index 792386d..b35f9d4 100644
--- a/content/shared/step06.md
+++ b/content/shared/step06.md
@@ -1,61 +1,47 @@
 {{#template name="sharedStep06"}}
 
-# Running your app on Android or iOS
-
-> Currently, Meteor on Windows does not support mobile builds. If you are using Meteor on Windows, you should skip this step.
+# Running your app on iOS or Android
 
 So far, we've been building our app and testing only in a web browser, but Meteor has been designed to work across different platforms - your simple todo list website can become an iOS or Android app in just a few commands.
 
-Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to skip to the next step.
+Downloading and installing all of the prerequisites for building mobile apps can take a while. If you don't want to wait for this, feel free to skip to the next step.
 
 {{#if specialContent}}
   {{> Template.dynamic template=specialContent}}
 {{/if}}
 
-### Running on an iOS simulator (Mac Only)
-
-If you have a Mac, you can run your app inside the iOS simulator.
+### Running on an iOS Simulator or on an iOS device (Mac Only)
 
-Go to your app folder and type:
+If you have a Mac, you can run your app inside the iOS Simulator or on an iOS device. In order to build and run iOS apps, you will need to install Xcode 7.2 or higher. Refer to the [mobile guide](http://guide.meteor.com/v1.3/mobile.html#installing-prerequisites-ios-on-mac) for the installation steps.
 
-```bash
-meteor install-sdk ios
-```
-
-This will run you through the setup necessary to build an iOS app from your project. When you're done, type:
+In the terminal, go to your app folder and type:
 
 ```bash
 meteor add-platform ios
 meteor run ios
 ```
 
-You will see the iOS simulator pop up with your app running inside.
-
-### Running on an Android emulator
+You will see the iOS Simulator pop up with your app running inside.
 
-In the terminal, go to your app folder and type:
+You can also run your app on an iOS device. Run the following command:
 
 ```bash
-meteor install-sdk android
+meteor run ios-device
 ```
 
-This will help you install all of the necessary tools to build an Android app from your project. When you are done installing everything, type:
+This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
 
-```bash
-meteor add-platform android
-```
+### Running on an Android device
 
-After you agree to the license terms, type:
+In order to build and run Android apps, you will need to install a Java Development Kit (JDK), the Android SDK, and download the required tools, platforms, and other components (which is done most easily by installing Android Studio). Refer to the [mobile guide](http://guide.meteor.com/v1.3/mobile.html#installing-prerequisites-android-on-mac) for the installation steps.
+
+In the terminal, go to your app folder and type:
 
 ```bash
-meteor run android
+meteor add-platform android
 ```
 
-After some initialization, you will see an Android emulator pop up, running your app inside a native Android wrapper. The emulator can be somewhat slow, so if you want to see what it's really like using your app, you should run it on an actual device.
-
-### Running on an Android device
-
-First, complete all of the steps above to set up the Android tools on your system. Then, make sure you have [USB Debugging enabled on your phone](http://developer.android.com/tools/device.html#developer-device-options) and the phone is plugged into your computer with a USB cable. Also, you must quit the Android emulator before running on a device.
+Make sure you have [USB Debugging enabled on your phone](http://developer.android.com/tools/device.html#developer-device-options) and the device is plugged into your computer with a USB cable.
 
 Then, run the following command:
 
@@ -65,16 +51,6 @@ meteor run android-device
 
 The app will be built and installed on your device.
 
-### Running on an iPhone or iPad (Mac Only; requires Apple developer account)
-
-If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
-
-```bash
-meteor run ios-device
-```
-
-This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
-
 Now that we have seen how easy it is to run our app on mobile, let's get to adding some more features.
 
 {{/template}}
-- 
2.13.6 (Apple Git-96)


From aa0b93732aeed94d085026c6e9afa97e9e190d43 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Thu, 24 Mar 2016 09:20:13 +1100
Subject: [PATCH 108/164] Updated links to just go to main guide

cc @martijnwalraven -- by the time this goes live, the guide will be online too (or near enough). This way links will point to later versions of the guide without needing to be changed.
---
 content/shared/step06.md | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/content/shared/step06.md b/content/shared/step06.md
index b35f9d4..69c3d58 100644
--- a/content/shared/step06.md
+++ b/content/shared/step06.md
@@ -12,7 +12,7 @@ Downloading and installing all of the prerequisites for building mobile apps can
 
 ### Running on an iOS Simulator or on an iOS device (Mac Only)
 
-If you have a Mac, you can run your app inside the iOS Simulator or on an iOS device. In order to build and run iOS apps, you will need to install Xcode 7.2 or higher. Refer to the [mobile guide](http://guide.meteor.com/v1.3/mobile.html#installing-prerequisites-ios-on-mac) for the installation steps.
+If you have a Mac, you can run your app inside the iOS Simulator or on an iOS device. In order to build and run iOS apps, you will need to install Xcode 7.2 or higher. Refer to the [mobile guide](http://guide.meteor.com/mobile.html#installing-prerequisites-ios-on-mac) for the installation steps.
 
 In the terminal, go to your app folder and type:
 
@@ -33,7 +33,7 @@ This will open Xcode with a project for your iOS app. You can use Xcode to then
 
 ### Running on an Android device
 
-In order to build and run Android apps, you will need to install a Java Development Kit (JDK), the Android SDK, and download the required tools, platforms, and other components (which is done most easily by installing Android Studio). Refer to the [mobile guide](http://guide.meteor.com/v1.3/mobile.html#installing-prerequisites-android-on-mac) for the installation steps.
+In order to build and run Android apps, you will need to install a Java Development Kit (JDK), the Android SDK, and download the required tools, platforms, and other components (which is done most easily by installing Android Studio). Refer to the [mobile guide](http://guide.meteor.com/mobile.html#installing-prerequisites-android-on-mac) for the installation steps.
 
 In the terminal, go to your app folder and type:
 
-- 
2.13.6 (Apple Git-96)


From 72fc2d4dd04eff1ef112ea45080975ea54b9bfd6 Mon Sep 17 00:00:00 2001
From: Martijn Walraven <martijn@martijnwalraven.com>
Date: Thu, 24 Mar 2016 14:59:54 +0100
Subject: [PATCH 109/164] Update links to the installation instructions in the
 mobile guide

---
 content/shared/step06.md | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/content/shared/step06.md b/content/shared/step06.md
index 69c3d58..0b9da4c 100644
--- a/content/shared/step06.md
+++ b/content/shared/step06.md
@@ -12,7 +12,7 @@ Downloading and installing all of the prerequisites for building mobile apps can
 
 ### Running on an iOS Simulator or on an iOS device (Mac Only)
 
-If you have a Mac, you can run your app inside the iOS Simulator or on an iOS device. In order to build and run iOS apps, you will need to install Xcode 7.2 or higher. Refer to the [mobile guide](http://guide.meteor.com/mobile.html#installing-prerequisites-ios-on-mac) for the installation steps.
+If you have a Mac, you can run your app inside the iOS Simulator or on an iOS device. In order to build and run iOS apps, you will need to install Xcode. Refer to the [mobile guide](http://guide.meteor.com/mobile.html#installing-prerequisites-ios) for installation instructions.
 
 In the terminal, go to your app folder and type:
 
@@ -33,7 +33,7 @@ This will open Xcode with a project for your iOS app. You can use Xcode to then
 
 ### Running on an Android device
 
-In order to build and run Android apps, you will need to install a Java Development Kit (JDK), the Android SDK, and download the required tools, platforms, and other components (which is done most easily by installing Android Studio). Refer to the [mobile guide](http://guide.meteor.com/mobile.html#installing-prerequisites-android-on-mac) for the installation steps.
+In order to build and run Android apps, you will need to install a Java Development Kit (JDK), the Android SDK, and download the required tools, platforms, and other components (which is done most easily by installing Android Studio). Refer to the [mobile guide](http://guide.meteor.com/mobile.html#installing-prerequisites-android) for installation instructions.
 
 In the terminal, go to your app folder and type:
 
-- 
2.13.6 (Apple Git-96)


From ab00e1652ded7aea13f6e702e0b2cb93893e7088 Mon Sep 17 00:00:00 2001
From: Uri Goldshtein <uri.goldshtein@gmail.com>
Date: Thu, 24 Mar 2016 18:41:37 +0200
Subject: [PATCH 110/164] chore(update-1.3): Update angular tutorial to 1.3 and
 modules

---
 content/angular/metadata.js   |    9 +-
 content/angular/step02.md     |   26 +-
 content/angular/step03.md     |    8 +-
 content/angular/step04.md     |    6 +-
 content/angular/step05.md     |   22 +-
 content/angular/step07.md     |   27 +-
 content/angular/step08.md     |   20 +-
 content/angular/step09.md     |    6 +-
 content/angular/step10.md     |    4 +-
 content/angular/step11.md     |   65 +-
 content/angular/step12.md     |   12 +
 content/blaze/metadata.js     |    2 +-
 content/react/metadata.js     |    3 +-
 content/shared/step06.md      |   54 +-
 generated/angular.multi.patch | 2807 +++++++++++++++++++++++++----------------
 package.js                    |    2 +-
 16 files changed, 1892 insertions(+), 1181 deletions(-)
 create mode 100644 content/angular/step12.md

diff --git a/content/angular/metadata.js b/content/angular/metadata.js
index b3f12f8..645401b 100644
--- a/content/angular/metadata.js
+++ b/content/angular/metadata.js
@@ -13,7 +13,7 @@ TutorialRegistry.registerTutorial("angular", {
     {
       title: 'Creating an app',
       slug: "creating-an-app",
-      template: 'angular-step01'
+      template: 'sharedStep01'
     },
     {
       title: 'Templates',
@@ -61,9 +61,14 @@ TutorialRegistry.registerTutorial("angular", {
       template: 'angular-step10'
     },
     {
+      title: 'Testing',
+      slug: "testing",
+      template: 'angular-step11'
+    },
+    {
       title: 'Next steps',
       slug: "next-steps",
-      template: 'angular-step11'
+      template: 'angular-step12'
     }
   ]
 });
diff --git a/content/angular/step02.md b/content/angular/step02.md
index 219c293..3ca19f0 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -3,17 +3,17 @@
 
 To use Angular in our app, we first need to remove the default UI package of Meteor, called `Blaze`.
 
-We also need to remove Meteor's default ECMAScript2015 package named `ecmascript` because Angular-Meteor uses a package named `angular-babel` in order to get both ECMAScript2015 and AngularJS DI annotations.
-
 We remove it by running:
 
     meteor remove blaze-html-templates
-    meteor remove ecmascript
 
-Now we need to add the [angular-meteor package](http://angular-meteor.com/) by typing the following command into the command line:
+Now we need to replace it with UI package for angular:
+
+    meteor add angular-templates
 
-    meteor add angular
+To start working with [angular-meteor](http://angular-meteor.com/), let's add some NPM packages.
 
+    meteor npm install --save angular angular-meteor
 
 To start working on our todos list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
 
@@ -21,10 +21,24 @@ To start working on our todos list app, let's replace the code of the default st
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.3"}}
 
-Now let's create a simple Angular list repeater:
+Let's create a template for todosList component.
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.4"}}
 
+Add some functionality:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="2.5"}}
+
+We can now implement it into the application.
+
+First, we have to put component into a template:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="2.6"}}
+
+Then add module to the application:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="2.7"}}
+
 In our browser, the app should look pretty much like this:
 
 > #### Todo List
diff --git a/content/angular/step03.md b/content/angular/step03.md
index 8966389..c0fa2cd 100644
--- a/content/angular/step03.md
+++ b/content/angular/step03.md
@@ -2,15 +2,11 @@
 
 # Storing tasks in a collection
 
-{{! XXX: should be "simple-todos-angular"}}
 {{> step03CollectionsIntro tutorialName="simple-todos"}}
 
-Let's update our JavaScript code to get our tasks from a collection instead of a static array:
+Let's update our client-side JavaScript code to get our tasks from a collection instead of a static array:
 
-{{> DiffBox tutorialName="simple-todos-angular" step="3.1"}}
-
-We are using the `$meteor` service to bind our `Tasks` collection to our `$scope.tasks` variable.
-Now every change that will happen to each of those objects will be synced in real time across our stack.
+{{> DiffBox tutorialName="simple-todos-angular" step="3.3"}}
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
diff --git a/content/angular/step04.md b/content/angular/step04.md
index 25819a4..670f52a 100644
--- a/content/angular/step04.md
+++ b/content/angular/step04.md
@@ -18,11 +18,11 @@ Now your app has a new input field. To add a task, just type into the input fiel
 
 As you can see, this is just a regular Angular application.
 
-In our case above, we are listening to the `submit` event on our form to call the `addTask` scope function and to reset the input field.
+In our case above, we are listening to the `submit` event on our form to call the `addTask` controller function.
 
 ### Inserting into a collection
 
-Inside our scope function, we are adding a task to the `tasks` collection by simply calling `$scope.tasks.push()`. We can assign any properties to the task object, such as the time created, since we don't ever have to define a schema for the collection.
+Inside our controller function, we are adding a task to the `tasks` collection by simply calling `Tasks.insert()`. We can assign any properties to the task object, such as the time created, since we don't ever have to define a schema for the collection.
 
 Being able to insert anything into the database from the client isn't very secure, but it's okay for now. In step 9 we'll learn how we can make our app secure and restrict how data is inserted into the database.
 
@@ -33,7 +33,7 @@ Currently, our code displays all new tasks at the bottom of the list. That's not
 We can solve this by sorting the results using the `createdAt` field that is automatically added by our new code.
 Until now you probably used Angular sort filter to do so. you can still use that here, but we are going to use a different method because it is better for real world use cases.
 
-Replace the `Tasks` collection variable with a function inside our `$meteor.collection` service call.
+Replace the `Tasks` collection variable with a function inside our `tasks` helper.
 The function will return a the result of calling the `find` function with the `sort` parameter on our `Tasks` collection, like that:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="4.3"}}
diff --git a/content/angular/step05.md b/content/angular/step05.md
index 7143941..9d13f9a 100644
--- a/content/angular/step05.md
+++ b/content/angular/step05.md
@@ -4,17 +4,31 @@
 
 Until now, we have only interacted with a collection by inserting documents. Now, we will learn how to update and remove them.
 
-Let's add two elements to our `task` template, a checkbox and a delete button:
+Let's add two elements to our `todosList` component, a checkbox and a delete button:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="5.1"}}
 
+{{> DiffBox tutorialName="simple-todos-angular" step="5.2"}}
+
 ### Update
 
-We simply bind the `checked` state of each task to a checkbox with Angular. Then Meteor takes care of saving and syncing the state across all clients without any extra code.
+As you can see we added two directives.
+
+To watch `checked` state of each task.
+
+```html
+ng-checked="task.checked"
+```
+
+And to change current state by calling `setChecked` method of the controller.
+
+```html
+ng-click="$ctrl.setChecked(task)"
+```
 
 ### Delete
 
-$meteor.collection gives us a simple helper method called `remove`. That method can take an object or an id of an object and will remove it from the database.
+We can delete task by clicking `removeTask` method.
 
 ### Classes
 
@@ -26,5 +40,5 @@ Here we bind the checked state of a task to a class with `ng-class`:
 <li ng-class="{'checked': task.checked}">
 ```
 
-With this code, if the `checked` property of a task is `true`, the `checked` class is added to our list item. Using this class, we can make checked-off tasks look different in our CSS. 
+With this code, if the `checked` property of a task is `true`, the `checked` class is added to our list item. Using this class, we can make checked-off tasks look different in our CSS.
 {{/template}}
diff --git a/content/angular/step07.md b/content/angular/step07.md
index 4332c24..2771534 100644
--- a/content/angular/step07.md
+++ b/content/angular/step07.md
@@ -10,10 +10,9 @@ First, we need to add a checkbox to our HTML:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="7.1"}}
 
-This checkbox binds to the scope's `hideCompleted` variable.
-> We are using `$parent` because it creates a new child scope.
+This checkbox binds to the controller's `hideCompleted` variable.
 
-Now, we need to update our `$scope.tasks` query each time `hideCompleted` changes.
+Now, we need to update our `tasks` query each time `hideCompleted` changes.
 
 ### Filtering collection syntax
 
@@ -29,29 +28,21 @@ and the query to return only the not completed todos looks like that:
 Tasks.find({ checked: {$ne: true} }, { sort: { createdAt: -1 } })
 ```
 
-### Watching the checkbox
+### Add reactivity
 
-So let's create a scope variable that will hold the wanted query and will change together with the checkbox.
-Inside our controller:
+We somehow want to update the query every time `hideComplete` changes.
 
-{{> DiffBox tutorialName="simple-todos-angular" step="7.2"}}
-
-and let's change our `$scope.tasks` definition accordingly:
+Let's implement some reactivity into `tasks` helper:
 
-{{> DiffBox tutorialName="simple-todos-angular" step="7.3"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="7.2"}}
 
-**but we are missing one more thing** - The expression we are sending `$meteor.collection` is a Meteor expression and
-**Meteor has to know that the Angular `query` parameter has changed**.
+As you can see, we used `getReactively()` method. You can read more about it in the following chapter.
 
 ### Connecting Angular bindings to Meteor's reactivity
 
 To make Meteor understand Angular bindings and the other way around, we use [$scope.getReactively](http://angular-meteor.com/api/getReactively) function that turns Angular
 scope variables into [Meteor reactive variables](http://docs.meteor.com/#/full/reactivevar_pkg).
 
-So now our definition should look like that:
-
-{{> DiffBox tutorialName="simple-todos-angular" step="7.4"}}
-
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
 > To learn more about the [getReactively](http://angular-meteor.com/api/getReactively) feature
@@ -61,8 +52,8 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to add a scope function and change one line of the HTML.
 
-{{> DiffBox tutorialName="simple-todos-angular" step="7.5"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="7.3"}}
 
-{{> DiffBox tutorialName="simple-todos-angular" step="7.6"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="7.4"}}
 
 {{/template}}
diff --git a/content/angular/step08.md b/content/angular/step08.md
index 67f89dc..d5f61d8 100644
--- a/content/angular/step08.md
+++ b/content/angular/step08.md
@@ -13,7 +13,7 @@ meteor add accounts-password dotansimha:accounts-ui-angular
 `accounts-password` is a package that includes all the logic for password based authentication.
 
 `dotansimha:accounts-ui-angular` includes the `<login-buttons>` directive that contains all the HTML and CSS we need for user authentication forms.
- 
+
 Now let's add dependency to `account.ui` module in our module definition:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="8.2"}}
@@ -26,6 +26,10 @@ Then, in your JavaScript, add the following code to configure the accounts UI to
 
 {{> DiffBox tutorialName="simple-todos-angular" step="8.4"}}
 
+We'll need to import that configuration from our *client-side JavaScript entrypoint* also:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="8.5"}}
+
 Now users can create accounts and log into your app! This is very nice, but logging in and out isn't very useful yet. Let's add two functions:
 
 1. Only display the new task input field to logged in users
@@ -38,15 +42,19 @@ To do this, we will add two new fields to the `tasks` collection:
 
 First, let's add some code to save these fields into the `addTask` function:
 
-{{> DiffBox tutorialName="simple-todos-angular" step="8.5"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="8.6"}}
+
+We want somehow to know about logged in user. We can use helper function! Let's call it `currentUser`:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="8.7"}}
 
 Then, in our HTML, add an `ng-show` directive to only show the form when there is a logged in user:
 
-{{> DiffBox tutorialName="simple-todos-angular" step="8.6"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="8.8"}}
 
 Finally, add a statement to display the `username` field on each task right before the text:
 
-{{> DiffBox tutorialName="simple-todos-angular" step="8.7"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="8.9"}}
 
 Now, users can log in and we can track which user each task belongs to. Let's look at some of the concepts we just discovered in more detail.
 
@@ -57,9 +65,7 @@ This dropdown detects which login methods have been added to the app and display
 
 ### Getting information about the logged-in user
 
-In your HTML, you can use the built-in `$root.currentUser` variable to check if a user is logged in and get information about them. For example, `{{dstache}}$root.currentUser.username}}` will display the logged in user's username.
-
-In your JavaScript code, you can use `Meteor.userId()` to get the current user's `_id`, or `Meteor.user()` to get the whole user document.
+You can use `Meteor.userId()` to get the current user's `_id`, or `Meteor.user()` to get the whole user document.
 
 ### Custom templates
 
diff --git a/content/angular/step09.md b/content/angular/step09.md
index 94b77a1..83ed3d8 100644
--- a/content/angular/step09.md
+++ b/content/angular/step09.md
@@ -20,18 +20,16 @@ First, we need to define some methods. We need one method for each database oper
 
 {{> DiffBox tutorialName="simple-todos-angular" step="9.2"}}
 
-Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead:
+Now that we have defined our methods, we need to update the places we were operating on the collection to use the methods instead.
 
 {{> DiffBox tutorialName="simple-todos-angular" step="9.3"}}
 
-and the way we handle the changes in the template:
-
 {{> DiffBox tutorialName="simple-todos-angular" step="9.4"}}
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
 1. When we insert tasks into the database, we can now securely verify that the user is logged in, that the `createdAt` field is correct, and that the `owner` and `username` fields are correct and the user isn't impersonating anyone.
-2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
+2. We can add extra validation logic to `setChecked` and `removeTask` in later steps when users can make tasks private.
 3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
 
 {{> step09OptimisticUI}}
diff --git a/content/angular/step10.md b/content/angular/step10.md
index f47f78c..1b089a5 100644
--- a/content/angular/step10.md
+++ b/content/angular/step10.md
@@ -10,7 +10,7 @@ Just like with `insecure` in the last step, all new Meteor apps start with the `
 meteor remove autopublish
 ```
 
-When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and [$scope.$meteorSubscribe](http://angular-meteor.com/api/subscribe).
+When the app refreshes, the task list will be empty. Without the `autopublish` package, we will have to specify explicitly what the server sends to the client. The functions in Meteor that do this are `Meteor.publish` and [$scope.subscribe](http://angular-meteor.com/api/subscribe).
 
 Let's add them now.
 
@@ -20,7 +20,7 @@ Let's add them now.
 
 Once you have added this code, all of the tasks will reappear.
 
-Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When [$scope.$meteorSubscribe](http://angular-meteor.com/api/subscribe) is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
+Calling `Meteor.publish` on the server registers a _publication_ named `"tasks"`. When [$scope.subscribe](http://angular-meteor.com/api/subscribe) is called on the client with the publication name, the client _subscribes_ to all the data from that publication, which in this case is all of the tasks in the database. To truly see the power of the publish/subscribe model, let's implement a feature that allows users to mark tasks as "private" so that no other users can see them.
 
 ### Implementing private tasks
 
diff --git a/content/angular/step11.md b/content/angular/step11.md
index 55e7619..c4eb695 100644
--- a/content/angular/step11.md
+++ b/content/angular/step11.md
@@ -1,12 +1,67 @@
 {{#template name="angular-step11"}}
 
-# What's next?
+# Testing
 
-Congratulations on your newly built Meteor app!
+Now we've created a few features for our application, let's add a test to ensure that we don't regress and that it works the way we expect.
 
-Your app currently supports collaborating on a single todo list. To see how you
-could add more functionality, check out the [full angular-meteor tutorial](http://angular-meteor.com/).
+We'll write a test that exercises one of our Methods (which form the "write" part of our app's API), and verifies it works correctly.
 
-{{> step11NextSteps}}
+To do so, we'll add a [test driver](http://guide.meteor.com/testing.html#test-driver) for the [Mocha](https://mochajs.org) JavaScript test framework:
+
+```bash
+meteor add practicalmeteor:mocha
+```
+
+We can now run our app in "test mode" by calling out a special command and specifying to use the driver (you'll need to stop the regular app from running, or specify an alternate port with `--port XYZ`:
+
+```bash
+meteor test --driver-package practicalmeteor:mocha
+```
+
+If you do so, you should see an empty test results page in your browser window.
+
+Let's add a simple test (that doesn't do anything yet):
+
+{{> DiffBox tutorialName="simple-todos-angular" step="11.2"}}
+
+In any test we need to ensure the database is in the state we expect before beginning. We can use Mocha's `beforeEach` construct to that easily:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="11.3"}}
+
+Here we create a single task that's associated with a random `userId` that'll be different for each test run.
+
+Now we can write the test to call the `task.remove` method "as" that user and verify the task is deleted:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="11.4"}}
+
+There's a lot more you can do in a Meteor test! You can read more about it in the Meteor Guide [article on testing](http://guide.meteor.com/testing.html).
+
+# Testing the component
+
+We need one thing to start writing tests of our angular component.
+
+```bash
+meteor npm install --save-dev angular-mocks
+```
+
+Let's prepare some background for tests:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="11.6"}}
+
+Add test to check incomplete tasks count:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="11.7"}}
+
+Now we can move to testing our controller:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="11.8"}}
+
+As you remember, we use meteor method to insert new tasks. Let's check if it works:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="11.9"}}
+
+It should also reseting form:
+
+{{> DiffBox tutorialName="simple-todos-angular" step="11.10"}}
 
 {{/template}}
diff --git a/content/angular/step12.md b/content/angular/step12.md
new file mode 100644
index 0000000..a56645d
--- /dev/null
+++ b/content/angular/step12.md
@@ -0,0 +1,12 @@
+{{#template name="angular-step12"}}
+
+# What's next?
+
+Congratulations on your newly built Meteor app!
+
+Your app currently supports collaborating on a single todo list. To see how you
+could add more functionality, check out the [full angular-meteor tutorial](http://angular-meteor.com/).
+
+{{> step11NextSteps}}
+
+{{/template}}
diff --git a/content/blaze/metadata.js b/content/blaze/metadata.js
index b7c55b4..04991e4 100644
--- a/content/blaze/metadata.js
+++ b/content/blaze/metadata.js
@@ -62,7 +62,7 @@ TutorialRegistry.registerTutorial("blaze", {
     },
     {
       title: 'Testing',
-      slug: "teesting",
+      slug: "testing",
       template: 'sharedStep11'
     },
     {
diff --git a/content/react/metadata.js b/content/react/metadata.js
index 02a1278..b2f5347 100644
--- a/content/react/metadata.js
+++ b/content/react/metadata.js
@@ -62,7 +62,7 @@ TutorialRegistry.registerTutorial("react", {
     },
     {
       title: 'Testing',
-      slug: "teesting",
+      slug: "testing",
       template: 'sharedStep11'
     },
     {
@@ -72,4 +72,3 @@ TutorialRegistry.registerTutorial("react", {
     }
   ]
 });
-
diff --git a/content/shared/step06.md b/content/shared/step06.md
index 0b9da4c..792386d 100644
--- a/content/shared/step06.md
+++ b/content/shared/step06.md
@@ -1,47 +1,61 @@
 {{#template name="sharedStep06"}}
 
-# Running your app on iOS or Android
+# Running your app on Android or iOS
+
+> Currently, Meteor on Windows does not support mobile builds. If you are using Meteor on Windows, you should skip this step.
 
 So far, we've been building our app and testing only in a web browser, but Meteor has been designed to work across different platforms - your simple todo list website can become an iOS or Android app in just a few commands.
 
-Downloading and installing all of the prerequisites for building mobile apps can take a while. If you don't want to wait for this, feel free to skip to the next step.
+Meteor makes it easy to set up all of the tools required to build mobile apps, but downloading all of the programs can take a while - for Android the download is about 300MB and for iOS you need to install Xcode which is about 2GB. If you don't want to wait to download these tools, feel free to skip to the next step.
 
 {{#if specialContent}}
   {{> Template.dynamic template=specialContent}}
 {{/if}}
 
-### Running on an iOS Simulator or on an iOS device (Mac Only)
+### Running on an iOS simulator (Mac Only)
 
-If you have a Mac, you can run your app inside the iOS Simulator or on an iOS device. In order to build and run iOS apps, you will need to install Xcode. Refer to the [mobile guide](http://guide.meteor.com/mobile.html#installing-prerequisites-ios) for installation instructions.
+If you have a Mac, you can run your app inside the iOS simulator.
 
-In the terminal, go to your app folder and type:
+Go to your app folder and type:
+
+```bash
+meteor install-sdk ios
+```
+
+This will run you through the setup necessary to build an iOS app from your project. When you're done, type:
 
 ```bash
 meteor add-platform ios
 meteor run ios
 ```
 
-You will see the iOS Simulator pop up with your app running inside.
+You will see the iOS simulator pop up with your app running inside.
+
+### Running on an Android emulator
 
-You can also run your app on an iOS device. Run the following command:
+In the terminal, go to your app folder and type:
 
 ```bash
-meteor run ios-device
+meteor install-sdk android
 ```
 
-This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
+This will help you install all of the necessary tools to build an Android app from your project. When you are done installing everything, type:
 
-### Running on an Android device
-
-In order to build and run Android apps, you will need to install a Java Development Kit (JDK), the Android SDK, and download the required tools, platforms, and other components (which is done most easily by installing Android Studio). Refer to the [mobile guide](http://guide.meteor.com/mobile.html#installing-prerequisites-android) for installation instructions.
+```bash
+meteor add-platform android
+```
 
-In the terminal, go to your app folder and type:
+After you agree to the license terms, type:
 
 ```bash
-meteor add-platform android
+meteor run android
 ```
 
-Make sure you have [USB Debugging enabled on your phone](http://developer.android.com/tools/device.html#developer-device-options) and the device is plugged into your computer with a USB cable.
+After some initialization, you will see an Android emulator pop up, running your app inside a native Android wrapper. The emulator can be somewhat slow, so if you want to see what it's really like using your app, you should run it on an actual device.
+
+### Running on an Android device
+
+First, complete all of the steps above to set up the Android tools on your system. Then, make sure you have [USB Debugging enabled on your phone](http://developer.android.com/tools/device.html#developer-device-options) and the phone is plugged into your computer with a USB cable. Also, you must quit the Android emulator before running on a device.
 
 Then, run the following command:
 
@@ -51,6 +65,16 @@ meteor run android-device
 
 The app will be built and installed on your device.
 
+### Running on an iPhone or iPad (Mac Only; requires Apple developer account)
+
+If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
+
+```bash
+meteor run ios-device
+```
+
+This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
+
 Now that we have seen how easy it is to run our app on mobile, let's get to adding some more features.
 
 {{/template}}
diff --git a/generated/angular.multi.patch b/generated/angular.multi.patch
index eff27f4..20f6d34 100644
--- a/generated/angular.multi.patch
+++ b/generated/angular.multi.patch
@@ -1,20 +1,24 @@
-From 3dc2173923b9df9038203763ca8d32864fd9f18d Mon Sep 17 00:00:00 2001
+From 81f5bb9f9167d989358f5a79dc2a62d750f100d7 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 27 Sep 2015 14:18:50 +0300
-Subject: [PATCH 01/39] Step 1: Run `meteor create`
+Date: Thu, 24 Mar 2016 17:53:46 +0200
+Subject: [PATCH 01/55] Step 1: Run `meteor create`
 
 ---
- .meteor/.finished-upgraders | 12 +++++++++
+ .gitignore                  |  1 +
+ .meteor/.finished-upgraders | 13 +++++++++
  .meteor/.gitignore          |  1 +
  .meteor/.id                 |  7 +++++
- .meteor/packages            | 20 ++++++++++++++
+ .meteor/packages            | 21 ++++++++++++++
  .meteor/platforms           |  2 ++
  .meteor/release             |  1 +
- .meteor/versions            | 66 +++++++++++++++++++++++++++++++++++++++++++++
- simple-todos-angular.css    |  1 +
- simple-todos-angular.html   | 14 ++++++++++
- simple-todos-angular.js     | 23 ++++++++++++++++
- 10 files changed, 147 insertions(+)
+ .meteor/versions            | 69 +++++++++++++++++++++++++++++++++++++++++++++
+ client/main.css             |  1 +
+ client/main.html            | 25 ++++++++++++++++
+ client/main.js              | 22 +++++++++++++++
+ package.json                | 10 +++++++
+ server/main.js              |  5 ++++
+ 13 files changed, 178 insertions(+)
+ create mode 100644 .gitignore
  create mode 100644 .meteor/.finished-upgraders
  create mode 100644 .meteor/.gitignore
  create mode 100644 .meteor/.id
@@ -22,16 +26,26 @@ Subject: [PATCH 01/39] Step 1: Run `meteor create`
  create mode 100644 .meteor/platforms
  create mode 100644 .meteor/release
  create mode 100644 .meteor/versions
- create mode 100644 simple-todos-angular.css
- create mode 100644 simple-todos-angular.html
- create mode 100644 simple-todos-angular.js
+ create mode 100644 client/main.css
+ create mode 100644 client/main.html
+ create mode 100644 client/main.js
+ create mode 100644 package.json
+ create mode 100644 server/main.js
 
+diff --git a/.gitignore b/.gitignore
+new file mode 100644
+index 0000000..40b878d
+--- /dev/null
++++ b/.gitignore
+@@ -0,0 +1 @@
++node_modules/
+\ No newline at end of file
 diff --git a/.meteor/.finished-upgraders b/.meteor/.finished-upgraders
 new file mode 100644
-index 0000000..61ee313
+index 0000000..dacc2c0
 --- /dev/null
 +++ b/.meteor/.finished-upgraders
-@@ -0,0 +1,12 @@
+@@ -0,0 +1,13 @@
 +# This file contains information which helps Meteor properly upgrade your
 +# app when you run 'meteor update'. You should check it into version control
 +# with your project.
@@ -44,6 +58,7 @@ index 0000000..61ee313
 +1.2.0-meteor-platform-split
 +1.2.0-cordova-changes
 +1.2.0-breaking-changes
++1.3.0-split-minifiers-package
 diff --git a/.meteor/.gitignore b/.meteor/.gitignore
 new file mode 100644
 index 0000000..4083037
@@ -53,7 +68,7 @@ index 0000000..4083037
 +local
 diff --git a/.meteor/.id b/.meteor/.id
 new file mode 100644
-index 0000000..fef25df
+index 0000000..bc09f93
 --- /dev/null
 +++ b/.meteor/.id
 @@ -0,0 +1,7 @@
@@ -63,13 +78,13 @@ index 0000000..fef25df
 +#   - ensuring you don't accidentally deploy one app on top of another
 +#   - providing package authors with aggregated statistics
 +
-+1szqmjtlgnfrb1a0907w
++1vxxaq5ipkkmy1fjan5v
 diff --git a/.meteor/packages b/.meteor/packages
 new file mode 100644
-index 0000000..a9f8340
+index 0000000..d4c8001
 --- /dev/null
 +++ b/.meteor/packages
-@@ -0,0 +1,20 @@
+@@ -0,0 +1,21 @@
 +# Meteor packages used by this project, one per line.
 +# Check this file (and the other files in this directory) into your repository.
 +#
@@ -80,11 +95,12 @@ index 0000000..a9f8340
 +mobile-experience       # Packages for a great mobile UX
 +mongo                   # The database Meteor supports right now
 +blaze-html-templates    # Compile .html files into Meteor Blaze views
-+session                 # Client-side reactive dictionary for your app
++reactive-var            # Reactive variable for tracker
 +jquery                  # Helpful client-side library
 +tracker                 # Meteor's client-side reactive programming library
 +
-+standard-minifiers      # JS/CSS minifiers run for production mode
++standard-minifier-css   # CSS minifier run for production mode
++standard-minifier-js    # JS minifier run for production mode
 +es5-shim                # ECMAScript 5 compatibility for older browsers.
 +ecmascript              # Enable ECMAScript2015+ syntax in app code
 +
@@ -100,1207 +116,1381 @@ index 0000000..efeba1b
 +browser
 diff --git a/.meteor/release b/.meteor/release
 new file mode 100644
-index 0000000..238bbcc
+index 0000000..621e94f
 --- /dev/null
 +++ b/.meteor/release
 @@ -0,0 +1 @@
-+METEOR@1.2.0.1
++none
 diff --git a/.meteor/versions b/.meteor/versions
 new file mode 100644
-index 0000000..e378b68
+index 0000000..0ee9e95
 --- /dev/null
 +++ b/.meteor/versions
-@@ -0,0 +1,66 @@
-+autopublish@1.0.4
-+autoupdate@1.2.3
-+babel-compiler@5.8.24_1
-+babel-runtime@0.1.4
-+base64@1.0.4
-+binary-heap@1.0.4
-+blaze@2.1.3
-+blaze-html-templates@1.0.1
-+blaze-tools@1.0.4
-+boilerplate-generator@1.0.4
-+caching-compiler@1.0.0
-+caching-html-compiler@1.0.1
-+callback-hook@1.0.4
-+check@1.0.6
-+ddp@1.2.2
-+ddp-client@1.2.1
-+ddp-common@1.2.1
-+ddp-server@1.2.1
-+deps@1.0.9
-+diff-sequence@1.0.1
-+ecmascript@0.1.4
-+ecmascript-collections@0.1.6
-+ejson@1.0.7
-+es5-shim@4.1.13
-+fastclick@1.0.7
-+geojson-utils@1.0.4
-+hot-code-push@1.0.0
-+html-tools@1.0.5
-+htmljs@1.0.5
-+http@1.1.1
-+id-map@1.0.4
-+insecure@1.0.4
-+jquery@1.11.4
-+launch-screen@1.0.4
-+livedata@1.0.15
-+logging@1.0.8
-+meteor@1.1.7
-+meteor-base@1.0.1
-+minifiers@1.1.7
-+minimongo@1.0.9
-+mobile-experience@1.0.1
-+mobile-status-bar@1.0.6
-+mongo@1.1.1
-+mongo-id@1.0.1
-+npm-mongo@1.4.39_1
-+observe-sequence@1.0.7
-+ordered-dict@1.0.4
-+promise@0.4.8
-+random@1.0.4
-+reactive-dict@1.1.1
-+reactive-var@1.0.6
-+reload@1.1.4
-+retry@1.0.4
-+routepolicy@1.0.6
-+session@1.1.1
-+spacebars@1.0.7
-+spacebars-compiler@1.0.7
-+standard-minifiers@1.0.0
-+templating@1.1.3
-+templating-tools@1.0.0
-+tracker@1.0.8
-+ui@1.0.8
-+underscore@1.0.4
-+url@1.0.5
-+webapp@1.2.2
-+webapp-hashing@1.0.5
-diff --git a/simple-todos-angular.css b/simple-todos-angular.css
+@@ -0,0 +1,69 @@
++allow-deny@1.0.2-rc.8
++autopublish@1.0.5-rc.8
++autoupdate@1.2.6-rc.8
++babel-compiler@6.5.2-rc.8
++babel-runtime@0.1.6-rc.8
++base64@1.0.6-rc.8
++binary-heap@1.0.6-rc.8
++blaze@2.1.5-rc.8
++blaze-html-templates@1.0.2-rc.8
++blaze-tools@1.0.6-rc.8
++boilerplate-generator@1.0.6-rc.8
++caching-compiler@1.0.2-rc.8
++caching-html-compiler@1.0.4-rc.8
++callback-hook@1.0.6-rc.8
++check@1.1.2-rc.8
++ddp@1.2.3-rc.8
++ddp-client@1.2.3-rc.8
++ddp-common@1.2.3-rc.8
++ddp-server@1.2.4-rc.8
++deps@1.0.10-rc.8
++diff-sequence@1.0.3-rc.8
++ecmascript@0.4.1-rc.8
++ecmascript-runtime@0.2.8-rc.8
++ejson@1.0.9-rc.8
++es5-shim@4.5.8-rc.8
++fastclick@1.0.9-rc.8
++geojson-utils@1.0.6-rc.8
++hot-code-push@1.0.2-rc.8
++html-tools@1.0.7-rc.8
++htmljs@1.0.7-rc.8
++http@1.1.3-rc.8
++id-map@1.0.5-rc.8
++insecure@1.0.5-rc.8
++jquery@1.11.6-rc.8
++launch-screen@1.0.8-rc.8
++livedata@1.0.16-rc.8
++logging@1.0.10-rc.8
++meteor@1.1.12-rc.8
++meteor-base@1.0.2-rc.8
++minifier-css@1.1.9-rc.8
++minifier-js@1.1.9-rc.8
++minimongo@1.0.12-rc.8
++mobile-experience@1.0.2-rc.8
++mobile-status-bar@1.0.10-rc.8
++modules@0.5.1-rc.8
++modules-runtime@0.6.1-rc.8
++mongo@1.1.5-rc.8
++mongo-id@1.0.2-rc.8
++npm-mongo@1.4.41-rc.8
++observe-sequence@1.0.9-rc.8
++ordered-dict@1.0.5-rc.8
++promise@0.6.4-rc.8
++random@1.0.7-rc.8
++reactive-var@1.0.7-rc.8
++reload@1.1.6-rc.8
++retry@1.0.5-rc.8
++routepolicy@1.0.8-rc.8
++spacebars@1.0.9-rc.8
++spacebars-compiler@1.0.9-rc.8
++standard-minifier-css@1.0.4-rc.8
++standard-minifier-js@1.0.4-rc.8
++templating@1.1.7-rc.8
++templating-tools@1.0.2-rc.8
++tracker@1.0.11-rc.8
++ui@1.0.9-rc.8
++underscore@1.0.6-rc.8
++url@1.0.7-rc.8
++webapp@1.2.6-rc.8
++webapp-hashing@1.0.7-rc.8
+diff --git a/client/main.css b/client/main.css
 new file mode 100644
 index 0000000..b6b4052
 --- /dev/null
-+++ b/simple-todos-angular.css
++++ b/client/main.css
 @@ -0,0 +1 @@
 +/* CSS declarations go here */
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
+diff --git a/client/main.html b/client/main.html
 new file mode 100644
-index 0000000..30ca9b0
+index 0000000..203539b
 --- /dev/null
-+++ b/simple-todos-angular.html
-@@ -0,0 +1,14 @@
++++ b/client/main.html
+@@ -0,0 +1,25 @@
 +<head>
-+  <title>simple-todos-angular</title>
++  <title>simple</title>
 +</head>
 +
 +<body>
 +  <h1>Welcome to Meteor!</h1>
 +
 +  {{> hello}}
++  {{> info}}
 +</body>
 +
 +<template name="hello">
 +  <button>Click Me</button>
 +  <p>You've pressed the button {{counter}} times.</p>
 +</template>
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
++
++<template name="info">
++  <h2>Learn Meteor!</h2>
++  <ul>
++    <li><a href="https://www.meteor.com/try">Do the Tutorial</a></li>
++    <li><a href="http://guide.meteor.com">Follow the Guide</a></li>
++    <li><a href="https://docs.meteor.com">Read the Docs</a></li>
++    <li><a href="https://forums.meteor.com">Discussions</a></li>
++  </ul>
++</template>
+\ No newline at end of file
+diff --git a/client/main.js b/client/main.js
 new file mode 100644
-index 0000000..4f8c65d
+index 0000000..ecb3282
 --- /dev/null
-+++ b/simple-todos-angular.js
-@@ -0,0 +1,23 @@
-+if (Meteor.isClient) {
++++ b/client/main.js
+@@ -0,0 +1,22 @@
++import { Template } from 'meteor/templating';
++import { ReactiveVar } from 'meteor/reactive-var';
++
++import './main.html';
++
++Template.hello.onCreated(function helloOnCreated() {
 +  // counter starts at 0
-+  Session.setDefault('counter', 0);
++  this.counter = new ReactiveVar(0);
++});
 +
-+  Template.hello.helpers({
-+    counter: function () {
-+      return Session.get('counter');
-+    }
-+  });
++Template.hello.helpers({
++  counter() {
++    return Template.instance().counter.get();
++  },
++});
 +
-+  Template.hello.events({
-+    'click button': function () {
-+      // increment the counter when button is clicked
-+      Session.set('counter', Session.get('counter') + 1);
-+    }
-+  });
++Template.hello.events({
++  'click button'(event, instance) {
++    // increment the counter when button is clicked
++    instance.counter.set(instance.counter.get() + 1);
++  },
++});
+diff --git a/package.json b/package.json
+new file mode 100644
+index 0000000..90be3e8
+--- /dev/null
++++ b/package.json
+@@ -0,0 +1,10 @@
++{
++  "name": "simple-todos-angular",
++  "private": true,
++  "scripts": {
++    "start": "meteor run"
++  },
++  "dependencies": {
++    "meteor-node-stubs": "~0.2.0"
++  }
 +}
+diff --git a/server/main.js b/server/main.js
+new file mode 100644
+index 0000000..31a9e0e
+--- /dev/null
++++ b/server/main.js
+@@ -0,0 +1,5 @@
++import { Meteor } from 'meteor/meteor';
 +
-+if (Meteor.isServer) {
-+  Meteor.startup(function () {
-+    // code to run on server at startup
-+  });
-+}
++Meteor.startup(() => {
++  // code to run on server at startup
++});
 -- 
 2.6.3
 
 
-From 54b4fc3cc09f1071b204d2a722a9aa43df0e4a9e Mon Sep 17 00:00:00 2001
+From 137374c873054f0544bd88e270ed1e7e80f95d0e Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:32:52 +0200
-Subject: [PATCH 02/39] Step 2.1: Remove blaze-html-templates and ecmascript
- package and add angular
+Date: Thu, 24 Mar 2016 17:54:46 +0200
+Subject: [PATCH 02/55] Step 2.1: Remove blaze-html-templates and add
+ angular-templates and angular-meteor NPM package
 
 ---
- .meteor/packages |  3 +--
- .meteor/release  |  2 +-
- .meteor/versions | 43 ++++++++++++++++++++++++-------------------
- 3 files changed, 26 insertions(+), 22 deletions(-)
+ .meteor/packages | 2 +-
+ .meteor/versions | 3 +--
+ package.json     | 2 ++
+ 3 files changed, 4 insertions(+), 3 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index a9f8340..7082732 100644
+index d4c8001..34008f1 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -7,14 +7,13 @@
+@@ -7,7 +7,6 @@
  meteor-base             # Packages every Meteor app needs to have
  mobile-experience       # Packages for a great mobile UX
  mongo                   # The database Meteor supports right now
 -blaze-html-templates    # Compile .html files into Meteor Blaze views
- session                 # Client-side reactive dictionary for your app
+ reactive-var            # Reactive variable for tracker
  jquery                  # Helpful client-side library
  tracker                 # Meteor's client-side reactive programming library
- 
- standard-minifiers      # JS/CSS minifiers run for production mode
- es5-shim                # ECMAScript 5 compatibility for older browsers.
--ecmascript              # Enable ECMAScript2015+ syntax in app code
+@@ -19,3 +18,4 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
  
  autopublish             # Publish all data to the clients (for prototyping)
  insecure                # Allow all DB writes from clients (for prototyping)
-+angular@1.2.0-rc.6
-diff --git a/.meteor/release b/.meteor/release
-index 238bbcc..3a05e0a 100644
---- a/.meteor/release
-+++ b/.meteor/release
-@@ -1 +1 @@
--METEOR@1.2.0.1
-+METEOR@1.2.1
++angular-templates
 diff --git a/.meteor/versions b/.meteor/versions
-index e378b68..4a7a39b 100644
+index 0ee9e95..13a756d 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -1,27 +1,31 @@
-+angular@1.2.0-rc.6
-+angular-meteor-data@0.0.4
-+angular-templates@0.0.1
-+angular:angular@1.4.7
- autopublish@1.0.4
--autoupdate@1.2.3
-+autoupdate@1.2.4
- babel-compiler@5.8.24_1
- babel-runtime@0.1.4
- base64@1.0.4
- binary-heap@1.0.4
- blaze@2.1.3
--blaze-html-templates@1.0.1
- blaze-tools@1.0.4
- boilerplate-generator@1.0.4
- caching-compiler@1.0.0
--caching-html-compiler@1.0.1
-+caching-html-compiler@1.0.2
- callback-hook@1.0.4
--check@1.0.6
-+check@1.1.0
-+dburles:mongo-collection-instances@0.3.4
- ddp@1.2.2
- ddp-client@1.2.1
--ddp-common@1.2.1
--ddp-server@1.2.1
-+ddp-common@1.2.2
-+ddp-server@1.2.2
- deps@1.0.9
- diff-sequence@1.0.1
--ecmascript@0.1.4
--ecmascript-collections@0.1.6
-+ecmascript@0.1.6
-+ecmascript-runtime@0.2.6
- ejson@1.0.7
--es5-shim@4.1.13
-+es5-shim@4.1.14
- fastclick@1.0.7
- geojson-utils@1.0.4
- hot-code-push@1.0.0
-@@ -31,23 +35,25 @@ http@1.1.1
- id-map@1.0.4
- insecure@1.0.4
- jquery@1.11.4
-+lai:collection-extensions@0.1.4
- launch-screen@1.0.4
- livedata@1.0.15
- logging@1.0.8
--meteor@1.1.7
-+meteor@1.1.10
- meteor-base@1.0.1
- minifiers@1.1.7
--minimongo@1.0.9
-+minimongo@1.0.10
- mobile-experience@1.0.1
- mobile-status-bar@1.0.6
--mongo@1.1.1
-+mongo@1.1.3
- mongo-id@1.0.1
- npm-mongo@1.4.39_1
- observe-sequence@1.0.7
- ordered-dict@1.0.4
--promise@0.4.8
--random@1.0.4
--reactive-dict@1.1.1
-+pbastowski:angular-babel@1.0.2
-+promise@0.5.1
-+random@1.0.5
-+reactive-dict@1.1.3
- reactive-var@1.0.6
- reload@1.1.4
- retry@1.0.4
-@@ -55,12 +61,11 @@ routepolicy@1.0.6
- session@1.1.1
- spacebars@1.0.7
- spacebars-compiler@1.0.7
--standard-minifiers@1.0.0
--templating@1.1.3
-+standard-minifiers@1.0.2
- templating-tools@1.0.0
--tracker@1.0.8
-+tracker@1.0.9
- ui@1.0.8
- underscore@1.0.4
- url@1.0.5
--webapp@1.2.2
-+webapp@1.2.3
- webapp-hashing@1.0.5
+@@ -1,4 +1,5 @@
+ allow-deny@1.0.2-rc.8
++angular-templates@1.0.0
+ autopublish@1.0.5-rc.8
+ autoupdate@1.2.6-rc.8
+ babel-compiler@6.5.2-rc.8
+@@ -6,7 +7,6 @@ babel-runtime@0.1.6-rc.8
+ base64@1.0.6-rc.8
+ binary-heap@1.0.6-rc.8
+ blaze@2.1.5-rc.8
+-blaze-html-templates@1.0.2-rc.8
+ blaze-tools@1.0.6-rc.8
+ boilerplate-generator@1.0.6-rc.8
+ caching-compiler@1.0.2-rc.8
+@@ -59,7 +59,6 @@ spacebars@1.0.9-rc.8
+ spacebars-compiler@1.0.9-rc.8
+ standard-minifier-css@1.0.4-rc.8
+ standard-minifier-js@1.0.4-rc.8
+-templating@1.1.7-rc.8
+ templating-tools@1.0.2-rc.8
+ tracker@1.0.11-rc.8
+ ui@1.0.9-rc.8
+diff --git a/package.json b/package.json
+index 90be3e8..648e16e 100644
+--- a/package.json
++++ b/package.json
+@@ -5,6 +5,8 @@
+     "start": "meteor run"
+   },
+   "dependencies": {
++    "angular": "^1.5.2",
++    "angular-meteor": "^1.3.7",
+     "meteor-node-stubs": "~0.2.0"
+   }
+ }
 -- 
 2.6.3
 
 
-From 6fb657fa7f9189200a1725c8b8d9e261fc65dba0 Mon Sep 17 00:00:00 2001
+From daf14b564ab6de18f35a955b9488cb0fb2ae252c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:36:49 +0200
-Subject: [PATCH 03/39] Step 2.2: Add Angular app and controller to HTML
+Date: Thu, 24 Mar 2016 17:56:03 +0200
+Subject: [PATCH 03/55] Step 2.2: Replace starter HTML code
 
 ---
- simple-todos-angular.html | 16 ++++++----------
- 1 file changed, 6 insertions(+), 10 deletions(-)
-
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 30ca9b0..1167ed1 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -1,14 +1,10 @@
+ client/main.html | 22 +++-------------------
+ 1 file changed, 3 insertions(+), 19 deletions(-)
+
+diff --git a/client/main.html b/client/main.html
+index 203539b..c064aae 100644
+--- a/client/main.html
++++ b/client/main.html
+@@ -1,25 +1,9 @@
  <head>
--  <title>simple-todos-angular</title>
+-  <title>simple</title>
 +  <title>Todo List</title>
  </head>
  
  <body>
 -  <h1>Welcome to Meteor!</h1>
--
++  <div class="container" ng-app="simple-todos">
+ 
 -  {{> hello}}
--</body>
+-  {{> info}}
++  </div>
+ </body>
 -
 -<template name="hello">
 -  <button>Click Me</button>
 -  <p>You've pressed the button {{counter}} times.</p>
 -</template>
-+<div class="container"
-+     ng-app="simple-todos"
-+     ng-controller="TodosListCtrl">
-+</div>
-+</body>
+-
+-<template name="info">
+-  <h2>Learn Meteor!</h2>
+-  <ul>
+-    <li><a href="https://www.meteor.com/try">Do the Tutorial</a></li>
+-    <li><a href="http://guide.meteor.com">Follow the Guide</a></li>
+-    <li><a href="https://docs.meteor.com">Read the Docs</a></li>
+-    <li><a href="https://forums.meteor.com">Discussions</a></li>
+-  </ul>
+-</template>
 \ No newline at end of file
 -- 
 2.6.3
 
 
-From 536a1e25561a9bd9e243e820144d2dc3b271ee62 Mon Sep 17 00:00:00 2001
+From eeec7ea8a21aee5dad65cfc9ff480413d07fcb52 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 12:46:44 +0300
-Subject: [PATCH 04/39] Step 2.3: Init Angular app and controller
+Date: Thu, 24 Mar 2016 17:56:48 +0200
+Subject: [PATCH 04/55] Step 2.3: Replace starter JS code
 
 ---
- simple-todos-angular.js | 29 +++++++++++------------------
- 1 file changed, 11 insertions(+), 18 deletions(-)
-
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 4f8c65d..fa676f2 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -1,23 +1,16 @@
- if (Meteor.isClient) {
--  // counter starts at 0
--  Session.setDefault('counter', 0);
+ client/main.js | 26 +++++---------------------
+ 1 file changed, 5 insertions(+), 21 deletions(-)
+
+diff --git a/client/main.js b/client/main.js
+index ecb3282..053a00e 100644
+--- a/client/main.js
++++ b/client/main.js
+@@ -1,22 +1,6 @@
+-import { Template } from 'meteor/templating';
+-import { ReactiveVar } from 'meteor/reactive-var';
++import angular from 'angular';
++import angularMeteor from 'angular-meteor';
  
--  Template.hello.helpers({
--    counter: function () {
--      return Session.get('counter');
--    }
--  });
-+  // This code only runs on the client
-+  angular.module('simple-todos',['angular-meteor']);
- 
--  Template.hello.events({
--    'click button': function () {
--      // increment the counter when button is clicked
--      Session.set('counter', Session.get('counter') + 1);
--    }
--  });
--}
-+  angular.module('simple-todos').controller('TodosListCtrl', ['$scope',
-+    function ($scope) {
-+
-+      $scope.tasks = [
-+        { text: 'This is task 1' },
-+        { text: 'This is task 2' },
-+        { text: 'This is task 3' }
-+      ];
- 
--if (Meteor.isServer) {
--  Meteor.startup(function () {
--    // code to run on server at startup
--  });
-+  }]);
- }
+-import './main.html';
+-
+-Template.hello.onCreated(function helloOnCreated() {
+-  // counter starts at 0
+-  this.counter = new ReactiveVar(0);
+-});
+-
+-Template.hello.helpers({
+-  counter() {
+-    return Template.instance().counter.get();
+-  },
+-});
+-
+-Template.hello.events({
+-  'click button'(event, instance) {
+-    // increment the counter when button is clicked
+-    instance.counter.set(instance.counter.get() + 1);
+-  },
+-});
++angular.module('simple-todos', [
++  angularMeteor
++]);
 -- 
 2.6.3
 
 
-From af67f32ed8e1a7a50111ca06aa7a492288c5d458 Mon Sep 17 00:00:00 2001
+From fc48dfc5acdab05ccdf5ccf64c42301b22caa926 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:40:20 +0200
-Subject: [PATCH 05/39] Step 2.4: Add Angular list to template
+Date: Thu, 24 Mar 2016 17:57:38 +0200
+Subject: [PATCH 05/55] Step 2.4: Create template of todosList component
 
 ---
- simple-todos-angular.html | 9 +++++++++
+ imports/components/todosList/todosList.html | 9 +++++++++
  1 file changed, 9 insertions(+)
+ create mode 100644 imports/components/todosList/todosList.html
 
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 1167ed1..6c3ebe6 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -6,5 +6,14 @@
- <div class="container"
-      ng-app="simple-todos"
-      ng-controller="TodosListCtrl">
+diff --git a/imports/components/todosList/todosList.html b/imports/components/todosList/todosList.html
+new file mode 100644
+index 0000000..a992e45
+--- /dev/null
++++ b/imports/components/todosList/todosList.html
+@@ -0,0 +1,9 @@
++<header>
++  <h1>Todo List</h1>
++</header>
 +
-+  <header>
-+    <h1>Todo List</h1>
-+  </header>
++<ul>
++  <li ng-repeat="task in $ctrl.tasks">
++    {{task.text}}
++  </li>
++</ul>
+-- 
+2.6.3
+
+
+From 0f38eae17f513aa55e6cec93e405e0b604799864 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 17:58:57 +0200
+Subject: [PATCH 06/55] Step 2.5: Create todosList component
+
+---
+ imports/components/todosList/todosList.js | 23 +++++++++++++++++++++++
+ 1 file changed, 23 insertions(+)
+ create mode 100644 imports/components/todosList/todosList.js
+
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+new file mode 100644
+index 0000000..3dcaabb
+--- /dev/null
++++ b/imports/components/todosList/todosList.js
+@@ -0,0 +1,23 @@
++import angular from 'angular';
++import angularMeteor from 'angular-meteor';
++import template from './todosList.html';
 +
-+  <ul>
-+    <li ng-repeat="task in tasks">{{task.text}}</li>
-+  </ul>
++class TodosListCtrl {
++  constructor() {
++    this.tasks = [{
++      text: 'This is task 1'
++    }, {
++      text: 'This is task 2'
++    }, {
++      text: 'This is task 3'
++    }];
++  }
++}
 +
- </div>
++export default angular.module('todosList', [
++  angularMeteor
++])
++  .component('todosList', {
++    templateUrl: 'imports/components/todosList/todosList.html',
++    controller: TodosListCtrl
++  });
+-- 
+2.6.3
+
+
+From 5979d05e35df54b546251dac4395c5873d145d59 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:00:04 +0200
+Subject: [PATCH 07/55] Step 2.6: Add todosList component to app template
+
+---
+ client/main.html | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/client/main.html b/client/main.html
+index c064aae..d0f7ed7 100644
+--- a/client/main.html
++++ b/client/main.html
+@@ -4,6 +4,6 @@
+ 
+ <body>
+   <div class="container" ng-app="simple-todos">
+-
++    <todos-list></todos-list>
+   </div>
  </body>
-\ No newline at end of file
 -- 
 2.6.3
 
 
-From f7b3c6756898b1909e11dbf76a00669778f202ed Mon Sep 17 00:00:00 2001
+From 12ffe2d30b1db1e4c7ca94fe830ba4ea0e28162b Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:00:48 +0200
+Subject: [PATCH 08/55] Step 2.7: Add todosList component to app
+
+---
+ client/main.js | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/client/main.js b/client/main.js
+index 053a00e..8191cb2 100644
+--- a/client/main.js
++++ b/client/main.js
+@@ -1,6 +1,8 @@
+ import angular from 'angular';
+ import angularMeteor from 'angular-meteor';
++import todosList from '../imports/components/todosList/todosList';
+ 
+ angular.module('simple-todos', [
+-  angularMeteor
++  angularMeteor,
++  todosList.name
+ ]);
+-- 
+2.6.3
+
+
+From 0393d12a1cea1c8b0e8713b65a23410f8cd43280 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 12:50:26 +0300
-Subject: [PATCH 06/39] Step 2.5: Add CSS
+Date: Thu, 24 Mar 2016 18:01:22 +0200
+Subject: [PATCH 09/55] Step 2.8: Add CSS
 
 ---
- simple-todos-angular.css | 126 +++++++++++++++++++++++++++++++++++++++++++++++
- 1 file changed, 126 insertions(+)
-
-diff --git a/simple-todos-angular.css b/simple-todos-angular.css
-index b6b4052..0bca5d2 100644
---- a/simple-todos-angular.css
-+++ b/simple-todos-angular.css
-@@ -1 +1,127 @@
+ client/main.css | 125 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 125 insertions(+)
+
+diff --git a/client/main.css b/client/main.css
+index b6b4052..a66ec6f 100644
+--- a/client/main.css
++++ b/client/main.css
+@@ -1 +1,126 @@
  /* CSS declarations go here */
 +body {
-+  font-family: sans-serif;
-+  background-color: #315481;
-+  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
-+  background-attachment: fixed;
++    font-family: sans-serif;
++    background-color: #315481;
++    background-image: linear-gradient(to bottom, #315481, #918e82 100%);
++    background-attachment: fixed;
 +
-+  position: absolute;
-+  top: 0;
-+  bottom: 0;
-+  left: 0;
-+  right: 0;
++    position: absolute;
++    top: 0;
++    bottom: 0;
++    left: 0;
++    right: 0;
 +
-+  padding: 0;
-+  margin: 0;
++    padding: 0;
++    margin: 0;
 +
-+  font-size: 14px;
++    font-size: 14px;
 +}
 +
 +.container {
-+  max-width: 600px;
-+  margin: 0 auto;
-+  min-height: 100%;
-+  background: white;
++    max-width: 600px;
++    margin: 0 auto;
++    min-height: 100%;
++    background: white;
 +}
 +
 +header {
-+  background: #d2edf4;
-+  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
-+  padding: 20px 15px 15px 15px;
-+  position: relative;
++    background: #d2edf4;
++    background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
++    padding: 20px 15px 15px 15px;
++    position: relative;
 +}
 +
 +#login-buttons {
-+  display: block;
++    display: block;
 +}
 +
 +h1 {
-+  font-size: 1.5em;
-+  margin: 0;
-+  margin-bottom: 10px;
-+  display: inline-block;
-+  margin-right: 1em;
++    font-size: 1.5em;
++    margin: 0;
++    margin-bottom: 10px;
++    display: inline-block;
++    margin-right: 1em;
 +}
 +
 +form {
-+  margin-top: 10px;
-+  margin-bottom: -10px;
-+  position: relative;
++    margin-top: 10px;
++    margin-bottom: -10px;
++    position: relative;
 +}
 +
 +.new-task input {
-+  box-sizing: border-box;
-+  padding: 10px 0;
-+  background: transparent;
-+  border: none;
-+  width: 100%;
-+  padding-right: 80px;
-+  font-size: 1em;
++    box-sizing: border-box;
++    padding: 10px 0;
++    background: transparent;
++    border: none;
++    width: 100%;
++    padding-right: 80px;
++    font-size: 1em;
 +}
 +
 +.new-task input:focus{
-+  outline: 0;
++    outline: 0;
 +}
 +
 +ul {
-+  margin: 0;
-+  padding: 0;
-+  background: white;
++    margin: 0;
++    padding: 0;
++    background: white;
 +}
 +
 +.delete {
-+  float: right;
-+  font-weight: bold;
-+  background: none;
-+  font-size: 1em;
-+  border: none;
-+  position: relative;
++    float: right;
++    font-weight: bold;
++    background: none;
++    font-size: 1em;
++    border: none;
++    position: relative;
 +}
 +
 +li {
-+  position: relative;
-+  list-style: none;
-+  padding: 15px;
-+  border-bottom: #eee solid 1px;
++    position: relative;
++    list-style: none;
++    padding: 15px;
++    border-bottom: #eee solid 1px;
 +}
 +
 +li .text {
-+  margin-left: 10px;
++    margin-left: 10px;
 +}
 +
 +li.checked {
-+  color: #888;
++    color: #888;
 +}
 +
 +li.checked .text {
-+  text-decoration: line-through;
++    text-decoration: line-through;
 +}
 +
 +li.private {
-+  background: #eee;
-+  border-color: #ddd;
++    background: #eee;
++    border-color: #ddd;
 +}
 +
 +header .hide-completed {
-+  float: right;
++    float: right;
 +}
 +
 +.toggle-private {
-+  margin-left: 5px;
++    margin-left: 5px;
 +}
 +
 +@media (max-width: 600px) {
-+  li {
-+    padding: 12px 15px;
-+  }
++    li {
++        padding: 12px 15px;
++    }
 +
-+  .search {
-+    width: 150px;
-+    clear: both;
-+  }
++    .search {
++        width: 150px;
++        clear: both;
++    }
 +
-+  .new-task input {
-+    padding-bottom: 5px;
-+  }
++    .new-task input {
++        padding-bottom: 5px;
++    }
 +}
-+
 -- 
 2.6.3
 
 
-From bd137585ec3e93383f3d85d7549fc3b6ece59e1d Mon Sep 17 00:00:00 2001
+From e07b633fc1253c9b5b987e4d850770825a6470ca Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 12:56:31 +0300
-Subject: [PATCH 07/39] Step 3.1: Replace the static array with a Collection
+Date: Thu, 24 Mar 2016 18:02:25 +0200
+Subject: [PATCH 10/55] Step 3.1: Create tasks collection
 
 ---
- simple-todos-angular.js | 14 ++++++--------
- 1 file changed, 6 insertions(+), 8 deletions(-)
+ imports/api/tasks.js | 3 +++
+ 1 file changed, 3 insertions(+)
+ create mode 100644 imports/api/tasks.js
 
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index fa676f2..9a9b236 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -1,16 +1,14 @@
-+Tasks = new Mongo.Collection('tasks');
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+new file mode 100644
+index 0000000..3bed819
+--- /dev/null
++++ b/imports/api/tasks.js
+@@ -0,0 +1,3 @@
++import { Mongo } from 'meteor/mongo';
 +
- if (Meteor.isClient) {
- 
-   // This code only runs on the client
-   angular.module('simple-todos',['angular-meteor']);
- 
--  angular.module('simple-todos').controller('TodosListCtrl', ['$scope',
--    function ($scope) {
-+  angular.module('simple-todos').controller('TodosListCtrl', ['$scope', '$meteor',
-+    function ($scope, $meteor) {
- 
--      $scope.tasks = [
--        { text: 'This is task 1' },
--        { text: 'This is task 2' },
--        { text: 'This is task 3' }
--      ];
-+      $scope.tasks = $meteor.collection(Tasks);
- 
--  }]);
-+    }]);
- }
++export const Tasks = new Mongo.Collection('tasks');
 -- 
 2.6.3
 
 
-From 051ed54c2a220f8c344ab2e9d8c878facb54bb0c Mon Sep 17 00:00:00 2001
+From 7d40b56d0f1b3dc2c20464df81f64afc97ad0608 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:44:38 +0200
-Subject: [PATCH 08/39] Step 4.1: Add new task form to template
+Date: Thu, 24 Mar 2016 18:03:03 +0200
+Subject: [PATCH 11/55] Step 3.2: Load tasks collection on the server
 
 ---
- simple-todos-angular.html | 7 +++++++
- 1 file changed, 7 insertions(+)
-
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 6c3ebe6..ef1a923 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -9,6 +9,13 @@
- 
-   <header>
-     <h1>Todo List</h1>
-+
-+    <!-- add a form below the h1 -->
-+    <form class="new-task" ng-submit="addTask(newTask); newTask='';">
-+      <input ng-model="newTask" type="text"
-+             name="text" placeholder="Type to add new tasks" />
-+    </form>
-+
-   </header>
- 
-   <ul>
+ server/main.js | 6 +-----
+ 1 file changed, 1 insertion(+), 5 deletions(-)
+
+diff --git a/server/main.js b/server/main.js
+index 31a9e0e..ab941a4 100644
+--- a/server/main.js
++++ b/server/main.js
+@@ -1,5 +1 @@
+-import { Meteor } from 'meteor/meteor';
+-
+-Meteor.startup(() => {
+-  // code to run on server at startup
+-});
++import '../imports/api/tasks.js';
 -- 
 2.6.3
 
 
-From b4bbb697c0147ba71087b5e4260f32f513d3390c Mon Sep 17 00:00:00 2001
+From fa3f484a4e0299f0b133958c4754e3d9e95c1550 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:00:30 +0300
-Subject: [PATCH 09/39] Step 4.2: Create Add Task scope function
+Date: Thu, 24 Mar 2016 18:03:56 +0200
+Subject: [PATCH 12/55] Step 3.3: Load tasks from Tasks collection
 
 ---
- simple-todos-angular.js | 7 +++++++
- 1 file changed, 7 insertions(+)
-
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 9a9b236..e9dc878 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -10,5 +10,12 @@ if (Meteor.isClient) {
- 
-       $scope.tasks = $meteor.collection(Tasks);
+ imports/components/todosList/todosList.js | 20 +++++++++++---------
+ 1 file changed, 11 insertions(+), 9 deletions(-)
+
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index 3dcaabb..becd31b 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -1,16 +1,18 @@
+ import angular from 'angular';
+ import angularMeteor from 'angular-meteor';
++import { Tasks } from '../../api/tasks.js';
++
+ import template from './todosList.html';
  
-+      $scope.addTask = function (newTask) {
-+        $scope.tasks.push( {
-+          text: newTask,
-+          createdAt: new Date() }
-+        );
-+      };
-+
-     }]);
+ class TodosListCtrl {
+-  constructor() {
+-    this.tasks = [{
+-      text: 'This is task 1'
+-    }, {
+-      text: 'This is task 2'
+-    }, {
+-      text: 'This is task 3'
+-    }];
++  constructor($scope) {
++    $scope.viewModel(this);
++
++    this.helpers({
++      tasks() {
++        return Tasks.find({});
++      }
++    })
+   }
  }
+ 
+@@ -19,5 +21,5 @@ export default angular.module('todosList', [
+ ])
+   .component('todosList', {
+     templateUrl: 'imports/components/todosList/todosList.html',
+-    controller: TodosListCtrl
++    controller: ['$scope', TodosListCtrl]
+   });
 -- 
 2.6.3
 
 
-From 5528d73545bfb1381b2dc21313e3ad32cd40401f Mon Sep 17 00:00:00 2001
+From 7fb2b760210091447316c28ccd36b3dd9da1d86e Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:01:36 +0300
-Subject: [PATCH 10/39] Step 4.3: Sort task list by date
+Date: Thu, 24 Mar 2016 18:04:31 +0200
+Subject: [PATCH 13/55] Step 4.1: Add form for new tasks
 
 ---
- simple-todos-angular.js | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
+ imports/components/todosList/todosList.html | 5 +++++
+ 1 file changed, 5 insertions(+)
 
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index e9dc878..36ab6d1 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -8,7 +8,9 @@ if (Meteor.isClient) {
-   angular.module('simple-todos').controller('TodosListCtrl', ['$scope', '$meteor',
-     function ($scope, $meteor) {
- 
--      $scope.tasks = $meteor.collection(Tasks);
-+      $scope.tasks = $meteor.collection( function() {
-+        return Tasks.find({}, { sort: { createdAt: -1 } })
-+      });
+diff --git a/imports/components/todosList/todosList.html b/imports/components/todosList/todosList.html
+index a992e45..899f2d5 100644
+--- a/imports/components/todosList/todosList.html
++++ b/imports/components/todosList/todosList.html
+@@ -1,5 +1,10 @@
+ <header>
+   <h1>Todo List</h1>
++
++  <form class="new-task" ng-submit="$ctrl.addTask($ctrl.newTask)">
++    <input ng-model="$ctrl.newTask" type="text" name="text" placeholder="Type to add new tasks"/>
++  </form>
++  
+ </header>
  
-       $scope.addTask = function (newTask) {
-         $scope.tasks.push( {
+ <ul>
 -- 
 2.6.3
 
 
-From 60ba697f05f60f9e8f021ef0fe05effcb0f52fc0 Mon Sep 17 00:00:00 2001
+From 0c2b00a0141b02542bdf43ca7b79e3ff1a160f93 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:46:11 +0200
-Subject: [PATCH 11/39] Step 5.1: Add done and delete buttons to task
+Date: Thu, 24 Mar 2016 18:05:16 +0200
+Subject: [PATCH 14/55] Step 4.2: Add method for form submit
 
 ---
- simple-todos-angular.html | 8 +++++++-
- 1 file changed, 7 insertions(+), 1 deletion(-)
-
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index ef1a923..54765ef 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -19,7 +19,13 @@
-   </header>
- 
-   <ul>
--    <li ng-repeat="task in tasks">{{task.text}}</li>
-+    <li ng-repeat="task in tasks" ng-class="{'checked': task.checked}">
-+      <button class="delete" ng-click="tasks.remove(task)">&times;</button>
+ imports/components/todosList/todosList.js | 11 +++++++++++
+ 1 file changed, 11 insertions(+)
+
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index becd31b..a27e7ae 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -14,6 +14,17 @@ class TodosListCtrl {
+       }
+     })
+   }
 +
-+      <input type="checkbox" ng-model="task.checked" class="toggle-checked" />
++  addTask(newTask) {
++    // Insert a task into the collection
++    Tasks.insert({
++      text: newTask,
++      createdAt: new Date
++    });
 +
-+      <span class="text">{{task.text}}</span>
-+    </li>
-   </ul>
++    // Clear form
++    this.newTask = '';
++  }
+ }
  
- </div>
+ export default angular.module('todosList', [
 -- 
 2.6.3
 
 
-From 3d28d1c4a755457028cf54d9b280970e34ee6a9d Mon Sep 17 00:00:00 2001
+From ad36285f216856d4cd947e72983ee71e7232f740 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:47:17 +0200
-Subject: [PATCH 12/39] Step 6.1: Remove ng-app
+Date: Thu, 24 Mar 2016 18:05:50 +0200
+Subject: [PATCH 15/55] Step 4.3: Show newest tasks at the top
 
 ---
- simple-todos-angular.html | 1 -
- 1 file changed, 1 deletion(-)
-
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 54765ef..364fc82 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -4,7 +4,6 @@
- 
- <body>
- <div class="container"
--     ng-app="simple-todos"
-      ng-controller="TodosListCtrl">
+ imports/components/todosList/todosList.js | 7 ++++++-
+ 1 file changed, 6 insertions(+), 1 deletion(-)
+
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index a27e7ae..976e9a9 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -10,7 +10,12 @@ class TodosListCtrl {
  
-   <header>
+     this.helpers({
+       tasks() {
+-        return Tasks.find({});
++        // Show newest tasks at the top
++        return Tasks.find({}, {
++          sort: {
++            createdAt: -1
++          }
++        });
+       }
+     })
+   }
 -- 
 2.6.3
 
 
-From 99d00a58c6dceb7054043c15e9bb6d47f4cf500b Mon Sep 17 00:00:00 2001
+From e02c4a765836e7860ded695c2d0f8c6184b13220 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:11:07 +0300
-Subject: [PATCH 13/39] Step 6.2: Bootstrap Angular to mobile as well
+Date: Thu, 24 Mar 2016 18:06:38 +0200
+Subject: [PATCH 16/55] Step 5.1: Add buttons to todosList component
 
 ---
- simple-todos-angular.js | 9 +++++++++
- 1 file changed, 9 insertions(+)
-
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 36ab6d1..b002918 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -5,6 +5,15 @@ if (Meteor.isClient) {
-   // This code only runs on the client
-   angular.module('simple-todos',['angular-meteor']);
+ imports/components/todosList/todosList.html | 10 ++++++++--
+ 1 file changed, 8 insertions(+), 2 deletions(-)
+
+diff --git a/imports/components/todosList/todosList.html b/imports/components/todosList/todosList.html
+index 899f2d5..1bfe1c4 100644
+--- a/imports/components/todosList/todosList.html
++++ b/imports/components/todosList/todosList.html
+@@ -8,7 +8,13 @@
+ </header>
  
-+  function onReady() {
-+    angular.bootstrap(document, ['simple-todos']);
-+  }
+ <ul>
+-  <li ng-repeat="task in $ctrl.tasks">
+-    {{task.text}}
++  <li ng-repeat="task in $ctrl.tasks" ng-class="{'checked': task.checked}">
++    <button class="delete" ng-click="$ctrl.removeTask(task)">&times;</button>
 +
-+  if (Meteor.isCordova)
-+    angular.element(document).on('deviceready', onReady);
-+  else
-+    angular.element(document).ready(onReady);
++    <input type="checkbox" ng-checked="task.checked" ng-click="$ctrl.setChecked(task)" class="toggle-checked"/>
++
++    <span class="text">
++      {{task.text}}
++    </span>
+   </li>
+ </ul>
+-- 
+2.6.3
+
+
+From c637635457f0c0e5fe6af6fc5e4a7d708dac25d2 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:07:19 +0200
+Subject: [PATCH 17/55] Step 5.2: Add methods for buttons
+
+---
+ imports/components/todosList/todosList.js | 13 +++++++++++++
+ 1 file changed, 13 insertions(+)
+
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index 976e9a9..8d56f11 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -30,6 +30,19 @@ class TodosListCtrl {
+     // Clear form
+     this.newTask = '';
+   }
 +
-   angular.module('simple-todos').controller('TodosListCtrl', ['$scope', '$meteor',
-     function ($scope, $meteor) {
++  setChecked(task) {
++    // Set the checked property to the opposite of its current value
++    Tasks.update(task._id, {
++      $set: {
++        checked: !task.checked
++      },
++    });
++  }
++
++  removeTask(task) {
++    Tasks.remove(task._id);
++  }
+ }
  
+ export default angular.module('todosList', [
 -- 
 2.6.3
 
 
-From 433b7279aa5a10f07dbbe635575429007cb93197 Mon Sep 17 00:00:00 2001
+From 89c6f656bff10973a22c8e8f5a78341051453096 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:48:18 +0200
-Subject: [PATCH 14/39] Step 7.1: Add hideComplete checkbox to template
+Date: Thu, 24 Mar 2016 18:08:07 +0200
+Subject: [PATCH 18/55] Step 6.1: Remove ng-app
 
 ---
- simple-todos-angular.html | 5 +++++
- 1 file changed, 5 insertions(+)
+ client/main.html | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 364fc82..e03d952 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -9,6 +9,11 @@
-   <header>
-     <h1>Todo List</h1>
+diff --git a/client/main.html b/client/main.html
+index d0f7ed7..f7f43b1 100644
+--- a/client/main.html
++++ b/client/main.html
+@@ -3,7 +3,7 @@
+ </head>
  
-+    <label class="hide-completed">
-+      <input type="checkbox" ng-model="hideCompleted"/>
-+      Hide Completed Tasks
-+    </label>
-+
-     <!-- add a form below the h1 -->
-     <form class="new-task" ng-submit="addTask(newTask); newTask='';">
-       <input ng-model="newTask" type="text"
+ <body>
+-  <div class="container" ng-app="simple-todos">
++  <div class="container">
+     <todos-list></todos-list>
+   </div>
+ </body>
 -- 
 2.6.3
 
 
-From a7861762653c318041327988ce19491585a179ef Mon Sep 17 00:00:00 2001
+From 9d407e878bfc21b7be80bda6361f70a8b8e4f109 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:14:54 +0300
-Subject: [PATCH 15/39] Step 7.2: Watch hideCompleted and change the query
- variable
+Date: Thu, 24 Mar 2016 18:08:45 +0200
+Subject: [PATCH 19/55] Step 6.2: Bootstrap Angular to mobile as well
 
 ---
- simple-todos-angular.js | 7 +++++++
- 1 file changed, 7 insertions(+)
+ client/main.js | 10 ++++++++++
+ 1 file changed, 10 insertions(+)
 
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index b002918..e759172 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -28,5 +28,12 @@ if (Meteor.isClient) {
-         );
-       };
- 
-+      $scope.$watch('hideCompleted', function() {
-+        if ($scope.hideCompleted)
-+          $scope.query = {checked: {$ne: true}};
-+        else
-+          $scope.query = {};
-+      });
+diff --git a/client/main.js b/client/main.js
+index 8191cb2..c79d69c 100644
+--- a/client/main.js
++++ b/client/main.js
+@@ -6,3 +6,13 @@ angular.module('simple-todos', [
+   angularMeteor,
+   todosList.name
+ ]);
 +
-     }]);
- }
++function onReady() {
++  angular.bootstrap(document, ['simple-todos']);
++}
++
++if (Meteor.isCordova) {
++  angular.element(document).on('deviceready', onReady);
++} else {
++  angular.element(document).ready(onReady);
++}
 -- 
 2.6.3
 
 
-From 27fa922779779c3776c7f4a225e16bca00f70c18 Mon Sep 17 00:00:00 2001
+From 6dc7a065fb5762d088623a0b5d65b2588980cfea Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:17:07 +0300
-Subject: [PATCH 16/39] Step 7.3: Change the Collection to use query parameter
+Date: Thu, 24 Mar 2016 18:09:21 +0200
+Subject: [PATCH 20/55] Step 7.1: Add hide-completed checkbox to component
 
 ---
- simple-todos-angular.js | 4 ++--
- 1 file changed, 2 insertions(+), 2 deletions(-)
-
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index e759172..071be1f 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -17,8 +17,8 @@ if (Meteor.isClient) {
-   angular.module('simple-todos').controller('TodosListCtrl', ['$scope', '$meteor',
-     function ($scope, $meteor) {
- 
--      $scope.tasks = $meteor.collection( function() {
--        return Tasks.find({}, { sort: { createdAt: -1 } })
-+      $scope.tasks = $meteor.collection(function() {
-+        return Tasks.find($scope.query, {sort: {createdAt: -1}})
-       });
+ imports/components/todosList/todosList.html | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+diff --git a/imports/components/todosList/todosList.html b/imports/components/todosList/todosList.html
+index 1bfe1c4..73416a2 100644
+--- a/imports/components/todosList/todosList.html
++++ b/imports/components/todosList/todosList.html
+@@ -1,6 +1,11 @@
+ <header>
+   <h1>Todo List</h1>
  
-       $scope.addTask = function (newTask) {
++  <label class="hide-completed">
++    <input type="checkbox" ng-model="$ctrl.hideCompleted"/>
++    Hide Completed Tasks
++  </label>
++
+   <form class="new-task" ng-submit="$ctrl.addTask($ctrl.newTask)">
+     <input ng-model="$ctrl.newTask" type="text" name="text" placeholder="Type to add new tasks"/>
+   </form>
 -- 
 2.6.3
 
 
-From bd6b3849890abf633b3ed6e1b456ee691dca31f6 Mon Sep 17 00:00:00 2001
+From 24d5b599f22aef3e34782d2937667576be60154d Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:17:59 +0300
-Subject: [PATCH 17/39] Step 7.4: Make query parameter reactive
+Date: Thu, 24 Mar 2016 18:09:56 +0200
+Subject: [PATCH 21/55] Step 7.2: Add reactive query parameter
 
 ---
- simple-todos-angular.js | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 071be1f..24c55fa 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -18,7 +18,7 @@ if (Meteor.isClient) {
-     function ($scope, $meteor) {
+ imports/components/todosList/todosList.js | 13 ++++++++++++-
+ 1 file changed, 12 insertions(+), 1 deletion(-)
+
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index 8d56f11..88af3bf 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -8,10 +8,21 @@ class TodosListCtrl {
+   constructor($scope) {
+     $scope.viewModel(this);
  
-       $scope.tasks = $meteor.collection(function() {
--        return Tasks.find($scope.query, {sort: {createdAt: -1}})
-+        return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
-       });
- 
-       $scope.addTask = function (newTask) {
++    this.hideCompleted = false;
++
+     this.helpers({
+       tasks() {
++        const selector = {};
++
++        // If hide completed is checked, filter tasks
++        if (this.getReactively('hideCompleted')) {
++          selector.checked = {
++            $ne: true
++          };
++        }
++
+         // Show newest tasks at the top
+-        return Tasks.find({}, {
++        return Tasks.find(selector, {
+           sort: {
+             createdAt: -1
+           }
 -- 
 2.6.3
 
 
-From 3350971e0f768549142da190144eb5cafdef500c Mon Sep 17 00:00:00 2001
+From 7d2e15defdc11ce55d32b8b3863041c432309c87 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:19:38 +0300
-Subject: [PATCH 18/39] Step 7.5: Add incompleteCount to scope
+Date: Thu, 24 Mar 2016 18:10:31 +0200
+Subject: [PATCH 22/55] Step 7.3: Add incompleteCount helper to component
 
 ---
- simple-todos-angular.js | 4 ++++
- 1 file changed, 4 insertions(+)
+ imports/components/todosList/todosList.js | 7 +++++++
+ 1 file changed, 7 insertions(+)
 
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 24c55fa..5934036 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -35,5 +35,9 @@ if (Meteor.isClient) {
-           $scope.query = {};
-       });
- 
-+      $scope.incompleteCount = function () {
-+        return Tasks.find({ checked: {$ne: true} }).count();
-+      };
-+
-     }]);
- }
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index 88af3bf..36deb05 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -27,6 +27,13 @@ class TodosListCtrl {
+             createdAt: -1
+           }
+         });
++      },
++      incompleteCount() {
++        return Tasks.find({
++          checked: {
++            $ne: true
++          }
++        }).count();
+       }
+     })
+   }
 -- 
 2.6.3
 
 
-From 0298bed3c151c9a003074c90dedfe1c93a21fc05 Mon Sep 17 00:00:00 2001
+From 936d91c42a3abafe3bdedb7e17f7d2534bdcbd83 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:51:49 +0200
-Subject: [PATCH 19/39] Step 7.6: Add incompleteCount to header
+Date: Thu, 24 Mar 2016 18:11:05 +0200
+Subject: [PATCH 23/55] Step 7.4: Display incompleteCount
 
 ---
- simple-todos-angular.html | 2 +-
+ imports/components/todosList/todosList.html | 2 +-
  1 file changed, 1 insertion(+), 1 deletion(-)
 
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index e03d952..ef5bc59 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -7,7 +7,7 @@
-      ng-controller="TodosListCtrl">
+diff --git a/imports/components/todosList/todosList.html b/imports/components/todosList/todosList.html
+index 73416a2..59cd86a 100644
+--- a/imports/components/todosList/todosList.html
++++ b/imports/components/todosList/todosList.html
+@@ -1,5 +1,5 @@
+ <header>
+-  <h1>Todo List</h1>
++  <h1>Todo List ( {{$ctrl.incompleteCount}} )</h1>
  
-   <header>
--    <h1>Todo List</h1>
-+    <h1>Todo List ( {{ incompleteCount() }} )</h1>
- 
-     <label class="hide-completed">
-       <input type="checkbox" ng-model="hideCompleted"/>
+   <label class="hide-completed">
+     <input type="checkbox" ng-model="$ctrl.hideCompleted"/>
 -- 
 2.6.3
 
 
-From c030d9b61a75a96d98ccaa90dce71cc1396f3d60 Mon Sep 17 00:00:00 2001
+From b2c749f6337fd98e1d5833f2b2823ae38e055ce4 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Mon, 9 Nov 2015 11:41:07 +0200
-Subject: [PATCH 20/39] Step 8.1: Add accounts-password and
- dotansimha:accounts-ui-angular packages
+Date: Thu, 24 Mar 2016 18:11:44 +0200
+Subject: [PATCH 24/55] Step 8.1: Add accounts-password and
+ dotansimha:accounts-ui-angular
 
 ---
  .meteor/packages |  2 ++
- .meteor/versions | 16 ++++++++++++++++
- 2 files changed, 18 insertions(+)
+ .meteor/versions | 19 +++++++++++++++++++
+ 2 files changed, 21 insertions(+)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 7082732..dbee131 100644
+index 34008f1..f7991fe 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -17,3 +17,5 @@ es5-shim                # ECMAScript 5 compatibility for older browsers.
+@@ -19,3 +19,5 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
  autopublish             # Publish all data to the clients (for prototyping)
  insecure                # Allow all DB writes from clients (for prototyping)
- angular@1.2.0-rc.6
+ angular-templates
 +accounts-password
 +dotansimha:accounts-ui-angular
 diff --git a/.meteor/versions b/.meteor/versions
-index 4a7a39b..cf8e714 100644
+index 13a756d..98c1d11 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
 @@ -1,3 +1,7 @@
-+accounts-base@1.2.2
-+accounts-password@1.1.4
-+accounts-ui@1.1.6
-+accounts-ui-unstyled@1.1.8
- angular@1.2.0-rc.6
- angular-meteor-data@0.0.4
- angular-templates@0.0.1
-@@ -9,6 +13,7 @@ babel-runtime@0.1.4
- base64@1.0.4
- binary-heap@1.0.4
- blaze@2.1.3
-+blaze-html-templates@1.0.1
- blaze-tools@1.0.4
- boilerplate-generator@1.0.4
- caching-compiler@1.0.0
-@@ -19,12 +24,15 @@ dburles:mongo-collection-instances@0.3.4
- ddp@1.2.2
- ddp-client@1.2.1
- ddp-common@1.2.2
-+ddp-rate-limiter@1.0.0
- ddp-server@1.2.2
- deps@1.0.9
- diff-sequence@1.0.1
-+dotansimha:accounts-ui-angular@0.0.1
- ecmascript@0.1.6
- ecmascript-runtime@0.2.6
- ejson@1.0.7
-+email@1.0.8
- es5-shim@4.1.14
- fastclick@1.0.7
- geojson-utils@1.0.4
-@@ -37,7 +45,9 @@ insecure@1.0.4
- jquery@1.11.4
- lai:collection-extensions@0.1.4
- launch-screen@1.0.4
-+less@2.5.1
- livedata@1.0.15
-+localstorage@1.0.5
- logging@1.0.8
- meteor@1.1.10
- meteor-base@1.0.1
-@@ -47,21 +57,27 @@ mobile-experience@1.0.1
- mobile-status-bar@1.0.6
- mongo@1.1.3
- mongo-id@1.0.1
++accounts-base@1.2.4-rc.8
++accounts-password@1.1.6-rc.8
++accounts-ui@1.1.7-rc.8
++accounts-ui-unstyled@1.1.10-rc.8
+ allow-deny@1.0.2-rc.8
+ angular-templates@1.0.0
+ autopublish@1.0.5-rc.8
+@@ -7,6 +11,7 @@ babel-runtime@0.1.6-rc.8
+ base64@1.0.6-rc.8
+ binary-heap@1.0.6-rc.8
+ blaze@2.1.5-rc.8
++blaze-html-templates@1.0.2-rc.8
+ blaze-tools@1.0.6-rc.8
+ boilerplate-generator@1.0.6-rc.8
+ caching-compiler@1.0.2-rc.8
+@@ -16,12 +21,15 @@ check@1.1.2-rc.8
+ ddp@1.2.3-rc.8
+ ddp-client@1.2.3-rc.8
+ ddp-common@1.2.3-rc.8
++ddp-rate-limiter@1.0.2-rc.8
+ ddp-server@1.2.4-rc.8
+ deps@1.0.10-rc.8
+ diff-sequence@1.0.3-rc.8
++dotansimha:accounts-ui-angular@0.0.4
+ ecmascript@0.4.1-rc.8
+ ecmascript-runtime@0.2.8-rc.8
+ ejson@1.0.9-rc.8
++email@1.0.10-rc.8
+ es5-shim@4.5.8-rc.8
+ fastclick@1.0.9-rc.8
+ geojson-utils@1.0.6-rc.8
+@@ -33,7 +41,9 @@ id-map@1.0.5-rc.8
+ insecure@1.0.5-rc.8
+ jquery@1.11.6-rc.8
+ launch-screen@1.0.8-rc.8
++less@2.5.6-rc.8
+ livedata@1.0.16-rc.8
++localstorage@1.0.7-rc.8
+ logging@1.0.10-rc.8
+ meteor@1.1.12-rc.8
+ meteor-base@1.0.2-rc.8
+@@ -46,20 +56,29 @@ modules@0.5.1-rc.8
+ modules-runtime@0.6.1-rc.8
+ mongo@1.1.5-rc.8
+ mongo-id@1.0.2-rc.8
 +npm-bcrypt@0.7.8_2
- npm-mongo@1.4.39_1
- observe-sequence@1.0.7
- ordered-dict@1.0.4
- pbastowski:angular-babel@1.0.2
- promise@0.5.1
- random@1.0.5
-+rate-limit@1.0.0
- reactive-dict@1.1.3
- reactive-var@1.0.6
- reload@1.1.4
- retry@1.0.4
- routepolicy@1.0.6
-+service-configuration@1.0.5
- session@1.1.1
-+sha@1.0.4
- spacebars@1.0.7
- spacebars-compiler@1.0.7
-+srp@1.0.4
- standard-minifiers@1.0.2
-+templating@1.1.5
- templating-tools@1.0.0
- tracker@1.0.9
- ui@1.0.8
+ npm-mongo@1.4.41-rc.8
+ observe-sequence@1.0.9-rc.8
+ ordered-dict@1.0.5-rc.8
+ promise@0.6.4-rc.8
+ random@1.0.7-rc.8
++rate-limit@1.0.2-rc.8
++reactive-dict@1.1.5-rc.8
+ reactive-var@1.0.7-rc.8
+ reload@1.1.6-rc.8
+ retry@1.0.5-rc.8
+ routepolicy@1.0.8-rc.8
++service-configuration@1.0.7-rc.8
++session@1.1.3-rc.8
++sha@1.0.5-rc.8
+ spacebars@1.0.9-rc.8
+ spacebars-compiler@1.0.9-rc.8
++srp@1.0.6-rc.8
+ standard-minifier-css@1.0.4-rc.8
+ standard-minifier-js@1.0.4-rc.8
++templating@1.1.7-rc.8
+ templating-tools@1.0.2-rc.8
++tmeasday:check-npm-versions@0.1.1
+ tracker@1.0.11-rc.8
+ ui@1.0.9-rc.8
+ underscore@1.0.6-rc.8
 -- 
 2.6.3
 
 
-From d11c7e6703a0fbe3b9d998f05aa882af33daec70 Mon Sep 17 00:00:00 2001
+From 9db427c405476c1e5a436b94dbe97ccb54965f0c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Mon, 9 Nov 2015 11:46:05 +0200
-Subject: [PATCH 21/39] Step 8.2: Add `accounts.ui` dependency to Angular app
+Date: Thu, 24 Mar 2016 18:12:36 +0200
+Subject: [PATCH 25/55] Step 8.2: Add `accounts.ui` dependency
 
 ---
- simple-todos-angular.js | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
+ client/main.js | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
 
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 5934036..7ca4577 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -3,7 +3,7 @@ Tasks = new Mongo.Collection('tasks');
- if (Meteor.isClient) {
+diff --git a/client/main.js b/client/main.js
+index c79d69c..086316a 100644
+--- a/client/main.js
++++ b/client/main.js
+@@ -4,7 +4,8 @@ import todosList from '../imports/components/todosList/todosList';
  
-   // This code only runs on the client
--  angular.module('simple-todos',['angular-meteor']);
-+  angular.module('simple-todos',['angular-meteor', 'accounts.ui']);
+ angular.module('simple-todos', [
+   angularMeteor,
+-  todosList.name
++  todosList.name,
++  'accounts.ui'
+ ]);
  
-   function onReady() {
-     angular.bootstrap(document, ['simple-todos']);
+ function onReady() {
 -- 
 2.6.3
 
 
-From 6991ba8819734e10ed159c70b7a56a3f6cb91047 Mon Sep 17 00:00:00 2001
+From 818dff1aaf30a50056d7dc9d471c3ef94f2a0134 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Mon, 9 Nov 2015 11:54:35 +0200
-Subject: [PATCH 22/39] Step 8.3: Add loginButtons directive
+Date: Thu, 24 Mar 2016 18:13:23 +0200
+Subject: [PATCH 26/55] Step 8.3: Add loginButtons directive
 
 ---
- simple-todos-angular.html | 2 ++
+ imports/components/todosList/todosList.html | 2 ++
  1 file changed, 2 insertions(+)
 
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index ef5bc59..5fdbfb8 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -14,6 +14,8 @@
-       Hide Completed Tasks
-     </label>
+diff --git a/imports/components/todosList/todosList.html b/imports/components/todosList/todosList.html
+index 59cd86a..e0f44ba 100644
+--- a/imports/components/todosList/todosList.html
++++ b/imports/components/todosList/todosList.html
+@@ -6,6 +6,8 @@
+     Hide Completed Tasks
+   </label>
  
-+    <login-buttons></login-buttons>
++  <login-buttons></login-buttons>
 +
-     <!-- add a form below the h1 -->
-     <form class="new-task" ng-submit="addTask(newTask); newTask='';">
-       <input ng-model="newTask" type="text"
+   <form class="new-task" ng-submit="$ctrl.addTask($ctrl.newTask)">
+     <input ng-model="$ctrl.newTask" type="text" name="text" placeholder="Type to add new tasks"/>
+   </form>
 -- 
 2.6.3
 
 
-From c10b140fc33cb5410b052e22a9fd9da477ceb758 Mon Sep 17 00:00:00 2001
+From b935478ee458ebb5ec71decfb6d69471060c636c Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:27:12 +0300
-Subject: [PATCH 23/39] Step 8.4: Configure accounts UI to use usernames
- instead of email
+Date: Thu, 24 Mar 2016 18:14:00 +0200
+Subject: [PATCH 27/55] Step 8.4: Configure accounts-ui
 
 ---
- simple-todos-angular.js | 4 ++++
- 1 file changed, 4 insertions(+)
+ imports/startup/accounts-config.js | 5 +++++
+ 1 file changed, 5 insertions(+)
+ create mode 100644 imports/startup/accounts-config.js
 
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 7ca4577..0b277df 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -2,6 +2,10 @@ Tasks = new Mongo.Collection('tasks');
- 
- if (Meteor.isClient) {
- 
-+  Accounts.ui.config({
-+    passwordSignupFields: "USERNAME_ONLY"
-+  });
+diff --git a/imports/startup/accounts-config.js b/imports/startup/accounts-config.js
+new file mode 100644
+index 0000000..7e4f7e5
+--- /dev/null
++++ b/imports/startup/accounts-config.js
+@@ -0,0 +1,5 @@
++import { Accounts } from 'meteor/accounts-base';
 +
-   // This code only runs on the client
-   angular.module('simple-todos',['angular-meteor', 'accounts.ui']);
++Accounts.ui.config({
++  passwordSignupFields: 'USERNAME_ONLY',
++});
+-- 
+2.6.3
+
+
+From f2ae55fd1d12073751f0d2a311b2ae7079f0ddfa Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:14:35 +0200
+Subject: [PATCH 28/55] Step 8.5: Import accounts configuration
+
+---
+ client/main.js | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/client/main.js b/client/main.js
+index 086316a..16887a9 100644
+--- a/client/main.js
++++ b/client/main.js
+@@ -1,6 +1,7 @@
+ import angular from 'angular';
+ import angularMeteor from 'angular-meteor';
+ import todosList from '../imports/components/todosList/todosList';
++import '../imports/startup/accounts-config.js';
  
+ angular.module('simple-todos', [
+   angularMeteor,
 -- 
 2.6.3
 
 
-From 2e7884368e636e0acb643430e75d1bd1332dbe51 Mon Sep 17 00:00:00 2001
+From 469977de20414ad5442833b3b0e6ae3461c31291 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 13:29:48 +0300
-Subject: [PATCH 24/39] Step 8.5: Add owner and username to created task
+Date: Thu, 24 Mar 2016 18:15:14 +0200
+Subject: [PATCH 29/55] Step 8.6: Update insert to include user data
 
 ---
- simple-todos-angular.js | 8 +++++---
- 1 file changed, 5 insertions(+), 3 deletions(-)
-
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 0b277df..a83dad1 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -25,10 +25,12 @@ if (Meteor.isClient) {
-         return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
-       });
+ imports/components/todosList/todosList.js | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
+
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index 36deb05..4ed6d6a 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -1,5 +1,6 @@
+ import angular from 'angular';
+ import angularMeteor from 'angular-meteor';
++import { Meteor } from 'meteor/meteor';
+ import { Tasks } from '../../api/tasks.js';
  
--      $scope.addTask = function (newTask) {
-+      $scope.addTask = function(newTask) {
-         $scope.tasks.push( {
--          text: newTask,
--          createdAt: new Date() }
-+            text: newTask,
-+            createdAt: new Date(),             // current time
-+            owner: Meteor.userId(),            // _id of logged in user
-+            username: Meteor.user().username }  // username of logged in user
-         );
-       };
+ import template from './todosList.html';
+@@ -42,7 +43,9 @@ class TodosListCtrl {
+     // Insert a task into the collection
+     Tasks.insert({
+       text: newTask,
+-      createdAt: new Date
++      createdAt: new Date,
++      owner: Meteor.userId(),
++      username: Meteor.user().username
+     });
  
+     // Clear form
 -- 
 2.6.3
 
 
-From 18d272c5a582cc0c8edcd3c1cc1cc99360f3d5ca Mon Sep 17 00:00:00 2001
+From 648d1105eb366bcd8498c37d4529537c7a9580dc Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:55:26 +0200
-Subject: [PATCH 25/39] Step 8.6: Hide new task form if user is not logged in
+Date: Thu, 24 Mar 2016 18:15:50 +0200
+Subject: [PATCH 30/55] Step 8.7: Add currentUser helper to component
 
 ---
- simple-todos-angular.html | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
-
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 5fdbfb8..98c6a82 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -17,7 +17,9 @@
-     <login-buttons></login-buttons>
- 
-     <!-- add a form below the h1 -->
--    <form class="new-task" ng-submit="addTask(newTask); newTask='';">
-+    <form class="new-task"
-+          ng-submit="addTask(newTask); newTask='';"
-+          ng-show="$root.currentUser">
-       <input ng-model="newTask" type="text"
-              name="text" placeholder="Type to add new tasks" />
-     </form>
+ imports/components/todosList/todosList.js | 3 +++
+ 1 file changed, 3 insertions(+)
+
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index 4ed6d6a..0a27893 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -35,6 +35,9 @@ class TodosListCtrl {
+             $ne: true
+           }
+         }).count();
++      },
++      currentUser() {
++        return Meteor.user();
+       }
+     })
+   }
 -- 
 2.6.3
 
 
-From ae6c5d8c37d820c52a1577176a1e46805b67b93a Mon Sep 17 00:00:00 2001
+From 6e15ab5cae98aba242e5fcb20a2ca332d2cf84a6 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:56:09 +0200
-Subject: [PATCH 26/39] Step 8.7: Add username to the displayed task
+Date: Thu, 24 Mar 2016 18:16:29 +0200
+Subject: [PATCH 31/55] Step 8.8: Only show add task form if logged in
 
 ---
- simple-todos-angular.html | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
+ imports/components/todosList/todosList.html | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 98c6a82..d12094e 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -32,7 +32,9 @@
+diff --git a/imports/components/todosList/todosList.html b/imports/components/todosList/todosList.html
+index e0f44ba..7de6008 100644
+--- a/imports/components/todosList/todosList.html
++++ b/imports/components/todosList/todosList.html
+@@ -8,7 +8,7 @@
  
-       <input type="checkbox" ng-model="task.checked" class="toggle-checked" />
+   <login-buttons></login-buttons>
  
--      <span class="text">{{task.text}}</span>
-+      <span class="text">
-+        <strong>{{task.username}}</strong> - {{task.text}}
-+      </span>
-     </li>
-   </ul>
+-  <form class="new-task" ng-submit="$ctrl.addTask($ctrl.newTask)">
++  <form class="new-task" ng-submit="$ctrl.addTask($ctrl.newTask)" ng-show="$ctrl.currentUser">
+     <input ng-model="$ctrl.newTask" type="text" name="text" placeholder="Type to add new tasks"/>
+   </form>
+   
+-- 
+2.6.3
+
+
+From 6bae63b513f16c37c8d09157328b81edae8e5730 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:17:08 +0200
+Subject: [PATCH 32/55] Step 8.9: Add username to the displayed task
+
+---
+ imports/components/todosList/todosList.html | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/imports/components/todosList/todosList.html b/imports/components/todosList/todosList.html
+index 7de6008..54dcf6f 100644
+--- a/imports/components/todosList/todosList.html
++++ b/imports/components/todosList/todosList.html
+@@ -21,7 +21,7 @@
+     <input type="checkbox" ng-checked="task.checked" ng-click="$ctrl.setChecked(task)" class="toggle-checked"/>
  
+     <span class="text">
+-      {{task.text}}
++      <strong>{{task.username}}</strong> - {{task.text}}
+     </span>
+   </li>
+ </ul>
 -- 
 2.6.3
 
 
-From 3c4ef9646affd3ae74c83dbd0623fc283854fe47 Mon Sep 17 00:00:00 2001
+From 3450992ba7fc685852ed6667ccdf25cd5566a7d6 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:56:52 +0200
-Subject: [PATCH 27/39] Step 9.1: Remove the insecure package
+Date: Thu, 24 Mar 2016 18:17:40 +0200
+Subject: [PATCH 33/55] Step 9.1: Remove insecure package
 
 ---
  .meteor/packages | 1 -
@@ -1308,153 +1498,159 @@ Subject: [PATCH 27/39] Step 9.1: Remove the insecure package
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index dbee131..2d2e7c5 100644
+index f7991fe..e8a5780 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -15,7 +15,6 @@ standard-minifiers      # JS/CSS minifiers run for production mode
- es5-shim                # ECMAScript 5 compatibility for older browsers.
+@@ -17,7 +17,6 @@ es5-shim                # ECMAScript 5 compatibility for older browsers.
+ ecmascript              # Enable ECMAScript2015+ syntax in app code
  
  autopublish             # Publish all data to the clients (for prototyping)
 -insecure                # Allow all DB writes from clients (for prototyping)
- angular@1.2.0-rc.6
+ angular-templates
  accounts-password
  dotansimha:accounts-ui-angular
 diff --git a/.meteor/versions b/.meteor/versions
-index cf8e714..fb60917 100644
+index 98c1d11..ebc977e 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -41,7 +41,6 @@ html-tools@1.0.5
- htmljs@1.0.5
- http@1.1.1
- id-map@1.0.4
--insecure@1.0.4
- jquery@1.11.4
- lai:collection-extensions@0.1.4
- launch-screen@1.0.4
+@@ -38,7 +38,6 @@ html-tools@1.0.7-rc.8
+ htmljs@1.0.7-rc.8
+ http@1.1.3-rc.8
+ id-map@1.0.5-rc.8
+-insecure@1.0.5-rc.8
+ jquery@1.11.6-rc.8
+ launch-screen@1.0.8-rc.8
+ less@2.5.6-rc.8
 -- 
 2.6.3
 
 
-From cbbf8aed7c84eaecbf34b72863945924211728e4 Mon Sep 17 00:00:00 2001
+From 4c0a4805e8338c9e963ece53be4f97a5b70e018a Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 15:02:50 +0300
-Subject: [PATCH 28/39] Step 9.2: Add Meteor Methods for add, delete and check
- tasks
+Date: Thu, 24 Mar 2016 18:18:22 +0200
+Subject: [PATCH 34/55] Step 9.2: Add methods for add, remove, update task
 
 ---
- simple-todos-angular.js | 22 ++++++++++++++++++++++
- 1 file changed, 22 insertions(+)
-
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index a83dad1..b10a928 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -47,3 +47,25 @@ if (Meteor.isClient) {
+ imports/api/tasks.js | 35 +++++++++++++++++++++++++++++++++++
+ 1 file changed, 35 insertions(+)
+
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index 3bed819..01ceabb 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -1,3 +1,38 @@
++import { Meteor } from 'meteor/meteor';
+ import { Mongo } from 'meteor/mongo';
++import { check } from 'meteor/check';
  
-     }]);
- }
+ export const Tasks = new Mongo.Collection('tasks');
 +
 +Meteor.methods({
-+  addTask: function (text) {
++  'tasks.insert' (text) {
++    check(text, String);
++
 +    // Make sure the user is logged in before inserting a task
-+    if (! Meteor.userId()) {
++    if (!Meteor.userId()) {
 +      throw new Meteor.Error('not-authorized');
 +    }
 +
 +    Tasks.insert({
-+      text: text,
++      text,
 +      createdAt: new Date(),
 +      owner: Meteor.userId(),
-+      username: Meteor.user().username
++      username: Meteor.user().username,
 +    });
 +  },
-+  deleteTask: function (taskId) {
++  'tasks.remove' (taskId) {
++    check(taskId, String);
++
 +    Tasks.remove(taskId);
 +  },
-+  setChecked: function (taskId, setChecked) {
-+    Tasks.update(taskId, { $set: { checked: setChecked} });
-+  }
++  'tasks.setChecked' (taskId, setChecked) {
++    check(taskId, String);
++    check(setChecked, Boolean);
++
++    Tasks.update(taskId, {
++      $set: {
++        checked: setChecked
++      }
++    });
++  },
 +});
 -- 
 2.6.3
 
 
-From ad3d3157c47260889e135d78213b82ed168ebd7c Mon Sep 17 00:00:00 2001
+From ab0996ec019bad7e6f98631eaeb410a20b928ea2 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 15:05:25 +0300
-Subject: [PATCH 29/39] Step 9.3: Add scope functions to call the Meteor
- methods
+Date: Thu, 24 Mar 2016 18:18:59 +0200
+Subject: [PATCH 35/55] Step 9.3: Replace insert with addTask method
 
 ---
- simple-todos-angular.js | 17 ++++++++++-------
- 1 file changed, 10 insertions(+), 7 deletions(-)
-
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index b10a928..417ebd9 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -25,13 +25,16 @@ if (Meteor.isClient) {
-         return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
-       });
+ imports/components/todosList/todosList.js | 7 +------
+ 1 file changed, 1 insertion(+), 6 deletions(-)
+
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index 0a27893..68913b3 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -44,12 +44,7 @@ class TodosListCtrl {
  
--      $scope.addTask = function(newTask) {
--        $scope.tasks.push( {
--            text: newTask,
--            createdAt: new Date(),             // current time
--            owner: Meteor.userId(),            // _id of logged in user
--            username: Meteor.user().username }  // username of logged in user
--        );
-+      $scope.addTask = function (newTask) {
-+        $meteor.call('addTask', newTask);
-+      };
-+
-+      $scope.deleteTask = function (task) {
-+        $meteor.call('deleteTask', task._id);
-+      };
-+
-+      $scope.setChecked = function (task) {
-+        $meteor.call('setChecked', task._id, !task.checked);
-       };
+   addTask(newTask) {
+     // Insert a task into the collection
+-    Tasks.insert({
+-      text: newTask,
+-      createdAt: new Date,
+-      owner: Meteor.userId(),
+-      username: Meteor.user().username
+-    });
++    Meteor.call('tasks.insert', newTask);
  
-       $scope.$watch('hideCompleted', function() {
+     // Clear form
+     this.newTask = '';
 -- 
 2.6.3
 
 
-From 0ed0f945ae39b7974d17ea8d4327e3f1352e12b8 Mon Sep 17 00:00:00 2001
+From cd583ae0f7e053b8da0c5728a1bf2192bb8380e4 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:57:43 +0200
-Subject: [PATCH 30/39] Step 9.4: Change template events to call methods
+Date: Thu, 24 Mar 2016 18:19:37 +0200
+Subject: [PATCH 36/55] Step 9.4: Replace update and remove with methods
 
 ---
- simple-todos-angular.html | 5 +++--
- 1 file changed, 3 insertions(+), 2 deletions(-)
-
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index d12094e..da9f25b 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -28,9 +28,10 @@
+ imports/components/todosList/todosList.js | 8 ++------
+ 1 file changed, 2 insertions(+), 6 deletions(-)
+
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index 68913b3..c8a1f1d 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -52,15 +52,11 @@ class TodosListCtrl {
  
-   <ul>
-     <li ng-repeat="task in tasks" ng-class="{'checked': task.checked}">
--      <button class="delete" ng-click="tasks.remove(task)">&times;</button>
-+      <button class="delete" ng-click="deleteTask(task)">&times;</button>
+   setChecked(task) {
+     // Set the checked property to the opposite of its current value
+-    Tasks.update(task._id, {
+-      $set: {
+-        checked: !task.checked
+-      },
+-    });
++    Meteor.call('tasks.setChecked', task._id, !task.checked);
+   }
  
--      <input type="checkbox" ng-model="task.checked" class="toggle-checked" />
-+      <input type="checkbox" ng-checked="task.checked"
-+             ng-click="setChecked(task)" class="toggle-checked" />
+   removeTask(task) {
+-    Tasks.remove(task._id);
++    Meteor.call('tasks.remove', task._id);
+   }
+ }
  
-       <span class="text">
-         <strong>{{task.username}}</strong> - {{task.text}}
 -- 
 2.6.3
 
 
-From 4be42a7c3a1d418bcf6d5e0f9db3c650c7679cd3 Mon Sep 17 00:00:00 2001
+From 4ecda4f067616b8ecff8cc3f831d8fa785d6765a Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:58:12 +0200
-Subject: [PATCH 31/39] Step 10.1: Remove the autopublish package
+Date: Thu, 24 Mar 2016 18:20:13 +0200
+Subject: [PATCH 37/55] Step 10.1: Remove autopublish
 
 ---
  .meteor/packages | 1 -
@@ -1462,253 +1658,265 @@ Subject: [PATCH 31/39] Step 10.1: Remove the autopublish package
  2 files changed, 2 deletions(-)
 
 diff --git a/.meteor/packages b/.meteor/packages
-index 2d2e7c5..ed1f118 100644
+index e8a5780..64cec80 100644
 --- a/.meteor/packages
 +++ b/.meteor/packages
-@@ -14,7 +14,6 @@ tracker                 # Meteor's client-side reactive programming library
- standard-minifiers      # JS/CSS minifiers run for production mode
+@@ -16,7 +16,6 @@ standard-minifier-js    # JS minifier run for production mode
  es5-shim                # ECMAScript 5 compatibility for older browsers.
+ ecmascript              # Enable ECMAScript2015+ syntax in app code
  
 -autopublish             # Publish all data to the clients (for prototyping)
- angular@1.2.0-rc.6
+ angular-templates
  accounts-password
  dotansimha:accounts-ui-angular
 diff --git a/.meteor/versions b/.meteor/versions
-index fb60917..711e407 100644
+index ebc977e..b2d83b9 100644
 --- a/.meteor/versions
 +++ b/.meteor/versions
-@@ -6,7 +6,6 @@ angular@1.2.0-rc.6
- angular-meteor-data@0.0.4
- angular-templates@0.0.1
- angular:angular@1.4.7
--autopublish@1.0.4
- autoupdate@1.2.4
- babel-compiler@5.8.24_1
- babel-runtime@0.1.4
+@@ -4,7 +4,6 @@ accounts-ui@1.1.7-rc.8
+ accounts-ui-unstyled@1.1.10-rc.8
+ allow-deny@1.0.2-rc.8
+ angular-templates@1.0.0
+-autopublish@1.0.5-rc.8
+ autoupdate@1.2.6-rc.8
+ babel-compiler@6.5.2-rc.8
+ babel-runtime@0.1.6-rc.8
 -- 
 2.6.3
 
 
-From c03a6b73794726ac8a01f8e494527ecaf202e4c3 Mon Sep 17 00:00:00 2001
+From 0984118c66958d35b560efdfdbdd9acefa043990 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 15:10:25 +0300
-Subject: [PATCH 32/39] Step 10.2: Add server publish function to tasks
+Date: Thu, 24 Mar 2016 18:20:58 +0200
+Subject: [PATCH 38/55] Step 10.2: Add publication for tasks
 
 ---
- simple-todos-angular.js | 6 ++++++
- 1 file changed, 6 insertions(+)
-
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 417ebd9..b54fd8f 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -72,3 +72,9 @@ Meteor.methods({
-     Tasks.update(taskId, { $set: { checked: setChecked} });
-   }
- });
-+
+ imports/api/tasks.js | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index 01ceabb..abbc060 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -4,6 +4,13 @@ import { check } from 'meteor/check';
+ 
+ export const Tasks = new Mongo.Collection('tasks');
+ 
 +if (Meteor.isServer) {
-+  Meteor.publish('tasks', function () {
++  // This code only runs on the server
++  Meteor.publish('tasks', function tasksPublication() {
 +    return Tasks.find();
 +  });
 +}
++
+ Meteor.methods({
+   'tasks.insert' (text) {
+     check(text, String);
 -- 
 2.6.3
 
 
-From 09976ce1f33a0fc03d28d3655e041d3f7c4dd80e Mon Sep 17 00:00:00 2001
+From 6ce0c99d129c7f69c89b43a930eedc5e42c5d07f Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 15:11:21 +0300
-Subject: [PATCH 33/39] Step 10.3: Subscribe to tasks publication
+Date: Thu, 24 Mar 2016 18:21:42 +0200
+Subject: [PATCH 39/55] Step 10.3: Subscribe to tasks
 
 ---
- simple-todos-angular.js | 2 ++
+ imports/components/todosList/todosList.js | 2 ++
  1 file changed, 2 insertions(+)
 
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index b54fd8f..956f7a8 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -21,6 +21,8 @@ if (Meteor.isClient) {
-   angular.module('simple-todos').controller('TodosListCtrl', ['$scope', '$meteor',
-     function ($scope, $meteor) {
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index c8a1f1d..859b5f8 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -9,6 +9,8 @@ class TodosListCtrl {
+   constructor($scope) {
+     $scope.viewModel(this);
  
-+      $scope.$meteorSubscribe('tasks');
++    this.subscribe('tasks');
 +
-       $scope.tasks = $meteor.collection(function() {
-         return Tasks.find($scope.getReactively('query'), {sort: {createdAt: -1}})
-       });
+     this.hideCompleted = false;
+ 
+     this.helpers({
 -- 
 2.6.3
 
 
-From acf6073db5f556dc0c5e1c90be38a2041387bf81 Mon Sep 17 00:00:00 2001
+From a9f5b38100a71d3a2aeae3152ce851179f432264 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:59:00 +0200
-Subject: [PATCH 34/39] Step 10.4: Add setPrivate button to template
+Date: Thu, 24 Mar 2016 18:22:20 +0200
+Subject: [PATCH 40/55] Step 10.4: Add private button
 
 ---
- simple-todos-angular.html | 6 ++++++
- 1 file changed, 6 insertions(+)
-
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index da9f25b..1f44e28 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -33,6 +33,12 @@
-       <input type="checkbox" ng-checked="task.checked"
-              ng-click="setChecked(task)" class="toggle-checked" />
- 
-+      <button class="toggle-private"
-+              ng-if="task.owner === $root.currentUser._id"
-+              ng-click="setPrivate(task)">
-+        {{task.private == true ? "Private" : "Public"}}
-+      </button>
-+
-       <span class="text">
-         <strong>{{task.username}}</strong> - {{task.text}}
-       </span>
+ imports/components/todosList/todosList.html | 4 ++++
+ 1 file changed, 4 insertions(+)
+
+diff --git a/imports/components/todosList/todosList.html b/imports/components/todosList/todosList.html
+index 54dcf6f..bdab140 100644
+--- a/imports/components/todosList/todosList.html
++++ b/imports/components/todosList/todosList.html
+@@ -23,5 +23,9 @@
+     <span class="text">
+       <strong>{{task.username}}</strong> - {{task.text}}
+     </span>
++
++    <button class="toggle-private" ng-click="$ctrl.setPrivate(task)" ng-show="task.owner === $ctrl.currentUser._id">
++      {{task.private == true ? "Private" : "Public"}}
++    </button>
+   </li>
+ </ul>
 -- 
 2.6.3
 
 
-From 2df1dc1276c67d789c09fa0c362874ffbefd03ea Mon Sep 17 00:00:00 2001
+From 7d96735e1bfb86a7522532f74625fd6fa53c3dbd Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sun, 8 Nov 2015 02:59:36 +0200
-Subject: [PATCH 35/39] Step 10.5: Add private CSS class to task
+Date: Thu, 24 Mar 2016 18:22:58 +0200
+Subject: [PATCH 41/55] Step 10.5: Add private class to private tasks
 
 ---
- simple-todos-angular.html | 3 ++-
- 1 file changed, 2 insertions(+), 1 deletion(-)
+ imports/components/todosList/todosList.html | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
 
-diff --git a/simple-todos-angular.html b/simple-todos-angular.html
-index 1f44e28..a483115 100644
---- a/simple-todos-angular.html
-+++ b/simple-todos-angular.html
-@@ -27,7 +27,8 @@
-   </header>
+diff --git a/imports/components/todosList/todosList.html b/imports/components/todosList/todosList.html
+index bdab140..ca14799 100644
+--- a/imports/components/todosList/todosList.html
++++ b/imports/components/todosList/todosList.html
+@@ -15,7 +15,7 @@
+ </header>
  
-   <ul>
--    <li ng-repeat="task in tasks" ng-class="{'checked': task.checked}">
-+    <li ng-repeat="task in tasks"
-+        ng-class="{'checked': task.checked, 'private': task.private}">
-       <button class="delete" ng-click="deleteTask(task)">&times;</button>
+ <ul>
+-  <li ng-repeat="task in $ctrl.tasks" ng-class="{'checked': task.checked}">
++  <li ng-repeat="task in $ctrl.tasks" ng-class="{'checked': task.checked, 'private': task.private}">
+     <button class="delete" ng-click="$ctrl.removeTask(task)">&times;</button>
  
-       <input type="checkbox" ng-checked="task.checked"
+     <input type="checkbox" ng-checked="task.checked" ng-click="$ctrl.setChecked(task)" class="toggle-checked"/>
 -- 
 2.6.3
 
 
-From fa1d1964b37212e64aa9cc8ef341f2504b6f13a9 Mon Sep 17 00:00:00 2001
+From 4dc64e7c5a3a55f6eb732cc74ec159e274e21226 Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 17:06:51 +0300
-Subject: [PATCH 36/39] Step 10.6: Add setPrivate Meteor Method
+Date: Thu, 24 Mar 2016 18:23:54 +0200
+Subject: [PATCH 42/55] Step 10.6: Define method to set tasks to private
 
 ---
- simple-todos-angular.js | 10 ++++++++++
- 1 file changed, 10 insertions(+)
-
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 956f7a8..49b4c12 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -72,6 +72,16 @@ Meteor.methods({
+ imports/api/tasks.js | 17 +++++++++++++++++
+ 1 file changed, 17 insertions(+)
+
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index abbc060..53e070b 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -42,4 +42,21 @@ Meteor.methods({
+       }
+     });
    },
-   setChecked: function (taskId, setChecked) {
-     Tasks.update(taskId, { $set: { checked: setChecked} });
-+  },
-+  setPrivate: function (taskId, setToPrivate) {
-+    var task = Tasks.findOne(taskId);
++  'tasks.setPrivate' (taskId, setToPrivate) {
++    check(taskId, String);
++    check(setToPrivate, Boolean);
++
++    const task = Tasks.findOne(taskId);
 +
 +    // Make sure only the task owner can make a task private
 +    if (task.owner !== Meteor.userId()) {
 +      throw new Meteor.Error('not-authorized');
 +    }
 +
-+    Tasks.update(taskId, { $set: { private: setToPrivate } });
-   }
++    Tasks.update(taskId, {
++      $set: {
++        private: setToPrivate
++      }
++    });
++  },
  });
- 
 -- 
 2.6.3
 
 
-From 9db2c65e0dd9821bea2fa1a1690a5e1bf2c0a644 Mon Sep 17 00:00:00 2001
+From 40d23f30d4ce79cb453a0407560b199ed574c86b Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 17:08:29 +0300
-Subject: [PATCH 37/39] Step 10.7: Add setPrivate scope function
+Date: Thu, 24 Mar 2016 18:24:27 +0200
+Subject: [PATCH 43/55] Step 10.7: Add method to call the setPrivate method
 
 ---
- simple-todos-angular.js | 4 ++++
+ imports/components/todosList/todosList.js | 4 ++++
  1 file changed, 4 insertions(+)
 
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 49b4c12..a89c2dc 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -39,6 +39,10 @@ if (Meteor.isClient) {
-         $meteor.call('setChecked', task._id, !task.checked);
-       };
- 
-+      $scope.setPrivate = function (task) {
-+        $meteor.call('setPrivate', task._id, ! task.private);
-+      };
+diff --git a/imports/components/todosList/todosList.js b/imports/components/todosList/todosList.js
+index 859b5f8..789bf4b 100644
+--- a/imports/components/todosList/todosList.js
++++ b/imports/components/todosList/todosList.js
+@@ -60,6 +60,10 @@ class TodosListCtrl {
+   removeTask(task) {
+     Meteor.call('tasks.remove', task._id);
+   }
 +
-       $scope.$watch('hideCompleted', function() {
-         if ($scope.hideCompleted)
-           $scope.query = {checked: {$ne: true}};
++  setPrivate(task) {
++    Meteor.call('tasks.setPrivate', task._id, !task.private);
++  }
+ }
+ 
+ export default angular.module('todosList', [
 -- 
 2.6.3
 
 
-From e72d2ec35782e6a00fc41d84687e39ca6404be39 Mon Sep 17 00:00:00 2001
+From 4bbf32caa76e7a8bdbd843f9b11f090eaac3d72a Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 15:59:53 +0300
-Subject: [PATCH 38/39] Step 10.8: Publish only public and owner's tasks
+Date: Thu, 24 Mar 2016 18:24:55 +0200
+Subject: [PATCH 44/55] Step 10.8: Only publish tasks the user is allowed to
+ see
 
 ---
- simple-todos-angular.js | 7 ++++++-
- 1 file changed, 6 insertions(+), 1 deletion(-)
-
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index a89c2dc..2b429a3 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -91,6 +91,11 @@ Meteor.methods({
+ imports/api/tasks.js | 11 ++++++++++-
+ 1 file changed, 10 insertions(+), 1 deletion(-)
+
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index 53e070b..a39c461 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -6,8 +6,17 @@ export const Tasks = new Mongo.Collection('tasks');
  
  if (Meteor.isServer) {
-   Meteor.publish('tasks', function () {
+   // This code only runs on the server
++  // Only publish tasks that are public or belong to the current user
+   Meteor.publish('tasks', function tasksPublication() {
 -    return Tasks.find();
 +    return Tasks.find({
-+      $or: [
-+        { private: {$ne: true} },
-+        { owner: this.userId }
-+      ]
++      $or: [{
++        private: {
++          $ne: true
++        }
++      }, {
++        owner: this.userId
++      }, ],
 +    });
    });
  }
+ 
 -- 
 2.6.3
 
 
-From c48994ab0683d2ba1029c7c5a053a7f68a5390bb Mon Sep 17 00:00:00 2001
+From 5cee5bd2a60ad284ff7d403c1458f8383274b42d Mon Sep 17 00:00:00 2001
 From: Uri Goldshtein <uri.goldshtein@gmail.com>
-Date: Sat, 18 Jul 2015 16:02:20 +0300
-Subject: [PATCH 39/39] Step 10.9: Add extra security to methods
+Date: Thu, 24 Mar 2016 18:25:21 +0200
+Subject: [PATCH 45/55] Step 10.9: Add some extra security to methods
 
 ---
- simple-todos-angular.js | 12 ++++++++++++
+ imports/api/tasks.js | 12 ++++++++++++
  1 file changed, 12 insertions(+)
 
-diff --git a/simple-todos-angular.js b/simple-todos-angular.js
-index 2b429a3..a47bf45 100644
---- a/simple-todos-angular.js
-+++ b/simple-todos-angular.js
-@@ -72,9 +72,21 @@ Meteor.methods({
-     });
-   },
-   deleteTask: function (taskId) {
-+    var task = Tasks.findOne(taskId);
+diff --git a/imports/api/tasks.js b/imports/api/tasks.js
+index a39c461..610c90d 100644
+--- a/imports/api/tasks.js
++++ b/imports/api/tasks.js
+@@ -39,12 +39,24 @@ Meteor.methods({
+   'tasks.remove' (taskId) {
+     check(taskId, String);
+ 
++    const task = Tasks.findOne(taskId);
 +    if (task.private && task.owner !== Meteor.userId()) {
 +      // If the task is private, make sure only the owner can delete it
 +      throw new Meteor.Error('not-authorized');
@@ -1716,16 +1924,405 @@ index 2b429a3..a47bf45 100644
 +
      Tasks.remove(taskId);
    },
-   setChecked: function (taskId, setChecked) {
-+    var task = Tasks.findOne(taskId);
+   'tasks.setChecked' (taskId, setChecked) {
+     check(taskId, String);
+     check(setChecked, Boolean);
+ 
++    const task = Tasks.findOne(taskId);
 +    if (task.private && task.owner !== Meteor.userId()) {
 +      // If the task is private, make sure only the owner can check it off
 +      throw new Meteor.Error('not-authorized');
 +    }
 +
-     Tasks.update(taskId, { $set: { checked: setChecked} });
-   },
-   setPrivate: function (taskId, setToPrivate) {
+     Tasks.update(taskId, {
+       $set: {
+         checked: setChecked
+-- 
+2.6.3
+
+
+From 33929986de31d2c67324ebc9aed88f39d1218768 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:26:02 +0200
+Subject: [PATCH 46/55] Step 11.1: Add practicalmeteor:mocha package
+
+---
+ .meteor/packages | 1 +
+ .meteor/versions | 6 ++++++
+ 2 files changed, 7 insertions(+)
+
+diff --git a/.meteor/packages b/.meteor/packages
+index 64cec80..6ab35c2 100644
+--- a/.meteor/packages
++++ b/.meteor/packages
+@@ -19,3 +19,4 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
+ angular-templates
+ accounts-password
+ dotansimha:accounts-ui-angular
++practicalmeteor:mocha
+diff --git a/.meteor/versions b/.meteor/versions
+index b2d83b9..f1652dd 100644
+--- a/.meteor/versions
++++ b/.meteor/versions
+@@ -17,6 +17,7 @@ caching-compiler@1.0.2-rc.8
+ caching-html-compiler@1.0.4-rc.8
+ callback-hook@1.0.6-rc.8
+ check@1.1.2-rc.8
++coffeescript@1.0.15-rc.8
+ ddp@1.2.3-rc.8
+ ddp-client@1.2.3-rc.8
+ ddp-common@1.2.3-rc.8
+@@ -58,6 +59,11 @@ npm-bcrypt@0.7.8_2
+ npm-mongo@1.4.41-rc.8
+ observe-sequence@1.0.9-rc.8
+ ordered-dict@1.0.5-rc.8
++practicalmeteor:chai@2.1.0_1
++practicalmeteor:loglevel@1.2.0_2
++practicalmeteor:mocha@2.1.0_7
++practicalmeteor:mocha-core@0.1.4
++practicalmeteor:sinon@1.14.1_2
+ promise@0.6.4-rc.8
+ random@1.0.7-rc.8
+ rate-limit@1.0.2-rc.8
+-- 
+2.6.3
+
+
+From 1004db1df20b7a68e370b8bee46a6e4b9aca3b4f Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:26:40 +0200
+Subject: [PATCH 47/55] Step 11.2: Add a scaffold for a method test
+
+---
+ imports/api/tasks.test.js | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
+ create mode 100644 imports/api/tasks.test.js
+
+diff --git a/imports/api/tasks.test.js b/imports/api/tasks.test.js
+new file mode 100644
+index 0000000..05287ba
+--- /dev/null
++++ b/imports/api/tasks.test.js
+@@ -0,0 +1,12 @@
++/* eslint-env mocha */
++
++import { Meteor } from 'meteor/meteor';
++
++if (Meteor.isServer) {
++  describe('Tasks', () => {
++    describe('methods', () => {
++      it('can delete owned task', () => {
++      });
++    });
++  });
++}
+-- 
+2.6.3
+
+
+From 304ab142599572ac72dea888aa2ef97382f41669 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:27:15 +0200
+Subject: [PATCH 48/55] Step 11.3: Prepare the database for each test
+
+---
+ imports/api/tasks.test.js | 17 ++++++++++++++++-
+ 1 file changed, 16 insertions(+), 1 deletion(-)
+
+diff --git a/imports/api/tasks.test.js b/imports/api/tasks.test.js
+index 05287ba..a033a3b 100644
+--- a/imports/api/tasks.test.js
++++ b/imports/api/tasks.test.js
+@@ -1,12 +1,27 @@
+ /* eslint-env mocha */
+ 
+ import { Meteor } from 'meteor/meteor';
++import { Random } from 'meteor/random';
++
++import { Tasks } from './tasks.js';
+ 
+ if (Meteor.isServer) {
+   describe('Tasks', () => {
+     describe('methods', () => {
+-      it('can delete owned task', () => {
++      const userId = Random.id();
++      let taskId;
++
++      beforeEach(() => {
++        Tasks.remove({});
++        taskId = Tasks.insert({
++          text: 'test task',
++          createdAt: new Date(),
++          owner: userId,
++          username: 'tmeasday',
++        });
+       });
++
++      it('can delete owned task', () => {});
+     });
+   });
+ }
+-- 
+2.6.3
+
+
+From d2f794f656c50b1c4ce11857ca3b8a2249a7fd4e Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:27:49 +0200
+Subject: [PATCH 49/55] Step 11.4: Added test to check delete method
+
+---
+ imports/api/tasks.test.js | 18 +++++++++++++++++-
+ 1 file changed, 17 insertions(+), 1 deletion(-)
+
+diff --git a/imports/api/tasks.test.js b/imports/api/tasks.test.js
+index a033a3b..54e6c41 100644
+--- a/imports/api/tasks.test.js
++++ b/imports/api/tasks.test.js
+@@ -2,6 +2,7 @@
+ 
+ import { Meteor } from 'meteor/meteor';
+ import { Random } from 'meteor/random';
++import { assert } from 'meteor/practicalmeteor:chai';
+ 
+ import { Tasks } from './tasks.js';
+ 
+@@ -21,7 +22,22 @@ if (Meteor.isServer) {
+         });
+       });
+ 
+-      it('can delete owned task', () => {});
++      it('can delete owned task', () => {
++        // Find the internal implementation of the task method so we can
++        // test it in isolation
++        const deleteTask = Meteor.server.method_handlers['tasks.remove'];
++
++        // Set up a fake method invocation that looks like what the method expects
++        const invocation = {
++          userId
++        };
++
++        // Run the method with `this` set to the fake invocation
++        deleteTask.apply(invocation, [taskId]);
++
++        // Verify that the method does what we expected
++        assert.equal(Tasks.find().count(), 0);
++      });
+     });
+   });
+ }
+-- 
+2.6.3
+
+
+From 993972ce855fb8b87e4f46db95ba071f9abce43b Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:28:17 +0200
+Subject: [PATCH 50/55] Step 11.5: Add angular-mocks NPM package
+
+---
+ package.json | 3 +++
+ 1 file changed, 3 insertions(+)
+
+diff --git a/package.json b/package.json
+index 648e16e..c257af6 100644
+--- a/package.json
++++ b/package.json
+@@ -8,5 +8,8 @@
+     "angular": "^1.5.2",
+     "angular-meteor": "^1.3.7",
+     "meteor-node-stubs": "~0.2.0"
++  },
++  "devDependencies": {
++    "angular-mocks": "^1.5.2"
+   }
+ }
+-- 
+2.6.3
+
+
+From 0676ae95b052efd2e2795b12bcf9e67c7a5d99be Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:29:02 +0200
+Subject: [PATCH 51/55] Step 11.6: Prepare the component for each test
+
+---
+ .../components/todosList/client/todosList.tests.js | 25 ++++++++++++++++++++++
+ 1 file changed, 25 insertions(+)
+ create mode 100644 imports/components/todosList/client/todosList.tests.js
+
+diff --git a/imports/components/todosList/client/todosList.tests.js b/imports/components/todosList/client/todosList.tests.js
+new file mode 100644
+index 0000000..67f5256
+--- /dev/null
++++ b/imports/components/todosList/client/todosList.tests.js
+@@ -0,0 +1,25 @@
++/* eslint-env mocha */
++
++import 'angular-mocks';
++import { Meteor } from 'meteor/meteor';
++
++import todosList from '../todosList';
++
++describe('todosList', function() {
++  var element;
++
++  beforeEach(function() {
++    var $compile;
++    var $rootScope;
++
++    window.module(todosList.name);
++
++    inject(function(_$compile_, _$rootScope_){
++      $compile = _$compile_;
++      $rootScope = _$rootScope_;
++    });
++
++    element = $compile('<todos-list></todos-list>')($rootScope.$new(true));
++    $rootScope.$digest();
++  });
++})
+-- 
+2.6.3
+
+
+From eacbd5e02918599cb3783188bf4220fd1eae27cc Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:29:31 +0200
+Subject: [PATCH 52/55] Step 11.7: Add test to check incomplete tasks count
+
+---
+ imports/components/todosList/client/todosList.tests.js | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+diff --git a/imports/components/todosList/client/todosList.tests.js b/imports/components/todosList/client/todosList.tests.js
+index 67f5256..41167bc 100644
+--- a/imports/components/todosList/client/todosList.tests.js
++++ b/imports/components/todosList/client/todosList.tests.js
+@@ -2,6 +2,7 @@
+ 
+ import 'angular-mocks';
+ import { Meteor } from 'meteor/meteor';
++import { assert } from 'meteor/practicalmeteor:chai';
+ 
+ import todosList from '../todosList';
+ 
+@@ -22,4 +23,10 @@ describe('todosList', function() {
+     element = $compile('<todos-list></todos-list>')($rootScope.$new(true));
+     $rootScope.$digest();
+   });
++
++  describe('component', function() {
++    it('should be showing incomplete tasks count', function() {
++      assert.include(element[0].querySelector('h1').innerHTML, '0');
++    });
++  });
+ })
+-- 
+2.6.3
+
+
+From 624322117e54c32ee9883f12ac66fc2b2c0328b2 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:30:14 +0200
+Subject: [PATCH 53/55] Step 11.8: Prepare controller for each test
+
+---
+ .../components/todosList/client/todosList.tests.js    | 19 +++++++++++++++++++
+ 1 file changed, 19 insertions(+)
+
+diff --git a/imports/components/todosList/client/todosList.tests.js b/imports/components/todosList/client/todosList.tests.js
+index 41167bc..bb290ed 100644
+--- a/imports/components/todosList/client/todosList.tests.js
++++ b/imports/components/todosList/client/todosList.tests.js
+@@ -3,6 +3,7 @@
+ import 'angular-mocks';
+ import { Meteor } from 'meteor/meteor';
+ import { assert } from 'meteor/practicalmeteor:chai';
++import { sinon } from 'meteor/practicalmeteor:sinon';
+ 
+ import todosList from '../todosList';
+ 
+@@ -29,4 +30,22 @@ describe('todosList', function() {
+       assert.include(element[0].querySelector('h1').innerHTML, '0');
+     });
+   });
++
++  describe('controller', function() {
++    describe('addTask', function() {
++      var controller;
++      var newTask = 'Be more fabolous';
++
++      beforeEach(() => {
++        sinon.stub(Meteor, 'call');
++        controller = element.controller('todosList');
++        controller.newTask = 'Be fabolous';
++        controller.addTask(newTask);
++      });
++
++      afterEach(() => {
++        Meteor.call.restore();
++      });
++    });
++  });
+ })
+-- 
+2.6.3
+
+
+From de86d18961051b18c9fc78f4d55873711a76144f Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:30:45 +0200
+Subject: [PATCH 54/55] Step 11.9: Add test to check insert method
+
+---
+ imports/components/todosList/client/todosList.tests.js | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+diff --git a/imports/components/todosList/client/todosList.tests.js b/imports/components/todosList/client/todosList.tests.js
+index bb290ed..8a016aa 100644
+--- a/imports/components/todosList/client/todosList.tests.js
++++ b/imports/components/todosList/client/todosList.tests.js
+@@ -46,6 +46,11 @@ describe('todosList', function() {
+       afterEach(() => {
+         Meteor.call.restore();
+       });
++
++      it('should call tasks.insert method', function() {
++        sinon.assert.calledOnce(Meteor.call);
++        sinon.assert.calledWith(Meteor.call, 'tasks.insert', newTask);
++      });
+     });
+   });
+ })
+-- 
+2.6.3
+
+
+From 83c53904e21e0aa21f236193532bb81075929d00 Mon Sep 17 00:00:00 2001
+From: Uri Goldshtein <uri.goldshtein@gmail.com>
+Date: Thu, 24 Mar 2016 18:31:22 +0200
+Subject: [PATCH 55/55] Step 11.10: Add test to check form reset
+
+---
+ imports/components/todosList/client/todosList.tests.js | 4 ++++
+ 1 file changed, 4 insertions(+)
+
+diff --git a/imports/components/todosList/client/todosList.tests.js b/imports/components/todosList/client/todosList.tests.js
+index 8a016aa..d293a4b 100644
+--- a/imports/components/todosList/client/todosList.tests.js
++++ b/imports/components/todosList/client/todosList.tests.js
+@@ -51,6 +51,10 @@ describe('todosList', function() {
+         sinon.assert.calledOnce(Meteor.call);
+         sinon.assert.calledWith(Meteor.call, 'tasks.insert', newTask);
+       });
++
++      it('should reset newTask', function() {
++        assert.equal(controller.newTask, '');
++      });
+     });
+   });
+ })
 -- 
 2.6.3
 
diff --git a/package.js b/package.js
index e145de6..9fcb712 100644
--- a/package.js
+++ b/package.js
@@ -27,7 +27,6 @@ Package.onUse(function (api) {
   ]);
 
   api.addFiles([
-    'content/angular/step01.md',
     'content/angular/step02.md',
     'content/angular/step03.md',
     'content/angular/step04.md',
@@ -38,6 +37,7 @@ Package.onUse(function (api) {
     'content/angular/step09.md',
     'content/angular/step10.md',
     'content/angular/step11.md',
+    'content/angular/step12.md',
 
     'content/blaze/step02.md',
     'content/blaze/step03.md',
-- 
2.13.6 (Apple Git-96)


From cb2d4213aede49aa50c0de4ffc36fdfe13ec9ccc Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 24 Mar 2016 10:38:37 -0700
Subject: [PATCH 111/164] Update angular repo

---
 repos/angular | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/repos/angular b/repos/angular
index c48994a..83c5390 160000
--- a/repos/angular
+++ b/repos/angular
@@ -1 +1 @@
-Subproject commit c48994ab0683d2ba1029c7c5a053a7f68a5390bb
+Subproject commit 83c53904e21e0aa21f236193532bb81075929d00
-- 
2.13.6 (Apple Git-96)


From ed4f9702c2a3b87e6198da570dfbaf6c9eedaeeb Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Tue, 29 Mar 2016 09:35:54 +1100
Subject: [PATCH 112/164] Fix mis-named file

---
 content/react/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/react/step02.md b/content/react/step02.md
index c1deb73..33069fa 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -17,7 +17,7 @@ First, replace the content of the initial HTML file:
 
 {{> DiffBox tutorialName="simple-todos-react" step="2.2"}}
 
-Second, **delete `main/client.js`** and create three new files:
+Second, **delete `client/main.js`** and create three new files:
 
 {{> DiffBox tutorialName="simple-todos-react" step="2.3"}}
 
-- 
2.13.6 (Apple Git-96)


From 8460215143260f48914e0b07fa11b94a5121d6c2 Mon Sep 17 00:00:00 2001
From: Matt Dorn <matt.dorn@gmail.com>
Date: Thu, 31 Mar 2016 16:40:45 -0500
Subject: [PATCH 113/164] Fix typo: Add missing word.

---
 content/shared/step01.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/shared/step01.md b/content/shared/step01.md
index e342bdd..e9cc337 100644
--- a/content/shared/step01.md
+++ b/content/shared/step01.md
@@ -36,7 +36,7 @@ You can play around with this default app for a bit before we continue. For exam
 
 ### ES2015 JavaScript features
 
-If you haven't tried next-generation JavaScript features yet, some of the syntax in the intial app code, and throughout this tutorial, might look weird. This is Meteor ships by default with support for many features of ES2015, the next version of JavaScript. Some of these features include:
+If you haven't tried next-generation JavaScript features yet, some of the syntax in the intial app code, and throughout this tutorial, might look weird. This is because Meteor ships by default with support for many features of ES2015, the next version of JavaScript. Some of these features include:
 
 1. Arrow functions: `(arg) => {return result;}`
 2. Shorthand for methods: `render() { ... }`
-- 
2.13.6 (Apple Git-96)


From 37fe5809c627d606b9759d558467dffae0097ee0 Mon Sep 17 00:00:00 2001
From: Matt Dorn <matt.dorn@gmail.com>
Date: Thu, 31 Mar 2016 16:41:51 -0500
Subject: [PATCH 114/164] Change CSS file reference to main.css.

simple-todos-react.css does not exist in the
React Meteor tutorial.
---
 content/react/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/react/step02.md b/content/react/step02.md
index 33069fa..dac3d17 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -64,7 +64,7 @@ The most important method in every React component is `render()`, which is calle
 
 JSX is supported by the `ecmascript` Atmosphere package, which is included in all new Meteor apps by default.
 
-{{> addingCSS cssFileName="simple-todos-react.css"}}
+{{> addingCSS cssFileName="main.css"}}
 
 Now that you've added the CSS, the app should look a lot nicer. Check in your browser to see that the new styles have loaded.
 
-- 
2.13.6 (Apple Git-96)


From 9b917ce2aac607c512c2f1e6689800840082f208 Mon Sep 17 00:00:00 2001
From: Matt Dorn <matt.dorn@gmail.com>
Date: Thu, 31 Mar 2016 16:42:34 -0500
Subject: [PATCH 115/164] Fix typo: "an" instead of "a".

---
 content/react/step03.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/react/step03.md b/content/react/step03.md
index 72ad42f..8eddc66 100644
--- a/content/react/step03.md
+++ b/content/react/step03.md
@@ -6,7 +6,7 @@
 
 ### Using data from a collection inside a React component
 
-To use data from a Meteor collection inside a React component, we can use a Atmosphere package `react-meteor-data` which allows us to create a "data container" to feed Meteor's reactive data into React's component heirarchy.
+To use data from a Meteor collection inside a React component, we can use an Atmosphere package `react-meteor-data` which allows us to create a "data container" to feed Meteor's reactive data into React's component hierarchy.
 
 We need to install that package alongside a NPM package it utilizes, `react-addons-pure-render-mixin`:
 
-- 
2.13.6 (Apple Git-96)


From ee78f022cd35d34979230ab518a9f7f286c6ac21 Mon Sep 17 00:00:00 2001
From: Matt Dorn <matt.dorn@gmail.com>
Date: Thu, 31 Mar 2016 16:43:45 -0500
Subject: [PATCH 116/164] Fix typo: contents 'change', not 'changes.'

---
 content/react/step03.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/react/step03.md b/content/react/step03.md
index 8eddc66..380160e 100644
--- a/content/react/step03.md
+++ b/content/react/step03.md
@@ -19,7 +19,7 @@ To use `react-meteor-data`, we need to wrap our component in a *container* using
 
 {{> DiffBox step="3.4" tutorialName="simple-todos-react"}}
 
-The wrapped `App` component fetches tasks from the `Tasks` collection and supplies them to the underlying `App` component it wraps as the `tasks` prop. It does this in a reactive way, so that when the contents of the database changes, the `App` re-renders, as we'll soon see!
+The wrapped `App` component fetches tasks from the `Tasks` collection and supplies them to the underlying `App` component it wraps as the `tasks` prop. It does this in a reactive way, so that when the contents of the database change, the `App` re-renders, as we'll soon see!
 
 When you make these changes to the code, you'll notice that the tasks that used to be in the todo list have disappeared. That's because our database is currently empty &mdash; we need to insert some tasks!
 
-- 
2.13.6 (Apple Git-96)


From 2cc52b88443f26be1930b8dd44bbb79077495758 Mon Sep 17 00:00:00 2001
From: Matt Dorn <matt.dorn@gmail.com>
Date: Thu, 31 Mar 2016 16:44:11 -0500
Subject: [PATCH 117/164] Fix typo: close parentheses properly.

---
 content/angular/step11.md | 2 +-
 content/shared/step11.md  | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/content/angular/step11.md b/content/angular/step11.md
index c4eb695..a01e9c3 100644
--- a/content/angular/step11.md
+++ b/content/angular/step11.md
@@ -12,7 +12,7 @@ To do so, we'll add a [test driver](http://guide.meteor.com/testing.html#test-dr
 meteor add practicalmeteor:mocha
 ```
 
-We can now run our app in "test mode" by calling out a special command and specifying to use the driver (you'll need to stop the regular app from running, or specify an alternate port with `--port XYZ`:
+We can now run our app in "test mode" by calling out a special command and specifying to use the driver (you'll need to stop the regular app from running, or specify an alternate port with `--port XYZ`):
 
 ```bash
 meteor test --driver-package practicalmeteor:mocha
diff --git a/content/shared/step11.md b/content/shared/step11.md
index 13ace58..1c06b38 100644
--- a/content/shared/step11.md
+++ b/content/shared/step11.md
@@ -12,7 +12,7 @@ To do so, we'll add a [test driver](http://guide.meteor.com/testing.html#test-dr
 meteor add practicalmeteor:mocha
 ```
 
-We can now run our app in "test mode" by calling out a special command and specifying to use the driver (you'll need to stop the regular app from running, or specify an alternate port with `--port XYZ`:
+We can now run our app in "test mode" by calling out a special command and specifying to use the driver (you'll need to stop the regular app from running, or specify an alternate port with `--port XYZ`):
 
 ```bash
 meteor test --driver-package practicalmeteor:mocha
-- 
2.13.6 (Apple Git-96)


From d9234bc2483454529be5de075f187e1ea7678638 Mon Sep 17 00:00:00 2001
From: Matt Dorn <matt.dorn@gmail.com>
Date: Thu, 31 Mar 2016 16:44:38 -0500
Subject: [PATCH 118/164] Fix typo: there is no 'todos' module; use 'tasks'

---
 content/shared/explanations.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/shared/explanations.md b/content/shared/explanations.md
index b92d498..dcf3020 100644
--- a/content/shared/explanations.md
+++ b/content/shared/explanations.md
@@ -6,7 +6,7 @@ You can read more about collections in the [Collections article](http://guide.me
 
 Creating a new collection is as easy as calling `MyCollection = new Mongo.Collection("my-collection");` in your JavaScript. On the server, this sets up a MongoDB collection called `my-collection`; on the client, this creates a cache connected to the server collection. We'll learn more about the client/server divide in step 12, but for now we can write our code with the assumption that the entire database is present on the client.
 
-To create the collection, we define a new `todos` module that creates a Mongo collection and exports it:
+To create the collection, we define a new `tasks` module that creates a Mongo collection and exports it:
 
 {{> DiffBox tutorialName=tutorialName step="3.1"}}
 
-- 
2.13.6 (Apple Git-96)


From 62407957b9c4dfa2dbfb4de70099a372dea50161 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Sun, 3 Apr 2016 21:49:24 -0700
Subject: [PATCH 119/164] Update CSS to use diff box to avoid filename
 confusion

---
 content/angular/step02.md         |  2 +-
 content/blaze/step02.md           |  6 +++---
 content/react/step02.md           |  2 +-
 packages.json                     |  3 ---
 packages/npm-container/index.js   |  9 ---------
 packages/npm-container/package.js | 30 ------------------------------
 6 files changed, 5 insertions(+), 47 deletions(-)
 delete mode 100644 packages.json
 delete mode 100644 packages/npm-container/index.js
 delete mode 100644 packages/npm-container/package.js

diff --git a/content/angular/step02.md b/content/angular/step02.md
index 3ca19f0..7f6e158 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -64,6 +64,6 @@ All of the code in your `html` files is compiled with Angular. Angular binds the
 
 In the next step, we will see how we can use the $meteor service bind our scope data to a database collection.
 
-{{> addingCSS cssFileName="simple-todos-angular.css"}}
+{{> DiffBox tutorialName="simple-todos-angular" step="2.8"}}
 
 {{/template}}
diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index 36257d4..497f58c 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -32,11 +32,11 @@ Now let's find out what all these bits of code are doing!
 
 Meteor parses HTML files and identifies three top-level tags: **&lt;head>**, **&lt;body>**, and **&lt;template>**.
 
-Everything inside any &lt;head> tags is added to the `head` section of the HTML sent to the client, and everything inside &lt;body> tags is added to the `body` section, just like in a regular HTML file. 
+Everything inside any &lt;head> tags is added to the `head` section of the HTML sent to the client, and everything inside &lt;body> tags is added to the `body` section, just like in a regular HTML file.
 
 Everything inside &lt;template> tags is compiled into Meteor _templates_, which can be included inside HTML with `{{dstache}}> templateName}}` or referenced in your JavaScript with `Template.templateName`.
 
-Also, the `body` section can be referenced in your JavaScript with `Template.body`. Think of it as a special "parent" template, that can include the other child templates. 
+Also, the `body` section can be referenced in your JavaScript with `Template.body`. Think of it as a special "parent" template, that can include the other child templates.
 
 ### Adding logic and data to templates
 
@@ -46,6 +46,6 @@ You can pass data into templates from your JavaScript code by defining _helpers_
 
 In the next step, we will see how we can use helpers to make our templates display dynamic data from a database collection.
 
-{{> addingCSS cssFileName="simple-todos.css"}}
+{{> DiffBox tutorialName="simple-todos" step="2.5"}}
 
 {{/template}}
diff --git a/content/react/step02.md b/content/react/step02.md
index dac3d17..41adab1 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -64,7 +64,7 @@ The most important method in every React component is `render()`, which is calle
 
 JSX is supported by the `ecmascript` Atmosphere package, which is included in all new Meteor apps by default.
 
-{{> addingCSS cssFileName="main.css"}}
+{{> DiffBox tutorialName="simple-todos-react" step="2.6"}}
 
 Now that you've added the CSS, the app should look a lot nicer. Check in your browser to see that the new styles have loaded.
 
diff --git a/packages.json b/packages.json
deleted file mode 100644
index 077404a..0000000
--- a/packages.json
+++ /dev/null
@@ -1,3 +0,0 @@
-{
-  
-}
\ No newline at end of file
diff --git a/packages/npm-container/index.js b/packages/npm-container/index.js
deleted file mode 100644
index c3fc862..0000000
--- a/packages/npm-container/index.js
+++ /dev/null
@@ -1,9 +0,0 @@
-Meteor.npmRequire = function(moduleName) {
-  var module = Npm.require(moduleName);
-  return module;
-};
-
-Meteor.require = function(moduleName) {
-  console.warn('Meteor.require is deprecated. Please use Meteor.npmRequire instead!');
-  return Meteor.npmRequire(moduleName);
-};
\ No newline at end of file
diff --git a/packages/npm-container/package.js b/packages/npm-container/package.js
deleted file mode 100644
index 9fab3ce..0000000
--- a/packages/npm-container/package.js
+++ /dev/null
@@ -1,30 +0,0 @@
-var path = Npm.require('path');
-var fs = Npm.require('fs');
-
-Package.describe({
-  summary: 'Contains all your npm dependencies',
-  version: '1.2.0',
-  name: 'npm-container'
-});
-
-var packagesJsonFile = path.resolve('./packages.json');
-try {
-  var fileContent = fs.readFileSync(packagesJsonFile);
-  var packages = JSON.parse(fileContent.toString());
-  Npm.depends(packages);
-} catch (ex) {
-  console.error('ERROR: packages.json parsing error [ ' + ex.message + ' ]');
-}
-
-// Adding the app's packages.json as a used file for this package will get
-// Meteor to watch it and reload this package when it changes
-Package.onUse(function(api) {
-  api.addFiles('index.js', 'server');
-  if (api.addAssets) {
-    api.addAssets('../../packages.json', 'server');
-  } else {
-    api.addFiles('../../packages.json', 'server', {
-      isAsset: true
-    });
-  }
-});
\ No newline at end of file
-- 
2.13.6 (Apple Git-96)


From 9a576a57d5b0f14f4e23b5be9894326987e412f3 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Thu, 7 Apr 2016 15:03:41 -0700
Subject: [PATCH 120/164] Updated blaze + react tutorials to avoid
 Meteor.userId() in methods.

https://github.com/meteor/tutorials/issues/46
---
 generated/blaze.multi.patch | 214 +++++++++++++++++++++---------------------
 generated/react.multi.patch | 222 ++++++++++++++++++++++----------------------
 repos/blaze                 |   2 +-
 repos/react                 |   2 +-
 4 files changed, 220 insertions(+), 220 deletions(-)

diff --git a/generated/blaze.multi.patch b/generated/blaze.multi.patch
index eba50c5..7a1d81d 100644
--- a/generated/blaze.multi.patch
+++ b/generated/blaze.multi.patch
@@ -1,4 +1,4 @@
-From 51e340b7cd2b944bd0929206b1871f1c044c2aa2 Mon Sep 17 00:00:00 2001
+From f074a805255262736d909d1d5e17eee22bbb6605 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:05:51 -0700
 Subject: [PATCH 01/48] Step 1: Run `meteor create`
@@ -289,10 +289,10 @@ index 0000000..31a9e0e
 +  // code to run on server at startup
 +});
 -- 
-2.1.3
+2.5.1
 
 
-From 431f75b28f8ee985b3ac341da6c4d752d204b135 Mon Sep 17 00:00:00 2001
+From f00a06c7c5e14b46f8c1c4b57b8308470ae4131b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:07:22 -0700
 Subject: [PATCH 02/48] Step 2.1: Remove starter HTML code
@@ -332,10 +332,10 @@ index 6fe0dc5..7c48505 100644
 -  </ul>
 -</template>
 -- 
-2.1.3
+2.5.1
 
 
-From 99cffc464f80899ce34cf446179e8041c9f5114c Mon Sep 17 00:00:00 2001
+From d76d39724777bf82d31f70f3ded8de3659d0ba0f Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 13:11:52 +1100
 Subject: [PATCH 03/48] Step 2.2: Add starter HTML code
@@ -369,10 +369,10 @@ index 0000000..23a6507
 +  <li>{{text}}</li>
 +</template>
 -- 
-2.1.3
+2.5.1
 
 
-From 30e9ac16a2de85e74d5a6d92b16e41b37e7faf5e Mon Sep 17 00:00:00 2001
+From 81b442e117eb61469eef1b783552820aad769b08 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:07:50 -0700
 Subject: [PATCH 04/48] Step 2.3: Add starter JS code
@@ -400,10 +400,10 @@ index 0000000..3ad20b1
 +  ],
 +});
 -- 
-2.1.3
+2.5.1
 
 
-From d63fe20a79a2dd9be0034b72bba93d9654d10d31 Mon Sep 17 00:00:00 2001
+From 0ee65568d41f16915c4d1271ac307a1a362fb253 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:08:17 -0700
 Subject: [PATCH 05/48] Step 2.4: Import starter JS
@@ -441,10 +441,10 @@ index ecb3282..4e7c1a4 100644
 -});
 +import '../imports/ui/body.js';
 -- 
-2.1.3
+2.5.1
 
 
-From 63f980943c048f8084f5a42543ba3e13b4088800 Mon Sep 17 00:00:00 2001
+From 84a25d420baa2815108ecd22709339f1912478a9 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:13:09 +1100
 Subject: [PATCH 06/48] Step 2.5: Add CSS
@@ -585,10 +585,10 @@ index b6b4052..ed5e77e 100644
 +  }
 +}
 -- 
-2.1.3
+2.5.1
 
 
-From bbe752d39cf04a51376c1cd089b053615cf08df9 Mon Sep 17 00:00:00 2001
+From 9ee57a11d41eac7791920a24497bef8716a6301f Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:15:47 +1100
 Subject: [PATCH 07/48] Step 3.1: Create tasks collection
@@ -608,10 +608,10 @@ index 0000000..3bed819
 +
 +export const Tasks = new Mongo.Collection('tasks');
 -- 
-2.1.3
+2.5.1
 
 
-From 85ec00cdd88b93b68d2f3c517060594a8f015062 Mon Sep 17 00:00:00 2001
+From 96f0e2a82fa51aeb72170c2fb30814245806fd1c Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:20:32 +1100
 Subject: [PATCH 08/48] Step 3.2: Load tasks collection on the server
@@ -632,10 +632,10 @@ index 31a9e0e..ab941a4 100644
 -});
 +import '../imports/api/tasks.js';
 -- 
-2.1.3
+2.5.1
 
 
-From f6b008980d6f04b93e05bf777bdb0378308f4b57 Mon Sep 17 00:00:00 2001
+From f345b40d5bf55026d8bb72a771971d06f6cec25e Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:16:03 +1100
 Subject: [PATCH 09/48] Step 3.3: Load tasks from Tasks collection
@@ -666,10 +666,10 @@ index 3ad20b1..fc36022 100644
 +  },
  });
 -- 
-2.1.3
+2.5.1
 
 
-From 5181113b59242497a2593b844337a93944b7d78a Mon Sep 17 00:00:00 2001
+From 06fc0de9e7665c11170f69f7df069229fa99330f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:10:21 -0700
 Subject: [PATCH 10/48] Step 4.1: Add form for new tasks
@@ -694,10 +694,10 @@ index 23a6507..0a1f952 100644
  
      <ul>
 -- 
-2.1.3
+2.5.1
 
 
-From 828c084621cc5bd0d9373d54f4eda6188260bbda Mon Sep 17 00:00:00 2001
+From 2fd36714d6494f4fb1bf99d1aefbc9a10dfde350 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:19:59 +1100
 Subject: [PATCH 11/48] Step 4.2: Add event handler for form submit
@@ -735,10 +735,10 @@ index fc36022..42ad1d5 100644
 +  },
 +});
 -- 
-2.1.3
+2.5.1
 
 
-From 0dc5c4c9c5bb0f8f769ef704a90a981de6090847 Mon Sep 17 00:00:00 2001
+From 3706dd75816a2a0ac525aa79acdb75f622e64d5a Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:12:14 -0700
 Subject: [PATCH 12/48] Step 4.3: Show newest tasks at the top
@@ -762,10 +762,10 @@ index 42ad1d5..6fbc9d5 100644
  });
  
 -- 
-2.1.3
+2.5.1
 
 
-From 89bc3233dc87cba97d7e5a89f659dfc463b8da53 Mon Sep 17 00:00:00 2001
+From 0f5a29b2ec349b1beefaea65da8795669eb3fbd6 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:12:57 -0700
 Subject: [PATCH 13/48] Step 5.1: Add buttons to Task component
@@ -791,10 +791,10 @@ index 0000000..c4ab8e5
 +  </li>
 +</template>
 -- 
-2.1.3
+2.5.1
 
 
-From acb70c80fb362a856eb7254d5b7dbe8492e2dc83 Mon Sep 17 00:00:00 2001
+From a0a45efdbc9f6304a07e3fd378ac063bbd4a552b Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:23:12 +1100
 Subject: [PATCH 14/48] Step 5.2: Remove Tasks component from Body file
@@ -816,10 +816,10 @@ index 0a1f952..c40a87b 100644
 -  <li>{{text}}</li>
 -</template>
 -- 
-2.1.3
+2.5.1
 
 
-From 4f27c1302376e197c5e69b476f19d9cd13522ade Mon Sep 17 00:00:00 2001
+From 9662f35f00dfc5bc0f5b6b363f17324d785b6684 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:26:44 +1100
 Subject: [PATCH 15/48] Step 5.3: Add event handlers for Task buttons
@@ -853,10 +853,10 @@ index 0000000..782f932
 +  },
 +});
 -- 
-2.1.3
+2.5.1
 
 
-From a26ed7b132ec652a7c4cd9f088f7eb3300e86389 Mon Sep 17 00:00:00 2001
+From 95760055fbe30f22a0f05154fbfb70628fa4d80b Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:26:57 +1100
 Subject: [PATCH 16/48] Step 5.4: Import Task component from the body
@@ -878,10 +878,10 @@ index 6fbc9d5..bac22c6 100644
  
  Template.body.helpers({
 -- 
-2.1.3
+2.5.1
 
 
-From 4bfaa6f070101cb0caf35ab30343e1126b0e6701 Mon Sep 17 00:00:00 2001
+From 35b9df8d06b3d3b1ea53adf1a0baeced4ad69e01 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:24:18 -0700
 Subject: [PATCH 17/48] Step 7.1: Add hide-completed checkbox to HTML
@@ -907,10 +907,10 @@ index c40a87b..b634377 100644
          <input type="text" name="text" placeholder="Type to add new tasks" />
        </form>
 -- 
-2.1.3
+2.5.1
 
 
-From 11349ad2cad437421ad9fadb05f000fc2f24d928 Mon Sep 17 00:00:00 2001
+From bc9bad96083398a27f0f5715d2c42840c550efbd Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:33:00 +1100
 Subject: [PATCH 18/48] Step 7.2: Add reactive-dict package
@@ -942,10 +942,10 @@ index c3395d2..ccbd7bb 100644
  reload@1.1.6-rc.2
  retry@1.0.5-rc.2
 -- 
-2.1.3
+2.5.1
 
 
-From 349bd90805ba098d08c9445c00fb6776f2cb8b08 Mon Sep 17 00:00:00 2001
+From 6278c9251e42824a54e33982f393f195f7c261a7 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:29:41 +1100
 Subject: [PATCH 19/48] Step 7.3: Add state dictionary to the body
@@ -975,10 +975,10 @@ index bac22c6..d429b10 100644
    tasks() {
      // Show newest tasks at the top
 -- 
-2.1.3
+2.5.1
 
 
-From caa11a11d808123299380ee26229c9f358ba1775 Mon Sep 17 00:00:00 2001
+From 099e720bdef9264fb4a50c96aff01cb776c61d58 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:30:11 +1100
 Subject: [PATCH 20/48] Step 7.4: Add event handler for checkbox
@@ -1000,10 +1000,10 @@ index d429b10..856dad4 100644
 +  },
  });
 -- 
-2.1.3
+2.5.1
 
 
-From 10e30f2ff2b42a53bd675433f65d21ac2beb679e Mon Sep 17 00:00:00 2001
+From 9f9c2e3690dc589db6515c68301af09f630c05c2 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:31:16 +1100
 Subject: [PATCH 21/48] Step 7.5: Add helpers to body template
@@ -1031,10 +1031,10 @@ index 856dad4..18422ae 100644
    },
  });
 -- 
-2.1.3
+2.5.1
 
 
-From 79b34c54716abd5aaa1a5d9f5068a8bd7c24e35b Mon Sep 17 00:00:00 2001
+From 8422a894f5acb8776657e6ec366a9cb174dfbd33 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:26:17 -0700
 Subject: [PATCH 22/48] Step 7.6: Add incompleteCount helper to body
@@ -1058,10 +1058,10 @@ index 18422ae..3ca9a47 100644
  
  Template.body.events({
 -- 
-2.1.3
+2.5.1
 
 
-From b26b4d486c9136a3db7beb5d63759b7fa1cdf0b3 Mon Sep 17 00:00:00 2001
+From 8580aba0afce4d9392a348d55be7bda3343d980b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:26:37 -0700
 Subject: [PATCH 23/48] Step 7.7: Display incompleteCount
@@ -1084,10 +1084,10 @@ index b634377..6738d6c 100644
        <label class="hide-completed">
          <input type="checkbox" />
 -- 
-2.1.3
+2.5.1
 
 
-From eaa7cfb2bf6257ec2f64f9cfe454c688de9cc6c3 Mon Sep 17 00:00:00 2001
+From db10a094d8671ec2fd0adf4c25cd7412e54f5502 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:27:03 -0700
 Subject: [PATCH 24/48] Step 8.1: Add accounts-ui and accounts-password
@@ -1170,10 +1170,10 @@ index ccbd7bb..b739407 100644
  standard-minifier-js@1.0.4-rc.2
  templating@1.1.7-rc.2
 -- 
-2.1.3
+2.5.1
 
 
-From bc9fb936699c1ce8a0643e5c563043d560a04811 Mon Sep 17 00:00:00 2001
+From 40360df00f03958402f19e0101a03dbf202e8c8e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:27:23 -0700
 Subject: [PATCH 25/48] Step 8.2: Include loginButtons
@@ -1196,10 +1196,10 @@ index 6738d6c..6c60a17 100644
          <input type="text" name="text" placeholder="Type to add new tasks" />
        </form>
 -- 
-2.1.3
+2.5.1
 
 
-From 7c48c9aa89e26eac39cc67046f85e54bab5889fe Mon Sep 17 00:00:00 2001
+From 80e9c894a81ce768c236d877a8b26a252cdd0077 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:36:02 +1100
 Subject: [PATCH 26/48] Step 8.3: Configure accounts-ui
@@ -1221,10 +1221,10 @@ index 0000000..7e4f7e5
 +  passwordSignupFields: 'USERNAME_ONLY',
 +});
 -- 
-2.1.3
+2.5.1
 
 
-From 47fde1a42d5d6d1b765b2f16d0f0cc48e0567be1 Mon Sep 17 00:00:00 2001
+From 128dc937cf215d45bb1f656afcd57eded2750b28 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:36:36 +1100
 Subject: [PATCH 27/48] Step 8.4: Import accounts configuration
@@ -1241,10 +1241,10 @@ index 4e7c1a4..739c50f 100644
 +import '../imports/startup/accounts-config.js';
  import '../imports/ui/body.js';
 -- 
-2.1.3
+2.5.1
 
 
-From 2e4234a228346ca731731166ca12aa38c857d82d Mon Sep 17 00:00:00 2001
+From 52d59c89e12a85ac4b9f4a92d094a49ac1388140 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:28:24 -0700
 Subject: [PATCH 28/48] Step 8.5: Update insert to include user data
@@ -1272,10 +1272,10 @@ index 3ca9a47..08fad55 100644
  
      // Clear form
 -- 
-2.1.3
+2.5.1
 
 
-From 7083c5b56ba521ed7f34a7039bb3510e6f522534 Mon Sep 17 00:00:00 2001
+From 33ecb2ba46eb0c5d1dff6234a3ef9c69f1726d47 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:28:47 -0700
 Subject: [PATCH 29/48] Step 8.6: Only show add task form if logged in
@@ -1304,10 +1304,10 @@ index 6c60a17..6a9e4e1 100644
  
      <ul>
 -- 
-2.1.3
+2.5.1
 
 
-From da75b1705c5d5ae3470f47406c261d4303f95a87 Mon Sep 17 00:00:00 2001
+From 4aa8bcb5754914e8254d37c124177d78d12c8aef Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:29:11 -0700
 Subject: [PATCH 30/48] Step 8.7: Display username next to task
@@ -1329,10 +1329,10 @@ index c4ab8e5..c42e8fc 100644
    </li>
  </template>
 -- 
-2.1.3
+2.5.1
 
 
-From fc20c31540886a1c6b63673217f63e485c076cec Mon Sep 17 00:00:00 2001
+From 8040d766c5ae5603dda1d25e4e1019aa45fb42a1 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:29:52 -0700
 Subject: [PATCH 31/48] Step 9.1: Remove insecure package
@@ -1367,10 +1367,10 @@ index b739407..3d9bd1e 100644
  launch-screen@1.0.7-rc.2
  less@2.5.5-rc.2
 -- 
-2.1.3
+2.5.1
 
 
-From aa0357a3c29f7fdedfbb7ff2b109e990831bb399 Mon Sep 17 00:00:00 2001
+From 74597e2a744493ae36ed7339ab0c9e64868efa1a Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:30:20 -0700
 Subject: [PATCH 32/48] Step 9.2: Define some methods
@@ -1380,7 +1380,7 @@ Subject: [PATCH 32/48] Step 9.2: Define some methods
  1 file changed, 31 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 3bed819..0201eb4 100644
+index 3bed819..af4962a 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -1,3 +1,34 @@
@@ -1395,15 +1395,15 @@ index 3bed819..0201eb4 100644
 +    check(text, String);
 +
 +    // Make sure the user is logged in before inserting a task
-+    if (! Meteor.userId()) {
++    if (! this.userId) {
 +      throw new Meteor.Error('not-authorized');
 +    }
 +
 +    Tasks.insert({
 +      text,
 +      createdAt: new Date(),
-+      owner: Meteor.userId(),
-+      username: Meteor.user().username,
++      owner: this.userId,
++      username: Meteor.users.findOne(this.userId).username,
 +    });
 +  },
 +  'tasks.remove'(taskId) {
@@ -1419,10 +1419,10 @@ index 3bed819..0201eb4 100644
 +  },
 +});
 -- 
-2.1.3
+2.5.1
 
 
-From f6f479327894e4d8f1cd559cdb587c93a86acb33 Mon Sep 17 00:00:00 2001
+From 4bbebba69bd9eb56a871cad72c7be70e2ad413f8 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:31:24 -0700
 Subject: [PATCH 33/48] Step 9.3: Replace insert with addTask method
@@ -1450,10 +1450,10 @@ index 08fad55..988f6a5 100644
      // Clear form
      target.text.value = '';
 -- 
-2.1.3
+2.5.1
 
 
-From 574d23454196ee22d0ea3bc6cd152b41e37e42cd Mon Sep 17 00:00:00 2001
+From c6cd6fb218da10e02123835941c0adb45bfca8cc Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:31:46 -0700
 Subject: [PATCH 34/48] Step 9.4: Replace update and remove with methods
@@ -1488,10 +1488,10 @@ index 782f932..3775ceb 100644
    },
  });
 -- 
-2.1.3
+2.5.1
 
 
-From d96e7791d8be06e726b02b9a40abdc23630d99e6 Mon Sep 17 00:00:00 2001
+From 885b2a6e8b912616f09da67f09a7a5e9a5e53318 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:32:19 -0700
 Subject: [PATCH 35/48] Step 10.1: Remove autopublish
@@ -1526,10 +1526,10 @@ index 3d9bd1e..4f59e62 100644
  babel-compiler@6.5.1-rc.2
  babel-runtime@0.1.6-rc.2
 -- 
-2.1.3
+2.5.1
 
 
-From 09284b4286add29217f39a59c7b7c63b93d6a74f Mon Sep 17 00:00:00 2001
+From 39287e7708b461dec39f35765f0992cf8315dbb4 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:45:32 +1100
 Subject: [PATCH 36/48] Step 10.2: Add publication for tasks
@@ -1539,7 +1539,7 @@ Subject: [PATCH 36/48] Step 10.2: Add publication for tasks
  1 file changed, 7 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 0201eb4..234a839 100644
+index af4962a..80d36bc 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -4,6 +4,13 @@ import { check } from 'meteor/check';
@@ -1557,10 +1557,10 @@ index 0201eb4..234a839 100644
    'tasks.insert'(text) {
      check(text, String);
 -- 
-2.1.3
+2.5.1
 
 
-From cf3557458e16d0477f61cd2cdc5d07adbe225de6 Mon Sep 17 00:00:00 2001
+From 96a1a2893e1092ba0d36bf344e39ea00f7b90396 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:45:58 +1100
 Subject: [PATCH 37/48] Step 10.3: Subscribe to tasks
@@ -1582,10 +1582,10 @@ index 988f6a5..8a4407f 100644
  
  Template.body.helpers({
 -- 
-2.1.3
+2.5.1
 
 
-From 559e0285e8d2ff713e00997b6f95463433fffa40 Mon Sep 17 00:00:00 2001
+From 277bf38e68bf34a59ef5d6fae33c2e207e219fa7 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:33:43 -0700
 Subject: [PATCH 38/48] Step 10.4: Add private button
@@ -1616,10 +1616,10 @@ index c42e8fc..b9108ea 100644
    </li>
  </template>
 -- 
-2.1.3
+2.5.1
 
 
-From 0518f1f4682540652dfabb104fe9f8274ecab735 Mon Sep 17 00:00:00 2001
+From 4051e10a9583d67383a3bb1467f69e8191f7c578 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:34:13 -0700
 Subject: [PATCH 39/48] Step 10.5: Add private class to private tasks
@@ -1640,10 +1640,10 @@ index b9108ea..218789f 100644
  
      <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
 -- 
-2.1.3
+2.5.1
 
 
-From 5f5dfb0eda840c8e796e07696e8412385453ead6 Mon Sep 17 00:00:00 2001
+From a2cf05ec7b904142615f64b0778d079a80f3ad81 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:34:47 -0700
 Subject: [PATCH 40/48] Step 10.6: Define helper to check ownership
@@ -1670,10 +1670,10 @@ index 3775ceb..af4bcf6 100644
    'click .toggle-checked'() {
      // Set the checked property to the opposite of its current value
 -- 
-2.1.3
+2.5.1
 
 
-From f3a0faebe7b53432e719148d109202a3179e207d Mon Sep 17 00:00:00 2001
+From 6992bb6ab2a4bda8002f88c57f62970015252690 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:35:31 -0700
 Subject: [PATCH 41/48] Step 10.7: Define method to set tasks to private
@@ -1683,7 +1683,7 @@ Subject: [PATCH 41/48] Step 10.7: Define method to set tasks to private
  1 file changed, 13 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 234a839..f1d2c92 100644
+index 80d36bc..63feeca 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -38,4 +38,17 @@ Meteor.methods({
@@ -1697,7 +1697,7 @@ index 234a839..f1d2c92 100644
 +    const task = Tasks.findOne(taskId);
 +
 +    // Make sure only the task owner can make a task private
-+    if (task.owner !== Meteor.userId()) {
++    if (task.owner !== this.userId) {
 +      throw new Meteor.Error('not-authorized');
 +    }
 +
@@ -1705,10 +1705,10 @@ index 234a839..f1d2c92 100644
 +  },
  });
 -- 
-2.1.3
+2.5.1
 
 
-From e666e1411463ac2e076bd6b966c6ec9c85b504bd Mon Sep 17 00:00:00 2001
+From da837f661cf5fafa7ec93bce66156c279d33d06d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:35:55 -0700
 Subject: [PATCH 42/48] Step 10.8: Add event handler to call the setPrivate
@@ -1731,10 +1731,10 @@ index af4bcf6..6b51496 100644
 +  },
  });
 -- 
-2.1.3
+2.5.1
 
 
-From 1501ba07e7032887345eddef0fe542bfc8a21283 Mon Sep 17 00:00:00 2001
+From c07b3f058d481728fa7f69c1704260a9164492be Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:36:38 -0700
 Subject: [PATCH 43/48] Step 10.9: Only publish tasks the user is allowed to
@@ -1745,7 +1745,7 @@ Subject: [PATCH 43/48] Step 10.9: Only publish tasks the user is allowed to
  1 file changed, 7 insertions(+), 1 deletion(-)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index f1d2c92..441feee 100644
+index 63feeca..5f76880 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -6,8 +6,14 @@ export const Tasks = new Mongo.Collection('tasks');
@@ -1765,10 +1765,10 @@ index f1d2c92..441feee 100644
  }
  
 -- 
-2.1.3
+2.5.1
 
 
-From b47254b75a77b7e17374a0cfefaa2b491db047bf Mon Sep 17 00:00:00 2001
+From e8a9282211d6f1bff187fd2d8d8abd7df62591c4 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:37:36 -0700
 Subject: [PATCH 44/48] Step 10.10: Add some extra security to methods
@@ -1778,7 +1778,7 @@ Subject: [PATCH 44/48] Step 10.10: Add some extra security to methods
  1 file changed, 12 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 441feee..9d5b56a 100644
+index 5f76880..d7d72dd 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -36,12 +36,24 @@ Meteor.methods({
@@ -1786,7 +1786,7 @@ index 441feee..9d5b56a 100644
      check(taskId, String);
  
 +    const task = Tasks.findOne(taskId);
-+    if (task.private && task.owner !== Meteor.userId()) {
++    if (task.private && task.owner !== this.userId) {
 +      // If the task is private, make sure only the owner can delete it
 +      throw new Meteor.Error('not-authorized');
 +    }
@@ -1798,7 +1798,7 @@ index 441feee..9d5b56a 100644
      check(setChecked, Boolean);
  
 +    const task = Tasks.findOne(taskId);
-+    if (task.private && task.owner !== Meteor.userId()) {
++    if (task.private && task.owner !== this.userId) {
 +      // If the task is private, make sure only the owner can check it off
 +      throw new Meteor.Error('not-authorized');
 +    }
@@ -1807,10 +1807,10 @@ index 441feee..9d5b56a 100644
    },
    'tasks.setPrivate'(taskId, setToPrivate) {
 -- 
-2.1.3
+2.5.1
 
 
-From c9b1dd8bbc52eeebc6ea8d8c80147d11fc3a582d Mon Sep 17 00:00:00 2001
+From de363404f1c60e48c91740e0ad447acf030dc626 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:51:38 +1100
 Subject: [PATCH 45/48] Step 11.1: Added practicalmeteor:mocha package
@@ -1862,10 +1862,10 @@ index 4f59e62..a03c196 100644
  ui@1.0.9-rc.2
  underscore@1.0.6-rc.2
 -- 
-2.1.3
+2.5.1
 
 
-From 92f2ca1d2865a5fd196879bb0185fd2edf3c619c Mon Sep 17 00:00:00 2001
+From 1a33dc2c62700efa400e60ad561bbe03a8b03160 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 12:36:41 +1100
 Subject: [PATCH 46/48] Step 11.2: Add a scaffold for a method test
@@ -1894,10 +1894,10 @@ index 0000000..05287ba
 +  });
 +}
 -- 
-2.1.3
+2.5.1
 
 
-From cd403a50cacba784de11a7a94e6d55bc884b33fb Mon Sep 17 00:00:00 2001
+From db40b5fb0c309eed4202ad094fd5c323df13c0f2 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 12:37:45 +1100
 Subject: [PATCH 47/48] Step 11.3: Prepare the database for each test
@@ -1938,10 +1938,10 @@ index 05287ba..1359e85 100644
        });
      });
 -- 
-2.1.3
+2.5.1
 
 
-From 9a08b96bae018a4ecb3d23dada624accdb817cb0 Mon Sep 17 00:00:00 2001
+From 23156828acfc00fbcc682d6ab2212b18f85ff660 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 12:39:33 +1100
 Subject: [PATCH 48/48] Step 11.4: Added test to check delete method
@@ -1982,5 +1982,5 @@ index 1359e85..9b61c5a 100644
      });
    });
 -- 
-2.1.3
+2.5.1
 
diff --git a/generated/react.multi.patch b/generated/react.multi.patch
index a15c163..d438595 100644
--- a/generated/react.multi.patch
+++ b/generated/react.multi.patch
@@ -1,4 +1,4 @@
-From d3a12b372dfe330e34f1627e14f92f2b38228402 Mon Sep 17 00:00:00 2001
+From 3170e79cfa810c7e91a14440a279e5e2cd053922 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:00:51 -0700
 Subject: [PATCH 01/50] Step 1: Run `meteor create`
@@ -289,10 +289,10 @@ index 0000000..31a9e0e
 +  // code to run on server at startup
 +});
 -- 
-2.1.3
+2.5.1
 
 
-From 6fa59132fa2b03127c5f57f4e3ccfdf2ff8a79a8 Mon Sep 17 00:00:00 2001
+From 6d83eb9a65db406fe2802532d353913e6c39a3c2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:02:01 -0700
 Subject: [PATCH 02/50] Step 2.1: Add the React NPM packages
@@ -316,10 +316,10 @@ index 4164b14..9cb9d8e 100644
    }
  }
 -- 
-2.1.3
+2.5.1
 
 
-From 4b2bbac70a870bd6ea8895e831fcfdb8cb7a6943 Mon Sep 17 00:00:00 2001
+From e7da3a8c525a7476fb94fd68286b7fb5348eb5b6 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:03:54 -0700
 Subject: [PATCH 03/50] Step 2.2: Replace starter HTML code
@@ -361,10 +361,10 @@ index 6fe0dc5..1aae2d4 100644
 -  </ul>
 -</template>
 -- 
-2.1.3
+2.5.1
 
 
-From 7c8ec26337c4fff0ba049c8230b81835371c6af7 Mon Sep 17 00:00:00 2001
+From 4b91faad4fb982b4761f5562bd9e1cb8c39136f6 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:05:08 -0700
 Subject: [PATCH 04/50] Step 2.3: Replace starter JS
@@ -420,10 +420,10 @@ index 0000000..9ba3d08
 +  render(<App />, document.getElementById('render-target'));
 +});
 -- 
-2.1.3
+2.5.1
 
 
-From ccf6c7a8a47ee9899d60d1b2b82eb2de32c89513 Mon Sep 17 00:00:00 2001
+From 716c4acbf54ecdf0438a4995f2441f73c608586b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:05:58 -0700
 Subject: [PATCH 05/50] Step 2.4: Create App component
@@ -474,10 +474,10 @@ index 0000000..0f8372d
 +  }
 +}
 -- 
-2.1.3
+2.5.1
 
 
-From ef2c0f0e13af648e784f0c96fe573d923009f919 Mon Sep 17 00:00:00 2001
+From 229edee7c361ca5aaebf9c916ca8163f28007d22 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:06:31 -0700
 Subject: [PATCH 06/50] Step 2.5: Create Task component
@@ -510,10 +510,10 @@ index 0000000..a5000e0
 +  task: PropTypes.object.isRequired,
 +};
 -- 
-2.1.3
+2.5.1
 
 
-From 352a5bef57a9720dc5804d40413ea9e8b4e5aa17 Mon Sep 17 00:00:00 2001
+From 1925de765a82ddb055853c123d024acf0f55f7f8 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:07:02 -0700
 Subject: [PATCH 07/50] Step 2.6: Add CSS
@@ -655,10 +655,10 @@ index b6b4052..cec3ae6 100644
 +}
 \ No newline at end of file
 -- 
-2.1.3
+2.5.1
 
 
-From 499984e377212fb7e7f3286baf5501c72a5bf3dc Mon Sep 17 00:00:00 2001
+From 8a4bbbe38bc6cce91029e065a2e895ffef2cc084 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 15:32:35 +1100
 Subject: [PATCH 08/50] Step 3.1: Create tasks collection
@@ -678,10 +678,10 @@ index 0000000..3bed819
 +
 +export const Tasks = new Mongo.Collection('tasks');
 -- 
-2.1.3
+2.5.1
 
 
-From ba41388b46796c004c22eb6de08abec1a4a09866 Mon Sep 17 00:00:00 2001
+From a6c0c60d31ed2ab616041d93f85488f330c63ef7 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 15:33:03 +1100
 Subject: [PATCH 09/50] Step 3.2: Load tasks collection on the server
@@ -702,10 +702,10 @@ index 31a9e0e..ab941a4 100644
 -});
 +import '../imports/api/tasks.js';
 -- 
-2.1.3
+2.5.1
 
 
-From 84125e02c702cbb06498241bfc6d8d8158018bcc Mon Sep 17 00:00:00 2001
+From 336b9729ec9401a79b9929c15c9d7d9a9f3f88f8 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 15:37:12 +1100
 Subject: [PATCH 10/50] Step 3.3: Add react-meteor-data package
@@ -750,10 +750,10 @@ index 9cb9d8e..fb213f3 100644
    }
  }
 -- 
-2.1.3
+2.5.1
 
 
-From 3dda5b4d90f44b15eb5fd0c270e6e2cc8d01141a Mon Sep 17 00:00:00 2001
+From 3d737848e1e9b20c4c022718cc5c0647d0f524fe Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 15:37:54 +1100
 Subject: [PATCH 11/50] Step 3.4: Modify App component to get tasks from
@@ -808,10 +808,10 @@ index 0f8372d..8f1bf8b 100644
 +  };
 +}, App);
 -- 
-2.1.3
+2.5.1
 
 
-From b595a90b125e15632f84bbe16f7d46e1682418a0 Mon Sep 17 00:00:00 2001
+From 4c5eed813149be7a6bdb999406fbb3d1d1f7fe5b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:13:37 -0700
 Subject: [PATCH 12/50] Step 4.1: Add form for new tasks
@@ -840,10 +840,10 @@ index 8f1bf8b..c452da9 100644
  
          <ul>
 -- 
-2.1.3
+2.5.1
 
 
-From 9e3e3dd400d5d18024b2a1ba92a6fab5512be5b3 Mon Sep 17 00:00:00 2001
+From 864c1a4d6ad581b0f6186f609fc079fa110d0a8d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:14:08 -0700
 Subject: [PATCH 13/50] Step 4.2: Add handleSubmit method to App component
@@ -885,10 +885,10 @@ index c452da9..332bd6e 100644
      return this.props.tasks.map((task) => (
        <Task key={task._id} task={task} />
 -- 
-2.1.3
+2.5.1
 
 
-From 0f68a3dea14816f10c88b4d6491612cedd093aaa Mon Sep 17 00:00:00 2001
+From 5f82b1fe53e3e76377b9045406715e6da1b68c38 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:14:40 -0700
 Subject: [PATCH 14/50] Step 4.3: Update data container to sort tasks by time
@@ -910,10 +910,10 @@ index 332bd6e..546d198 100644
    };
  }, App);
 -- 
-2.1.3
+2.5.1
 
 
-From c8be3a08ea2ae3a778dab859d9f19dc71056c608 Mon Sep 17 00:00:00 2001
+From 0112f93e63ab2de02b5c10a6e89f1b38dda126f0 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:17:06 -0700
 Subject: [PATCH 15/50] Step 5.1: Update Task component to add features
@@ -969,10 +969,10 @@ index a5000e0..3140871 100644
    }
  }
 -- 
-2.1.3
+2.5.1
 
 
-From a9478103c1fe847c2eaf3130b81944a9a7505350 Mon Sep 17 00:00:00 2001
+From 8cb48d9c1280f5feda7aff06c385a52dedad832d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:21:30 -0700
 Subject: [PATCH 16/50] Step 7.1: Add hide completed checkbox to App component
@@ -1003,10 +1003,10 @@ index 546d198..31d7564 100644
              <input
                type="text"
 -- 
-2.1.3
+2.5.1
 
 
-From 1a03ff5929c27f91e29e3021609922b092095e3b Mon Sep 17 00:00:00 2001
+From b18b0fbb35c8122b4f70ff0dc3dbef2e40a55a32 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:07 -0700
 Subject: [PATCH 17/50] Step 7.2: Add intial state to App component
@@ -1035,10 +1035,10 @@ index 31d7564..246ad81 100644
      event.preventDefault();
  
 -- 
-2.1.3
+2.5.1
 
 
-From d52f74743aeba73dccdffebf49d590af00d44c77 Mon Sep 17 00:00:00 2001
+From 5b70edbfa243329bdb28710ca79a0377b967823f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:32 -0700
 Subject: [PATCH 18/50] Step 7.3: Add toggleHideCompleted handler to App
@@ -1065,10 +1065,10 @@ index 246ad81..3347daf 100644
      return this.props.tasks.map((task) => (
        <Task key={task._id} task={task} />
 -- 
-2.1.3
+2.5.1
 
 
-From aa63e1e665112a813a00779ba94ce1f4690e8b3e Mon Sep 17 00:00:00 2001
+From 241e553fc3889c682eb04521819c8e51f2dcbc68 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:02 -0700
 Subject: [PATCH 19/50] Step 7.4: Filter tasks in renderTasks
@@ -1095,10 +1095,10 @@ index 3347daf..1500877 100644
      ));
    }
 -- 
-2.1.3
+2.5.1
 
 
-From 80386648ade2b8379cb527a31778bddc56be21b9 Mon Sep 17 00:00:00 2001
+From 307d94f24be2dde5b94faf93e4d285e02f53001e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:44 -0700
 Subject: [PATCH 20/50] Step 7.5: Update data container to return
@@ -1120,10 +1120,10 @@ index 1500877..75714e5 100644
    };
  }, App);
 -- 
-2.1.3
+2.5.1
 
 
-From ccfc9d51bcdc179ca1040228d73c26aa4ce70e90 Mon Sep 17 00:00:00 2001
+From 88b91e3c6fa589a74d8ca4982267b5f62b04e090 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:24:09 -0700
 Subject: [PATCH 21/50] Step 7.6: Display incompleteCount in the header
@@ -1154,10 +1154,10 @@ index 75714e5..78e5548 100644
  
  export default createContainer(() => {
 -- 
-2.1.3
+2.5.1
 
 
-From dd7d7a62d2b51a47fb91b57f3e6e7c0bad18cc38 Mon Sep 17 00:00:00 2001
+From 50e4ef5fbb938e9bc8a1efb8e787102fa01064b5 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:02 -0700
 Subject: [PATCH 22/50] Step 8.1: Add accounts-ui and accounts-password
@@ -1242,10 +1242,10 @@ index c4bc9da..ecdd0db 100644
  standard-minifier-js@1.0.4-rc.2
  templating@1.1.7-rc.2
 -- 
-2.1.3
+2.5.1
 
 
-From cfb42777b34ec46a22101588c646109b77fbf2cd Mon Sep 17 00:00:00 2001
+From a20f5d2c9c80a2c3788375e20aebdecee91dd6df Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:59 -0700
 Subject: [PATCH 23/50] Step 8.2: Create Accounts UI wrapper component
@@ -1282,10 +1282,10 @@ index 0000000..208d5af
 +  }
 +}
 -- 
-2.1.3
+2.5.1
 
 
-From aa6a33ec1a5c203a62ac0c7459ebb378f70bfc81 Mon Sep 17 00:00:00 2001
+From 2dd978ae246e8eb6233292943ebb1e3e67278a61 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:27:36 -0700
 Subject: [PATCH 24/50] Step 8.3: Include sign in form
@@ -1316,10 +1316,10 @@ index 78e5548..1d0bbef 100644
              <input
                type="text"
 -- 
-2.1.3
+2.5.1
 
 
-From ea28e3011eda90020f1329b3cdd8be37857bfdb8 Mon Sep 17 00:00:00 2001
+From cd967c38ce99f633d889e4cf035d8038b080bd25 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:13:48 +1100
 Subject: [PATCH 25/50] Step 8.4: Configure accounts-ui
@@ -1341,10 +1341,10 @@ index 0000000..7e4f7e5
 +  passwordSignupFields: 'USERNAME_ONLY',
 +});
 -- 
-2.1.3
+2.5.1
 
 
-From eef345667c247c8adca26d365a9d57fac1ca5c65 Mon Sep 17 00:00:00 2001
+From 9d5328bd7b67bcaec7e2dd423768de443a8b313f Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:14:08 +1100
 Subject: [PATCH 26/50] Step 8.5: Import accounts configuration
@@ -1366,10 +1366,10 @@ index 9ba3d08..b8c5033 100644
  
  Meteor.startup(() => {
 -- 
-2.1.3
+2.5.1
 
 
-From 08ab8b186c3fbe9adb69bea457152e26b95617fb Mon Sep 17 00:00:00 2001
+From 5aae2dbe6433bef2bb4374b261009e81fd354f4b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:28:46 -0700
 Subject: [PATCH 27/50] Step 8.6: Update insert to save username and owner
@@ -1399,10 +1399,10 @@ index 1d0bbef..7694eb8 100644
  
      // Clear form
 -- 
-2.1.3
+2.5.1
 
 
-From c49b83bef043096b8294bbb1e93483b66ce371a2 Mon Sep 17 00:00:00 2001
+From f63fbe224d3ca4f52230eed5b5f3e533b9e020e4 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:29:16 -0700
 Subject: [PATCH 28/50] Step 8.7: Update data container to return data about
@@ -1424,10 +1424,10 @@ index 7694eb8..ce0b541 100644
    };
  }, App);
 -- 
-2.1.3
+2.5.1
 
 
-From b784c6a07138104abf3b7e7f537457b4b46f6a66 Mon Sep 17 00:00:00 2001
+From 779daa734436a32669485334900266330012ac5b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:06 -0700
 Subject: [PATCH 29/50] Step 8.8: Wrap new task form to only show when logged
@@ -1473,10 +1473,10 @@ index ce0b541..bbbb728 100644
  
  export default createContainer(() => {
 -- 
-2.1.3
+2.5.1
 
 
-From 083e8e6b5dff73a926e6efe5848f69dd5e42f2b6 Mon Sep 17 00:00:00 2001
+From 65f23f7a09821681c96ba1f70c87d5aa4dde0903 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:48 -0700
 Subject: [PATCH 30/50] Step 8.9: Update Task component to show username
@@ -1501,10 +1501,10 @@ index 3140871..5650fa0 100644
      );
    }
 -- 
-2.1.3
+2.5.1
 
 
-From 932a216710a829d8df5c237b7d94e4490d7e41a1 Mon Sep 17 00:00:00 2001
+From 8c55528020e197af7730fd5486d70abb86b7c616 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:31:22 -0700
 Subject: [PATCH 31/50] Step 9.1: Remove insecure package
@@ -1539,10 +1539,10 @@ index ecdd0db..011fbef 100644
  launch-screen@1.0.7-rc.2
  less@2.5.5-rc.2
 -- 
-2.1.3
+2.5.1
 
 
-From 14b3e9e5c84ea1b06b70ee51014b933cb3108a5b Mon Sep 17 00:00:00 2001
+From 8644804f6fe1b985b12f472699222195a8a8bf1f Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:21 -0700
 Subject: [PATCH 32/50] Step 9.2: Add methods for add, remove, update task
@@ -1552,7 +1552,7 @@ Subject: [PATCH 32/50] Step 9.2: Add methods for add, remove, update task
  1 file changed, 31 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 3bed819..0201eb4 100644
+index 3bed819..af4962a 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -1,3 +1,34 @@
@@ -1567,15 +1567,15 @@ index 3bed819..0201eb4 100644
 +    check(text, String);
 +
 +    // Make sure the user is logged in before inserting a task
-+    if (! Meteor.userId()) {
++    if (! this.userId) {
 +      throw new Meteor.Error('not-authorized');
 +    }
 +
 +    Tasks.insert({
 +      text,
 +      createdAt: new Date(),
-+      owner: Meteor.userId(),
-+      username: Meteor.user().username,
++      owner: this.userId,
++      username: Meteor.users.findOne(this.userId).username,
 +    });
 +  },
 +  'tasks.remove'(taskId) {
@@ -1591,10 +1591,10 @@ index 3bed819..0201eb4 100644
 +  },
 +});
 -- 
-2.1.3
+2.5.1
 
 
-From 2da4b190163f07eb2234487a2455325fb6a770dd Mon Sep 17 00:00:00 2001
+From f1d1bea80f6bcf6b5f88385c8e39687a72cab5d3 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:59 -0700
 Subject: [PATCH 33/50] Step 9.3: Update App component to use tasks.insert
@@ -1623,10 +1623,10 @@ index bbbb728..4f41c39 100644
      // Clear form
      ReactDOM.findDOMNode(this.refs.textInput).value = '';
 -- 
-2.1.3
+2.5.1
 
 
-From 3113186e723246278d8a77c22ac9286c33915452 Mon Sep 17 00:00:00 2001
+From badfb4f30432c960f8f2c93a8bbc60af76ac1ea8 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:33:38 -0700
 Subject: [PATCH 34/50] Step 9.4: Replace update and remove with methods
@@ -1662,10 +1662,10 @@ index 5650fa0..ee040c5 100644
  
    render() {
 -- 
-2.1.3
+2.5.1
 
 
-From 49c6872b0241d0a3d5cda8a8acaac7187a8724bb Mon Sep 17 00:00:00 2001
+From f848ec1d44047bc61947c2033f54592abd120f38 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:34:33 -0700
 Subject: [PATCH 35/50] Step 10.1: Remove autopublish package
@@ -1700,10 +1700,10 @@ index 011fbef..cee5a46 100644
  babel-compiler@6.5.1-rc.2
  babel-runtime@0.1.6-rc.2
 -- 
-2.1.3
+2.5.1
 
 
-From df8dda980a15cc866b3335c296508ab8ffb1b26e Mon Sep 17 00:00:00 2001
+From 8591e2902b367fc2e3e25bcf6c683505e1b23b57 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:27:05 +1100
 Subject: [PATCH 36/50] Step 10.2: Add publication for tasks
@@ -1713,7 +1713,7 @@ Subject: [PATCH 36/50] Step 10.2: Add publication for tasks
  1 file changed, 7 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 0201eb4..234a839 100644
+index af4962a..80d36bc 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -4,6 +4,13 @@ import { check } from 'meteor/check';
@@ -1731,10 +1731,10 @@ index 0201eb4..234a839 100644
    'tasks.insert'(text) {
      check(text, String);
 -- 
-2.1.3
+2.5.1
 
 
-From 5d258f06f6102a6f90767585e15ace14b3cef1ee Mon Sep 17 00:00:00 2001
+From bdab4ed3dec3368ac6f331b70d8997ccbba85748 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:28:14 +1100
 Subject: [PATCH 37/50] Step 10.3: Subscribe to tasks in App container
@@ -1757,10 +1757,10 @@ index 4f41c39..d6e5f0a 100644
      tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),
      incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),
 -- 
-2.1.3
+2.5.1
 
 
-From f01138adb09b56b2137a7954097d7ee91c89c1c2 Mon Sep 17 00:00:00 2001
+From 285d4760f5ec9c55a6235f3ad8aaac803057642b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:29 -0700
 Subject: [PATCH 38/50] Step 10.4: Add tasks.setPrivate method
@@ -1770,7 +1770,7 @@ Subject: [PATCH 38/50] Step 10.4: Add tasks.setPrivate method
  1 file changed, 13 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 234a839..f1d2c92 100644
+index 80d36bc..63feeca 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -38,4 +38,17 @@ Meteor.methods({
@@ -1784,7 +1784,7 @@ index 234a839..f1d2c92 100644
 +    const task = Tasks.findOne(taskId);
 +
 +    // Make sure only the task owner can make a task private
-+    if (task.owner !== Meteor.userId()) {
++    if (task.owner !== this.userId) {
 +      throw new Meteor.Error('not-authorized');
 +    }
 +
@@ -1792,10 +1792,10 @@ index 234a839..f1d2c92 100644
 +  },
  });
 -- 
-2.1.3
+2.5.1
 
 
-From 4c57163c745caad5d9a610f1530141b001a87469 Mon Sep 17 00:00:00 2001
+From 7ad3a79778614fbcda8f694e8ea3079e3220997b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:59 -0700
 Subject: [PATCH 39/50] Step 10.5: Update renderTasks to pass in
@@ -1832,10 +1832,10 @@ index d6e5f0a..06262c5 100644
  
    render() {
 -- 
-2.1.3
+2.5.1
 
 
-From 2fb05bd2519ddf5ad1d76acbc6784ee1cc109775 Mon Sep 17 00:00:00 2001
+From e30683e5e8e6a4857ffb4d82998e2dc1f88f6f96 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:37:28 -0700
 Subject: [PATCH 40/50] Step 10.6: Add a new prop type for Task component
@@ -1855,10 +1855,10 @@ index ee040c5..deba74a 100644
 +  showPrivateButton: React.PropTypes.bool.isRequired,
  };
 -- 
-2.1.3
+2.5.1
 
 
-From 451b6de0329407ec45cd337e359325f15f1ad2e8 Mon Sep 17 00:00:00 2001
+From 0e7793113ec7b62fa9f292a31c5a728f866a8ecb Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:04 -0700
 Subject: [PATCH 41/50] Step 10.7: Add private button, shown only to owner
@@ -1885,10 +1885,10 @@ index deba74a..bec76ba 100644
            <strong>{this.props.task.username}</strong>: {this.props.task.text}
          </span>
 -- 
-2.1.3
+2.5.1
 
 
-From 38178ac83badfcac39b7e2640e76f705ec99c41d Mon Sep 17 00:00:00 2001
+From 29689a1d655d68fe64b14d8fe8279868370dd8d8 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:33 -0700
 Subject: [PATCH 42/50] Step 10.8: Add private button event handler to Task
@@ -1913,10 +1913,10 @@ index bec76ba..db0999e 100644
      // Give tasks a different className when they are checked off,
      // so that we can style them nicely in CSS
 -- 
-2.1.3
+2.5.1
 
 
-From c91d2a5396784ea2bd9836975ee44bca275cfd51 Mon Sep 17 00:00:00 2001
+From 7b60d6331ec9feaf09c74b82f4d3d5ad4c7bbf28 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:33:06 +1100
 Subject: [PATCH 43/50] Step 10.9: Install the classnames NPM package
@@ -1938,10 +1938,10 @@ index fb213f3..ad97bd8 100644
      "react": "^0.14.7",
      "react-addons-pure-render-mixin": "^0.14.7",
 -- 
-2.1.3
+2.5.1
 
 
-From 0103d4d006302d8b8268df20b97a716c048fe182 Mon Sep 17 00:00:00 2001
+From 9b34c5a16bd84c0fd812183c1386c31282e4d297 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:22 -0700
 Subject: [PATCH 44/50] Step 10.10: Add private className to Task when needed
@@ -1974,10 +1974,10 @@ index db0999e..52450c3 100644
      return (
        <li className={taskClassName}>
 -- 
-2.1.3
+2.5.1
 
 
-From 255b2e9c631a472fd7be694d7beda1cd8f55367c Mon Sep 17 00:00:00 2001
+From 3eaef91a100f3284e2574c6bbcd81223b75d7e45 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:58 -0700
 Subject: [PATCH 45/50] Step 10.11: Only publish tasks the current user can see
@@ -1987,7 +1987,7 @@ Subject: [PATCH 45/50] Step 10.11: Only publish tasks the current user can see
  1 file changed, 7 insertions(+), 1 deletion(-)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index f1d2c92..441feee 100644
+index 63feeca..5f76880 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -6,8 +6,14 @@ export const Tasks = new Mongo.Collection('tasks');
@@ -2007,10 +2007,10 @@ index f1d2c92..441feee 100644
  }
  
 -- 
-2.1.3
+2.5.1
 
 
-From f645c84ea0fbf00dfe45819e5aacbe077fc73b9a Mon Sep 17 00:00:00 2001
+From 2a2203f90f995f21b281d21a79888f4c5c17bc34 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:40:55 -0700
 Subject: [PATCH 46/50] Step 10.12: Add extra security to methods
@@ -2020,7 +2020,7 @@ Subject: [PATCH 46/50] Step 10.12: Add extra security to methods
  1 file changed, 12 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 441feee..9d5b56a 100644
+index 5f76880..d7d72dd 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -36,12 +36,24 @@ Meteor.methods({
@@ -2028,7 +2028,7 @@ index 441feee..9d5b56a 100644
      check(taskId, String);
  
 +    const task = Tasks.findOne(taskId);
-+    if (task.private && task.owner !== Meteor.userId()) {
++    if (task.private && task.owner !== this.userId) {
 +      // If the task is private, make sure only the owner can delete it
 +      throw new Meteor.Error('not-authorized');
 +    }
@@ -2040,7 +2040,7 @@ index 441feee..9d5b56a 100644
      check(setChecked, Boolean);
  
 +    const task = Tasks.findOne(taskId);
-+    if (task.private && task.owner !== Meteor.userId()) {
++    if (task.private && task.owner !== this.userId) {
 +      // If the task is private, make sure only the owner can check it off
 +      throw new Meteor.Error('not-authorized');
 +    }
@@ -2049,10 +2049,10 @@ index 441feee..9d5b56a 100644
    },
    'tasks.setPrivate'(taskId, setToPrivate) {
 -- 
-2.1.3
+2.5.1
 
 
-From 5ab7e080629e31a930b958d30cad7648b85aab2e Mon Sep 17 00:00:00 2001
+From 923ba502580719af8edce6bf446a82318d29349f Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:35:58 +1100
 Subject: [PATCH 47/50] Step 11.1: Added practicalmeteor:mocha package
@@ -2096,10 +2096,10 @@ index cee5a46..53843b3 100644
  random@1.0.7-rc.2
  rate-limit@1.0.2-rc.2
 -- 
-2.1.3
+2.5.1
 
 
-From ed6c9e21b030f2112546117b891c8ba5af078591 Mon Sep 17 00:00:00 2001
+From 64b6e3ffb5c69b445f4de66a9cdbb2342cd4da83 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:36:17 +1100
 Subject: [PATCH 48/50] Step 11.2: Add a scaffold for a method test
@@ -2128,10 +2128,10 @@ index 0000000..05287ba
 +  });
 +}
 -- 
-2.1.3
+2.5.1
 
 
-From e5d24a72761492da42eb982cc59a64371db7be4a Mon Sep 17 00:00:00 2001
+From 3a7d4430dbcf87f5f7f4e83d9550b8b4773ac02e Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:36:29 +1100
 Subject: [PATCH 49/50] Step 11.3: Prepare the database for each test
@@ -2172,10 +2172,10 @@ index 05287ba..1359e85 100644
        });
      });
 -- 
-2.1.3
+2.5.1
 
 
-From e2ede7952b00434f63386423bf8ecb0d9f5d7047 Mon Sep 17 00:00:00 2001
+From 15cf3fbd87b0d9b9e9aa5779e8ec4198e3e1016b Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:36:42 +1100
 Subject: [PATCH 50/50] Step 11.4: Added test to check delete method
@@ -2216,5 +2216,5 @@ index 1359e85..9b61c5a 100644
      });
    });
 -- 
-2.1.3
+2.5.1
 
diff --git a/repos/blaze b/repos/blaze
index 9a08b96..2315682 160000
--- a/repos/blaze
+++ b/repos/blaze
@@ -1 +1 @@
-Subproject commit 9a08b96bae018a4ecb3d23dada624accdb817cb0
+Subproject commit 23156828acfc00fbcc682d6ab2212b18f85ff660
diff --git a/repos/react b/repos/react
index e2ede79..15cf3fb 160000
--- a/repos/react
+++ b/repos/react
@@ -1 +1 @@
-Subproject commit e2ede7952b00434f63386423bf8ecb0d9f5d7047
+Subproject commit 15cf3fbd87b0d9b9e9aa5779e8ec4198e3e1016b
-- 
2.13.6 (Apple Git-96)


From 355276e5969b0494cf3e88ec14e676d568de8bb5 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Tue, 12 Apr 2016 10:34:56 -0700
Subject: [PATCH 121/164] Updated examples to not use `Meteor.userId()`

---
 repos/blaze | 2 +-
 repos/react | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/repos/blaze b/repos/blaze
index 9a08b96..2315682 160000
--- a/repos/blaze
+++ b/repos/blaze
@@ -1 +1 @@
-Subproject commit 9a08b96bae018a4ecb3d23dada624accdb817cb0
+Subproject commit 23156828acfc00fbcc682d6ab2212b18f85ff660
diff --git a/repos/react b/repos/react
index e2ede79..15cf3fb 160000
--- a/repos/react
+++ b/repos/react
@@ -1 +1 @@
-Subproject commit e2ede7952b00434f63386423bf8ecb0d9f5d7047
+Subproject commit 15cf3fbd87b0d9b9e9aa5779e8ec4198e3e1016b
-- 
2.13.6 (Apple Git-96)


From aaca2f33a2ca012044264e51fa677cfa1d91e1b7 Mon Sep 17 00:00:00 2001
From: Jacob Varner <jacob.varner14@gmail.com>
Date: Thu, 14 Apr 2016 22:25:48 -0500
Subject: [PATCH 122/164] Fixed grammar error

There were many ways that this error could have been fixed to make the sentence read correctly, but I thought removing the first 'is' was the easiest and sounded the best.
---
 content/angular/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/angular/step02.md b/content/angular/step02.md
index 7f6e158..014bfd9 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -56,7 +56,7 @@ Everything inside any &lt;head> tags is added to the `head` section of the HTML
 
 The [angular-meteor package](http://angular-meteor.com/) parses all of the `html` files in your app folder and puts them in Angular's template cache with the id of their full path.
 
-So, for example, when a file is named `my-angular-template.html` is placed in the `client` folder, it will be available for `ng-include` or `ui-router` with the name `client/my-angular-template.html`.
+So, for example, when a file named `my-angular-template.html` is placed in the `client` folder, it will be available for `ng-include` or `ui-router` with the name `client/my-angular-template.html`.
 
 ### Adding logic and data to templates
 
-- 
2.13.6 (Apple Git-96)


From 9c643aa4111fef4a207698a3eb40afe2375e2d59 Mon Sep 17 00:00:00 2001
From: Jacob Varner <jacob.varner14@gmail.com>
Date: Thu, 14 Apr 2016 22:31:30 -0500
Subject: [PATCH 123/164] Fixed a second grammar error in Step02.md

Missing a 'to' between 'service' and 'bind'
---
 content/angular/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/angular/step02.md b/content/angular/step02.md
index 014bfd9..e3351ab 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -62,7 +62,7 @@ So, for example, when a file named `my-angular-template.html` is placed in the `
 
 All of the code in your `html` files is compiled with Angular. Angular binds the data into our templates just like any other Angular app.
 
-In the next step, we will see how we can use the $meteor service bind our scope data to a database collection.
+In the next step, we will see how we can use the $meteor service to bind our scope data to a database collection.
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.8"}}
 
-- 
2.13.6 (Apple Git-96)


From b38fa86da9b27ddbf130bfee74c8fdc9b5c2c8de Mon Sep 17 00:00:00 2001
From: Khang Nguyen-Le <khangnlh@dgroup.co>
Date: Sat, 23 Apr 2016 14:13:28 +0700
Subject: [PATCH 124/164] Update links on nextStep template

---
 content/shared/nextSteps.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/shared/nextSteps.md b/content/shared/nextSteps.md
index 9344685..367ae7c 100644
--- a/content/shared/nextSteps.md
+++ b/content/shared/nextSteps.md
@@ -4,7 +4,7 @@ Here are some options for where you can go next:
 
 1. Read the [Meteor Guide](http://guide.meteor.com) to learn about best practices and useful community packages
 2. Check out the [complete documentation](https://docs.meteor.com)
-3. Explore [tools]({{pathFor 'tools.info'}}) and [resources]({{pathFor 'tools.resources'}}) to help you build Meteor apps
+3. Explore additional Meteor tutorials like [WhatsApp clone]( http://www.angular-meteor.com/tutorials/whatsapp/meteor/bootstrapping) and [Intermediate Meteor](https://www.youtube.com/watch?v=BI8IslJHSag&list=PLLnpHn493BHFYZUSK62aVycgcAouqBt7V)
 
 <div class="row">
   <hr />
-- 
2.13.6 (Apple Git-96)


From 5bee25f73046ae97f143d24b06266bd172255595 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Thu, 28 Apr 2016 22:03:40 -0700
Subject: [PATCH 125/164] Update repos

---
 repos/blaze | 2 +-
 repos/react | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/repos/blaze b/repos/blaze
index 2315682..9a08b96 160000
--- a/repos/blaze
+++ b/repos/blaze
@@ -1 +1 @@
-Subproject commit 23156828acfc00fbcc682d6ab2212b18f85ff660
+Subproject commit 9a08b96bae018a4ecb3d23dada624accdb817cb0
diff --git a/repos/react b/repos/react
index 15cf3fb..e2ede79 160000
--- a/repos/react
+++ b/repos/react
@@ -1 +1 @@
-Subproject commit 15cf3fbd87b0d9b9e9aa5779e8ec4198e3e1016b
+Subproject commit e2ede7952b00434f63386423bf8ecb0d9f5d7047
-- 
2.13.6 (Apple Git-96)


From d98e47bfc7fe8bc99fdf6c0c3c6697b6ed32cf72 Mon Sep 17 00:00:00 2001
From: thoragio <thoragio@gmail.com>
Date: Fri, 20 May 2016 18:09:10 +0200
Subject: [PATCH 126/164] Minor typo fixes (#65)

---
 content/shared/step11.md | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/content/shared/step11.md b/content/shared/step11.md
index 1c06b38..13a3fe3 100644
--- a/content/shared/step11.md
+++ b/content/shared/step11.md
@@ -2,7 +2,7 @@
 
 # Testing
 
-Now we've created a few features for our application, let's add a test to ensure that we don't regress and that it works the way we expect. 
+Now that we've created a few features for our application, let's add a test to ensure that we don't regress and that it works the way we expect. 
 
 We'll write a test that exercises one of our Methods (which form the "write" part of our app's API), and verifies it works correctly.
 
@@ -24,7 +24,7 @@ Let's add a simple test (that doesn't do anything yet):
 
 {{> DiffBox tutorialName="simple-todos" step="11.2"}}
 
-In any test we need to ensure the database is in the state we expect before beginning. We can use Mocha's `beforeEach` construct to that easily:
+In any test we need to ensure the database is in the state we expect before beginning. We can use Mocha's `beforeEach` construct to do that easily:
 
 {{> DiffBox tutorialName="simple-todos" step="11.3"}}
 
@@ -37,5 +37,3 @@ Now we can write the test to call the `task.remove` method "as" that user and ve
 There's a lot more you can do in a Meteor test! You can read more about it in the Meteor Guide [article on testing](http://guide.meteor.com/testing.html).
 
 {{/template}}
-
-s
\ No newline at end of file
-- 
2.13.6 (Apple Git-96)


From 6cbf246362d52529d9ab519f28defc046ace1c25 Mon Sep 17 00:00:00 2001
From: Alec Rust <me@alecrust.com>
Date: Fri, 24 Jun 2016 21:35:12 +0100
Subject: [PATCH 127/164] Correct file extension of main client entrypoint file

---
 content/react/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/react/step02.md b/content/react/step02.md
index 41adab1..f4e3f45 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -29,7 +29,7 @@ We just added three things to our app:
 
 1. An `App` React component
 2. A `Task` React component
-3. Some initialization code (in our `client/main.js` client JavaScript entrypoint), in a `Meteor.startup` block, which knows how to call code when the page is loaded and ready. This code loads the other components and renders them into the `#render-target` html element.
+3. Some initialization code (in our `client/main.jsx` client JavaScript entrypoint), in a `Meteor.startup` block, which knows how to call code when the page is loaded and ready. This code loads the other components and renders them into the `#render-target` html element.
 
 You can read more about how imports work and how to structure your code in the [Application Structure article](http://guide.meteor.com/structure.html) of the Meteor Guide.
 
-- 
2.13.6 (Apple Git-96)


From 6f1e4caf39d544d6304b3266ad9f18d0ae433e4c Mon Sep 17 00:00:00 2001
From: Alec Rust <me@alecrust.com>
Date: Fri, 24 Jun 2016 22:01:44 +0100
Subject: [PATCH 128/164] Clarify there will be no styling in initial list
 output

---
 content/react/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/react/step02.md b/content/react/step02.md
index f4e3f45..f0d143a 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -37,7 +37,7 @@ Later in the tutorial, we will refer to these components when adding or changing
 
 ### Check the result
 
-In our browser, the app should now look much like this:
+In our browser, the app should now look like an unstyled version of this:
 
 > #### Todo List
 > - This is task 1
-- 
2.13.6 (Apple Git-96)


From 8ce6efb4abfa75e18d3991696223e748c79a6c4d Mon Sep 17 00:00:00 2001
From: Alec Rust <me@alecrust.com>
Date: Sat, 25 Jun 2016 18:51:58 +0100
Subject: [PATCH 129/164] Add missing `do` in step 11

---
 content/angular/step11.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/angular/step11.md b/content/angular/step11.md
index a01e9c3..8f408a7 100644
--- a/content/angular/step11.md
+++ b/content/angular/step11.md
@@ -24,7 +24,7 @@ Let's add a simple test (that doesn't do anything yet):
 
 {{> DiffBox tutorialName="simple-todos-angular" step="11.2"}}
 
-In any test we need to ensure the database is in the state we expect before beginning. We can use Mocha's `beforeEach` construct to that easily:
+In any test we need to ensure the database is in the state we expect before beginning. We can use Mocha's `beforeEach` construct to do that easily:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="11.3"}}
 
-- 
2.13.6 (Apple Git-96)


From 6a721be04d61c33162ec76b9ffaa5c9c3af35cfa Mon Sep 17 00:00:00 2001
From: dirkwithak <dirkwithak@users.noreply.github.com>
Date: Sun, 25 Sep 2016 17:07:44 +0200
Subject: [PATCH 130/164] Fixed dead link in step02.md

https://github.com/meteor/meteor/blob/devel/packages/spacebars/README.md points to GitHub's 404 page. Replaced it with http://blazejs.org/guide/spacebars.html
---
 content/blaze/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index 497f58c..161b4df 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -40,7 +40,7 @@ Also, the `body` section can be referenced in your JavaScript with `Template.bod
 
 ### Adding logic and data to templates
 
-All of the code in your HTML files is compiled with [Meteor's Spacebars compiler](https://github.com/meteor/meteor/blob/devel/packages/spacebars/README.md). Spacebars uses statements surrounded by double curly braces such as `{{dstache}}#each}}` and `{{dstache}}#if}}` to let you add logic and data to your views.
+All of the code in your HTML files is compiled with [Meteor's Spacebars compiler](http://blazejs.org/guide/spacebars.html). Spacebars uses statements surrounded by double curly braces such as `{{dstache}}#each}}` and `{{dstache}}#if}}` to let you add logic and data to your views.
 
 You can pass data into templates from your JavaScript code by defining _helpers_. In the code above, we defined a helper called `tasks` on `Template.body` that returns an array. Inside the body tag of the HTML, we can use `{{dstache}}#each tasks}}` to iterate over the array and insert a `task` template for each value. Inside the `#each` block, we can display the `text` property of each array item using `{{dstache}}text}}`.
 
-- 
2.13.6 (Apple Git-96)


From 73b9e478fbc494d9f242f99af12152ba0a10f225 Mon Sep 17 00:00:00 2001
From: dirkwithak <dirkwithak@users.noreply.github.com>
Date: Thu, 29 Sep 2016 20:37:31 +0200
Subject: [PATCH 131/164] Fixed incorrect method name

The remove "method" was incorrectly named "deleteTask" in the text
---
 content/blaze/step09.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/blaze/step09.md b/content/blaze/step09.md
index fe53c22..55c1c6e 100644
--- a/content/blaze/step09.md
+++ b/content/blaze/step09.md
@@ -29,7 +29,7 @@ Now that we have defined our methods, we need to update the places we were opera
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
 
 1. When we insert tasks into the database, we can now securely verify that the user is logged in, that the `createdAt` field is correct, and that the `owner` and `username` fields are correct and the user isn't impersonating anyone.
-2. We can add extra validation logic to `setChecked` and `deleteTask` in later steps when users can make tasks private.
+2. We can add extra validation logic to `setChecked` and `remove` in later steps when users can make tasks private.
 3. Our client code is now more separated from our database logic. Instead of a lot of stuff happening inside our event handlers, we now have methods that can be called from anywhere.
 
 {{> step09OptimisticUI}}
-- 
2.13.6 (Apple Git-96)


From 2af3f9db423d809000105bf5278fc6e06992ebf3 Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Mon, 19 Dec 2016 12:15:40 +0200
Subject: [PATCH 132/164] Fix broken link to Spacebars information from Step 2
 in Blaze tutorial

Originally reported in meteor/meteor#8167
Fixes meteor/tutorials#96
---
 content/blaze/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index 497f58c..7373c6c 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -40,7 +40,7 @@ Also, the `body` section can be referenced in your JavaScript with `Template.bod
 
 ### Adding logic and data to templates
 
-All of the code in your HTML files is compiled with [Meteor's Spacebars compiler](https://github.com/meteor/meteor/blob/devel/packages/spacebars/README.md). Spacebars uses statements surrounded by double curly braces such as `{{dstache}}#each}}` and `{{dstache}}#if}}` to let you add logic and data to your views.
+All of the code in your HTML files is compiled with [Meteor's Spacebars compiler](http://blazejs.org/api/spacebars.html). Spacebars uses statements surrounded by double curly braces such as `{{dstache}}#each}}` and `{{dstache}}#if}}` to let you add logic and data to your views.
 
 You can pass data into templates from your JavaScript code by defining _helpers_. In the code above, we defined a helper called `tasks` on `Template.body` that returns an array. Inside the body tag of the HTML, we can use `{{dstache}}#each tasks}}` to iterate over the array and insert a `task` template for each value. Inside the `#each` block, we can display the `text` property of each array item using `{{dstache}}text}}`.
 
-- 
2.13.6 (Apple Git-96)


From a851c180a6d8b56d9c5eab42abb659d54698308c Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Tue, 14 Feb 2017 16:27:12 +0200
Subject: [PATCH 133/164] All step01 templates have been replaced with a
 "shared" step01

Thanks to the changes in cd21922f33b353c4111298c9bd12eb8383b9fb7c and to offer a more simplified updating step for "Step 1" (which is the same across all different view layers), this step01 is no longer necessary (and not currently used in the manifests for the various view layers).

Resolves meteor/tutorials#100
---
 content/angular/step01.md | 33 ---------------------------------
 1 file changed, 33 deletions(-)
 delete mode 100644 content/angular/step01.md

diff --git a/content/angular/step01.md b/content/angular/step01.md
deleted file mode 100644
index 9e499ae..0000000
--- a/content/angular/step01.md
+++ /dev/null
@@ -1,33 +0,0 @@
-{{#template name="angular-step01"}}
-# Creating your first angular-meteor app
-
-In this tutorial, we are going to create the same 'todo' app as in the other tutorial, but this time using the [angular-meteor](http://angular-meteor.com) package to integrate angular as our reactive front-end.
-
-To create a Meteor app, open your terminal and type:
-
-```bash
-meteor create simple-todos-angular
-```
-
-This will create a new folder called `simple-todos-angular` with all of the files that a Meteor app needs:
-
-```bash
-simple-todos-angular.js       # a JavaScript file loaded on both client and server
-simple-todos-angular.html     # an HTML file that defines our main view
-simple-todos-angular.css      # a CSS file to define your app's styles
-.meteor                       # internal Meteor files
-```
-
-To run the newly created app:
-
-```bash
-cd simple-todos-angular
-meteor
-```
-
-Open your web browser and go to `http://localhost:3000` to see the app running.
-
-You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `simple-todos-angular.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
-
-Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application. If you find a bug or error in the tutorial, please file an issue or submit a pull request [on GitHub](https://github.com/meteor/tutorials).
-{{/template}}
-- 
2.13.6 (Apple Git-96)


From 2df76597c002a001479fe85c153fc07753c8e2dd Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Tue, 14 Feb 2017 16:30:21 +0200
Subject: [PATCH 134/164] Updated `generated` files to implement recent
 changes.

Specifically, to make sure 355276e5969b0494cf3e88ec14e676d568de8bb5 actually gets deployed.
---
 generated/angular.multi.patch | 110 ++++++++++-----------
 generated/blaze.multi.patch   | 214 ++++++++++++++++++++--------------------
 generated/react.multi.patch   | 222 +++++++++++++++++++++---------------------
 3 files changed, 273 insertions(+), 273 deletions(-)

diff --git a/generated/angular.multi.patch b/generated/angular.multi.patch
index 20f6d34..e29c7da 100644
--- a/generated/angular.multi.patch
+++ b/generated/angular.multi.patch
@@ -291,7 +291,7 @@ index 0000000..31a9e0e
 +  // code to run on server at startup
 +});
 -- 
-2.6.3
+2.11.0
 
 
 From 137374c873054f0544bd88e270ed1e7e80f95d0e Mon Sep 17 00:00:00 2001
@@ -363,7 +363,7 @@ index 90be3e8..648e16e 100644
    }
  }
 -- 
-2.6.3
+2.11.0
 
 
 From daf14b564ab6de18f35a955b9488cb0fb2ae252c Mon Sep 17 00:00:00 2001
@@ -410,7 +410,7 @@ index 203539b..c064aae 100644
 -</template>
 \ No newline at end of file
 -- 
-2.6.3
+2.11.0
 
 
 From eeec7ea8a21aee5dad65cfc9ff480413d07fcb52 Mon Sep 17 00:00:00 2001
@@ -455,7 +455,7 @@ index ecb3282..053a00e 100644
 +  angularMeteor
 +]);
 -- 
-2.6.3
+2.11.0
 
 
 From fc48dfc5acdab05ccdf5ccf64c42301b22caa926 Mon Sep 17 00:00:00 2001
@@ -484,7 +484,7 @@ index 0000000..a992e45
 +  </li>
 +</ul>
 -- 
-2.6.3
+2.11.0
 
 
 From 0f38eae17f513aa55e6cec93e405e0b604799864 Mon Sep 17 00:00:00 2001
@@ -527,7 +527,7 @@ index 0000000..3dcaabb
 +    controller: TodosListCtrl
 +  });
 -- 
-2.6.3
+2.11.0
 
 
 From 5979d05e35df54b546251dac4395c5873d145d59 Mon Sep 17 00:00:00 2001
@@ -552,7 +552,7 @@ index c064aae..d0f7ed7 100644
    </div>
  </body>
 -- 
-2.6.3
+2.11.0
 
 
 From 12ffe2d30b1db1e4c7ca94fe830ba4ea0e28162b Mon Sep 17 00:00:00 2001
@@ -579,7 +579,7 @@ index 053a00e..8191cb2 100644
 +  todosList.name
  ]);
 -- 
-2.6.3
+2.11.0
 
 
 From 0393d12a1cea1c8b0e8713b65a23410f8cd43280 Mon Sep 17 00:00:00 2001
@@ -723,7 +723,7 @@ index b6b4052..a66ec6f 100644
 +    }
 +}
 -- 
-2.6.3
+2.11.0
 
 
 From e07b633fc1253c9b5b987e4d850770825a6470ca Mon Sep 17 00:00:00 2001
@@ -746,7 +746,7 @@ index 0000000..3bed819
 +
 +export const Tasks = new Mongo.Collection('tasks');
 -- 
-2.6.3
+2.11.0
 
 
 From 7d40b56d0f1b3dc2c20464df81f64afc97ad0608 Mon Sep 17 00:00:00 2001
@@ -770,7 +770,7 @@ index 31a9e0e..ab941a4 100644
 -});
 +import '../imports/api/tasks.js';
 -- 
-2.6.3
+2.11.0
 
 
 From fa3f484a4e0299f0b133958c4754e3d9e95c1550 Mon Sep 17 00:00:00 2001
@@ -821,7 +821,7 @@ index 3dcaabb..becd31b 100644
 +    controller: ['$scope', TodosListCtrl]
    });
 -- 
-2.6.3
+2.11.0
 
 
 From 7fb2b760210091447316c28ccd36b3dd9da1d86e Mon Sep 17 00:00:00 2001
@@ -849,7 +849,7 @@ index a992e45..899f2d5 100644
  
  <ul>
 -- 
-2.6.3
+2.11.0
 
 
 From 0c2b00a0141b02542bdf43ca7b79e3ff1a160f93 Mon Sep 17 00:00:00 2001
@@ -884,7 +884,7 @@ index becd31b..a27e7ae 100644
  
  export default angular.module('todosList', [
 -- 
-2.6.3
+2.11.0
 
 
 From ad36285f216856d4cd947e72983ee71e7232f740 Mon Sep 17 00:00:00 2001
@@ -915,7 +915,7 @@ index a27e7ae..976e9a9 100644
      })
    }
 -- 
-2.6.3
+2.11.0
 
 
 From e02c4a765836e7860ded695c2d0f8c6184b13220 Mon Sep 17 00:00:00 2001
@@ -948,7 +948,7 @@ index 899f2d5..1bfe1c4 100644
    </li>
  </ul>
 -- 
-2.6.3
+2.11.0
 
 
 From c637635457f0c0e5fe6af6fc5e4a7d708dac25d2 Mon Sep 17 00:00:00 2001
@@ -985,7 +985,7 @@ index 976e9a9..8d56f11 100644
  
  export default angular.module('todosList', [
 -- 
-2.6.3
+2.11.0
 
 
 From 89c6f656bff10973a22c8e8f5a78341051453096 Mon Sep 17 00:00:00 2001
@@ -1011,7 +1011,7 @@ index d0f7ed7..f7f43b1 100644
    </div>
  </body>
 -- 
-2.6.3
+2.11.0
 
 
 From 9d407e878bfc21b7be80bda6361f70a8b8e4f109 Mon Sep 17 00:00:00 2001
@@ -1042,7 +1042,7 @@ index 8191cb2..c79d69c 100644
 +  angular.element(document).ready(onReady);
 +}
 -- 
-2.6.3
+2.11.0
 
 
 From 6dc7a065fb5762d088623a0b5d65b2588980cfea Mon Sep 17 00:00:00 2001
@@ -1071,7 +1071,7 @@ index 1bfe1c4..73416a2 100644
      <input ng-model="$ctrl.newTask" type="text" name="text" placeholder="Type to add new tasks"/>
    </form>
 -- 
-2.6.3
+2.11.0
 
 
 From 24d5b599f22aef3e34782d2937667576be60154d Mon Sep 17 00:00:00 2001
@@ -1111,7 +1111,7 @@ index 8d56f11..88af3bf 100644
              createdAt: -1
            }
 -- 
-2.6.3
+2.11.0
 
 
 From 7d2e15defdc11ce55d32b8b3863041c432309c87 Mon Sep 17 00:00:00 2001
@@ -1142,7 +1142,7 @@ index 88af3bf..36deb05 100644
      })
    }
 -- 
-2.6.3
+2.11.0
 
 
 From 936d91c42a3abafe3bdedb7e17f7d2534bdcbd83 Mon Sep 17 00:00:00 2001
@@ -1166,7 +1166,7 @@ index 73416a2..59cd86a 100644
    <label class="hide-completed">
      <input type="checkbox" ng-model="$ctrl.hideCompleted"/>
 -- 
-2.6.3
+2.11.0
 
 
 From b2c749f6337fd98e1d5833f2b2823ae38e055ce4 Mon Sep 17 00:00:00 2001
@@ -1267,7 +1267,7 @@ index 13a756d..98c1d11 100644
  ui@1.0.9-rc.8
  underscore@1.0.6-rc.8
 -- 
-2.6.3
+2.11.0
 
 
 From 9db427c405476c1e5a436b94dbe97ccb54965f0c Mon Sep 17 00:00:00 2001
@@ -1294,7 +1294,7 @@ index c79d69c..086316a 100644
  
  function onReady() {
 -- 
-2.6.3
+2.11.0
 
 
 From 818dff1aaf30a50056d7dc9d471c3ef94f2a0134 Mon Sep 17 00:00:00 2001
@@ -1320,7 +1320,7 @@ index 59cd86a..e0f44ba 100644
      <input ng-model="$ctrl.newTask" type="text" name="text" placeholder="Type to add new tasks"/>
    </form>
 -- 
-2.6.3
+2.11.0
 
 
 From b935478ee458ebb5ec71decfb6d69471060c636c Mon Sep 17 00:00:00 2001
@@ -1345,7 +1345,7 @@ index 0000000..7e4f7e5
 +  passwordSignupFields: 'USERNAME_ONLY',
 +});
 -- 
-2.6.3
+2.11.0
 
 
 From f2ae55fd1d12073751f0d2a311b2ae7079f0ddfa Mon Sep 17 00:00:00 2001
@@ -1370,7 +1370,7 @@ index 086316a..16887a9 100644
  angular.module('simple-todos', [
    angularMeteor,
 -- 
-2.6.3
+2.11.0
 
 
 From 469977de20414ad5442833b3b0e6ae3461c31291 Mon Sep 17 00:00:00 2001
@@ -1405,7 +1405,7 @@ index 36deb05..4ed6d6a 100644
  
      // Clear form
 -- 
-2.6.3
+2.11.0
 
 
 From 648d1105eb366bcd8498c37d4529537c7a9580dc Mon Sep 17 00:00:00 2001
@@ -1432,7 +1432,7 @@ index 4ed6d6a..0a27893 100644
      })
    }
 -- 
-2.6.3
+2.11.0
 
 
 From 6e15ab5cae98aba242e5fcb20a2ca332d2cf84a6 Mon Sep 17 00:00:00 2001
@@ -1458,7 +1458,7 @@ index e0f44ba..7de6008 100644
    </form>
    
 -- 
-2.6.3
+2.11.0
 
 
 From 6bae63b513f16c37c8d09157328b81edae8e5730 Mon Sep 17 00:00:00 2001
@@ -1484,7 +1484,7 @@ index 7de6008..54dcf6f 100644
    </li>
  </ul>
 -- 
-2.6.3
+2.11.0
 
 
 From 3450992ba7fc685852ed6667ccdf25cd5566a7d6 Mon Sep 17 00:00:00 2001
@@ -1522,7 +1522,7 @@ index 98c1d11..ebc977e 100644
  launch-screen@1.0.8-rc.8
  less@2.5.6-rc.8
 -- 
-2.6.3
+2.11.0
 
 
 From 4c0a4805e8338c9e963ece53be4f97a5b70e018a Mon Sep 17 00:00:00 2001
@@ -1578,7 +1578,7 @@ index 3bed819..01ceabb 100644
 +  },
 +});
 -- 
-2.6.3
+2.11.0
 
 
 From ab0996ec019bad7e6f98631eaeb410a20b928ea2 Mon Sep 17 00:00:00 2001
@@ -1609,7 +1609,7 @@ index 0a27893..68913b3 100644
      // Clear form
      this.newTask = '';
 -- 
-2.6.3
+2.11.0
 
 
 From cd583ae0f7e053b8da0c5728a1bf2192bb8380e4 Mon Sep 17 00:00:00 2001
@@ -1644,7 +1644,7 @@ index 68913b3..c8a1f1d 100644
  }
  
 -- 
-2.6.3
+2.11.0
 
 
 From 4ecda4f067616b8ecff8cc3f831d8fa785d6765a Mon Sep 17 00:00:00 2001
@@ -1682,7 +1682,7 @@ index ebc977e..b2d83b9 100644
  babel-compiler@6.5.2-rc.8
  babel-runtime@0.1.6-rc.8
 -- 
-2.6.3
+2.11.0
 
 
 From 0984118c66958d35b560efdfdbdd9acefa043990 Mon Sep 17 00:00:00 2001
@@ -1713,7 +1713,7 @@ index 01ceabb..abbc060 100644
    'tasks.insert' (text) {
      check(text, String);
 -- 
-2.6.3
+2.11.0
 
 
 From 6ce0c99d129c7f69c89b43a930eedc5e42c5d07f Mon Sep 17 00:00:00 2001
@@ -1739,7 +1739,7 @@ index c8a1f1d..859b5f8 100644
  
      this.helpers({
 -- 
-2.6.3
+2.11.0
 
 
 From a9f5b38100a71d3a2aeae3152ce851179f432264 Mon Sep 17 00:00:00 2001
@@ -1766,7 +1766,7 @@ index 54dcf6f..bdab140 100644
    </li>
  </ul>
 -- 
-2.6.3
+2.11.0
 
 
 From 7d96735e1bfb86a7522532f74625fd6fa53c3dbd Mon Sep 17 00:00:00 2001
@@ -1792,7 +1792,7 @@ index bdab140..ca14799 100644
  
      <input type="checkbox" ng-checked="task.checked" ng-click="$ctrl.setChecked(task)" class="toggle-checked"/>
 -- 
-2.6.3
+2.11.0
 
 
 From 4dc64e7c5a3a55f6eb732cc74ec159e274e21226 Mon Sep 17 00:00:00 2001
@@ -1831,7 +1831,7 @@ index abbc060..53e070b 100644
 +  },
  });
 -- 
-2.6.3
+2.11.0
 
 
 From 40d23f30d4ce79cb453a0407560b199ed574c86b Mon Sep 17 00:00:00 2001
@@ -1859,7 +1859,7 @@ index 859b5f8..789bf4b 100644
  
  export default angular.module('todosList', [
 -- 
-2.6.3
+2.11.0
 
 
 From 4bbf32caa76e7a8bdbd843f9b11f090eaac3d72a Mon Sep 17 00:00:00 2001
@@ -1896,7 +1896,7 @@ index 53e070b..a39c461 100644
  }
  
 -- 
-2.6.3
+2.11.0
 
 
 From 5cee5bd2a60ad284ff7d403c1458f8383274b42d Mon Sep 17 00:00:00 2001
@@ -1938,7 +1938,7 @@ index a39c461..610c90d 100644
        $set: {
          checked: setChecked
 -- 
-2.6.3
+2.11.0
 
 
 From 33929986de31d2c67324ebc9aed88f39d1218768 Mon Sep 17 00:00:00 2001
@@ -1985,7 +1985,7 @@ index b2d83b9..f1652dd 100644
  random@1.0.7-rc.8
  rate-limit@1.0.2-rc.8
 -- 
-2.6.3
+2.11.0
 
 
 From 1004db1df20b7a68e370b8bee46a6e4b9aca3b4f Mon Sep 17 00:00:00 2001
@@ -2017,7 +2017,7 @@ index 0000000..05287ba
 +  });
 +}
 -- 
-2.6.3
+2.11.0
 
 
 From 304ab142599572ac72dea888aa2ef97382f41669 Mon Sep 17 00:00:00 2001
@@ -2063,7 +2063,7 @@ index 05287ba..a033a3b 100644
    });
  }
 -- 
-2.6.3
+2.11.0
 
 
 From d2f794f656c50b1c4ce11857ca3b8a2249a7fd4e Mon Sep 17 00:00:00 2001
@@ -2112,7 +2112,7 @@ index a033a3b..54e6c41 100644
    });
  }
 -- 
-2.6.3
+2.11.0
 
 
 From 993972ce855fb8b87e4f46db95ba071f9abce43b Mon Sep 17 00:00:00 2001
@@ -2138,7 +2138,7 @@ index 648e16e..c257af6 100644
    }
  }
 -- 
-2.6.3
+2.11.0
 
 
 From 0676ae95b052efd2e2795b12bcf9e67c7a5d99be Mon Sep 17 00:00:00 2001
@@ -2183,7 +2183,7 @@ index 0000000..67f5256
 +  });
 +})
 -- 
-2.6.3
+2.11.0
 
 
 From eacbd5e02918599cb3783188bf4220fd1eae27cc Mon Sep 17 00:00:00 2001
@@ -2219,7 +2219,7 @@ index 67f5256..41167bc 100644
 +  });
  })
 -- 
-2.6.3
+2.11.0
 
 
 From 624322117e54c32ee9883f12ac66fc2b2c0328b2 Mon Sep 17 00:00:00 2001
@@ -2267,7 +2267,7 @@ index 41167bc..bb290ed 100644
 +  });
  })
 -- 
-2.6.3
+2.11.0
 
 
 From de86d18961051b18c9fc78f4d55873711a76144f Mon Sep 17 00:00:00 2001
@@ -2296,7 +2296,7 @@ index bb290ed..8a016aa 100644
    });
  })
 -- 
-2.6.3
+2.11.0
 
 
 From 83c53904e21e0aa21f236193532bb81075929d00 Mon Sep 17 00:00:00 2001
@@ -2324,5 +2324,5 @@ index 8a016aa..d293a4b 100644
    });
  })
 -- 
-2.6.3
+2.11.0
 
diff --git a/generated/blaze.multi.patch b/generated/blaze.multi.patch
index 7a1d81d..f0f3b17 100644
--- a/generated/blaze.multi.patch
+++ b/generated/blaze.multi.patch
@@ -1,4 +1,4 @@
-From f074a805255262736d909d1d5e17eee22bbb6605 Mon Sep 17 00:00:00 2001
+From 51e340b7cd2b944bd0929206b1871f1c044c2aa2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:05:51 -0700
 Subject: [PATCH 01/48] Step 1: Run `meteor create`
@@ -289,10 +289,10 @@ index 0000000..31a9e0e
 +  // code to run on server at startup
 +});
 -- 
-2.5.1
+2.11.0
 
 
-From f00a06c7c5e14b46f8c1c4b57b8308470ae4131b Mon Sep 17 00:00:00 2001
+From 431f75b28f8ee985b3ac341da6c4d752d204b135 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:07:22 -0700
 Subject: [PATCH 02/48] Step 2.1: Remove starter HTML code
@@ -332,10 +332,10 @@ index 6fe0dc5..7c48505 100644
 -  </ul>
 -</template>
 -- 
-2.5.1
+2.11.0
 
 
-From d76d39724777bf82d31f70f3ded8de3659d0ba0f Mon Sep 17 00:00:00 2001
+From 99cffc464f80899ce34cf446179e8041c9f5114c Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 13:11:52 +1100
 Subject: [PATCH 03/48] Step 2.2: Add starter HTML code
@@ -369,10 +369,10 @@ index 0000000..23a6507
 +  <li>{{text}}</li>
 +</template>
 -- 
-2.5.1
+2.11.0
 
 
-From 81b442e117eb61469eef1b783552820aad769b08 Mon Sep 17 00:00:00 2001
+From 30e9ac16a2de85e74d5a6d92b16e41b37e7faf5e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:07:50 -0700
 Subject: [PATCH 04/48] Step 2.3: Add starter JS code
@@ -400,10 +400,10 @@ index 0000000..3ad20b1
 +  ],
 +});
 -- 
-2.5.1
+2.11.0
 
 
-From 0ee65568d41f16915c4d1271ac307a1a362fb253 Mon Sep 17 00:00:00 2001
+From d63fe20a79a2dd9be0034b72bba93d9654d10d31 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:08:17 -0700
 Subject: [PATCH 05/48] Step 2.4: Import starter JS
@@ -441,10 +441,10 @@ index ecb3282..4e7c1a4 100644
 -});
 +import '../imports/ui/body.js';
 -- 
-2.5.1
+2.11.0
 
 
-From 84a25d420baa2815108ecd22709339f1912478a9 Mon Sep 17 00:00:00 2001
+From 63f980943c048f8084f5a42543ba3e13b4088800 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:13:09 +1100
 Subject: [PATCH 06/48] Step 2.5: Add CSS
@@ -585,10 +585,10 @@ index b6b4052..ed5e77e 100644
 +  }
 +}
 -- 
-2.5.1
+2.11.0
 
 
-From 9ee57a11d41eac7791920a24497bef8716a6301f Mon Sep 17 00:00:00 2001
+From bbe752d39cf04a51376c1cd089b053615cf08df9 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:15:47 +1100
 Subject: [PATCH 07/48] Step 3.1: Create tasks collection
@@ -608,10 +608,10 @@ index 0000000..3bed819
 +
 +export const Tasks = new Mongo.Collection('tasks');
 -- 
-2.5.1
+2.11.0
 
 
-From 96f0e2a82fa51aeb72170c2fb30814245806fd1c Mon Sep 17 00:00:00 2001
+From 85ec00cdd88b93b68d2f3c517060594a8f015062 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:20:32 +1100
 Subject: [PATCH 08/48] Step 3.2: Load tasks collection on the server
@@ -632,10 +632,10 @@ index 31a9e0e..ab941a4 100644
 -});
 +import '../imports/api/tasks.js';
 -- 
-2.5.1
+2.11.0
 
 
-From f345b40d5bf55026d8bb72a771971d06f6cec25e Mon Sep 17 00:00:00 2001
+From f6b008980d6f04b93e05bf777bdb0378308f4b57 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:16:03 +1100
 Subject: [PATCH 09/48] Step 3.3: Load tasks from Tasks collection
@@ -666,10 +666,10 @@ index 3ad20b1..fc36022 100644
 +  },
  });
 -- 
-2.5.1
+2.11.0
 
 
-From 06fc0de9e7665c11170f69f7df069229fa99330f Mon Sep 17 00:00:00 2001
+From 5181113b59242497a2593b844337a93944b7d78a Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:10:21 -0700
 Subject: [PATCH 10/48] Step 4.1: Add form for new tasks
@@ -694,10 +694,10 @@ index 23a6507..0a1f952 100644
  
      <ul>
 -- 
-2.5.1
+2.11.0
 
 
-From 2fd36714d6494f4fb1bf99d1aefbc9a10dfde350 Mon Sep 17 00:00:00 2001
+From 828c084621cc5bd0d9373d54f4eda6188260bbda Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:19:59 +1100
 Subject: [PATCH 11/48] Step 4.2: Add event handler for form submit
@@ -735,10 +735,10 @@ index fc36022..42ad1d5 100644
 +  },
 +});
 -- 
-2.5.1
+2.11.0
 
 
-From 3706dd75816a2a0ac525aa79acdb75f622e64d5a Mon Sep 17 00:00:00 2001
+From 0dc5c4c9c5bb0f8f769ef704a90a981de6090847 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:12:14 -0700
 Subject: [PATCH 12/48] Step 4.3: Show newest tasks at the top
@@ -762,10 +762,10 @@ index 42ad1d5..6fbc9d5 100644
  });
  
 -- 
-2.5.1
+2.11.0
 
 
-From 0f5a29b2ec349b1beefaea65da8795669eb3fbd6 Mon Sep 17 00:00:00 2001
+From 89bc3233dc87cba97d7e5a89f659dfc463b8da53 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:12:57 -0700
 Subject: [PATCH 13/48] Step 5.1: Add buttons to Task component
@@ -791,10 +791,10 @@ index 0000000..c4ab8e5
 +  </li>
 +</template>
 -- 
-2.5.1
+2.11.0
 
 
-From a0a45efdbc9f6304a07e3fd378ac063bbd4a552b Mon Sep 17 00:00:00 2001
+From acb70c80fb362a856eb7254d5b7dbe8492e2dc83 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:23:12 +1100
 Subject: [PATCH 14/48] Step 5.2: Remove Tasks component from Body file
@@ -816,10 +816,10 @@ index 0a1f952..c40a87b 100644
 -  <li>{{text}}</li>
 -</template>
 -- 
-2.5.1
+2.11.0
 
 
-From 9662f35f00dfc5bc0f5b6b363f17324d785b6684 Mon Sep 17 00:00:00 2001
+From 4f27c1302376e197c5e69b476f19d9cd13522ade Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:26:44 +1100
 Subject: [PATCH 15/48] Step 5.3: Add event handlers for Task buttons
@@ -853,10 +853,10 @@ index 0000000..782f932
 +  },
 +});
 -- 
-2.5.1
+2.11.0
 
 
-From 95760055fbe30f22a0f05154fbfb70628fa4d80b Mon Sep 17 00:00:00 2001
+From a26ed7b132ec652a7c4cd9f088f7eb3300e86389 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:26:57 +1100
 Subject: [PATCH 16/48] Step 5.4: Import Task component from the body
@@ -878,10 +878,10 @@ index 6fbc9d5..bac22c6 100644
  
  Template.body.helpers({
 -- 
-2.5.1
+2.11.0
 
 
-From 35b9df8d06b3d3b1ea53adf1a0baeced4ad69e01 Mon Sep 17 00:00:00 2001
+From 4bfaa6f070101cb0caf35ab30343e1126b0e6701 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:24:18 -0700
 Subject: [PATCH 17/48] Step 7.1: Add hide-completed checkbox to HTML
@@ -907,10 +907,10 @@ index c40a87b..b634377 100644
          <input type="text" name="text" placeholder="Type to add new tasks" />
        </form>
 -- 
-2.5.1
+2.11.0
 
 
-From bc9bad96083398a27f0f5715d2c42840c550efbd Mon Sep 17 00:00:00 2001
+From 11349ad2cad437421ad9fadb05f000fc2f24d928 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:33:00 +1100
 Subject: [PATCH 18/48] Step 7.2: Add reactive-dict package
@@ -942,10 +942,10 @@ index c3395d2..ccbd7bb 100644
  reload@1.1.6-rc.2
  retry@1.0.5-rc.2
 -- 
-2.5.1
+2.11.0
 
 
-From 6278c9251e42824a54e33982f393f195f7c261a7 Mon Sep 17 00:00:00 2001
+From 349bd90805ba098d08c9445c00fb6776f2cb8b08 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:29:41 +1100
 Subject: [PATCH 19/48] Step 7.3: Add state dictionary to the body
@@ -975,10 +975,10 @@ index bac22c6..d429b10 100644
    tasks() {
      // Show newest tasks at the top
 -- 
-2.5.1
+2.11.0
 
 
-From 099e720bdef9264fb4a50c96aff01cb776c61d58 Mon Sep 17 00:00:00 2001
+From caa11a11d808123299380ee26229c9f358ba1775 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:30:11 +1100
 Subject: [PATCH 20/48] Step 7.4: Add event handler for checkbox
@@ -1000,10 +1000,10 @@ index d429b10..856dad4 100644
 +  },
  });
 -- 
-2.5.1
+2.11.0
 
 
-From 9f9c2e3690dc589db6515c68301af09f630c05c2 Mon Sep 17 00:00:00 2001
+From 10e30f2ff2b42a53bd675433f65d21ac2beb679e Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:31:16 +1100
 Subject: [PATCH 21/48] Step 7.5: Add helpers to body template
@@ -1031,10 +1031,10 @@ index 856dad4..18422ae 100644
    },
  });
 -- 
-2.5.1
+2.11.0
 
 
-From 8422a894f5acb8776657e6ec366a9cb174dfbd33 Mon Sep 17 00:00:00 2001
+From 79b34c54716abd5aaa1a5d9f5068a8bd7c24e35b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:26:17 -0700
 Subject: [PATCH 22/48] Step 7.6: Add incompleteCount helper to body
@@ -1058,10 +1058,10 @@ index 18422ae..3ca9a47 100644
  
  Template.body.events({
 -- 
-2.5.1
+2.11.0
 
 
-From 8580aba0afce4d9392a348d55be7bda3343d980b Mon Sep 17 00:00:00 2001
+From b26b4d486c9136a3db7beb5d63759b7fa1cdf0b3 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:26:37 -0700
 Subject: [PATCH 23/48] Step 7.7: Display incompleteCount
@@ -1084,10 +1084,10 @@ index b634377..6738d6c 100644
        <label class="hide-completed">
          <input type="checkbox" />
 -- 
-2.5.1
+2.11.0
 
 
-From db10a094d8671ec2fd0adf4c25cd7412e54f5502 Mon Sep 17 00:00:00 2001
+From eaa7cfb2bf6257ec2f64f9cfe454c688de9cc6c3 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:27:03 -0700
 Subject: [PATCH 24/48] Step 8.1: Add accounts-ui and accounts-password
@@ -1170,10 +1170,10 @@ index ccbd7bb..b739407 100644
  standard-minifier-js@1.0.4-rc.2
  templating@1.1.7-rc.2
 -- 
-2.5.1
+2.11.0
 
 
-From 40360df00f03958402f19e0101a03dbf202e8c8e Mon Sep 17 00:00:00 2001
+From bc9fb936699c1ce8a0643e5c563043d560a04811 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:27:23 -0700
 Subject: [PATCH 25/48] Step 8.2: Include loginButtons
@@ -1196,10 +1196,10 @@ index 6738d6c..6c60a17 100644
          <input type="text" name="text" placeholder="Type to add new tasks" />
        </form>
 -- 
-2.5.1
+2.11.0
 
 
-From 80e9c894a81ce768c236d877a8b26a252cdd0077 Mon Sep 17 00:00:00 2001
+From 7c48c9aa89e26eac39cc67046f85e54bab5889fe Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:36:02 +1100
 Subject: [PATCH 26/48] Step 8.3: Configure accounts-ui
@@ -1221,10 +1221,10 @@ index 0000000..7e4f7e5
 +  passwordSignupFields: 'USERNAME_ONLY',
 +});
 -- 
-2.5.1
+2.11.0
 
 
-From 128dc937cf215d45bb1f656afcd57eded2750b28 Mon Sep 17 00:00:00 2001
+From 47fde1a42d5d6d1b765b2f16d0f0cc48e0567be1 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:36:36 +1100
 Subject: [PATCH 27/48] Step 8.4: Import accounts configuration
@@ -1241,10 +1241,10 @@ index 4e7c1a4..739c50f 100644
 +import '../imports/startup/accounts-config.js';
  import '../imports/ui/body.js';
 -- 
-2.5.1
+2.11.0
 
 
-From 52d59c89e12a85ac4b9f4a92d094a49ac1388140 Mon Sep 17 00:00:00 2001
+From 2e4234a228346ca731731166ca12aa38c857d82d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:28:24 -0700
 Subject: [PATCH 28/48] Step 8.5: Update insert to include user data
@@ -1272,10 +1272,10 @@ index 3ca9a47..08fad55 100644
  
      // Clear form
 -- 
-2.5.1
+2.11.0
 
 
-From 33ecb2ba46eb0c5d1dff6234a3ef9c69f1726d47 Mon Sep 17 00:00:00 2001
+From 7083c5b56ba521ed7f34a7039bb3510e6f522534 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:28:47 -0700
 Subject: [PATCH 29/48] Step 8.6: Only show add task form if logged in
@@ -1304,10 +1304,10 @@ index 6c60a17..6a9e4e1 100644
  
      <ul>
 -- 
-2.5.1
+2.11.0
 
 
-From 4aa8bcb5754914e8254d37c124177d78d12c8aef Mon Sep 17 00:00:00 2001
+From da75b1705c5d5ae3470f47406c261d4303f95a87 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:29:11 -0700
 Subject: [PATCH 30/48] Step 8.7: Display username next to task
@@ -1329,10 +1329,10 @@ index c4ab8e5..c42e8fc 100644
    </li>
  </template>
 -- 
-2.5.1
+2.11.0
 
 
-From 8040d766c5ae5603dda1d25e4e1019aa45fb42a1 Mon Sep 17 00:00:00 2001
+From fc20c31540886a1c6b63673217f63e485c076cec Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:29:52 -0700
 Subject: [PATCH 31/48] Step 9.1: Remove insecure package
@@ -1367,10 +1367,10 @@ index b739407..3d9bd1e 100644
  launch-screen@1.0.7-rc.2
  less@2.5.5-rc.2
 -- 
-2.5.1
+2.11.0
 
 
-From 74597e2a744493ae36ed7339ab0c9e64868efa1a Mon Sep 17 00:00:00 2001
+From aa0357a3c29f7fdedfbb7ff2b109e990831bb399 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:30:20 -0700
 Subject: [PATCH 32/48] Step 9.2: Define some methods
@@ -1380,7 +1380,7 @@ Subject: [PATCH 32/48] Step 9.2: Define some methods
  1 file changed, 31 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 3bed819..af4962a 100644
+index 3bed819..0201eb4 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -1,3 +1,34 @@
@@ -1395,15 +1395,15 @@ index 3bed819..af4962a 100644
 +    check(text, String);
 +
 +    // Make sure the user is logged in before inserting a task
-+    if (! this.userId) {
++    if (! Meteor.userId()) {
 +      throw new Meteor.Error('not-authorized');
 +    }
 +
 +    Tasks.insert({
 +      text,
 +      createdAt: new Date(),
-+      owner: this.userId,
-+      username: Meteor.users.findOne(this.userId).username,
++      owner: Meteor.userId(),
++      username: Meteor.user().username,
 +    });
 +  },
 +  'tasks.remove'(taskId) {
@@ -1419,10 +1419,10 @@ index 3bed819..af4962a 100644
 +  },
 +});
 -- 
-2.5.1
+2.11.0
 
 
-From 4bbebba69bd9eb56a871cad72c7be70e2ad413f8 Mon Sep 17 00:00:00 2001
+From f6f479327894e4d8f1cd559cdb587c93a86acb33 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:31:24 -0700
 Subject: [PATCH 33/48] Step 9.3: Replace insert with addTask method
@@ -1450,10 +1450,10 @@ index 08fad55..988f6a5 100644
      // Clear form
      target.text.value = '';
 -- 
-2.5.1
+2.11.0
 
 
-From c6cd6fb218da10e02123835941c0adb45bfca8cc Mon Sep 17 00:00:00 2001
+From 574d23454196ee22d0ea3bc6cd152b41e37e42cd Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:31:46 -0700
 Subject: [PATCH 34/48] Step 9.4: Replace update and remove with methods
@@ -1488,10 +1488,10 @@ index 782f932..3775ceb 100644
    },
  });
 -- 
-2.5.1
+2.11.0
 
 
-From 885b2a6e8b912616f09da67f09a7a5e9a5e53318 Mon Sep 17 00:00:00 2001
+From d96e7791d8be06e726b02b9a40abdc23630d99e6 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:32:19 -0700
 Subject: [PATCH 35/48] Step 10.1: Remove autopublish
@@ -1526,10 +1526,10 @@ index 3d9bd1e..4f59e62 100644
  babel-compiler@6.5.1-rc.2
  babel-runtime@0.1.6-rc.2
 -- 
-2.5.1
+2.11.0
 
 
-From 39287e7708b461dec39f35765f0992cf8315dbb4 Mon Sep 17 00:00:00 2001
+From 09284b4286add29217f39a59c7b7c63b93d6a74f Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:45:32 +1100
 Subject: [PATCH 36/48] Step 10.2: Add publication for tasks
@@ -1539,7 +1539,7 @@ Subject: [PATCH 36/48] Step 10.2: Add publication for tasks
  1 file changed, 7 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index af4962a..80d36bc 100644
+index 0201eb4..234a839 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -4,6 +4,13 @@ import { check } from 'meteor/check';
@@ -1557,10 +1557,10 @@ index af4962a..80d36bc 100644
    'tasks.insert'(text) {
      check(text, String);
 -- 
-2.5.1
+2.11.0
 
 
-From 96a1a2893e1092ba0d36bf344e39ea00f7b90396 Mon Sep 17 00:00:00 2001
+From cf3557458e16d0477f61cd2cdc5d07adbe225de6 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:45:58 +1100
 Subject: [PATCH 37/48] Step 10.3: Subscribe to tasks
@@ -1582,10 +1582,10 @@ index 988f6a5..8a4407f 100644
  
  Template.body.helpers({
 -- 
-2.5.1
+2.11.0
 
 
-From 277bf38e68bf34a59ef5d6fae33c2e207e219fa7 Mon Sep 17 00:00:00 2001
+From 559e0285e8d2ff713e00997b6f95463433fffa40 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:33:43 -0700
 Subject: [PATCH 38/48] Step 10.4: Add private button
@@ -1616,10 +1616,10 @@ index c42e8fc..b9108ea 100644
    </li>
  </template>
 -- 
-2.5.1
+2.11.0
 
 
-From 4051e10a9583d67383a3bb1467f69e8191f7c578 Mon Sep 17 00:00:00 2001
+From 0518f1f4682540652dfabb104fe9f8274ecab735 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:34:13 -0700
 Subject: [PATCH 39/48] Step 10.5: Add private class to private tasks
@@ -1640,10 +1640,10 @@ index b9108ea..218789f 100644
  
      <input type="checkbox" checked="{{checked}}" class="toggle-checked" />
 -- 
-2.5.1
+2.11.0
 
 
-From a2cf05ec7b904142615f64b0778d079a80f3ad81 Mon Sep 17 00:00:00 2001
+From 5f5dfb0eda840c8e796e07696e8412385453ead6 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:34:47 -0700
 Subject: [PATCH 40/48] Step 10.6: Define helper to check ownership
@@ -1670,10 +1670,10 @@ index 3775ceb..af4bcf6 100644
    'click .toggle-checked'() {
      // Set the checked property to the opposite of its current value
 -- 
-2.5.1
+2.11.0
 
 
-From 6992bb6ab2a4bda8002f88c57f62970015252690 Mon Sep 17 00:00:00 2001
+From f3a0faebe7b53432e719148d109202a3179e207d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:35:31 -0700
 Subject: [PATCH 41/48] Step 10.7: Define method to set tasks to private
@@ -1683,7 +1683,7 @@ Subject: [PATCH 41/48] Step 10.7: Define method to set tasks to private
  1 file changed, 13 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 80d36bc..63feeca 100644
+index 234a839..f1d2c92 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -38,4 +38,17 @@ Meteor.methods({
@@ -1697,7 +1697,7 @@ index 80d36bc..63feeca 100644
 +    const task = Tasks.findOne(taskId);
 +
 +    // Make sure only the task owner can make a task private
-+    if (task.owner !== this.userId) {
++    if (task.owner !== Meteor.userId()) {
 +      throw new Meteor.Error('not-authorized');
 +    }
 +
@@ -1705,10 +1705,10 @@ index 80d36bc..63feeca 100644
 +  },
  });
 -- 
-2.5.1
+2.11.0
 
 
-From da837f661cf5fafa7ec93bce66156c279d33d06d Mon Sep 17 00:00:00 2001
+From e666e1411463ac2e076bd6b966c6ec9c85b504bd Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:35:55 -0700
 Subject: [PATCH 42/48] Step 10.8: Add event handler to call the setPrivate
@@ -1731,10 +1731,10 @@ index af4bcf6..6b51496 100644
 +  },
  });
 -- 
-2.5.1
+2.11.0
 
 
-From c07b3f058d481728fa7f69c1704260a9164492be Mon Sep 17 00:00:00 2001
+From 1501ba07e7032887345eddef0fe542bfc8a21283 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:36:38 -0700
 Subject: [PATCH 43/48] Step 10.9: Only publish tasks the user is allowed to
@@ -1745,7 +1745,7 @@ Subject: [PATCH 43/48] Step 10.9: Only publish tasks the user is allowed to
  1 file changed, 7 insertions(+), 1 deletion(-)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 63feeca..5f76880 100644
+index f1d2c92..441feee 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -6,8 +6,14 @@ export const Tasks = new Mongo.Collection('tasks');
@@ -1765,10 +1765,10 @@ index 63feeca..5f76880 100644
  }
  
 -- 
-2.5.1
+2.11.0
 
 
-From e8a9282211d6f1bff187fd2d8d8abd7df62591c4 Mon Sep 17 00:00:00 2001
+From b47254b75a77b7e17374a0cfefaa2b491db047bf Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Tue, 14 Jul 2015 19:37:36 -0700
 Subject: [PATCH 44/48] Step 10.10: Add some extra security to methods
@@ -1778,7 +1778,7 @@ Subject: [PATCH 44/48] Step 10.10: Add some extra security to methods
  1 file changed, 12 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 5f76880..d7d72dd 100644
+index 441feee..9d5b56a 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -36,12 +36,24 @@ Meteor.methods({
@@ -1786,7 +1786,7 @@ index 5f76880..d7d72dd 100644
      check(taskId, String);
  
 +    const task = Tasks.findOne(taskId);
-+    if (task.private && task.owner !== this.userId) {
++    if (task.private && task.owner !== Meteor.userId()) {
 +      // If the task is private, make sure only the owner can delete it
 +      throw new Meteor.Error('not-authorized');
 +    }
@@ -1798,7 +1798,7 @@ index 5f76880..d7d72dd 100644
      check(setChecked, Boolean);
  
 +    const task = Tasks.findOne(taskId);
-+    if (task.private && task.owner !== this.userId) {
++    if (task.private && task.owner !== Meteor.userId()) {
 +      // If the task is private, make sure only the owner can check it off
 +      throw new Meteor.Error('not-authorized');
 +    }
@@ -1807,10 +1807,10 @@ index 5f76880..d7d72dd 100644
    },
    'tasks.setPrivate'(taskId, setToPrivate) {
 -- 
-2.5.1
+2.11.0
 
 
-From de363404f1c60e48c91740e0ad447acf030dc626 Mon Sep 17 00:00:00 2001
+From c9b1dd8bbc52eeebc6ea8d8c80147d11fc3a582d Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Thu, 17 Mar 2016 12:51:38 +1100
 Subject: [PATCH 45/48] Step 11.1: Added practicalmeteor:mocha package
@@ -1862,10 +1862,10 @@ index 4f59e62..a03c196 100644
  ui@1.0.9-rc.2
  underscore@1.0.6-rc.2
 -- 
-2.5.1
+2.11.0
 
 
-From 1a33dc2c62700efa400e60ad561bbe03a8b03160 Mon Sep 17 00:00:00 2001
+From 92f2ca1d2865a5fd196879bb0185fd2edf3c619c Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 12:36:41 +1100
 Subject: [PATCH 46/48] Step 11.2: Add a scaffold for a method test
@@ -1894,10 +1894,10 @@ index 0000000..05287ba
 +  });
 +}
 -- 
-2.5.1
+2.11.0
 
 
-From db40b5fb0c309eed4202ad094fd5c323df13c0f2 Mon Sep 17 00:00:00 2001
+From cd403a50cacba784de11a7a94e6d55bc884b33fb Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 12:37:45 +1100
 Subject: [PATCH 47/48] Step 11.3: Prepare the database for each test
@@ -1938,10 +1938,10 @@ index 05287ba..1359e85 100644
        });
      });
 -- 
-2.5.1
+2.11.0
 
 
-From 23156828acfc00fbcc682d6ab2212b18f85ff660 Mon Sep 17 00:00:00 2001
+From 9a08b96bae018a4ecb3d23dada624accdb817cb0 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 12:39:33 +1100
 Subject: [PATCH 48/48] Step 11.4: Added test to check delete method
@@ -1982,5 +1982,5 @@ index 1359e85..9b61c5a 100644
      });
    });
 -- 
-2.5.1
+2.11.0
 
diff --git a/generated/react.multi.patch b/generated/react.multi.patch
index d438595..f0f8eee 100644
--- a/generated/react.multi.patch
+++ b/generated/react.multi.patch
@@ -1,4 +1,4 @@
-From 3170e79cfa810c7e91a14440a279e5e2cd053922 Mon Sep 17 00:00:00 2001
+From d3a12b372dfe330e34f1627e14f92f2b38228402 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:00:51 -0700
 Subject: [PATCH 01/50] Step 1: Run `meteor create`
@@ -289,10 +289,10 @@ index 0000000..31a9e0e
 +  // code to run on server at startup
 +});
 -- 
-2.5.1
+2.11.0
 
 
-From 6d83eb9a65db406fe2802532d353913e6c39a3c2 Mon Sep 17 00:00:00 2001
+From 6fa59132fa2b03127c5f57f4e3ccfdf2ff8a79a8 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:02:01 -0700
 Subject: [PATCH 02/50] Step 2.1: Add the React NPM packages
@@ -316,10 +316,10 @@ index 4164b14..9cb9d8e 100644
    }
  }
 -- 
-2.5.1
+2.11.0
 
 
-From e7da3a8c525a7476fb94fd68286b7fb5348eb5b6 Mon Sep 17 00:00:00 2001
+From 4b2bbac70a870bd6ea8895e831fcfdb8cb7a6943 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:03:54 -0700
 Subject: [PATCH 03/50] Step 2.2: Replace starter HTML code
@@ -361,10 +361,10 @@ index 6fe0dc5..1aae2d4 100644
 -  </ul>
 -</template>
 -- 
-2.5.1
+2.11.0
 
 
-From 4b91faad4fb982b4761f5562bd9e1cb8c39136f6 Mon Sep 17 00:00:00 2001
+From 7c8ec26337c4fff0ba049c8230b81835371c6af7 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:05:08 -0700
 Subject: [PATCH 04/50] Step 2.3: Replace starter JS
@@ -420,10 +420,10 @@ index 0000000..9ba3d08
 +  render(<App />, document.getElementById('render-target'));
 +});
 -- 
-2.5.1
+2.11.0
 
 
-From 716c4acbf54ecdf0438a4995f2441f73c608586b Mon Sep 17 00:00:00 2001
+From ccf6c7a8a47ee9899d60d1b2b82eb2de32c89513 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:05:58 -0700
 Subject: [PATCH 05/50] Step 2.4: Create App component
@@ -474,10 +474,10 @@ index 0000000..0f8372d
 +  }
 +}
 -- 
-2.5.1
+2.11.0
 
 
-From 229edee7c361ca5aaebf9c916ca8163f28007d22 Mon Sep 17 00:00:00 2001
+From ef2c0f0e13af648e784f0c96fe573d923009f919 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:06:31 -0700
 Subject: [PATCH 06/50] Step 2.5: Create Task component
@@ -510,10 +510,10 @@ index 0000000..a5000e0
 +  task: PropTypes.object.isRequired,
 +};
 -- 
-2.5.1
+2.11.0
 
 
-From 1925de765a82ddb055853c123d024acf0f55f7f8 Mon Sep 17 00:00:00 2001
+From 352a5bef57a9720dc5804d40413ea9e8b4e5aa17 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:07:02 -0700
 Subject: [PATCH 07/50] Step 2.6: Add CSS
@@ -655,10 +655,10 @@ index b6b4052..cec3ae6 100644
 +}
 \ No newline at end of file
 -- 
-2.5.1
+2.11.0
 
 
-From 8a4bbbe38bc6cce91029e065a2e895ffef2cc084 Mon Sep 17 00:00:00 2001
+From 499984e377212fb7e7f3286baf5501c72a5bf3dc Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 15:32:35 +1100
 Subject: [PATCH 08/50] Step 3.1: Create tasks collection
@@ -678,10 +678,10 @@ index 0000000..3bed819
 +
 +export const Tasks = new Mongo.Collection('tasks');
 -- 
-2.5.1
+2.11.0
 
 
-From a6c0c60d31ed2ab616041d93f85488f330c63ef7 Mon Sep 17 00:00:00 2001
+From ba41388b46796c004c22eb6de08abec1a4a09866 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 15:33:03 +1100
 Subject: [PATCH 09/50] Step 3.2: Load tasks collection on the server
@@ -702,10 +702,10 @@ index 31a9e0e..ab941a4 100644
 -});
 +import '../imports/api/tasks.js';
 -- 
-2.5.1
+2.11.0
 
 
-From 336b9729ec9401a79b9929c15c9d7d9a9f3f88f8 Mon Sep 17 00:00:00 2001
+From 84125e02c702cbb06498241bfc6d8d8158018bcc Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 15:37:12 +1100
 Subject: [PATCH 10/50] Step 3.3: Add react-meteor-data package
@@ -750,10 +750,10 @@ index 9cb9d8e..fb213f3 100644
    }
  }
 -- 
-2.5.1
+2.11.0
 
 
-From 3d737848e1e9b20c4c022718cc5c0647d0f524fe Mon Sep 17 00:00:00 2001
+From 3dda5b4d90f44b15eb5fd0c270e6e2cc8d01141a Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 15:37:54 +1100
 Subject: [PATCH 11/50] Step 3.4: Modify App component to get tasks from
@@ -808,10 +808,10 @@ index 0f8372d..8f1bf8b 100644
 +  };
 +}, App);
 -- 
-2.5.1
+2.11.0
 
 
-From 4c5eed813149be7a6bdb999406fbb3d1d1f7fe5b Mon Sep 17 00:00:00 2001
+From b595a90b125e15632f84bbe16f7d46e1682418a0 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:13:37 -0700
 Subject: [PATCH 12/50] Step 4.1: Add form for new tasks
@@ -840,10 +840,10 @@ index 8f1bf8b..c452da9 100644
  
          <ul>
 -- 
-2.5.1
+2.11.0
 
 
-From 864c1a4d6ad581b0f6186f609fc079fa110d0a8d Mon Sep 17 00:00:00 2001
+From 9e3e3dd400d5d18024b2a1ba92a6fab5512be5b3 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:14:08 -0700
 Subject: [PATCH 13/50] Step 4.2: Add handleSubmit method to App component
@@ -885,10 +885,10 @@ index c452da9..332bd6e 100644
      return this.props.tasks.map((task) => (
        <Task key={task._id} task={task} />
 -- 
-2.5.1
+2.11.0
 
 
-From 5f82b1fe53e3e76377b9045406715e6da1b68c38 Mon Sep 17 00:00:00 2001
+From 0f68a3dea14816f10c88b4d6491612cedd093aaa Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:14:40 -0700
 Subject: [PATCH 14/50] Step 4.3: Update data container to sort tasks by time
@@ -910,10 +910,10 @@ index 332bd6e..546d198 100644
    };
  }, App);
 -- 
-2.5.1
+2.11.0
 
 
-From 0112f93e63ab2de02b5c10a6e89f1b38dda126f0 Mon Sep 17 00:00:00 2001
+From c8be3a08ea2ae3a778dab859d9f19dc71056c608 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:17:06 -0700
 Subject: [PATCH 15/50] Step 5.1: Update Task component to add features
@@ -969,10 +969,10 @@ index a5000e0..3140871 100644
    }
  }
 -- 
-2.5.1
+2.11.0
 
 
-From 8cb48d9c1280f5feda7aff06c385a52dedad832d Mon Sep 17 00:00:00 2001
+From a9478103c1fe847c2eaf3130b81944a9a7505350 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:21:30 -0700
 Subject: [PATCH 16/50] Step 7.1: Add hide completed checkbox to App component
@@ -1003,10 +1003,10 @@ index 546d198..31d7564 100644
              <input
                type="text"
 -- 
-2.5.1
+2.11.0
 
 
-From b18b0fbb35c8122b4f70ff0dc3dbef2e40a55a32 Mon Sep 17 00:00:00 2001
+From 1a03ff5929c27f91e29e3021609922b092095e3b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:07 -0700
 Subject: [PATCH 17/50] Step 7.2: Add intial state to App component
@@ -1035,10 +1035,10 @@ index 31d7564..246ad81 100644
      event.preventDefault();
  
 -- 
-2.5.1
+2.11.0
 
 
-From 5b70edbfa243329bdb28710ca79a0377b967823f Mon Sep 17 00:00:00 2001
+From d52f74743aeba73dccdffebf49d590af00d44c77 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:22:32 -0700
 Subject: [PATCH 18/50] Step 7.3: Add toggleHideCompleted handler to App
@@ -1065,10 +1065,10 @@ index 246ad81..3347daf 100644
      return this.props.tasks.map((task) => (
        <Task key={task._id} task={task} />
 -- 
-2.5.1
+2.11.0
 
 
-From 241e553fc3889c682eb04521819c8e51f2dcbc68 Mon Sep 17 00:00:00 2001
+From aa63e1e665112a813a00779ba94ce1f4690e8b3e Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:02 -0700
 Subject: [PATCH 19/50] Step 7.4: Filter tasks in renderTasks
@@ -1095,10 +1095,10 @@ index 3347daf..1500877 100644
      ));
    }
 -- 
-2.5.1
+2.11.0
 
 
-From 307d94f24be2dde5b94faf93e4d285e02f53001e Mon Sep 17 00:00:00 2001
+From 80386648ade2b8379cb527a31778bddc56be21b9 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:23:44 -0700
 Subject: [PATCH 20/50] Step 7.5: Update data container to return
@@ -1120,10 +1120,10 @@ index 1500877..75714e5 100644
    };
  }, App);
 -- 
-2.5.1
+2.11.0
 
 
-From 88b91e3c6fa589a74d8ca4982267b5f62b04e090 Mon Sep 17 00:00:00 2001
+From ccfc9d51bcdc179ca1040228d73c26aa4ce70e90 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:24:09 -0700
 Subject: [PATCH 21/50] Step 7.6: Display incompleteCount in the header
@@ -1154,10 +1154,10 @@ index 75714e5..78e5548 100644
  
  export default createContainer(() => {
 -- 
-2.5.1
+2.11.0
 
 
-From 50e4ef5fbb938e9bc8a1efb8e787102fa01064b5 Mon Sep 17 00:00:00 2001
+From dd7d7a62d2b51a47fb91b57f3e6e7c0bad18cc38 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:02 -0700
 Subject: [PATCH 22/50] Step 8.1: Add accounts-ui and accounts-password
@@ -1242,10 +1242,10 @@ index c4bc9da..ecdd0db 100644
  standard-minifier-js@1.0.4-rc.2
  templating@1.1.7-rc.2
 -- 
-2.5.1
+2.11.0
 
 
-From a20f5d2c9c80a2c3788375e20aebdecee91dd6df Mon Sep 17 00:00:00 2001
+From cfb42777b34ec46a22101588c646109b77fbf2cd Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:26:59 -0700
 Subject: [PATCH 23/50] Step 8.2: Create Accounts UI wrapper component
@@ -1282,10 +1282,10 @@ index 0000000..208d5af
 +  }
 +}
 -- 
-2.5.1
+2.11.0
 
 
-From 2dd978ae246e8eb6233292943ebb1e3e67278a61 Mon Sep 17 00:00:00 2001
+From aa6a33ec1a5c203a62ac0c7459ebb378f70bfc81 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:27:36 -0700
 Subject: [PATCH 24/50] Step 8.3: Include sign in form
@@ -1316,10 +1316,10 @@ index 78e5548..1d0bbef 100644
              <input
                type="text"
 -- 
-2.5.1
+2.11.0
 
 
-From cd967c38ce99f633d889e4cf035d8038b080bd25 Mon Sep 17 00:00:00 2001
+From ea28e3011eda90020f1329b3cdd8be37857bfdb8 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:13:48 +1100
 Subject: [PATCH 25/50] Step 8.4: Configure accounts-ui
@@ -1341,10 +1341,10 @@ index 0000000..7e4f7e5
 +  passwordSignupFields: 'USERNAME_ONLY',
 +});
 -- 
-2.5.1
+2.11.0
 
 
-From 9d5328bd7b67bcaec7e2dd423768de443a8b313f Mon Sep 17 00:00:00 2001
+From eef345667c247c8adca26d365a9d57fac1ca5c65 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:14:08 +1100
 Subject: [PATCH 26/50] Step 8.5: Import accounts configuration
@@ -1366,10 +1366,10 @@ index 9ba3d08..b8c5033 100644
  
  Meteor.startup(() => {
 -- 
-2.5.1
+2.11.0
 
 
-From 5aae2dbe6433bef2bb4374b261009e81fd354f4b Mon Sep 17 00:00:00 2001
+From 08ab8b186c3fbe9adb69bea457152e26b95617fb Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:28:46 -0700
 Subject: [PATCH 27/50] Step 8.6: Update insert to save username and owner
@@ -1399,10 +1399,10 @@ index 1d0bbef..7694eb8 100644
  
      // Clear form
 -- 
-2.5.1
+2.11.0
 
 
-From f63fbe224d3ca4f52230eed5b5f3e533b9e020e4 Mon Sep 17 00:00:00 2001
+From c49b83bef043096b8294bbb1e93483b66ce371a2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:29:16 -0700
 Subject: [PATCH 28/50] Step 8.7: Update data container to return data about
@@ -1424,10 +1424,10 @@ index 7694eb8..ce0b541 100644
    };
  }, App);
 -- 
-2.5.1
+2.11.0
 
 
-From 779daa734436a32669485334900266330012ac5b Mon Sep 17 00:00:00 2001
+From b784c6a07138104abf3b7e7f537457b4b46f6a66 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:06 -0700
 Subject: [PATCH 29/50] Step 8.8: Wrap new task form to only show when logged
@@ -1473,10 +1473,10 @@ index ce0b541..bbbb728 100644
  
  export default createContainer(() => {
 -- 
-2.5.1
+2.11.0
 
 
-From 65f23f7a09821681c96ba1f70c87d5aa4dde0903 Mon Sep 17 00:00:00 2001
+From 083e8e6b5dff73a926e6efe5848f69dd5e42f2b6 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:30:48 -0700
 Subject: [PATCH 30/50] Step 8.9: Update Task component to show username
@@ -1501,10 +1501,10 @@ index 3140871..5650fa0 100644
      );
    }
 -- 
-2.5.1
+2.11.0
 
 
-From 8c55528020e197af7730fd5486d70abb86b7c616 Mon Sep 17 00:00:00 2001
+From 932a216710a829d8df5c237b7d94e4490d7e41a1 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:31:22 -0700
 Subject: [PATCH 31/50] Step 9.1: Remove insecure package
@@ -1539,10 +1539,10 @@ index ecdd0db..011fbef 100644
  launch-screen@1.0.7-rc.2
  less@2.5.5-rc.2
 -- 
-2.5.1
+2.11.0
 
 
-From 8644804f6fe1b985b12f472699222195a8a8bf1f Mon Sep 17 00:00:00 2001
+From 14b3e9e5c84ea1b06b70ee51014b933cb3108a5b Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:21 -0700
 Subject: [PATCH 32/50] Step 9.2: Add methods for add, remove, update task
@@ -1552,7 +1552,7 @@ Subject: [PATCH 32/50] Step 9.2: Add methods for add, remove, update task
  1 file changed, 31 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 3bed819..af4962a 100644
+index 3bed819..0201eb4 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -1,3 +1,34 @@
@@ -1567,15 +1567,15 @@ index 3bed819..af4962a 100644
 +    check(text, String);
 +
 +    // Make sure the user is logged in before inserting a task
-+    if (! this.userId) {
++    if (! Meteor.userId()) {
 +      throw new Meteor.Error('not-authorized');
 +    }
 +
 +    Tasks.insert({
 +      text,
 +      createdAt: new Date(),
-+      owner: this.userId,
-+      username: Meteor.users.findOne(this.userId).username,
++      owner: Meteor.userId(),
++      username: Meteor.user().username,
 +    });
 +  },
 +  'tasks.remove'(taskId) {
@@ -1591,10 +1591,10 @@ index 3bed819..af4962a 100644
 +  },
 +});
 -- 
-2.5.1
+2.11.0
 
 
-From f1d1bea80f6bcf6b5f88385c8e39687a72cab5d3 Mon Sep 17 00:00:00 2001
+From 2da4b190163f07eb2234487a2455325fb6a770dd Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:32:59 -0700
 Subject: [PATCH 33/50] Step 9.3: Update App component to use tasks.insert
@@ -1623,10 +1623,10 @@ index bbbb728..4f41c39 100644
      // Clear form
      ReactDOM.findDOMNode(this.refs.textInput).value = '';
 -- 
-2.5.1
+2.11.0
 
 
-From badfb4f30432c960f8f2c93a8bbc60af76ac1ea8 Mon Sep 17 00:00:00 2001
+From 3113186e723246278d8a77c22ac9286c33915452 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:33:38 -0700
 Subject: [PATCH 34/50] Step 9.4: Replace update and remove with methods
@@ -1662,10 +1662,10 @@ index 5650fa0..ee040c5 100644
  
    render() {
 -- 
-2.5.1
+2.11.0
 
 
-From f848ec1d44047bc61947c2033f54592abd120f38 Mon Sep 17 00:00:00 2001
+From 49c6872b0241d0a3d5cda8a8acaac7187a8724bb Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:34:33 -0700
 Subject: [PATCH 35/50] Step 10.1: Remove autopublish package
@@ -1700,10 +1700,10 @@ index 011fbef..cee5a46 100644
  babel-compiler@6.5.1-rc.2
  babel-runtime@0.1.6-rc.2
 -- 
-2.5.1
+2.11.0
 
 
-From 8591e2902b367fc2e3e25bcf6c683505e1b23b57 Mon Sep 17 00:00:00 2001
+From df8dda980a15cc866b3335c296508ab8ffb1b26e Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:27:05 +1100
 Subject: [PATCH 36/50] Step 10.2: Add publication for tasks
@@ -1713,7 +1713,7 @@ Subject: [PATCH 36/50] Step 10.2: Add publication for tasks
  1 file changed, 7 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index af4962a..80d36bc 100644
+index 0201eb4..234a839 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -4,6 +4,13 @@ import { check } from 'meteor/check';
@@ -1731,10 +1731,10 @@ index af4962a..80d36bc 100644
    'tasks.insert'(text) {
      check(text, String);
 -- 
-2.5.1
+2.11.0
 
 
-From bdab4ed3dec3368ac6f331b70d8997ccbba85748 Mon Sep 17 00:00:00 2001
+From 5d258f06f6102a6f90767585e15ace14b3cef1ee Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:28:14 +1100
 Subject: [PATCH 37/50] Step 10.3: Subscribe to tasks in App container
@@ -1757,10 +1757,10 @@ index 4f41c39..d6e5f0a 100644
      tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),
      incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),
 -- 
-2.5.1
+2.11.0
 
 
-From 285d4760f5ec9c55a6235f3ad8aaac803057642b Mon Sep 17 00:00:00 2001
+From f01138adb09b56b2137a7954097d7ee91c89c1c2 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:29 -0700
 Subject: [PATCH 38/50] Step 10.4: Add tasks.setPrivate method
@@ -1770,7 +1770,7 @@ Subject: [PATCH 38/50] Step 10.4: Add tasks.setPrivate method
  1 file changed, 13 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 80d36bc..63feeca 100644
+index 234a839..f1d2c92 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -38,4 +38,17 @@ Meteor.methods({
@@ -1784,7 +1784,7 @@ index 80d36bc..63feeca 100644
 +    const task = Tasks.findOne(taskId);
 +
 +    // Make sure only the task owner can make a task private
-+    if (task.owner !== this.userId) {
++    if (task.owner !== Meteor.userId()) {
 +      throw new Meteor.Error('not-authorized');
 +    }
 +
@@ -1792,10 +1792,10 @@ index 80d36bc..63feeca 100644
 +  },
  });
 -- 
-2.5.1
+2.11.0
 
 
-From 7ad3a79778614fbcda8f694e8ea3079e3220997b Mon Sep 17 00:00:00 2001
+From 4c57163c745caad5d9a610f1530141b001a87469 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:36:59 -0700
 Subject: [PATCH 39/50] Step 10.5: Update renderTasks to pass in
@@ -1832,10 +1832,10 @@ index d6e5f0a..06262c5 100644
  
    render() {
 -- 
-2.5.1
+2.11.0
 
 
-From e30683e5e8e6a4857ffb4d82998e2dc1f88f6f96 Mon Sep 17 00:00:00 2001
+From 2fb05bd2519ddf5ad1d76acbc6784ee1cc109775 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:37:28 -0700
 Subject: [PATCH 40/50] Step 10.6: Add a new prop type for Task component
@@ -1855,10 +1855,10 @@ index ee040c5..deba74a 100644
 +  showPrivateButton: React.PropTypes.bool.isRequired,
  };
 -- 
-2.5.1
+2.11.0
 
 
-From 0e7793113ec7b62fa9f292a31c5a728f866a8ecb Mon Sep 17 00:00:00 2001
+From 451b6de0329407ec45cd337e359325f15f1ad2e8 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:04 -0700
 Subject: [PATCH 41/50] Step 10.7: Add private button, shown only to owner
@@ -1885,10 +1885,10 @@ index deba74a..bec76ba 100644
            <strong>{this.props.task.username}</strong>: {this.props.task.text}
          </span>
 -- 
-2.5.1
+2.11.0
 
 
-From 29689a1d655d68fe64b14d8fe8279868370dd8d8 Mon Sep 17 00:00:00 2001
+From 38178ac83badfcac39b7e2640e76f705ec99c41d Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:38:33 -0700
 Subject: [PATCH 42/50] Step 10.8: Add private button event handler to Task
@@ -1913,10 +1913,10 @@ index bec76ba..db0999e 100644
      // Give tasks a different className when they are checked off,
      // so that we can style them nicely in CSS
 -- 
-2.5.1
+2.11.0
 
 
-From 7b60d6331ec9feaf09c74b82f4d3d5ad4c7bbf28 Mon Sep 17 00:00:00 2001
+From c91d2a5396784ea2bd9836975ee44bca275cfd51 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:33:06 +1100
 Subject: [PATCH 43/50] Step 10.9: Install the classnames NPM package
@@ -1938,10 +1938,10 @@ index fb213f3..ad97bd8 100644
      "react": "^0.14.7",
      "react-addons-pure-render-mixin": "^0.14.7",
 -- 
-2.5.1
+2.11.0
 
 
-From 9b34c5a16bd84c0fd812183c1386c31282e4d297 Mon Sep 17 00:00:00 2001
+From 0103d4d006302d8b8268df20b97a716c048fe182 Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:22 -0700
 Subject: [PATCH 44/50] Step 10.10: Add private className to Task when needed
@@ -1974,10 +1974,10 @@ index db0999e..52450c3 100644
      return (
        <li className={taskClassName}>
 -- 
-2.5.1
+2.11.0
 
 
-From 3eaef91a100f3284e2574c6bbcd81223b75d7e45 Mon Sep 17 00:00:00 2001
+From 255b2e9c631a472fd7be694d7beda1cd8f55367c Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:39:58 -0700
 Subject: [PATCH 45/50] Step 10.11: Only publish tasks the current user can see
@@ -1987,7 +1987,7 @@ Subject: [PATCH 45/50] Step 10.11: Only publish tasks the current user can see
  1 file changed, 7 insertions(+), 1 deletion(-)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 63feeca..5f76880 100644
+index f1d2c92..441feee 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -6,8 +6,14 @@ export const Tasks = new Mongo.Collection('tasks');
@@ -2007,10 +2007,10 @@ index 63feeca..5f76880 100644
  }
  
 -- 
-2.5.1
+2.11.0
 
 
-From 2a2203f90f995f21b281d21a79888f4c5c17bc34 Mon Sep 17 00:00:00 2001
+From f645c84ea0fbf00dfe45819e5aacbe077fc73b9a Mon Sep 17 00:00:00 2001
 From: Sashko Stubailo <sashko@stubailo.com>
 Date: Mon, 13 Jul 2015 12:40:55 -0700
 Subject: [PATCH 46/50] Step 10.12: Add extra security to methods
@@ -2020,7 +2020,7 @@ Subject: [PATCH 46/50] Step 10.12: Add extra security to methods
  1 file changed, 12 insertions(+)
 
 diff --git a/imports/api/tasks.js b/imports/api/tasks.js
-index 5f76880..d7d72dd 100644
+index 441feee..9d5b56a 100644
 --- a/imports/api/tasks.js
 +++ b/imports/api/tasks.js
 @@ -36,12 +36,24 @@ Meteor.methods({
@@ -2028,7 +2028,7 @@ index 5f76880..d7d72dd 100644
      check(taskId, String);
  
 +    const task = Tasks.findOne(taskId);
-+    if (task.private && task.owner !== this.userId) {
++    if (task.private && task.owner !== Meteor.userId()) {
 +      // If the task is private, make sure only the owner can delete it
 +      throw new Meteor.Error('not-authorized');
 +    }
@@ -2040,7 +2040,7 @@ index 5f76880..d7d72dd 100644
      check(setChecked, Boolean);
  
 +    const task = Tasks.findOne(taskId);
-+    if (task.private && task.owner !== this.userId) {
++    if (task.private && task.owner !== Meteor.userId()) {
 +      // If the task is private, make sure only the owner can check it off
 +      throw new Meteor.Error('not-authorized');
 +    }
@@ -2049,10 +2049,10 @@ index 5f76880..d7d72dd 100644
    },
    'tasks.setPrivate'(taskId, setToPrivate) {
 -- 
-2.5.1
+2.11.0
 
 
-From 923ba502580719af8edce6bf446a82318d29349f Mon Sep 17 00:00:00 2001
+From 5ab7e080629e31a930b958d30cad7648b85aab2e Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:35:58 +1100
 Subject: [PATCH 47/50] Step 11.1: Added practicalmeteor:mocha package
@@ -2096,10 +2096,10 @@ index cee5a46..53843b3 100644
  random@1.0.7-rc.2
  rate-limit@1.0.2-rc.2
 -- 
-2.5.1
+2.11.0
 
 
-From 64b6e3ffb5c69b445f4de66a9cdbb2342cd4da83 Mon Sep 17 00:00:00 2001
+From ed6c9e21b030f2112546117b891c8ba5af078591 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:36:17 +1100
 Subject: [PATCH 48/50] Step 11.2: Add a scaffold for a method test
@@ -2128,10 +2128,10 @@ index 0000000..05287ba
 +  });
 +}
 -- 
-2.5.1
+2.11.0
 
 
-From 3a7d4430dbcf87f5f7f4e83d9550b8b4773ac02e Mon Sep 17 00:00:00 2001
+From e5d24a72761492da42eb982cc59a64371db7be4a Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:36:29 +1100
 Subject: [PATCH 49/50] Step 11.3: Prepare the database for each test
@@ -2172,10 +2172,10 @@ index 05287ba..1359e85 100644
        });
      });
 -- 
-2.5.1
+2.11.0
 
 
-From 15cf3fbd87b0d9b9e9aa5779e8ec4198e3e1016b Mon Sep 17 00:00:00 2001
+From e2ede7952b00434f63386423bf8ecb0d9f5d7047 Mon Sep 17 00:00:00 2001
 From: Tom Coleman <tom@thesnail.org>
 Date: Fri, 18 Mar 2016 16:36:42 +1100
 Subject: [PATCH 50/50] Step 11.4: Added test to check delete method
@@ -2216,5 +2216,5 @@ index 1359e85..9b61c5a 100644
      });
    });
 -- 
-2.5.1
+2.11.0
 
-- 
2.13.6 (Apple Git-96)


From 6ef01efc356f124d5bac1d2760d48dc0fb907404 Mon Sep 17 00:00:00 2001
From: Liam Monahan <liam@monahan.io>
Date: Thu, 16 Mar 2017 05:11:31 -0400
Subject: [PATCH 135/164] typo: it's is a contraction for 'it is'. (#80)

---
 content/blaze/step05.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/blaze/step05.md b/content/blaze/step05.md
index e19c9e6..7eeb82c 100644
--- a/content/blaze/step05.md
+++ b/content/blaze/step05.md
@@ -4,7 +4,7 @@
 
 Until now, we have only interacted with a collection by inserting documents. Now, we will learn how to update and remove them.
 
-Let's work on our `task` template---starting by moving it to it's own file, with some new features, a checkbox and a delete button:
+Let's work on our `task` template---starting by moving it to its own file, with some new features, a checkbox and a delete button:
 
 {{> DiffBox tutorialName="simple-todos" step="5.1"}}
 
-- 
2.13.6 (Apple Git-96)


From f09972a5c9df950d22d577547a8ab5209a0c931c Mon Sep 17 00:00:00 2001
From: Thibaut Selingue <thibaut.selingue@gmail.com>
Date: Thu, 16 Mar 2017 10:13:35 +0100
Subject: [PATCH 136/164] Fix a typo in step01 (#66)

intial -> initial
---
 content/shared/step01.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/shared/step01.md b/content/shared/step01.md
index e9cc337..c615a4c 100644
--- a/content/shared/step01.md
+++ b/content/shared/step01.md
@@ -36,7 +36,7 @@ You can play around with this default app for a bit before we continue. For exam
 
 ### ES2015 JavaScript features
 
-If you haven't tried next-generation JavaScript features yet, some of the syntax in the intial app code, and throughout this tutorial, might look weird. This is because Meteor ships by default with support for many features of ES2015, the next version of JavaScript. Some of these features include:
+If you haven't tried next-generation JavaScript features yet, some of the syntax in the initial app code, and throughout this tutorial, might look weird. This is because Meteor ships by default with support for many features of ES2015, the next version of JavaScript. Some of these features include:
 
 1. Arrow functions: `(arg) => {return result;}`
 2. Shorthand for methods: `render() { ... }`
-- 
2.13.6 (Apple Git-96)


From 329c2bf54215c33a8f858ef9bf868cc07ec61679 Mon Sep 17 00:00:00 2001
From: Lazaridis <ilias@lazaridis.com>
Date: Thu, 16 Mar 2017 11:27:16 +0200
Subject: [PATCH 137/164] Changed .js to .jsx (#114)

closes #75
---
 content/react/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/react/step02.md b/content/react/step02.md
index 41adab1..f4e3f45 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -29,7 +29,7 @@ We just added three things to our app:
 
 1. An `App` React component
 2. A `Task` React component
-3. Some initialization code (in our `client/main.js` client JavaScript entrypoint), in a `Meteor.startup` block, which knows how to call code when the page is loaded and ready. This code loads the other components and renders them into the `#render-target` html element.
+3. Some initialization code (in our `client/main.jsx` client JavaScript entrypoint), in a `Meteor.startup` block, which knows how to call code when the page is loaded and ready. This code loads the other components and renders them into the `#render-target` html element.
 
 You can read more about how imports work and how to structure your code in the [Application Structure article](http://guide.meteor.com/structure.html) of the Meteor Guide.
 
-- 
2.13.6 (Apple Git-96)


From 5df7fc97dfe59606f1d63bd84d35dc18fe1f315c Mon Sep 17 00:00:00 2001
From: Adarsh <akdev123@users.noreply.github.com>
Date: Thu, 16 Mar 2017 07:40:13 -0500
Subject: [PATCH 138/164] Added more information regarding imports folder (#86)

Added line "Create a new directory with the name `imports` inside `simple-todos` folder." on line #10 to make sure the user knows about creating a new directory before moving to creating some new files inside the `imports/` directory.
---
 content/blaze/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index 7373c6c..db92cc7 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -7,7 +7,7 @@ First, let's remove the body from our HTML entry point (leaving just the `<head>
 
 {{> DiffBox tutorialName="simple-todos" step="2.1"}}
 
-Then we create some new files in the `imports/` directory:
+Create a new directory with the name `imports` inside `simple-todos` folder.Then we create some new files in the `imports/` directory:
 
 {{> DiffBox tutorialName="simple-todos" step="2.2"}}
 
-- 
2.13.6 (Apple Git-96)


From 64b2dbfbceb94f8879ebfdec75984357208c4c80 Mon Sep 17 00:00:00 2001
From: lucfranken <lucfranken@tentoday.com>
Date: Thu, 16 Mar 2017 13:50:24 +0100
Subject: [PATCH 139/164] Explain the CSS listing on the templates page (#83)

Now there is just a blob of CSS code without any text explaining why it is there. Added a short sentence to explain why it is there and why you should copy-paste it.
---
 content/blaze/step02.md | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index db92cc7..07bd46b 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -46,6 +46,10 @@ You can pass data into templates from your JavaScript code by defining _helpers_
 
 In the next step, we will see how we can use helpers to make our templates display dynamic data from a database collection.
 
+### Styling with CSS
+
+To have a better experience while following the tutorial we suggest you copy-paste the following CSS code into your app:
+
 {{> DiffBox tutorialName="simple-todos" step="2.5"}}
 
 {{/template}}
-- 
2.13.6 (Apple Git-96)


From c30af12977860744651aba0fb5e29fff47838e8a Mon Sep 17 00:00:00 2001
From: Mark Tinsley <info@marknjen.com>
Date: Tue, 25 Oct 2016 21:15:32 -0500
Subject: [PATCH 140/164] Wording suggestion.

I had trouble with this sentence. Thought I'd propose a slightly different approach.
---
 content/shared/explanations.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/shared/explanations.md b/content/shared/explanations.md
index dcf3020..b0785eb 100644
--- a/content/shared/explanations.md
+++ b/content/shared/explanations.md
@@ -10,7 +10,7 @@ To create the collection, we define a new `tasks` module that creates a Mongo co
 
 {{> DiffBox tutorialName=tutorialName step="3.1"}}
 
-Notice that we place this file in a new `imports/api` directory. This is a sensible place to store the API of your application---for now the collections that we'll use, and later the Publications that read from them and the Methods that write to them. You can read more about how to structure your code in the [Application Structure article](http://guide.meteor.com/structure.html) of the Meteor Guide.
+Notice that we place this file in a new `imports/api` directory. This is a sensible place to store the API-related files for your application. For now, we will put our collections here. Later we will add the Publications that read from them and the Methods that write to them. You can read more about how to structure your code in the [Application Structure article](http://guide.meteor.com/structure.html) of the Meteor Guide.
 
 We need to import that module on the server (this creates the MongoDB collection and sets up the plumbing to get the data to the client):
 
-- 
2.13.6 (Apple Git-96)


From 5207c57d0c8cc25d48fea8187f3f663dd9330e7d Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Thu, 16 Mar 2017 14:58:41 +0200
Subject: [PATCH 141/164] Tweak wording for the "API" directory explanation.

---
 content/shared/explanations.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/shared/explanations.md b/content/shared/explanations.md
index b0785eb..2c01aeb 100644
--- a/content/shared/explanations.md
+++ b/content/shared/explanations.md
@@ -10,7 +10,7 @@ To create the collection, we define a new `tasks` module that creates a Mongo co
 
 {{> DiffBox tutorialName=tutorialName step="3.1"}}
 
-Notice that we place this file in a new `imports/api` directory. This is a sensible place to store the API-related files for your application. For now, we will put our collections here. Later we will add the Publications that read from them and the Methods that write to them. You can read more about how to structure your code in the [Application Structure article](http://guide.meteor.com/structure.html) of the Meteor Guide.
+Notice that we place this file in a new `imports/api` directory. This is a sensible place to store API-related files for the application. We will start by putting "collections" here and later we will add "publications" that read from them and "methods" that write to them. You can read more about how to structure your code in the [Application Structure article](http://guide.meteor.com/structure.html) of the Meteor Guide.
 
 We need to import that module on the server (this creates the MongoDB collection and sets up the plumbing to get the data to the client):
 
-- 
2.13.6 (Apple Git-96)


From d16289494a0c4f32e6ede837a0f8860f57451e92 Mon Sep 17 00:00:00 2001
From: "Jesus B. Nana (Onin)" <kurapikats@yahoo.com>
Date: Thu, 16 Mar 2017 21:17:37 +0800
Subject: [PATCH 142/164] Fix method name (#104)

Fix typo on method name from task.remove to tasks.remove
---
 content/shared/step11.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/shared/step11.md b/content/shared/step11.md
index 13a3fe3..d1260f0 100644
--- a/content/shared/step11.md
+++ b/content/shared/step11.md
@@ -30,7 +30,7 @@ In any test we need to ensure the database is in the state we expect before begi
 
 Here we create a single task that's associated with a random `userId` that'll be different for each test run. 
 
-Now we can write the test to call the `task.remove` method "as" that user and verify the task is deleted:
+Now we can write the test to call the `tasks.remove` method "as" that user and verify the task is deleted:
 
 {{> DiffBox tutorialName="simple-todos" step="11.4"}}
 
-- 
2.13.6 (Apple Git-96)


From 3145e105df20543c578a1ef4800664597f02d1c3 Mon Sep 17 00:00:00 2001
From: Mark Tinsley <info@marknjen.com>
Date: Thu, 16 Mar 2017 09:06:07 -0500
Subject: [PATCH 143/164] Removed NPM Install (#89)

Don't need it anymore?
---
 content/shared/step01.md | 1 -
 1 file changed, 1 deletion(-)

diff --git a/content/shared/step01.md b/content/shared/step01.md
index c615a4c..2bb7c65 100644
--- a/content/shared/step01.md
+++ b/content/shared/step01.md
@@ -26,7 +26,6 @@ To run the newly created app:
 
 ```bash
 cd simple-todos
-meteor npm install
 meteor
 ```
 
-- 
2.13.6 (Apple Git-96)


From 3d9c23d81129645ddff30c0e9bbb4bfe409048b7 Mon Sep 17 00:00:00 2001
From: Will <whlokes@gmail.com>
Date: Thu, 16 Mar 2017 10:06:53 -0400
Subject: [PATCH 144/164] Update step04.md (#95)

The sentence on line 37 read: "The function will return a the result of calling the `find` function...", removing the unnecessary "a" before "the result".
---
 content/angular/step04.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/angular/step04.md b/content/angular/step04.md
index 670f52a..83d9a81 100644
--- a/content/angular/step04.md
+++ b/content/angular/step04.md
@@ -34,7 +34,7 @@ We can solve this by sorting the results using the `createdAt` field that is aut
 Until now you probably used Angular sort filter to do so. you can still use that here, but we are going to use a different method because it is better for real world use cases.
 
 Replace the `Tasks` collection variable with a function inside our `tasks` helper.
-The function will return a the result of calling the `find` function with the `sort` parameter on our `Tasks` collection, like that:
+The function will return the result of calling the `find` function with the `sort` parameter on our `Tasks` collection, like that:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="4.3"}}
 
-- 
2.13.6 (Apple Git-96)


From 63688f5f5b66967456677bb8092b52387eb09067 Mon Sep 17 00:00:00 2001
From: Lazaridis <ilias@lazaridis.com>
Date: Thu, 16 Mar 2017 16:18:42 +0200
Subject: [PATCH 145/164] Removed the mentioned "Minimongo" (#113)

A newcomer does not necessarily know "Minimongo", see #8
---
 content/react/step07.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/react/step07.md b/content/react/step07.md
index 9610b2b..6a962b0 100644
--- a/content/react/step07.md
+++ b/content/react/step07.md
@@ -24,7 +24,7 @@ Now if you check the box, the task list will only show tasks that haven't been c
 
 ### One more feature: Showing a count of incomplete tasks
 
-Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to fetch a count in our data container and add a line to our `render` method. Since we already have the data in the client-side Minimongo collection, adding this extra count doesn't involve asking the server for anything.
+Now that we have written a query that filters out completed tasks, we can use the same query to display a count of the tasks that haven't been checked off. To do this we need to fetch a count in our data container and add a line to our `render` method. Since we already have the data in the client-side collection, adding this extra count doesn't involve asking the server for anything.
 
 {{> DiffBox step="7.5" tutorialName="simple-todos-react"}}
 
-- 
2.13.6 (Apple Git-96)


From fe899c8a18500bdfa17346b2c9ae78ef4a50444e Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Thu, 16 Mar 2017 18:24:23 +0200
Subject: [PATCH 146/164] Clarify that we are removing the collection to avoid
 confusion.

Closes meteor/tutorials#79
---
 content/blaze/step09.md | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/content/blaze/step09.md b/content/blaze/step09.md
index 55c1c6e..cce2f89 100644
--- a/content/blaze/step09.md
+++ b/content/blaze/step09.md
@@ -24,6 +24,8 @@ Now that we have defined our methods, we need to update the places we were opera
 
 {{> DiffBox tutorialName="simple-todos" step="9.3"}}
 
+We do the same on this file, but also remove the `import` of the `Tasks` collection since it's no longer necessary:
+
 {{> DiffBox tutorialName="simple-todos" step="9.4"}}
 
 Now all of our inputs and buttons will start working again. What did we gain from all of this work?
-- 
2.13.6 (Apple Git-96)


From 6b67b80edefa1bbd9e7ccaeab296140141962109 Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Thu, 16 Mar 2017 18:34:40 +0200
Subject: [PATCH 147/164] Add clarification about the importance of `meteor
 npm`. (#116)

* Add clarification about the importance of `meteor npm`.

At an early step in the tutorial, failure to explain the distinction
between `meteor npm` and `npm` could be confusing and this is a
perfect opportunity to ensure that developers understand its importance
over the lifetime of their Meteor development.

Helps with meteor/tutorials#68.

* Move `meteor npm install` clarification inside Angular & React steps.

As use of `meteor npm install` is not necessary in the Blaze tutorial,
and the `meteor npm install` step is no longer necessary after a
`meteor create`.
---
 content/angular/step02.md | 2 ++
 content/react/step02.md   | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/content/angular/step02.md b/content/angular/step02.md
index e3351ab..db0f9a8 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -15,6 +15,8 @@ To start working with [angular-meteor](http://angular-meteor.com/), let's add so
 
     meteor npm install --save angular angular-meteor
 
+> Note: `meteor npm` supports the same features as `npm`, though the difference can be important.  Consult the [`meteor npm` documentation](https://docs.meteor.com/commandline.html#meteornpm) for more information.
+
 To start working on our todos list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.2"}}
diff --git a/content/react/step02.md b/content/react/step02.md
index f0d143a..1de5467 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -9,6 +9,8 @@ Open a new terminal in the same directory as your running app, and type:
 meteor npm install --save react react-dom
 ```
 
+> Note: `meteor npm` supports the same features as `npm`, though the difference can be important.  Consult the [`meteor npm` documentation](https://docs.meteor.com/commandline.html#meteornpm) for more information.
+
 ### Replace the starter code
 
 To get started, let's replace the code of the default starter app. Then we'll talk about what it does.
-- 
2.13.6 (Apple Git-96)


From cf04d7f8fb1dc732793dd49440cd3c87a277f99e Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Thu, 16 Mar 2017 18:44:50 +0200
Subject: [PATCH 148/164] Clarify that the way the app "should" look is
 actually just a wireframe.

It's not meant to look exactly the same, just that it be structured in
a way similar to the Markdown representation we're about to show.

Fixes meteor/tutorials#32
---
 content/react/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/react/step02.md b/content/react/step02.md
index 1de5467..b6468b6 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -39,7 +39,7 @@ Later in the tutorial, we will refer to these components when adding or changing
 
 ### Check the result
 
-In our browser, the app should now look like an unstyled version of this:
+In our browser, the app should **roughly** look like the following (though much less pretty):
 
 > #### Todo List
 > - This is task 1
-- 
2.13.6 (Apple Git-96)


From 7c79676fc320d065ddc7f7341b3d30e659781f5e Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Mon, 20 Mar 2017 13:43:20 +0200
Subject: [PATCH 149/164] Instruct creation of the `imports` directory and
 clarify its purpose. (#117)

* Instruct creation of the `imports` directory and clarify its purpose.

Previously, we failed to explicitly instruct the developer to create the
`imports` directory on the Blaze, Angular and React tutorials.  While
the path was implied in the top-right corner of the code-snippet boxes,
we should be more clear about this and we can also take the opportunity
to emphasize the importance and significance of the directory.

We do mention a place to find more information about how imports work,
but not until a later step.  This information was also excluded from the
Angular tutorial, so this also adds the same blurb for that.

Follows-up on meteor/tutorials#86.

* Tweaks!

* [SQUASHME] Samely as previous commit
---
 content/angular/step02.md | 10 ++++++++--
 content/blaze/step02.md   |  4 ++--
 content/react/step02.md   |  6 +++++-
 3 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/content/angular/step02.md b/content/angular/step02.md
index db0f9a8..12a92a5 100644
--- a/content/angular/step02.md
+++ b/content/angular/step02.md
@@ -23,11 +23,15 @@ To start working on our todos list app, let's replace the code of the default st
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.3"}}
 
-Let's create a template for todosList component.
+Now we need to create a new directory called `imports`, a specially-named directory which will behave differently than other directories in the project.  Files outside the `imports` directory will be loaded automatically when the Meteor server starts, while files inside the `imports` directory will only load when an `import` statement is used to load them.
+
+After creating the `imports` directory, we will create two new files inside it.
+
+A template for the todosList component:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.4"}}
 
-Add some functionality:
+And some functionality:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.5"}}
 
@@ -41,6 +45,8 @@ Then add module to the application:
 
 {{> DiffBox tutorialName="simple-todos-angular" step="2.7"}}
 
+You can read more about how imports work and how to structure your code in the [Application Structure article](http://guide.meteor.com/structure.html) of the Meteor Guide.
+
 In our browser, the app should look pretty much like this:
 
 > #### Todo List
diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index 07bd46b..5028dfe 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -3,7 +3,7 @@
 
 To start working on our todo list app, let's replace the code of the default starter app with the code below. Then we'll talk about what it does.
 
-First, let's remove the body from our HTML entry point (leaving just the `<head>` tag):
+First, let's remove the body from our HTML entry-point (leaving just the `<head>` tag):
 
 {{> DiffBox tutorialName="simple-todos" step="2.1"}}
 
@@ -13,7 +13,7 @@ Create a new directory with the name `imports` inside `simple-todos` folder.Then
 
 {{> DiffBox tutorialName="simple-todos" step="2.3"}}
 
-Files inside `imports/` only load if they are imported, so we'll need to import `imports/ui/body.js` from our frontend JS entrypoint (`client/main.js`---note that we remove the rest of the code from this file):
+Inside our front-end JavaScript entry-point file, `client/main.js`, we'll _remove_ the rest of the code and import `imports/ui/body.js`:
 
 {{> DiffBox tutorialName="simple-todos" step="2.4"}}
 
diff --git a/content/react/step02.md b/content/react/step02.md
index 1de5467..7bad674 100644
--- a/content/react/step02.md
+++ b/content/react/step02.md
@@ -19,10 +19,14 @@ First, replace the content of the initial HTML file:
 
 {{> DiffBox tutorialName="simple-todos-react" step="2.2"}}
 
-Second, **delete `client/main.js`** and create three new files:
+Second, **delete `client/main.js`** and create this file:
 
 {{> DiffBox tutorialName="simple-todos-react" step="2.3"}}
 
+Now we need to create a new directory called `imports`, a specially-named directory which will behave differently than other directories in the project.  Files outside the `imports` directory will be loaded automatically when the Meteor server starts, while files inside the `imports` directory will only load when an `import` statement is used to load them.
+
+After creating the `imports` directory, we will create two new files inside it:
+
 {{> DiffBox tutorialName="simple-todos-react" step="2.4"}}
 
 {{> DiffBox tutorialName="simple-todos-react" step="2.5"}}
-- 
2.13.6 (Apple Git-96)


From 9a9c329336afcbaa2073ab4a38456b024de76057 Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Mon, 20 Mar 2017 14:06:31 +0200
Subject: [PATCH 150/164] Shorten the ES6 warning to be less intimidating.

Currently the ECMAScript warning was more than half of the initial
tutorial landing page.  We should probably warn them about the fact that
they may encounter foreign syntax without sounding like it's something
to be afraid of.
---
 content/shared/step01.md | 17 ++---------------
 1 file changed, 2 insertions(+), 15 deletions(-)

diff --git a/content/shared/step01.md b/content/shared/step01.md
index 2bb7c65..5642b5e 100644
--- a/content/shared/step01.md
+++ b/content/shared/step01.md
@@ -33,21 +33,8 @@ Open your web browser and go to `http://localhost:3000` to see the app running.
 
 You can play around with this default app for a bit before we continue. For example, try editing the text in `<h1>` inside `client/main.html` using your favorite text editor. When you save the file, the page in your browser will automatically update with the new content. We call this "hot code push".
 
-### ES2015 JavaScript features
-
-If you haven't tried next-generation JavaScript features yet, some of the syntax in the initial app code, and throughout this tutorial, might look weird. This is because Meteor ships by default with support for many features of ES2015, the next version of JavaScript. Some of these features include:
-
-1. Arrow functions: `(arg) => {return result;}`
-2. Shorthand for methods: `render() { ... }`
-3. `const` and `let` instead of `var`
-
-Read about the features that Meteor supports in the [ecmascript docs](https://docs.meteor.com/#/full/ecmascript). For more information about ECMAScript 2015, see some of the articles below:
-
-* [Luke Hoban's "ES6 features"](http://git.io/es6features)
-
-* [Kyle Simpson's "You don't know JS: ES6 and beyond"](https://github.com/getify/You-Dont-Know-JS/tree/master/es6%20%26%20beyond)
-
-* [Nikolas C. Zakas "Understanding ECMAScript 6"](https://github.com/nzakas/understandinges6)
+> ### Newer JavaScript syntax
+> Meteor supports many newer JavaScript features, such as those in ECMAScript 2015 (ES6). If you haven't tried these next-generation JavaScript features yet, we recommend taking a look at [Luke Hoban's "ES6 features"](http://git.io/es6features) to familiarize yourself with the newer syntax.
 
 Now that you have some experience editing the files in your Meteor app, let's start working on a simple todo list application. If you find a bug or error in the tutorial, please file an issue or submit a pull request [on GitHub](https://github.com/meteor/tutorials).
 {{/template}}
-- 
2.13.6 (Apple Git-96)


From 15c73f17a1f22182101bf3ced7288b237dbe7e9c Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Mon, 20 Mar 2017 15:07:34 +0200
Subject: [PATCH 151/164] Explain that you should only expect a basic
 understanding.

Closes meteor/tutorials#109.
---
 content/shared/step01.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/shared/step01.md b/content/shared/step01.md
index 5642b5e..2b9e613 100644
--- a/content/shared/step01.md
+++ b/content/shared/step01.md
@@ -2,7 +2,7 @@
 
 # Creating your first app
 
-In this tutorial, we are going to create a simple app to manage a 'to do' list and collaborate with others on those tasks.
+In this tutorial, we are going to create a simple app to manage a 'to do' list and collaborate with others on those tasks.  By the end, you should have a basic understanding of Meteor and its project structure.
 
 To create the app, open your terminal and type:
 
-- 
2.13.6 (Apple Git-96)


From 724b514db74fdc9e1fb4fc906f1b636192399656 Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Tue, 21 Mar 2017 11:22:35 +0200
Subject: [PATCH 152/164] Bump versions of `mdg:tutorial-*` dependency
 packages.

---
 package.js | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/package.js b/package.js
index 9fcb712..7da1b61 100644
--- a/package.js
+++ b/package.js
@@ -15,8 +15,8 @@ Package.onUse(function (api) {
     'reactive-var',
     'less',
     'ecmascript',
-    'mdg:tutorial-step-diff-compiler@0.1.0',
-    'mdg:tutorial-diff-box@0.3.0',
+    'mdg:tutorial-step-diff-compiler@0.2.2',
+    'mdg:tutorial-diff-box@0.3.4',
     'mdg:tutorial-registry@0.1.1'
   ]);
 
-- 
2.13.6 (Apple Git-96)


From ef11924a22d30d5c03eca779023a636f49e8c8a7 Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Tue, 21 Mar 2017 11:23:03 +0200
Subject: [PATCH 153/164] Set `versionsFrom` to a non-`rc.*` version of Meteor.

---
 package.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/package.js b/package.js
index 7da1b61..8dac71f 100644
--- a/package.js
+++ b/package.js
@@ -5,7 +5,7 @@ Package.describe({
 });
 
 Package.onUse(function (api) {
-  api.versionsFrom('1.2-rc.14');
+  api.versionsFrom('1.2.1');
   api.use([
     'simple:markdown-templating@1.2.7',
     'templating',
-- 
2.13.6 (Apple Git-96)


From 1d4276a8124e2628fe83af7478aa2670060a0472 Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Fri, 24 Mar 2017 00:07:38 +0200
Subject: [PATCH 154/164] Disclaim that iOS development needs the latest Xcode.

While OS X 10.7 is fine for Meteor itself, iOS development (via Cordova)
almost always requires a recent, or the latest version of Xcode.

Xcode itself generally has the requirement of the most recent version of
OS X/macOS so it may be that a developer needs the most recent OS X
version in order to do iOS development, but the rest of Meteor should
work just fine.

Helps with meteor/meteor#7210.
---
 content/step00.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/step00.html b/content/step00.html
index d1868b7..5d9b55a 100644
--- a/content/step00.html
+++ b/content/step00.html
@@ -7,7 +7,7 @@
 {{#markdown}}
 
   Meteor supports **OS X, Windows, and Linux**, and is simple to install. The command line installer supports Mac OS X
-  10.7 (Lion) and above, and Linux on x86 and x86_64 architectures. The Windows installer supports Windows 7, Windows 8.1, Windows 10, Windows Server 2008, and Windows Server 2012.
+  10.7 (Lion) and above, and Linux on x86 and x86_64 architectures. The Windows installer supports Windows 7, Windows 8.1, Windows 10, Windows Server 2008, and Windows Server 2012. iOS development requires the latest Xcode.
 
 ### On OS X or Linux?
 
-- 
2.13.6 (Apple Git-96)


From 6bc26717c58168c435a30f0a7ba2f4ff66921e3f Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Fri, 24 Mar 2017 17:53:13 +0200
Subject: [PATCH 155/164] Update `mdg:tutorial-*` packages to 0.4.1.

---
 package.js | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/package.js b/package.js
index 8dac71f..b6b0d42 100644
--- a/package.js
+++ b/package.js
@@ -10,14 +10,14 @@ Package.onUse(function (api) {
     'simple:markdown-templating@1.2.7',
     'templating',
     'underscore',
-    'jsx@0.1.1',
+    'jsx@0.2.3',
     'simple:highlight.js@1.0.9',
     'reactive-var',
     'less',
     'ecmascript',
-    'mdg:tutorial-step-diff-compiler@0.2.2',
-    'mdg:tutorial-diff-box@0.3.4',
-    'mdg:tutorial-registry@0.1.1'
+    'mdg:tutorial-step-diff-compiler@0.4.1',
+    'mdg:tutorial-diff-box@0.4.1',
+    'mdg:tutorial-registry@0.4.1'
   ]);
 
   api.addFiles([
-- 
2.13.6 (Apple Git-96)


From b1d02667fa16e6d95526dfaf73cee34d90a99116 Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Wed, 26 Apr 2017 16:43:42 -0700
Subject: [PATCH 156/164] Remove npm-container and versionsFrom pinning.

---
 .meteor/packages | 2 --
 package.js       | 3 +--
 2 files changed, 1 insertion(+), 4 deletions(-)
 delete mode 100644 .meteor/packages

diff --git a/.meteor/packages b/.meteor/packages
deleted file mode 100644
index 21c1888..0000000
--- a/.meteor/packages
+++ /dev/null
@@ -1,2 +0,0 @@
-
-npm-container
\ No newline at end of file
diff --git a/package.js b/package.js
index b6b0d42..1a8162c 100644
--- a/package.js
+++ b/package.js
@@ -5,12 +5,11 @@ Package.describe({
 });
 
 Package.onUse(function (api) {
-  api.versionsFrom('1.2.1');
   api.use([
     'simple:markdown-templating@1.2.7',
     'templating',
     'underscore',
-    'jsx@0.2.3',
+    'jsx',
     'simple:highlight.js@1.0.9',
     'reactive-var',
     'less',
-- 
2.13.6 (Apple Git-96)


From cb0e69da14d77a99bf0c38436f2a1597e24576cb Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Thu, 4 May 2017 08:55:05 +0300
Subject: [PATCH 157/164] Bump simple:markdown-templating constraint to v2.0.1.

---
 package.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/package.js b/package.js
index 1a8162c..6f66b24 100644
--- a/package.js
+++ b/package.js
@@ -6,7 +6,7 @@ Package.describe({
 
 Package.onUse(function (api) {
   api.use([
-    'simple:markdown-templating@1.2.7',
+    'simple:markdown-templating@2.0.1',
     'templating',
     'underscore',
     'jsx',
-- 
2.13.6 (Apple Git-96)


From bb308113c5d05d07fad11f31be00a7ea5cbd4bf2 Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Fri, 5 May 2017 13:16:08 +0300
Subject: [PATCH 158/164] Update to use v0.4.2 of the "tutorial-tools"
 packages.

---
 package.js | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/package.js b/package.js
index 6f66b24..a7445a5 100644
--- a/package.js
+++ b/package.js
@@ -14,9 +14,9 @@ Package.onUse(function (api) {
     'reactive-var',
     'less',
     'ecmascript',
-    'mdg:tutorial-step-diff-compiler@0.4.1',
-    'mdg:tutorial-diff-box@0.4.1',
-    'mdg:tutorial-registry@0.4.1'
+    'mdg:tutorial-step-diff-compiler@0.4.2',
+    'mdg:tutorial-diff-box@0.4.2',
+    'mdg:tutorial-registry@0.4.2'
   ]);
 
   api.addFiles([
-- 
2.13.6 (Apple Git-96)


From 3ced258b3c97f990016f03340d3ff2cb8201ea15 Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Fri, 5 May 2017 14:41:22 +0300
Subject: [PATCH 159/164] Bump to use simple:markdown-templating@2.0.3.

Which fixes a typo that I noticed, but haven't encountered in try/catch.
---
 package.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/package.js b/package.js
index a7445a5..ba2ba8d 100644
--- a/package.js
+++ b/package.js
@@ -6,7 +6,7 @@ Package.describe({
 
 Package.onUse(function (api) {
   api.use([
-    'simple:markdown-templating@2.0.1',
+    'simple:markdown-templating@2.0.3',
     'templating',
     'underscore',
     'jsx',
-- 
2.13.6 (Apple Git-96)


From 499d8f94912aaa8b6f7172b860ada2e52a7b7ff5 Mon Sep 17 00:00:00 2001
From: Jesse Rosenberger <git@jro.cc>
Date: Fri, 5 May 2017 15:03:11 +0300
Subject: [PATCH 160/164] Update tutorial-tools packages to v0.4.3 versions.

---
 package.js | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/package.js b/package.js
index ba2ba8d..36a0ee0 100644
--- a/package.js
+++ b/package.js
@@ -15,8 +15,8 @@ Package.onUse(function (api) {
     'less',
     'ecmascript',
     'mdg:tutorial-step-diff-compiler@0.4.2',
-    'mdg:tutorial-diff-box@0.4.2',
-    'mdg:tutorial-registry@0.4.2'
+    'mdg:tutorial-diff-box@0.4.3',
+    'mdg:tutorial-registry@0.4.3'
   ]);
 
   api.addFiles([
-- 
2.13.6 (Apple Git-96)


From c5dda3d1e4bbdd1f10e5ddfd8ba142e103625692 Mon Sep 17 00:00:00 2001
From: MattMatrix <themattcar@gmail.com>
Date: Fri, 16 Jun 2017 07:11:17 -0500
Subject: [PATCH 161/164] [blaze][step02] Add missing period. (#133)

Added space after period in "folder.Then"
---
 content/blaze/step02.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/blaze/step02.md b/content/blaze/step02.md
index 5028dfe..5454006 100644
--- a/content/blaze/step02.md
+++ b/content/blaze/step02.md
@@ -7,7 +7,7 @@ First, let's remove the body from our HTML entry-point (leaving just the `<head>
 
 {{> DiffBox tutorialName="simple-todos" step="2.1"}}
 
-Create a new directory with the name `imports` inside `simple-todos` folder.Then we create some new files in the `imports/` directory:
+Create a new directory with the name `imports` inside `simple-todos` folder. Then we create some new files in the `imports/` directory:
 
 {{> DiffBox tutorialName="simple-todos" step="2.2"}}
 
-- 
2.13.6 (Apple Git-96)


From 7228391ef959b9195775a1b97b2fd306ba90b77c Mon Sep 17 00:00:00 2001
From: hongshaoyang <hongsy2006@gmail.com>
Date: Fri, 16 Jun 2017 21:29:30 +0800
Subject: [PATCH 162/164] Clarify step 5.2 of step05.md to be more obvious
 (#132)

* Update step05.md

* Tweaks to 5.2 text for todos template removal.

Additional clarification of the 5.2 step which is necessary (removing the existing `todos` template), since this is obscured by the fact that the 5.2 GitHub commit (https://github.com/meteor/simple-todos/commit/acb70c80fb362a856eb7254d5b7dbe8492e2dc83) is not included since the `DiffBox` doesn't support showing _only_ removed lines in a clean fashion.
---
 content/blaze/step05.md | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/content/blaze/step05.md b/content/blaze/step05.md
index 7eeb82c..1a06934 100644
--- a/content/blaze/step05.md
+++ b/content/blaze/step05.md
@@ -8,9 +8,11 @@ Let's work on our `task` template---starting by moving it to its own file, with
 
 {{> DiffBox tutorialName="simple-todos" step="5.1"}}
 
-We also need to remove the old definition of the `task` template from the `imports/ui/body.html` file.
+**5.2** Remove the previous `task` template
 
-We have added UI elements, but they don't do anything yet. We should add some event handlers:
+Since we've added a new `task` template here, we need to remove the old `task` template we had before.  Open the `imports/ui/body.html` file and remove the entire `<template name="task">...</template>` section from the end.
+
+Now we've added UI elements, but they don't do anything yet! We should add some event handlers:
 
 {{> DiffBox tutorialName="simple-todos" step="5.3"}}
 
-- 
2.13.6 (Apple Git-96)


From 254dcdadb8cfb3d183d0e180969746c55ef47772 Mon Sep 17 00:00:00 2001
From: hongshaoyang <hongsy2006@gmail.com>
Date: Tue, 17 Oct 2017 13:10:04 +0100
Subject: [PATCH 163/164] Edited link to angular-meteor tutorial (#135)

* Edited link to angular-meteor tutorial

Previous link to angular-meteor.com tutorial is outdated - tutorial has been replaced and I've replaced the link accordingly.

* Update step04.md
---
 content/angular/step04.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/content/angular/step04.md b/content/angular/step04.md
index 83d9a81..32c7300 100644
--- a/content/angular/step04.md
+++ b/content/angular/step04.md
@@ -38,7 +38,7 @@ The function will return the result of calling the `find` function with the `sor
 
 {{> DiffBox tutorialName="simple-todos-angular" step="4.3"}}
 
-To better understand the difference between using the sort filter and the collection options, check out the advanced tutorial about [search, sort and pagination](http://angular-meteor.com/tutorial/step_12).
+To better understand the difference between using the sort filter and the collection options, check out the advanced tutorial about [search, sort and pagination](https://angular-meteor.com/tutorials/socially/angular1/search-sort-pagination-and-reactive-vars).
 
 In the next step, we'll add some very important todo list functions: checking off and deleting tasks.
 {{/template}}
-- 
2.13.6 (Apple Git-96)


From b20f3c4424c8e64f3f1aebc8e3706fb0811ac6b5 Mon Sep 17 00:00:00 2001
From: Lucas Pugnali <pugnali.lucas@gmail.com>
Date: Wed, 13 Sep 2017 00:29:47 -0300
Subject: [PATCH 164/164] getReactively link update

---
 content/angular/step07.md | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/content/angular/step07.md b/content/angular/step07.md
index 2771534..20158cd 100644
--- a/content/angular/step07.md
+++ b/content/angular/step07.md
@@ -40,12 +40,12 @@ As you can see, we used `getReactively()` method. You can read more about it in
 
 ### Connecting Angular bindings to Meteor's reactivity
 
-To make Meteor understand Angular bindings and the other way around, we use [$scope.getReactively](http://angular-meteor.com/api/getReactively) function that turns Angular
+To make Meteor understand Angular bindings and the other way around, we use [$scope.getReactively](https://angular-meteor.com/api/angular-meteor/1.3.11/get-reactively) function that turns Angular
 scope variables into [Meteor reactive variables](http://docs.meteor.com/#/full/reactivevar_pkg).
 
 Now if you check the box, the task list will only show tasks that haven't been completed.
 
-> To learn more about the [getReactively](http://angular-meteor.com/api/getReactively) feature
+> To learn more about the [getReactively](https://angular-meteor.com/api/angular-meteor/1.3.11/get-reactively) feature
 > you can try the [advanced tutorial](http://angular-meteor.com/tutorial/step_12).
 
 ### One more feature: Showing a count of incomplete tasks
-- 
2.13.6 (Apple Git-96)

