From 1d7400a7bd84a64ec12ec6700f8bec8e31df720b Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:00:51 -0700
Subject: [PATCH 01/49] Step 1: Run `meteor create`

---
 .gitignore                  |   1 +
 .meteor/.finished-upgraders |  17 ++
 .meteor/.gitignore          |   1 +
 .meteor/.id                 |   7 +
 .meteor/packages            |  21 ++
 .meteor/platforms           |   2 +
 .meteor/release             |   1 +
 .meteor/versions            |  75 +++++
 client/main.css             |   1 +
 client/main.html            |  25 ++
 client/main.js              |  22 ++
 package-lock.json           | 683 ++++++++++++++++++++++++++++++++++++++++++++
 package.json                |  11 +
 server/main.js              |   5 +
 14 files changed, 872 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 .meteor/.finished-upgraders
 create mode 100644 .meteor/.gitignore
 create mode 100644 .meteor/.id
 create mode 100644 .meteor/packages
 create mode 100644 .meteor/platforms
 create mode 100644 .meteor/release
 create mode 100644 .meteor/versions
 create mode 100644 client/main.css
 create mode 100644 client/main.html
 create mode 100644 client/main.js
 create mode 100644 package-lock.json
 create mode 100644 package.json
 create mode 100644 server/main.js

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..c2658d7
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+node_modules/
diff --git a/.meteor/.finished-upgraders b/.meteor/.finished-upgraders
new file mode 100644
index 0000000..910574c
--- /dev/null
+++ b/.meteor/.finished-upgraders
@@ -0,0 +1,17 @@
+# This file contains information which helps Meteor properly upgrade your
+# app when you run 'meteor update'. You should check it into version control
+# with your project.
+
+notices-for-0.9.0
+notices-for-0.9.1
+0.9.4-platform-file
+notices-for-facebook-graph-api-2
+1.2.0-standard-minifiers-package
+1.2.0-meteor-platform-split
+1.2.0-cordova-changes
+1.2.0-breaking-changes
+1.3.0-split-minifiers-package
+1.4.0-remove-old-dev-bundle-link
+1.4.1-add-shell-server-package
+1.4.3-split-account-service-packages
+1.5-add-dynamic-import-package
diff --git a/.meteor/.gitignore b/.meteor/.gitignore
new file mode 100644
index 0000000..4083037
--- /dev/null
+++ b/.meteor/.gitignore
@@ -0,0 +1 @@
+local
diff --git a/.meteor/.id b/.meteor/.id
new file mode 100644
index 0000000..a328bac
--- /dev/null
+++ b/.meteor/.id
@@ -0,0 +1,7 @@
+# This file contains a token that is unique to your project.
+# Check it into your repository along with the rest of this directory.
+# It can be used for purposes such as:
+#   - ensuring you don't accidentally deploy one app on top of another
+#   - providing package authors with aggregated statistics
+
+rh08ovagj8lq.jq1vas19qru
diff --git a/.meteor/packages b/.meteor/packages
new file mode 100644
index 0000000..ed4eec8
--- /dev/null
+++ b/.meteor/packages
@@ -0,0 +1,21 @@
+# Meteor packages used by this project, one per line.
+# Check this file (and the other files in this directory) into your repository.
+#
+# 'meteor add' and 'meteor remove' will edit this file for you,
+# but you can also edit it by hand.
+
+meteor-base@1.2.0             # Packages every Meteor app needs to have
+mobile-experience@1.0.5       # Packages for a great mobile UX
+mongo@1.3.0                   # The database Meteor supports right now
+blaze-html-templates@1.0.4 # Compile .html files into Meteor Blaze views
+reactive-var@1.0.11            # Reactive variable for tracker
+tracker@1.1.3                 # Meteor's client-side reactive programming library
+
+standard-minifier-css@1.3.5   # CSS minifier run for production mode
+standard-minifier-js@2.2.0    # JS minifier run for production mode
+es5-shim@4.6.15                # ECMAScript 5 compatibility for older browsers
+ecmascript@0.9.0              # Enable ECMAScript2015+ syntax in app code
+shell-server@0.3.0            # Server-side component of the `meteor shell` command
+
+autopublish@1.0.7             # Publish all data to the clients (for prototyping)
+insecure@1.0.7                # Allow all DB writes from clients (for prototyping)
diff --git a/.meteor/platforms b/.meteor/platforms
new file mode 100644
index 0000000..efeba1b
--- /dev/null
+++ b/.meteor/platforms
@@ -0,0 +1,2 @@
+server
+browser
diff --git a/.meteor/release b/.meteor/release
new file mode 100644
index 0000000..0fa8d22
--- /dev/null
+++ b/.meteor/release
@@ -0,0 +1 @@
+METEOR@1.6
diff --git a/.meteor/versions b/.meteor/versions
new file mode 100644
index 0000000..cc65391
--- /dev/null
+++ b/.meteor/versions
@@ -0,0 +1,75 @@
+allow-deny@1.1.0
+autopublish@1.0.7
+autoupdate@1.3.12
+babel-compiler@6.24.7
+babel-runtime@1.1.1
+base64@1.0.10
+binary-heap@1.0.10
+blaze@2.3.2
+blaze-html-templates@1.1.2
+blaze-tools@1.0.10
+boilerplate-generator@1.3.1
+caching-compiler@1.1.9
+caching-html-compiler@1.1.2
+callback-hook@1.0.10
+check@1.2.5
+ddp@1.4.0
+ddp-client@2.2.0
+ddp-common@1.3.0
+ddp-server@2.1.1
+deps@1.0.12
+diff-sequence@1.0.7
+dynamic-import@0.2.1
+ecmascript@0.9.0
+ecmascript-runtime@0.5.0
+ecmascript-runtime-client@0.5.0
+ecmascript-runtime-server@0.5.0
+ejson@1.1.0
+es5-shim@4.6.15
+geojson-utils@1.0.10
+hot-code-push@1.0.4
+html-tools@1.0.11
+htmljs@1.0.11
+http@1.3.0
+id-map@1.0.9
+insecure@1.0.7
+jquery@1.11.10
+launch-screen@1.1.1
+livedata@1.0.18
+logging@1.1.19
+meteor@1.8.2
+meteor-base@1.2.0
+minifier-css@1.2.16
+minifier-js@2.2.2
+minimongo@1.4.2
+mobile-experience@1.0.5
+mobile-status-bar@1.0.14
+modules@0.11.0
+modules-runtime@0.9.1
+mongo@1.3.0
+mongo-dev-server@1.1.0
+mongo-id@1.0.6
+npm-mongo@2.2.33
+observe-sequence@1.0.16
+ordered-dict@1.0.9
+promise@0.10.0
+random@1.0.10
+reactive-var@1.0.11
+reload@1.1.11
+retry@1.0.9
+routepolicy@1.0.12
+shell-server@0.3.0
+spacebars@1.0.15
+spacebars-compiler@1.1.3
+standard-minifier-css@1.3.5
+standard-minifier-js@2.2.2
+templating@1.3.2
+templating-compiler@1.3.3
+templating-runtime@1.3.2
+templating-tools@1.1.2
+tracker@1.1.3
+ui@1.0.13
+underscore@1.0.10
+url@1.1.0
+webapp@1.4.0
+webapp-hashing@1.0.9
diff --git a/client/main.css b/client/main.css
new file mode 100644
index 0000000..b6b4052
--- /dev/null
+++ b/client/main.css
@@ -0,0 +1 @@
+/* CSS declarations go here */
diff --git a/client/main.html b/client/main.html
new file mode 100644
index 0000000..15a7c7d
--- /dev/null
+++ b/client/main.html
@@ -0,0 +1,25 @@
+<head>
+  <title>simple-todos</title>
+</head>
+
+<body>
+  <h1>Welcome to Meteor!</h1>
+
+  {{> hello}}
+  {{> info}}
+</body>
+
+<template name="hello">
+  <button>Click Me</button>
+  <p>You've pressed the button {{counter}} times.</p>
+</template>
+
+<template name="info">
+  <h2>Learn Meteor!</h2>
+  <ul>
+    <li><a href="https://www.meteor.com/try" target="_blank">Do the Tutorial</a></li>
+    <li><a href="http://guide.meteor.com" target="_blank">Follow the Guide</a></li>
+    <li><a href="https://docs.meteor.com" target="_blank">Read the Docs</a></li>
+    <li><a href="https://forums.meteor.com" target="_blank">Discussions</a></li>
+  </ul>
+</template>
diff --git a/client/main.js b/client/main.js
new file mode 100644
index 0000000..ecb3282
--- /dev/null
+++ b/client/main.js
@@ -0,0 +1,22 @@
+import { Template } from 'meteor/templating';
+import { ReactiveVar } from 'meteor/reactive-var';
+
+import './main.html';
+
+Template.hello.onCreated(function helloOnCreated() {
+  // counter starts at 0
+  this.counter = new ReactiveVar(0);
+});
+
+Template.hello.helpers({
+  counter() {
+    return Template.instance().counter.get();
+  },
+});
+
+Template.hello.events({
+  'click button'(event, instance) {
+    // increment the counter when button is clicked
+    instance.counter.set(instance.counter.get() + 1);
+  },
+});
diff --git a/package-lock.json b/package-lock.json
new file mode 100644
index 0000000..5e61a56
--- /dev/null
+++ b/package-lock.json
@@ -0,0 +1,683 @@
+{
+  "name": "simple-todos",
+  "requires": true,
+  "lockfileVersion": 1,
+  "dependencies": {
+    "babel-runtime": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.26.0.tgz",
+      "integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
+      "requires": {
+        "core-js": "2.5.1",
+        "regenerator-runtime": "0.11.0"
+      }
+    },
+    "core-js": {
+      "version": "2.5.1",
+      "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.5.1.tgz",
+      "integrity": "sha1-rmh03GaTd4m4B1T/VCjfZoGcpQs="
+    },
+    "meteor-node-stubs": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/meteor-node-stubs/-/meteor-node-stubs-0.3.2.tgz",
+      "integrity": "sha512-l93SS/HutbqBRJODO2m7hup8cYI2acF5bB39+ZvP2BX8HMmCSCXeFH7v0sr4hD7zrVvHQA5UqS0pcDYKn0VM6g==",
+      "requires": {
+        "assert": "1.4.1",
+        "browserify-zlib": "0.1.4",
+        "buffer": "4.9.1",
+        "console-browserify": "1.1.0",
+        "constants-browserify": "1.0.0",
+        "crypto-browserify": "3.11.1",
+        "domain-browser": "1.1.7",
+        "events": "1.1.1",
+        "http-browserify": "1.7.0",
+        "https-browserify": "0.0.1",
+        "os-browserify": "0.2.1",
+        "path-browserify": "0.0.0",
+        "process": "0.11.10",
+        "punycode": "1.4.1",
+        "querystring-es3": "0.2.1",
+        "readable-stream": "git+https://github.com/meteor/readable-stream.git#d64a64aa6061b9b6855feff4d09e58fb3b2e4502",
+        "stream-browserify": "2.0.1",
+        "string_decoder": "1.0.3",
+        "timers-browserify": "1.4.2",
+        "tty-browserify": "0.0.0",
+        "url": "0.11.0",
+        "util": "0.10.3",
+        "vm-browserify": "0.0.4"
+      },
+      "dependencies": {
+        "Base64": {
+          "version": "0.2.1",
+          "resolved": "https://registry.npmjs.org/Base64/-/Base64-0.2.1.tgz",
+          "integrity": "sha1-ujpCMHCOGGcFBl5mur3Uw1z2ACg="
+        },
+        "asn1.js": {
+          "version": "4.9.1",
+          "resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-4.9.1.tgz",
+          "integrity": "sha1-SLokC0WpKA6UdImQull9IWYX/UA=",
+          "requires": {
+            "bn.js": "4.11.8",
+            "inherits": "2.0.1",
+            "minimalistic-assert": "1.0.0"
+          }
+        },
+        "assert": {
+          "version": "1.4.1",
+          "resolved": "https://registry.npmjs.org/assert/-/assert-1.4.1.tgz",
+          "integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
+          "requires": {
+            "util": "0.10.3"
+          }
+        },
+        "balanced-match": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
+          "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c="
+        },
+        "base64-js": {
+          "version": "1.2.1",
+          "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.2.1.tgz",
+          "integrity": "sha512-dwVUVIXsBZXwTuwnXI9RK8sBmgq09NDHzyR9SAph9eqk76gKK2JSQmZARC2zRC81JC2QTtxD0ARU5qTS25gIGw=="
+        },
+        "bn.js": {
+          "version": "4.11.8",
+          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",
+          "integrity": "sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA=="
+        },
+        "brace-expansion": {
+          "version": "1.1.8",
+          "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.8.tgz",
+          "integrity": "sha1-wHshHHyVLsH479Uad+8NHTmQopI=",
+          "requires": {
+            "balanced-match": "1.0.0",
+            "concat-map": "0.0.1"
+          }
+        },
+        "brorand": {
+          "version": "1.1.0",
+          "resolved": "https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz",
+          "integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
+        },
+        "browserify-aes": {
+          "version": "1.1.0",
+          "resolved": "https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.1.0.tgz",
+          "integrity": "sha512-W2bIMLYoZ9oow7TyePpMJk9l9LY7O3R61a/68bVCDOtnJynnwe3ZeW2IzzSkrQnPKNdJrxVDn3ALZNisSBwb7g==",
+          "requires": {
+            "buffer-xor": "1.0.3",
+            "cipher-base": "1.0.4",
+            "create-hash": "1.1.3",
+            "evp_bytestokey": "1.0.3",
+            "inherits": "2.0.1",
+            "safe-buffer": "5.1.1"
+          }
+        },
+        "browserify-cipher": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/browserify-cipher/-/browserify-cipher-1.0.0.tgz",
+          "integrity": "sha1-mYgkSHS/XtTijalWZtzWasj8Njo=",
+          "requires": {
+            "browserify-aes": "1.1.0",
+            "browserify-des": "1.0.0",
+            "evp_bytestokey": "1.0.3"
+          }
+        },
+        "browserify-des": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/browserify-des/-/browserify-des-1.0.0.tgz",
+          "integrity": "sha1-2qJ3cXRwki7S/hhZQRihdUOXId0=",
+          "requires": {
+            "cipher-base": "1.0.4",
+            "des.js": "1.0.0",
+            "inherits": "2.0.1"
+          }
+        },
+        "browserify-rsa": {
+          "version": "4.0.1",
+          "resolved": "https://registry.npmjs.org/browserify-rsa/-/browserify-rsa-4.0.1.tgz",
+          "integrity": "sha1-IeCr+vbyApzy+vsTNWenAdQTVSQ=",
+          "requires": {
+            "bn.js": "4.11.8",
+            "randombytes": "2.0.5"
+          }
+        },
+        "browserify-sign": {
+          "version": "4.0.4",
+          "resolved": "https://registry.npmjs.org/browserify-sign/-/browserify-sign-4.0.4.tgz",
+          "integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
+          "requires": {
+            "bn.js": "4.11.8",
+            "browserify-rsa": "4.0.1",
+            "create-hash": "1.1.3",
+            "create-hmac": "1.1.6",
+            "elliptic": "6.4.0",
+            "inherits": "2.0.1",
+            "parse-asn1": "5.1.0"
+          }
+        },
+        "browserify-zlib": {
+          "version": "0.1.4",
+          "resolved": "https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.1.4.tgz",
+          "integrity": "sha1-uzX4pRn2AOD6a4SFJByXnQFB+y0=",
+          "requires": {
+            "pako": "0.2.9"
+          }
+        },
+        "buffer": {
+          "version": "4.9.1",
+          "resolved": "https://registry.npmjs.org/buffer/-/buffer-4.9.1.tgz",
+          "integrity": "sha1-bRu2AbB6TvztlwlBMgkwJ8lbwpg=",
+          "requires": {
+            "base64-js": "1.2.1",
+            "ieee754": "1.1.8",
+            "isarray": "1.0.0"
+          }
+        },
+        "buffer-xor": {
+          "version": "1.0.3",
+          "resolved": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz",
+          "integrity": "sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk="
+        },
+        "cipher-base": {
+          "version": "1.0.4",
+          "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
+          "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
+          "requires": {
+            "inherits": "2.0.1",
+            "safe-buffer": "5.1.1"
+          }
+        },
+        "concat-map": {
+          "version": "0.0.1",
+          "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
+          "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
+        },
+        "console-browserify": {
+          "version": "1.1.0",
+          "resolved": "https://registry.npmjs.org/console-browserify/-/console-browserify-1.1.0.tgz",
+          "integrity": "sha1-8CQcRXMKn8YyOyBtvzjtx0HQuxA=",
+          "requires": {
+            "date-now": "0.1.4"
+          }
+        },
+        "constants-browserify": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/constants-browserify/-/constants-browserify-1.0.0.tgz",
+          "integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
+        },
+        "create-ecdh": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/create-ecdh/-/create-ecdh-4.0.0.tgz",
+          "integrity": "sha1-iIxyNZbN92EvZJgjPuvXo1MBc30=",
+          "requires": {
+            "bn.js": "4.11.8",
+            "elliptic": "6.4.0"
+          }
+        },
+        "create-hash": {
+          "version": "1.1.3",
+          "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.1.3.tgz",
+          "integrity": "sha1-YGBCrIuSYnUPSDyt2rD1gZFy2P0=",
+          "requires": {
+            "cipher-base": "1.0.4",
+            "inherits": "2.0.1",
+            "ripemd160": "2.0.1",
+            "sha.js": "2.4.9"
+          }
+        },
+        "create-hmac": {
+          "version": "1.1.6",
+          "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.6.tgz",
+          "integrity": "sha1-rLniIaThe9sHbpBlfEK5PjcmzwY=",
+          "requires": {
+            "cipher-base": "1.0.4",
+            "create-hash": "1.1.3",
+            "inherits": "2.0.1",
+            "ripemd160": "2.0.1",
+            "safe-buffer": "5.1.1",
+            "sha.js": "2.4.9"
+          }
+        },
+        "crypto-browserify": {
+          "version": "3.11.1",
+          "resolved": "https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.11.1.tgz",
+          "integrity": "sha512-Na7ZlwCOqoaW5RwUK1WpXws2kv8mNhWdTlzob0UXulk6G9BDbyiJaGTYBIX61Ozn9l1EPPJpICZb4DaOpT9NlQ==",
+          "requires": {
+            "browserify-cipher": "1.0.0",
+            "browserify-sign": "4.0.4",
+            "create-ecdh": "4.0.0",
+            "create-hash": "1.1.3",
+            "create-hmac": "1.1.6",
+            "diffie-hellman": "5.0.2",
+            "inherits": "2.0.1",
+            "pbkdf2": "3.0.14",
+            "public-encrypt": "4.0.0",
+            "randombytes": "2.0.5"
+          }
+        },
+        "date-now": {
+          "version": "0.1.4",
+          "resolved": "https://registry.npmjs.org/date-now/-/date-now-0.1.4.tgz",
+          "integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="
+        },
+        "des.js": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/des.js/-/des.js-1.0.0.tgz",
+          "integrity": "sha1-wHTS4qpqipoH29YfmhXCzYPsjsw=",
+          "requires": {
+            "inherits": "2.0.1",
+            "minimalistic-assert": "1.0.0"
+          }
+        },
+        "diffie-hellman": {
+          "version": "5.0.2",
+          "resolved": "https://registry.npmjs.org/diffie-hellman/-/diffie-hellman-5.0.2.tgz",
+          "integrity": "sha1-tYNXOScM/ias9jIJn97SoH8gnl4=",
+          "requires": {
+            "bn.js": "4.11.8",
+            "miller-rabin": "4.0.1",
+            "randombytes": "2.0.5"
+          }
+        },
+        "domain-browser": {
+          "version": "1.1.7",
+          "resolved": "https://registry.npmjs.org/domain-browser/-/domain-browser-1.1.7.tgz",
+          "integrity": "sha1-hnqksJP6oF8d4IwG9NeyH9+GmLw="
+        },
+        "elliptic": {
+          "version": "6.4.0",
+          "resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz",
+          "integrity": "sha1-ysmvh2LIWDYYcAPI3+GT5eLq5d8=",
+          "requires": {
+            "bn.js": "4.11.8",
+            "brorand": "1.1.0",
+            "hash.js": "1.1.3",
+            "hmac-drbg": "1.0.1",
+            "inherits": "2.0.1",
+            "minimalistic-assert": "1.0.0",
+            "minimalistic-crypto-utils": "1.0.1"
+          }
+        },
+        "events": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/events/-/events-1.1.1.tgz",
+          "integrity": "sha1-nr23Y1rQmccNzEwqH1AEKI6L2SQ="
+        },
+        "evp_bytestokey": {
+          "version": "1.0.3",
+          "resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz",
+          "integrity": "sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==",
+          "requires": {
+            "md5.js": "1.3.4",
+            "safe-buffer": "5.1.1"
+          }
+        },
+        "fs.realpath": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
+          "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="
+        },
+        "glob": {
+          "version": "7.1.2",
+          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+          "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+          "requires": {
+            "fs.realpath": "1.0.0",
+            "inflight": "1.0.6",
+            "inherits": "2.0.1",
+            "minimatch": "3.0.4",
+            "once": "1.4.0",
+            "path-is-absolute": "1.0.1"
+          }
+        },
+        "hash-base": {
+          "version": "2.0.2",
+          "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-2.0.2.tgz",
+          "integrity": "sha1-ZuodhW206KVHDK32/OI65SRO8uE=",
+          "requires": {
+            "inherits": "2.0.1"
+          }
+        },
+        "hash.js": {
+          "version": "1.1.3",
+          "resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.3.tgz",
+          "integrity": "sha512-/UETyP0W22QILqS+6HowevwhEFJ3MBJnwTf75Qob9Wz9t0DPuisL8kW8YZMK62dHAKE1c1p+gY1TtOLY+USEHA==",
+          "requires": {
+            "inherits": "2.0.3",
+            "minimalistic-assert": "1.0.0"
+          },
+          "dependencies": {
+            "inherits": {
+              "version": "2.0.3",
+              "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
+              "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="
+            }
+          }
+        },
+        "hmac-drbg": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",
+          "integrity": "sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=",
+          "requires": {
+            "hash.js": "1.1.3",
+            "minimalistic-assert": "1.0.0",
+            "minimalistic-crypto-utils": "1.0.1"
+          }
+        },
+        "http-browserify": {
+          "version": "1.7.0",
+          "resolved": "https://registry.npmjs.org/http-browserify/-/http-browserify-1.7.0.tgz",
+          "integrity": "sha1-M3la3nLfiKz7/TZ3PO/tp2RzWyA=",
+          "requires": {
+            "Base64": "0.2.1",
+            "inherits": "2.0.1"
+          }
+        },
+        "https-browserify": {
+          "version": "0.0.1",
+          "resolved": "https://registry.npmjs.org/https-browserify/-/https-browserify-0.0.1.tgz",
+          "integrity": "sha1-P5E2XKvmC3ftDruiS0VOPgnZWoI="
+        },
+        "ieee754": {
+          "version": "1.1.8",
+          "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.1.8.tgz",
+          "integrity": "sha1-vjPUCsEO8ZJnAfbwii2G+/0a0+Q="
+        },
+        "indexof": {
+          "version": "0.0.1",
+          "resolved": "https://registry.npmjs.org/indexof/-/indexof-0.0.1.tgz",
+          "integrity": "sha1-gtwzbSMrkGIXnQWrMpOmYFn9Q10="
+        },
+        "inflight": {
+          "version": "1.0.6",
+          "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
+          "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
+          "requires": {
+            "once": "1.4.0",
+            "wrappy": "1.0.2"
+          }
+        },
+        "inherits": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz",
+          "integrity": "sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE="
+        },
+        "isarray": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
+          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
+        },
+        "md5.js": {
+          "version": "1.3.4",
+          "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.4.tgz",
+          "integrity": "sha1-6b296UogpawYsENA/Fdk1bCdkB0=",
+          "requires": {
+            "hash-base": "3.0.4",
+            "inherits": "2.0.1"
+          },
+          "dependencies": {
+            "hash-base": {
+              "version": "3.0.4",
+              "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz",
+              "integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
+              "requires": {
+                "inherits": "2.0.1",
+                "safe-buffer": "5.1.1"
+              }
+            }
+          }
+        },
+        "miller-rabin": {
+          "version": "4.0.1",
+          "resolved": "https://registry.npmjs.org/miller-rabin/-/miller-rabin-4.0.1.tgz",
+          "integrity": "sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==",
+          "requires": {
+            "bn.js": "4.11.8",
+            "brorand": "1.1.0"
+          }
+        },
+        "minimalistic-assert": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.0.tgz",
+          "integrity": "sha1-cCvi3aazf0g2vLP121ZkG2Sh09M="
+        },
+        "minimalistic-crypto-utils": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz",
+          "integrity": "sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo="
+        },
+        "minimatch": {
+          "version": "3.0.4",
+          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
+          "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
+          "requires": {
+            "brace-expansion": "1.1.8"
+          }
+        },
+        "once": {
+          "version": "1.4.0",
+          "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
+          "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
+          "requires": {
+            "wrappy": "1.0.2"
+          }
+        },
+        "os-browserify": {
+          "version": "0.2.1",
+          "resolved": "https://registry.npmjs.org/os-browserify/-/os-browserify-0.2.1.tgz",
+          "integrity": "sha1-Y/xMzuXS13Y9Jrv4YBB45sLgBE8="
+        },
+        "pako": {
+          "version": "0.2.9",
+          "resolved": "https://registry.npmjs.org/pako/-/pako-0.2.9.tgz",
+          "integrity": "sha1-8/dSL073gjSNqBYbrZ7P1Rv4OnU="
+        },
+        "parse-asn1": {
+          "version": "5.1.0",
+          "resolved": "https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.0.tgz",
+          "integrity": "sha1-N8T5t+06tlx0gXtfJICTf7+XxxI=",
+          "requires": {
+            "asn1.js": "4.9.1",
+            "browserify-aes": "1.1.0",
+            "create-hash": "1.1.3",
+            "evp_bytestokey": "1.0.3",
+            "pbkdf2": "3.0.14"
+          }
+        },
+        "path-browserify": {
+          "version": "0.0.0",
+          "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-0.0.0.tgz",
+          "integrity": "sha1-oLhwcpquIUAFt9UDLsLLuw+0RRo="
+        },
+        "path-is-absolute": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
+          "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="
+        },
+        "pbkdf2": {
+          "version": "3.0.14",
+          "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.0.14.tgz",
+          "integrity": "sha512-gjsZW9O34fm0R7PaLHRJmLLVfSoesxztjPjE9o6R+qtVJij90ltg1joIovN9GKrRW3t1PzhDDG3UMEMFfZ+1wA==",
+          "requires": {
+            "create-hash": "1.1.3",
+            "create-hmac": "1.1.6",
+            "ripemd160": "2.0.1",
+            "safe-buffer": "5.1.1",
+            "sha.js": "2.4.9"
+          }
+        },
+        "process": {
+          "version": "0.11.10",
+          "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
+          "integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI="
+        },
+        "process-nextick-args": {
+          "version": "1.0.7",
+          "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz",
+          "integrity": "sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M="
+        },
+        "public-encrypt": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/public-encrypt/-/public-encrypt-4.0.0.tgz",
+          "integrity": "sha1-OfaZ86RlYN1eusvKaTyvfGXBjMY=",
+          "requires": {
+            "bn.js": "4.11.8",
+            "browserify-rsa": "4.0.1",
+            "create-hash": "1.1.3",
+            "parse-asn1": "5.1.0",
+            "randombytes": "2.0.5"
+          }
+        },
+        "punycode": {
+          "version": "1.4.1",
+          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
+          "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4="
+        },
+        "querystring": {
+          "version": "0.2.0",
+          "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
+          "integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA="
+        },
+        "querystring-es3": {
+          "version": "0.2.1",
+          "resolved": "https://registry.npmjs.org/querystring-es3/-/querystring-es3-0.2.1.tgz",
+          "integrity": "sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM="
+        },
+        "randombytes": {
+          "version": "2.0.5",
+          "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.0.5.tgz",
+          "integrity": "sha512-8T7Zn1AhMsQ/HI1SjcCfT/t4ii3eAqco3yOcSzS4mozsOz69lHLsoMXmF9nZgnFanYscnSlUSgs8uZyKzpE6kg==",
+          "requires": {
+            "safe-buffer": "5.1.1"
+          }
+        },
+        "readable-stream": {
+          "version": "git+https://github.com/meteor/readable-stream.git#d64a64aa6061b9b6855feff4d09e58fb3b2e4502",
+          "requires": {
+            "inherits": "2.0.3",
+            "isarray": "1.0.0",
+            "process-nextick-args": "1.0.7",
+            "safe-buffer": "5.1.1",
+            "string_decoder": "1.0.3",
+            "util-deprecate": "1.0.2"
+          },
+          "dependencies": {
+            "inherits": {
+              "version": "2.0.3",
+              "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
+              "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="
+            }
+          }
+        },
+        "rimraf": {
+          "version": "2.6.2",
+          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz",
+          "integrity": "sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==",
+          "requires": {
+            "glob": "7.1.2"
+          }
+        },
+        "ripemd160": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.1.tgz",
+          "integrity": "sha1-D0WEKVxTo2KK9+bXmsohzlfRxuc=",
+          "requires": {
+            "hash-base": "2.0.2",
+            "inherits": "2.0.1"
+          }
+        },
+        "safe-buffer": {
+          "version": "5.1.1",
+          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.1.tgz",
+          "integrity": "sha512-kKvNJn6Mm93gAczWVJg7wH+wGYWNrDHdWvpUmHyEsgCtIwwo3bqPtV4tR5tuPaUhTOo/kvhVwd8XwwOllGYkbg=="
+        },
+        "sha.js": {
+          "version": "2.4.9",
+          "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.9.tgz",
+          "integrity": "sha512-G8zektVqbiPHrylgew9Zg1VRB1L/DtXNUVAM6q4QLy8NE3qtHlFXTf8VLL4k1Yl6c7NMjtZUTdXV+X44nFaT6A==",
+          "requires": {
+            "inherits": "2.0.1",
+            "safe-buffer": "5.1.1"
+          }
+        },
+        "stream-browserify": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/stream-browserify/-/stream-browserify-2.0.1.tgz",
+          "integrity": "sha1-ZiZu5fm9uZQKTkUUyvtDu3Hlyds=",
+          "requires": {
+            "inherits": "2.0.1",
+            "readable-stream": "git+https://github.com/meteor/readable-stream.git#d64a64aa6061b9b6855feff4d09e58fb3b2e4502"
+          }
+        },
+        "string_decoder": {
+          "version": "1.0.3",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.0.3.tgz",
+          "integrity": "sha512-4AH6Z5fzNNBcH+6XDMfA/BTt87skxqJlO0lAh3Dker5zThcAxG6mKz+iGu308UKoPPQ8Dcqx/4JhujzltRa+hQ==",
+          "requires": {
+            "safe-buffer": "5.1.1"
+          }
+        },
+        "timers-browserify": {
+          "version": "1.4.2",
+          "resolved": "https://registry.npmjs.org/timers-browserify/-/timers-browserify-1.4.2.tgz",
+          "integrity": "sha1-ycWLV1voQHN1y14kYtrO50NZ9B0=",
+          "requires": {
+            "process": "0.11.10"
+          }
+        },
+        "tty-browserify": {
+          "version": "0.0.0",
+          "resolved": "https://registry.npmjs.org/tty-browserify/-/tty-browserify-0.0.0.tgz",
+          "integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="
+        },
+        "url": {
+          "version": "0.11.0",
+          "resolved": "https://registry.npmjs.org/url/-/url-0.11.0.tgz",
+          "integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
+          "requires": {
+            "punycode": "1.3.2",
+            "querystring": "0.2.0"
+          },
+          "dependencies": {
+            "punycode": {
+              "version": "1.3.2",
+              "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
+              "integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0="
+            }
+          }
+        },
+        "util": {
+          "version": "0.10.3",
+          "resolved": "https://registry.npmjs.org/util/-/util-0.10.3.tgz",
+          "integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
+          "requires": {
+            "inherits": "2.0.1"
+          }
+        },
+        "util-deprecate": {
+          "version": "1.0.2",
+          "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+          "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
+        },
+        "vm-browserify": {
+          "version": "0.0.4",
+          "resolved": "https://registry.npmjs.org/vm-browserify/-/vm-browserify-0.0.4.tgz",
+          "integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
+          "requires": {
+            "indexof": "0.0.1"
+          }
+        },
+        "wrappy": {
+          "version": "1.0.2",
+          "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
+          "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
+        }
+      }
+    },
+    "regenerator-runtime": {
+      "version": "0.11.0",
+      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.11.0.tgz",
+      "integrity": "sha512-/aA0kLeRb5N9K0d4fw7ooEbI+xDe+DKD499EQqygGqeS8N3xto15p09uY2xj7ixP81sNPXvRLnAQIqdVStgb1A=="
+    }
+  }
+}
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..43db77e
--- /dev/null
+++ b/package.json
@@ -0,0 +1,11 @@
+{
+  "name": "simple-todos",
+  "private": true,
+  "scripts": {
+    "start": "meteor run"
+  },
+  "dependencies": {
+    "babel-runtime": "^6.26.0",
+    "meteor-node-stubs": "^0.3.2"
+  }
+}
diff --git a/server/main.js b/server/main.js
new file mode 100644
index 0000000..31a9e0e
--- /dev/null
+++ b/server/main.js
@@ -0,0 +1,5 @@
+import { Meteor } from 'meteor/meteor';
+
+Meteor.startup(() => {
+  // code to run on server at startup
+});
-- 
2.15.0


From 5c6f19fc94dfe9f784b07a0fa35da14bbcf67b00 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:02:01 -0700
Subject: [PATCH 02/49] Step 2.1: Add the React NPM packages

---
 package.json | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/package.json b/package.json
index 43db77e..09105cf 100644
--- a/package.json
+++ b/package.json
@@ -6,6 +6,8 @@
   },
   "dependencies": {
     "babel-runtime": "^6.26.0",
-    "meteor-node-stubs": "^0.3.2"
+    "meteor-node-stubs": "^0.3.2",
+    "react": "^16.1.1",
+    "react-dom": "^16.1.1"
   }
 }
-- 
2.15.0


From 66e3cae30eb692b084fec06af36f62be7b539751 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:03:54 -0700
Subject: [PATCH 03/49] Step 2.2: Replace starter HTML code

---
 client/main.html | 22 ++--------------------
 1 file changed, 2 insertions(+), 20 deletions(-)

diff --git a/client/main.html b/client/main.html
index 15a7c7d..1aae2d4 100644
--- a/client/main.html
+++ b/client/main.html
@@ -1,25 +1,7 @@
 <head>
-  <title>simple-todos</title>
+  <title>Todo List</title>
 </head>
 
 <body>
-  <h1>Welcome to Meteor!</h1>
-
-  {{> hello}}
-  {{> info}}
+  <div id="render-target"></div>
 </body>
-
-<template name="hello">
-  <button>Click Me</button>
-  <p>You've pressed the button {{counter}} times.</p>
-</template>
-
-<template name="info">
-  <h2>Learn Meteor!</h2>
-  <ul>
-    <li><a href="https://www.meteor.com/try" target="_blank">Do the Tutorial</a></li>
-    <li><a href="http://guide.meteor.com" target="_blank">Follow the Guide</a></li>
-    <li><a href="https://docs.meteor.com" target="_blank">Read the Docs</a></li>
-    <li><a href="https://forums.meteor.com" target="_blank">Discussions</a></li>
-  </ul>
-</template>
-- 
2.15.0


From 2a705b85e67f024b4fd313a20c690039c0df7646 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:05:08 -0700
Subject: [PATCH 04/49] Step 2.3: Replace starter JS

---
 client/main.js | 25 ++++++-------------------
 1 file changed, 6 insertions(+), 19 deletions(-)

diff --git a/client/main.js b/client/main.js
index ecb3282..00f2bbf 100644
--- a/client/main.js
+++ b/client/main.js
@@ -1,22 +1,9 @@
-import { Template } from 'meteor/templating';
-import { ReactiveVar } from 'meteor/reactive-var';
+import React from 'react';
+import { Meteor } from 'meteor/meteor';
+import { render } from 'react-dom';
 
-import './main.html';
+import App from '../imports/ui/App.js';
 
-Template.hello.onCreated(function helloOnCreated() {
-  // counter starts at 0
-  this.counter = new ReactiveVar(0);
-});
-
-Template.hello.helpers({
-  counter() {
-    return Template.instance().counter.get();
-  },
-});
-
-Template.hello.events({
-  'click button'(event, instance) {
-    // increment the counter when button is clicked
-    instance.counter.set(instance.counter.get() + 1);
-  },
+Meteor.startup(() => {
+  render(<App />, document.getElementById('render-target'));
 });
-- 
2.15.0


From fa6d68656c712fdb91250eb5b5b0d8360f51b698 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:05:58 -0700
Subject: [PATCH 05/49] Step 2.4: Create App component

---
 imports/ui/App.js | 34 ++++++++++++++++++++++++++++++++++
 1 file changed, 34 insertions(+)
 create mode 100644 imports/ui/App.js

diff --git a/imports/ui/App.js b/imports/ui/App.js
new file mode 100644
index 0000000..bad39ea
--- /dev/null
+++ b/imports/ui/App.js
@@ -0,0 +1,34 @@
+import React, { Component } from 'react';
+
+import Task from './Task.js';
+
+// App component - represents the whole app
+export default class App extends Component {
+  getTasks() {
+    return [
+      { _id: 1, text: 'This is task 1' },
+      { _id: 2, text: 'This is task 2' },
+      { _id: 3, text: 'This is task 3' },
+    ];
+  }
+
+  renderTasks() {
+    return this.getTasks().map((task) => (
+      <Task key={task._id} task={task} />
+    ));
+  }
+
+  render() {
+    return (
+      <div className="container">
+        <header>
+          <h1>Todo List</h1>
+        </header>
+
+        <ul>
+          {this.renderTasks()}
+        </ul>
+      </div>
+    );
+  }
+}
-- 
2.15.0


From 287a811e10bcc2bee496653e5aaafefd827989b2 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:06:31 -0700
Subject: [PATCH 06/49] Step 2.5: Create Task component

---
 imports/ui/Task.js | 10 ++++++++++
 1 file changed, 10 insertions(+)
 create mode 100644 imports/ui/Task.js

diff --git a/imports/ui/Task.js b/imports/ui/Task.js
new file mode 100644
index 0000000..f0e1f80
--- /dev/null
+++ b/imports/ui/Task.js
@@ -0,0 +1,10 @@
+import React, { Component } from 'react';
+
+// Task component - represents a single todo item
+export default class Task extends Component {
+  render() {
+    return (
+      <li>{this.props.task.text}</li>
+    );
+  }
+}
-- 
2.15.0


From a4b9b9b15504ca692301596da6696e3eb20e27c0 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:07:02 -0700
Subject: [PATCH 07/49] Step 2.6: Add CSS

---
 client/main.css | 125 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 125 insertions(+)

diff --git a/client/main.css b/client/main.css
index b6b4052..cec3ae6 100644
--- a/client/main.css
+++ b/client/main.css
@@ -1 +1,126 @@
 /* CSS declarations go here */
+body {
+  font-family: sans-serif;
+  background-color: #315481;
+  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
+  background-attachment: fixed;
+
+  position: absolute;
+  top: 0;
+  bottom: 0;
+  left: 0;
+  right: 0;
+
+  padding: 0;
+  margin: 0;
+
+  font-size: 14px;
+}
+
+.container {
+  max-width: 600px;
+  margin: 0 auto;
+  min-height: 100%;
+  background: white;
+}
+
+header {
+  background: #d2edf4;
+  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
+  padding: 20px 15px 15px 15px;
+  position: relative;
+}
+
+#login-buttons {
+  display: block;
+}
+
+h1 {
+  font-size: 1.5em;
+  margin: 0;
+  margin-bottom: 10px;
+  display: inline-block;
+  margin-right: 1em;
+}
+
+form {
+  margin-top: 10px;
+  margin-bottom: -10px;
+  position: relative;
+}
+
+.new-task input {
+  box-sizing: border-box;
+  padding: 10px 0;
+  background: transparent;
+  border: none;
+  width: 100%;
+  padding-right: 80px;
+  font-size: 1em;
+}
+
+.new-task input:focus{
+  outline: 0;
+}
+
+ul {
+  margin: 0;
+  padding: 0;
+  background: white;
+}
+
+.delete {
+  float: right;
+  font-weight: bold;
+  background: none;
+  font-size: 1em;
+  border: none;
+  position: relative;
+}
+
+li {
+  position: relative;
+  list-style: none;
+  padding: 15px;
+  border-bottom: #eee solid 1px;
+}
+
+li .text {
+  margin-left: 10px;
+}
+
+li.checked {
+  color: #888;
+}
+
+li.checked .text {
+  text-decoration: line-through;
+}
+
+li.private {
+  background: #eee;
+  border-color: #ddd;
+}
+
+header .hide-completed {
+  float: right;
+}
+
+.toggle-private {
+  margin-left: 5px;
+}
+
+@media (max-width: 600px) {
+  li {
+    padding: 12px 15px;
+  }
+
+  .search {
+    width: 150px;
+    clear: both;
+  }
+
+  .new-task input {
+    padding-bottom: 5px;
+  }
+}
\ No newline at end of file
-- 
2.15.0


From 559971bd3039a1028d5709887a51d4af054f0ca9 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 15:32:35 +1100
Subject: [PATCH 08/49] Step 3.1: Create tasks collection

---
 imports/api/tasks.js | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 imports/api/tasks.js

diff --git a/imports/api/tasks.js b/imports/api/tasks.js
new file mode 100644
index 0000000..3bed819
--- /dev/null
+++ b/imports/api/tasks.js
@@ -0,0 +1,3 @@
+import { Mongo } from 'meteor/mongo';
+
+export const Tasks = new Mongo.Collection('tasks');
-- 
2.15.0


From db1809054191cf265f79d24da7926d6466ab18d9 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 15:33:03 +1100
Subject: [PATCH 09/49] Step 3.2: Load tasks collection on the server

---
 server/main.js | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

diff --git a/server/main.js b/server/main.js
index 31a9e0e..ab941a4 100644
--- a/server/main.js
+++ b/server/main.js
@@ -1,5 +1 @@
-import { Meteor } from 'meteor/meteor';
-
-Meteor.startup(() => {
-  // code to run on server at startup
-});
+import '../imports/api/tasks.js';
-- 
2.15.0


From 7d44eebde2feadd80a237447d74dc7beca355af9 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 15:37:12 +1100
Subject: [PATCH 10/49] Step 3.3: Add react-meteor-data package

---
 .meteor/packages | 1 +
 .meteor/versions | 2 ++
 2 files changed, 3 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index ed4eec8..d72f8d2 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -19,3 +19,4 @@ shell-server@0.3.0            # Server-side component of the `meteor shell` comm
 
 autopublish@1.0.7             # Publish all data to the clients (for prototyping)
 insecure@1.0.7                # Allow all DB writes from clients (for prototyping)
+react-meteor-data
diff --git a/.meteor/versions b/.meteor/versions
index cc65391..dbd3be5 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -54,6 +54,7 @@ observe-sequence@1.0.16
 ordered-dict@1.0.9
 promise@0.10.0
 random@1.0.10
+react-meteor-data@0.2.15
 reactive-var@1.0.11
 reload@1.1.11
 retry@1.0.9
@@ -67,6 +68,7 @@ templating@1.3.2
 templating-compiler@1.3.3
 templating-runtime@1.3.2
 templating-tools@1.1.2
+tmeasday:check-npm-versions@0.2.0
 tracker@1.1.3
 ui@1.0.13
 underscore@1.0.10
-- 
2.15.0


From 18294e96a4014ca06f68d29db757ee441f44058a Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 15:37:54 +1100
Subject: [PATCH 11/49] Step 3.4: Modify App component to get tasks from
 collection

---
 imports/ui/App.js | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index bad39ea..3c1072d 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -1,19 +1,14 @@
 import React, { Component } from 'react';
+import { withTracker } from 'meteor/react-meteor-data';
+
+import { Tasks } from '../api/tasks.js';
 
 import Task from './Task.js';
 
 // App component - represents the whole app
-export default class App extends Component {
-  getTasks() {
-    return [
-      { _id: 1, text: 'This is task 1' },
-      { _id: 2, text: 'This is task 2' },
-      { _id: 3, text: 'This is task 3' },
-    ];
-  }
-
+class App extends Component {
   renderTasks() {
-    return this.getTasks().map((task) => (
+    return this.props.tasks.map((task) => (
       <Task key={task._id} task={task} />
     ));
   }
@@ -32,3 +27,9 @@ export default class App extends Component {
     );
   }
 }
+
+export default withTracker(() => {
+  return {
+    tasks: Tasks.find({}).fetch(),
+  };
+})(App);
-- 
2.15.0


From 5ddefde8aad71d769e1cfdd55f6c42e83243cee4 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:13:37 -0700
Subject: [PATCH 12/49] Step 4.1: Add form for new tasks

---
 imports/ui/App.js | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 3c1072d..d8b597f 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -18,6 +18,14 @@ class App extends Component {
       <div className="container">
         <header>
           <h1>Todo List</h1>
+
+          <form className="new-task" onSubmit={this.handleSubmit.bind(this)} >
+            <input
+              type="text"
+              ref="textInput"
+              placeholder="Type to add new tasks"
+            />
+          </form>
         </header>
 
         <ul>
-- 
2.15.0


From 3426ae057c9416ad9e4751ce0620b24b92ccf22d Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:14:08 -0700
Subject: [PATCH 13/49] Step 4.2: Add handleSubmit method to App component

---
 imports/ui/App.js | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index d8b597f..2b8fb3a 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -1,4 +1,5 @@
 import React, { Component } from 'react';
+import ReactDOM from 'react-dom';
 import { withTracker } from 'meteor/react-meteor-data';
 
 import { Tasks } from '../api/tasks.js';
@@ -7,6 +8,21 @@ import Task from './Task.js';
 
 // App component - represents the whole app
 class App extends Component {
+  handleSubmit(event) {
+    event.preventDefault();
+
+    // Find the text field via the React ref
+    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();
+
+    Tasks.insert({
+      text,
+      createdAt: new Date(), // current time
+    });
+
+    // Clear form
+    ReactDOM.findDOMNode(this.refs.textInput).value = '';
+  }
+
   renderTasks() {
     return this.props.tasks.map((task) => (
       <Task key={task._id} task={task} />
-- 
2.15.0


From 6e9ec615df9e6b662bf01bae5b5d0498d9690c80 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:14:40 -0700
Subject: [PATCH 14/49] Step 4.3: Update data container to sort tasks by time

---
 imports/ui/App.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 2b8fb3a..9595e4a 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -54,6 +54,6 @@ class App extends Component {
 
 export default withTracker(() => {
   return {
-    tasks: Tasks.find({}).fetch(),
+    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),
   };
 })(App);
-- 
2.15.0


From 358a3e69ef61b73a513adb91bb644171ae56bc7d Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:17:06 -0700
Subject: [PATCH 15/49] Step 5.1: Update Task component to add features

---
 imports/ui/Task.js | 32 +++++++++++++++++++++++++++++++-
 1 file changed, 31 insertions(+), 1 deletion(-)

diff --git a/imports/ui/Task.js b/imports/ui/Task.js
index f0e1f80..9d7bb46 100644
--- a/imports/ui/Task.js
+++ b/imports/ui/Task.js
@@ -1,10 +1,40 @@
 import React, { Component } from 'react';
 
+import { Tasks } from '../api/tasks.js';
+
 // Task component - represents a single todo item
 export default class Task extends Component {
+  toggleChecked() {
+    // Set the checked property to the opposite of its current value
+    Tasks.update(this.props.task._id, {
+      $set: { checked: !this.props.task.checked },
+    });
+  }
+
+  deleteThisTask() {
+    Tasks.remove(this.props.task._id);
+  }
+
   render() {
+    // Give tasks a different className when they are checked off,
+    // so that we can style them nicely in CSS
+    const taskClassName = this.props.task.checked ? 'checked' : '';
+
     return (
-      <li>{this.props.task.text}</li>
+      <li className={taskClassName}>
+        <button className="delete" onClick={this.deleteThisTask.bind(this)}>
+          &times;
+        </button>
+
+        <input
+          type="checkbox"
+          readOnly
+          checked={!!this.props.task.checked}
+          onClick={this.toggleChecked.bind(this)}
+        />
+
+        <span className="text">{this.props.task.text}</span>
+      </li>
     );
   }
 }
-- 
2.15.0


From 031312b4acc13305ff8c37ebdfabd354b985fd0b Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:21:30 -0700
Subject: [PATCH 16/49] Step 7.1: Add hide completed checkbox to App component

---
 imports/ui/App.js | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 9595e4a..10a95ae 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -35,6 +35,16 @@ class App extends Component {
         <header>
           <h1>Todo List</h1>
 
+          <label className="hide-completed">
+            <input
+              type="checkbox"
+              readOnly
+              checked={this.state.hideCompleted}
+              onClick={this.toggleHideCompleted.bind(this)}
+            />
+            Hide Completed Tasks
+          </label>
+
           <form className="new-task" onSubmit={this.handleSubmit.bind(this)} >
             <input
               type="text"
-- 
2.15.0


From 6b19579a09214c6836ae0f3217c2c30488795500 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:22:07 -0700
Subject: [PATCH 17/49] Step 7.2: Add intial state to App component

---
 imports/ui/App.js | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 10a95ae..641aeee 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -8,6 +8,14 @@ import Task from './Task.js';
 
 // App component - represents the whole app
 class App extends Component {
+  constructor(props) {
+    super(props);
+
+    this.state = {
+      hideCompleted: false,
+    };
+  }
+
   handleSubmit(event) {
     event.preventDefault();
 
-- 
2.15.0


From 7840753bc66abd09dafa4bdd141138484eb249ca Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:22:32 -0700
Subject: [PATCH 18/49] Step 7.3: Add toggleHideCompleted handler to App

---
 imports/ui/App.js | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 641aeee..6cef154 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -31,6 +31,12 @@ class App extends Component {
     ReactDOM.findDOMNode(this.refs.textInput).value = '';
   }
 
+  toggleHideCompleted() {
+    this.setState({
+      hideCompleted: !this.state.hideCompleted,
+    });
+  }
+
   renderTasks() {
     return this.props.tasks.map((task) => (
       <Task key={task._id} task={task} />
-- 
2.15.0


From 837f59b2481002cf3f27eeb14b8b4ce179bbb408 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:23:02 -0700
Subject: [PATCH 19/49] Step 7.4: Filter tasks in renderTasks

---
 imports/ui/App.js | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 6cef154..6157c83 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -38,7 +38,11 @@ class App extends Component {
   }
 
   renderTasks() {
-    return this.props.tasks.map((task) => (
+    let filteredTasks = this.props.tasks;
+    if (this.state.hideCompleted) {
+      filteredTasks = filteredTasks.filter(task => !task.checked);
+    }
+    return filteredTasks.map((task) => (
       <Task key={task._id} task={task} />
     ));
   }
-- 
2.15.0


From aff914716d83e493d6d6bb67cdc8a76a006e698d Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:23:44 -0700
Subject: [PATCH 20/49] Step 7.5: Update data container to return
 incompleteCount

---
 imports/ui/App.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 6157c83..2e324f0 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -83,5 +83,6 @@ class App extends Component {
 export default withTracker(() => {
   return {
     tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),
+    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),
   };
 })(App);
-- 
2.15.0


From 0e314bbe68619ffe2672d2278435b8d6e811c392 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:24:09 -0700
Subject: [PATCH 21/49] Step 7.6: Display incompleteCount in the header

---
 imports/ui/App.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 2e324f0..a0314af 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -51,7 +51,7 @@ class App extends Component {
     return (
       <div className="container">
         <header>
-          <h1>Todo List</h1>
+          <h1>Todo List ({this.props.incompleteCount})</h1>
 
           <label className="hide-completed">
             <input
-- 
2.15.0


From eb369be9720b92f97f347ee39004b52212a81012 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:26:02 -0700
Subject: [PATCH 22/49] Step 8.1: Add accounts-ui and accounts-password
 packages

---
 .meteor/packages |  2 ++
 .meteor/versions | 15 +++++++++++++++
 2 files changed, 17 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index d72f8d2..57b7f3a 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -20,3 +20,5 @@ shell-server@0.3.0            # Server-side component of the `meteor shell` comm
 autopublish@1.0.7             # Publish all data to the clients (for prototyping)
 insecure@1.0.7                # Allow all DB writes from clients (for prototyping)
 react-meteor-data
+accounts-ui
+accounts-password
diff --git a/.meteor/versions b/.meteor/versions
index dbd3be5..4931db8 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -1,3 +1,7 @@
+accounts-base@1.4.0
+accounts-password@1.5.0
+accounts-ui@1.2.0
+accounts-ui-unstyled@1.3.0
 allow-deny@1.1.0
 autopublish@1.0.7
 autoupdate@1.3.12
@@ -16,6 +20,7 @@ check@1.2.5
 ddp@1.4.0
 ddp-client@2.2.0
 ddp-common@1.3.0
+ddp-rate-limiter@1.0.7
 ddp-server@2.1.1
 deps@1.0.12
 diff-sequence@1.0.7
@@ -25,6 +30,7 @@ ecmascript-runtime@0.5.0
 ecmascript-runtime-client@0.5.0
 ecmascript-runtime-server@0.5.0
 ejson@1.1.0
+email@1.2.3
 es5-shim@4.6.15
 geojson-utils@1.0.10
 hot-code-push@1.0.4
@@ -35,7 +41,9 @@ id-map@1.0.9
 insecure@1.0.7
 jquery@1.11.10
 launch-screen@1.1.1
+less@2.7.11
 livedata@1.0.18
+localstorage@1.2.0
 logging@1.1.19
 meteor@1.8.2
 meteor-base@1.2.0
@@ -49,19 +57,26 @@ modules-runtime@0.9.1
 mongo@1.3.0
 mongo-dev-server@1.1.0
 mongo-id@1.0.6
+npm-bcrypt@0.9.3
 npm-mongo@2.2.33
 observe-sequence@1.0.16
 ordered-dict@1.0.9
 promise@0.10.0
 random@1.0.10
+rate-limit@1.0.8
 react-meteor-data@0.2.15
+reactive-dict@1.2.0
 reactive-var@1.0.11
 reload@1.1.11
 retry@1.0.9
 routepolicy@1.0.12
+service-configuration@1.0.11
+session@1.1.7
+sha@1.0.9
 shell-server@0.3.0
 spacebars@1.0.15
 spacebars-compiler@1.1.3
+srp@1.0.10
 standard-minifier-css@1.3.5
 standard-minifier-js@2.2.2
 templating@1.3.2
-- 
2.15.0


From ff81323d279679910fa5e17af70597c30c711275 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:26:59 -0700
Subject: [PATCH 23/49] Step 8.2: Create Accounts UI wrapper component

---
 imports/ui/AccountsUIWrapper.js | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)
 create mode 100644 imports/ui/AccountsUIWrapper.js

diff --git a/imports/ui/AccountsUIWrapper.js b/imports/ui/AccountsUIWrapper.js
new file mode 100644
index 0000000..208d5af
--- /dev/null
+++ b/imports/ui/AccountsUIWrapper.js
@@ -0,0 +1,20 @@
+import React, { Component } from 'react';
+import ReactDOM from 'react-dom';
+import { Template } from 'meteor/templating';
+import { Blaze } from 'meteor/blaze';
+
+export default class AccountsUIWrapper extends Component {
+  componentDidMount() {
+    // Use Meteor Blaze to render login buttons
+    this.view = Blaze.render(Template.loginButtons,
+      ReactDOM.findDOMNode(this.refs.container));
+  }
+  componentWillUnmount() {
+    // Clean up Blaze view
+    Blaze.remove(this.view);
+  }
+  render() {
+    // Just render a placeholder container that will be filled in
+    return <span ref="container" />;
+  }
+}
-- 
2.15.0


From 82cf9664c4c0925a4fbc742c822fd4e8aaefe346 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:27:36 -0700
Subject: [PATCH 24/49] Step 8.3: Include sign in form

---
 imports/ui/App.js | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index a0314af..0d1914f 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -5,6 +5,7 @@ import { withTracker } from 'meteor/react-meteor-data';
 import { Tasks } from '../api/tasks.js';
 
 import Task from './Task.js';
+import AccountsUIWrapper from './AccountsUIWrapper.js';
 
 // App component - represents the whole app
 class App extends Component {
@@ -63,6 +64,8 @@ class App extends Component {
             Hide Completed Tasks
           </label>
 
+          <AccountsUIWrapper />
+
           <form className="new-task" onSubmit={this.handleSubmit.bind(this)} >
             <input
               type="text"
-- 
2.15.0


From e6d6d54ff59463fee82dc3e29f3d49b4548e92e4 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 16:13:48 +1100
Subject: [PATCH 25/49] Step 8.4: Configure accounts-ui

---
 imports/startup/accounts-config.js | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 imports/startup/accounts-config.js

diff --git a/imports/startup/accounts-config.js b/imports/startup/accounts-config.js
new file mode 100644
index 0000000..7e4f7e5
--- /dev/null
+++ b/imports/startup/accounts-config.js
@@ -0,0 +1,5 @@
+import { Accounts } from 'meteor/accounts-base';
+
+Accounts.ui.config({
+  passwordSignupFields: 'USERNAME_ONLY',
+});
-- 
2.15.0


From 03a4347eba5914b5b4f86e2c597320f26ee60de9 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 16:14:08 +1100
Subject: [PATCH 26/49] Step 8.5: Import accounts configuration

---
 client/main.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/main.js b/client/main.js
index 00f2bbf..2b50fc7 100644
--- a/client/main.js
+++ b/client/main.js
@@ -2,6 +2,7 @@ import React from 'react';
 import { Meteor } from 'meteor/meteor';
 import { render } from 'react-dom';
 
+import '../imports/startup/accounts-config.js';
 import App from '../imports/ui/App.js';
 
 Meteor.startup(() => {
-- 
2.15.0


From c458c3d35d3fc0080865f9468277641ba54d728c Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:28:46 -0700
Subject: [PATCH 27/49] Step 8.6: Update insert to save username and owner

---
 imports/ui/App.js | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 0d1914f..0ffb93a 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -1,5 +1,6 @@
 import React, { Component } from 'react';
 import ReactDOM from 'react-dom';
+import { Meteor } from 'meteor/meteor';
 import { withTracker } from 'meteor/react-meteor-data';
 
 import { Tasks } from '../api/tasks.js';
@@ -26,6 +27,8 @@ class App extends Component {
     Tasks.insert({
       text,
       createdAt: new Date(), // current time
+      owner: Meteor.userId(),           // _id of logged in user
+      username: Meteor.user().username,  // username of logged in user
     });
 
     // Clear form
-- 
2.15.0


From 7ab12a6bdda91d207a5341f0ae62f5dc337f266c Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:29:16 -0700
Subject: [PATCH 28/49] Step 8.7: Update data container to return data about
 user

---
 imports/ui/App.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 0ffb93a..c1171c0 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -90,5 +90,6 @@ export default withTracker(() => {
   return {
     tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),
     incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),
+    currentUser: Meteor.user(),
   };
 })(App);
-- 
2.15.0


From 6f23c3706ba0a0d2890639335cc9d839f009ea99 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:30:06 -0700
Subject: [PATCH 29/49] Step 8.8: Wrap new task form to only show when logged
 in

---
 imports/ui/App.js | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index c1171c0..89bc781 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -69,13 +69,15 @@ class App extends Component {
 
           <AccountsUIWrapper />
 
-          <form className="new-task" onSubmit={this.handleSubmit.bind(this)} >
-            <input
-              type="text"
-              ref="textInput"
-              placeholder="Type to add new tasks"
-            />
-          </form>
+          { this.props.currentUser ?
+            <form className="new-task" onSubmit={this.handleSubmit.bind(this)} >
+              <input
+                type="text"
+                ref="textInput"
+                placeholder="Type to add new tasks"
+              />
+            </form> : ''
+          }
         </header>
 
         <ul>
-- 
2.15.0


From 51cc3ea1a0e6d288f3068014df2ceda170a59f71 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:30:48 -0700
Subject: [PATCH 30/49] Step 8.9: Update Task component to show username

---
 imports/ui/Task.js | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/imports/ui/Task.js b/imports/ui/Task.js
index 9d7bb46..f767517 100644
--- a/imports/ui/Task.js
+++ b/imports/ui/Task.js
@@ -33,7 +33,9 @@ export default class Task extends Component {
           onClick={this.toggleChecked.bind(this)}
         />
 
-        <span className="text">{this.props.task.text}</span>
+        <span className="text">
+          <strong>{this.props.task.username}</strong>: {this.props.task.text}
+        </span>
       </li>
     );
   }
-- 
2.15.0


From ff7da09e93f0e50ba276b5d6a44f0b8fa2c4401d Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:31:22 -0700
Subject: [PATCH 31/49] Step 9.1: Remove insecure package

---
 .meteor/packages | 1 -
 .meteor/versions | 1 -
 2 files changed, 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 57b7f3a..0437886 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -18,7 +18,6 @@ ecmascript@0.9.0              # Enable ECMAScript2015+ syntax in app code
 shell-server@0.3.0            # Server-side component of the `meteor shell` command
 
 autopublish@1.0.7             # Publish all data to the clients (for prototyping)
-insecure@1.0.7                # Allow all DB writes from clients (for prototyping)
 react-meteor-data
 accounts-ui
 accounts-password
diff --git a/.meteor/versions b/.meteor/versions
index 4931db8..7ac3b09 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -38,7 +38,6 @@ html-tools@1.0.11
 htmljs@1.0.11
 http@1.3.0
 id-map@1.0.9
-insecure@1.0.7
 jquery@1.11.10
 launch-screen@1.1.1
 less@2.7.11
-- 
2.15.0


From 1e0ab1ddd5610fb9256e83f2b3f631f6d4332349 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:32:21 -0700
Subject: [PATCH 32/49] Step 9.2: Add methods for add, remove, update task

---
 imports/api/tasks.js | 31 +++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)

diff --git a/imports/api/tasks.js b/imports/api/tasks.js
index 3bed819..af4962a 100644
--- a/imports/api/tasks.js
+++ b/imports/api/tasks.js
@@ -1,3 +1,34 @@
+import { Meteor } from 'meteor/meteor';
 import { Mongo } from 'meteor/mongo';
+import { check } from 'meteor/check';
 
 export const Tasks = new Mongo.Collection('tasks');
+
+Meteor.methods({
+  'tasks.insert'(text) {
+    check(text, String);
+
+    // Make sure the user is logged in before inserting a task
+    if (! this.userId) {
+      throw new Meteor.Error('not-authorized');
+    }
+
+    Tasks.insert({
+      text,
+      createdAt: new Date(),
+      owner: this.userId,
+      username: Meteor.users.findOne(this.userId).username,
+    });
+  },
+  'tasks.remove'(taskId) {
+    check(taskId, String);
+
+    Tasks.remove(taskId);
+  },
+  'tasks.setChecked'(taskId, setChecked) {
+    check(taskId, String);
+    check(setChecked, Boolean);
+
+    Tasks.update(taskId, { $set: { checked: setChecked } });
+  },
+});
-- 
2.15.0


From 9185313257362dd28fa7628c974eb5eaeadfcf36 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:32:59 -0700
Subject: [PATCH 33/49] Step 9.3: Update App component to use tasks.insert
 method

---
 imports/ui/App.js | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 89bc781..8f58f41 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -24,12 +24,7 @@ class App extends Component {
     // Find the text field via the React ref
     const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();
 
-    Tasks.insert({
-      text,
-      createdAt: new Date(), // current time
-      owner: Meteor.userId(),           // _id of logged in user
-      username: Meteor.user().username,  // username of logged in user
-    });
+    Meteor.call('tasks.insert', text);
 
     // Clear form
     ReactDOM.findDOMNode(this.refs.textInput).value = '';
-- 
2.15.0


From 0c4825a516050c144fa2e69430db072026e7d62d Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:33:38 -0700
Subject: [PATCH 34/49] Step 9.4: Replace update and remove with methods

---
 imports/ui/Task.js | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/imports/ui/Task.js b/imports/ui/Task.js
index f767517..a575453 100644
--- a/imports/ui/Task.js
+++ b/imports/ui/Task.js
@@ -1,4 +1,5 @@
 import React, { Component } from 'react';
+import { Meteor } from 'meteor/meteor';
 
 import { Tasks } from '../api/tasks.js';
 
@@ -6,13 +7,11 @@ import { Tasks } from '../api/tasks.js';
 export default class Task extends Component {
   toggleChecked() {
     // Set the checked property to the opposite of its current value
-    Tasks.update(this.props.task._id, {
-      $set: { checked: !this.props.task.checked },
-    });
+    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);
   }
 
   deleteThisTask() {
-    Tasks.remove(this.props.task._id);
+    Meteor.call('tasks.remove', this.props.task._id);
   }
 
   render() {
-- 
2.15.0


From afb999560351287cd15fd59f1ca2ef2d04765613 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:34:33 -0700
Subject: [PATCH 35/49] Step 10.1: Remove autopublish package

---
 .meteor/packages | 1 -
 .meteor/versions | 1 -
 2 files changed, 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 0437886..57d256c 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -17,7 +17,6 @@ es5-shim@4.6.15                # ECMAScript 5 compatibility for older browsers
 ecmascript@0.9.0              # Enable ECMAScript2015+ syntax in app code
 shell-server@0.3.0            # Server-side component of the `meteor shell` command
 
-autopublish@1.0.7             # Publish all data to the clients (for prototyping)
 react-meteor-data
 accounts-ui
 accounts-password
diff --git a/.meteor/versions b/.meteor/versions
index 7ac3b09..c696266 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -3,7 +3,6 @@ accounts-password@1.5.0
 accounts-ui@1.2.0
 accounts-ui-unstyled@1.3.0
 allow-deny@1.1.0
-autopublish@1.0.7
 autoupdate@1.3.12
 babel-compiler@6.24.7
 babel-runtime@1.1.1
-- 
2.15.0


From c38afe3733376428b2af87d0f23a0c4c20cb7bf8 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 16:27:05 +1100
Subject: [PATCH 36/49] Step 10.2: Add publication for tasks

---
 imports/api/tasks.js | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/imports/api/tasks.js b/imports/api/tasks.js
index af4962a..80d36bc 100644
--- a/imports/api/tasks.js
+++ b/imports/api/tasks.js
@@ -4,6 +4,13 @@ import { check } from 'meteor/check';
 
 export const Tasks = new Mongo.Collection('tasks');
 
+if (Meteor.isServer) {
+  // This code only runs on the server
+  Meteor.publish('tasks', function tasksPublication() {
+    return Tasks.find();
+  });
+}
+
 Meteor.methods({
   'tasks.insert'(text) {
     check(text, String);
-- 
2.15.0


From 32334b6f54b158a9ea914854646a69595776de0c Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 16:28:14 +1100
Subject: [PATCH 37/49] Step 10.3: Subscribe to tasks in App container

---
 imports/ui/App.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index 8f58f41..b6f3138 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -84,6 +84,8 @@ class App extends Component {
 }
 
 export default withTracker(() => {
+  Meteor.subscribe('tasks');
+
   return {
     tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),
     incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),
-- 
2.15.0


From e96fa1c928185273dc51a07d5c875aedcbffe599 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:36:29 -0700
Subject: [PATCH 38/49] Step 10.4: Add tasks.setPrivate method

---
 imports/api/tasks.js | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/imports/api/tasks.js b/imports/api/tasks.js
index 80d36bc..63feeca 100644
--- a/imports/api/tasks.js
+++ b/imports/api/tasks.js
@@ -38,4 +38,17 @@ Meteor.methods({
 
     Tasks.update(taskId, { $set: { checked: setChecked } });
   },
+  'tasks.setPrivate'(taskId, setToPrivate) {
+    check(taskId, String);
+    check(setToPrivate, Boolean);
+
+    const task = Tasks.findOne(taskId);
+
+    // Make sure only the task owner can make a task private
+    if (task.owner !== this.userId) {
+      throw new Meteor.Error('not-authorized');
+    }
+
+    Tasks.update(taskId, { $set: { private: setToPrivate } });
+  },
 });
-- 
2.15.0


From 259ba9bb36a2b13f730b93b477f7fb0056e856ff Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:36:59 -0700
Subject: [PATCH 39/49] Step 10.5: Update renderTasks to pass in
 showPrivateButton

---
 imports/ui/App.js | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

diff --git a/imports/ui/App.js b/imports/ui/App.js
index b6f3138..6698619 100644
--- a/imports/ui/App.js
+++ b/imports/ui/App.js
@@ -41,9 +41,18 @@ class App extends Component {
     if (this.state.hideCompleted) {
       filteredTasks = filteredTasks.filter(task => !task.checked);
     }
-    return filteredTasks.map((task) => (
-      <Task key={task._id} task={task} />
-    ));
+    return filteredTasks.map((task) => {
+      const currentUserId = this.props.currentUser && this.props.currentUser._id;
+      const showPrivateButton = task.owner === currentUserId;
+
+      return (
+        <Task
+          key={task._id}
+          task={task}
+          showPrivateButton={showPrivateButton}
+        />
+      );
+    });
   }
 
   render() {
-- 
2.15.0


From 90d1099a6abd5752338aa7377965411ebe184c80 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:38:04 -0700
Subject: [PATCH 40/49] Step 10.7: Add private button, shown only to owner

---
 imports/ui/Task.js | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/imports/ui/Task.js b/imports/ui/Task.js
index a575453..09ec93c 100644
--- a/imports/ui/Task.js
+++ b/imports/ui/Task.js
@@ -32,6 +32,12 @@ export default class Task extends Component {
           onClick={this.toggleChecked.bind(this)}
         />
 
+        { this.props.showPrivateButton ? (
+          <button className="toggle-private" onClick={this.togglePrivate.bind(this)}>
+            { this.props.task.private ? 'Private' : 'Public' }
+          </button>
+        ) : ''}
+
         <span className="text">
           <strong>{this.props.task.username}</strong>: {this.props.task.text}
         </span>
-- 
2.15.0


From c3d270fb29a6679562d84acbd6c5312316536495 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:38:33 -0700
Subject: [PATCH 41/49] Step 10.8: Add private button event handler to Task

---
 imports/ui/Task.js | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/imports/ui/Task.js b/imports/ui/Task.js
index 09ec93c..1c21f88 100644
--- a/imports/ui/Task.js
+++ b/imports/ui/Task.js
@@ -14,6 +14,10 @@ export default class Task extends Component {
     Meteor.call('tasks.remove', this.props.task._id);
   }
 
+  togglePrivate() {
+    Meteor.call('tasks.setPrivate', this.props.task._id, ! this.props.task.private);
+  }
+
   render() {
     // Give tasks a different className when they are checked off,
     // so that we can style them nicely in CSS
-- 
2.15.0


From 929aa29c631b0b7fc425ad3bef8217ac19da53c5 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 16:33:06 +1100
Subject: [PATCH 42/49] Step 10.9: Install the classnames NPM package

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 09105cf..c2b7e92 100644
--- a/package.json
+++ b/package.json
@@ -6,6 +6,7 @@
   },
   "dependencies": {
     "babel-runtime": "^6.26.0",
+    "classnames": "^2.2.5",
     "meteor-node-stubs": "^0.3.2",
     "react": "^16.1.1",
     "react-dom": "^16.1.1"
-- 
2.15.0


From 4e4398b6b7c1d64f3ee371cb3ecafc5e0f4ac1a1 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:39:22 -0700
Subject: [PATCH 43/49] Step 10.10: Add private className to Task when needed

---
 imports/ui/Task.js | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/imports/ui/Task.js b/imports/ui/Task.js
index 1c21f88..11e71ee 100644
--- a/imports/ui/Task.js
+++ b/imports/ui/Task.js
@@ -1,5 +1,6 @@
 import React, { Component } from 'react';
 import { Meteor } from 'meteor/meteor';
+import classnames from 'classnames';
 
 import { Tasks } from '../api/tasks.js';
 
@@ -21,7 +22,10 @@ export default class Task extends Component {
   render() {
     // Give tasks a different className when they are checked off,
     // so that we can style them nicely in CSS
-    const taskClassName = this.props.task.checked ? 'checked' : '';
+    const taskClassName = classnames({
+      checked: this.props.task.checked,
+      private: this.props.task.private,
+    });
 
     return (
       <li className={taskClassName}>
-- 
2.15.0


From c813015db847c4a7c8a5a542bd8aa39a05c9b69b Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:39:58 -0700
Subject: [PATCH 44/49] Step 10.11: Only publish tasks the current user can see

---
 imports/api/tasks.js | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/imports/api/tasks.js b/imports/api/tasks.js
index 63feeca..5f76880 100644
--- a/imports/api/tasks.js
+++ b/imports/api/tasks.js
@@ -6,8 +6,14 @@ export const Tasks = new Mongo.Collection('tasks');
 
 if (Meteor.isServer) {
   // This code only runs on the server
+  // Only publish tasks that are public or belong to the current user
   Meteor.publish('tasks', function tasksPublication() {
-    return Tasks.find();
+    return Tasks.find({
+      $or: [
+        { private: { $ne: true } },
+        { owner: this.userId },
+      ],
+    });
   });
 }
 
-- 
2.15.0


From cc1f44b501fbb7b6c41cd7f6a72930700c2b5c51 Mon Sep 17 00:00:00 2001
From: Sashko Stubailo <sashko@stubailo.com>
Date: Mon, 13 Jul 2015 12:40:55 -0700
Subject: [PATCH 45/49] Step 10.12: Add extra security to methods

---
 imports/api/tasks.js | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/imports/api/tasks.js b/imports/api/tasks.js
index 5f76880..d7d72dd 100644
--- a/imports/api/tasks.js
+++ b/imports/api/tasks.js
@@ -36,12 +36,24 @@ Meteor.methods({
   'tasks.remove'(taskId) {
     check(taskId, String);
 
+    const task = Tasks.findOne(taskId);
+    if (task.private && task.owner !== this.userId) {
+      // If the task is private, make sure only the owner can delete it
+      throw new Meteor.Error('not-authorized');
+    }
+
     Tasks.remove(taskId);
   },
   'tasks.setChecked'(taskId, setChecked) {
     check(taskId, String);
     check(setChecked, Boolean);
 
+    const task = Tasks.findOne(taskId);
+    if (task.private && task.owner !== this.userId) {
+      // If the task is private, make sure only the owner can check it off
+      throw new Meteor.Error('not-authorized');
+    }
+
     Tasks.update(taskId, { $set: { checked: setChecked } });
   },
   'tasks.setPrivate'(taskId, setToPrivate) {
-- 
2.15.0


From 49ebf9b053d2592c3c109aec6092d3956bbc6e32 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 16:35:58 +1100
Subject: [PATCH 46/49] Step 11.1: Added practicalmeteor:mocha package

---
 .meteor/packages | 1 +
 .meteor/versions | 7 +++++++
 2 files changed, 8 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 57d256c..6117a10 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -20,3 +20,4 @@ shell-server@0.3.0            # Server-side component of the `meteor shell` comm
 react-meteor-data
 accounts-ui
 accounts-password
+practicalmeteor:mocha
diff --git a/.meteor/versions b/.meteor/versions
index c696266..4f052db 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -16,6 +16,7 @@ caching-compiler@1.1.9
 caching-html-compiler@1.1.2
 callback-hook@1.0.10
 check@1.2.5
+coffeescript@1.0.17
 ddp@1.4.0
 ddp-client@2.2.0
 ddp-common@1.3.0
@@ -59,6 +60,11 @@ npm-bcrypt@0.9.3
 npm-mongo@2.2.33
 observe-sequence@1.0.16
 ordered-dict@1.0.9
+practicalmeteor:chai@2.1.0_1
+practicalmeteor:loglevel@1.2.0_2
+practicalmeteor:mocha@2.4.5_6
+practicalmeteor:mocha-core@1.0.1
+practicalmeteor:sinon@1.14.1_2
 promise@0.10.0
 random@1.0.10
 rate-limit@1.0.8
@@ -82,6 +88,7 @@ templating-compiler@1.3.3
 templating-runtime@1.3.2
 templating-tools@1.1.2
 tmeasday:check-npm-versions@0.2.0
+tmeasday:test-reporter-helpers@0.2.1
 tracker@1.1.3
 ui@1.0.13
 underscore@1.0.10
-- 
2.15.0


From 44df353d48159a8be887aae4c1741e4f7a5fc048 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 16:36:17 +1100
Subject: [PATCH 47/49] Step 11.2: Add a scaffold for a method test

---
 imports/api/tasks.tests.js | 12 ++++++++++++
 1 file changed, 12 insertions(+)
 create mode 100644 imports/api/tasks.tests.js

diff --git a/imports/api/tasks.tests.js b/imports/api/tasks.tests.js
new file mode 100644
index 0000000..05287ba
--- /dev/null
+++ b/imports/api/tasks.tests.js
@@ -0,0 +1,12 @@
+/* eslint-env mocha */
+
+import { Meteor } from 'meteor/meteor';
+
+if (Meteor.isServer) {
+  describe('Tasks', () => {
+    describe('methods', () => {
+      it('can delete owned task', () => {
+      });
+    });
+  });
+}
-- 
2.15.0


From 16ea918e502ca433dbf6e5dd9fac8053d2b1a882 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 16:36:29 +1100
Subject: [PATCH 48/49] Step 11.3: Prepare the database for each test

---
 imports/api/tasks.tests.js | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/imports/api/tasks.tests.js b/imports/api/tasks.tests.js
index 05287ba..1359e85 100644
--- a/imports/api/tasks.tests.js
+++ b/imports/api/tasks.tests.js
@@ -1,10 +1,26 @@
 /* eslint-env mocha */
 
 import { Meteor } from 'meteor/meteor';
+import { Random } from 'meteor/random';
+
+import { Tasks } from './tasks.js';
 
 if (Meteor.isServer) {
   describe('Tasks', () => {
     describe('methods', () => {
+      const userId = Random.id();
+      let taskId;
+
+      beforeEach(() => {
+        Tasks.remove({});
+        taskId = Tasks.insert({
+          text: 'test task',
+          createdAt: new Date(),
+          owner: userId,
+          username: 'tmeasday',
+        });
+      });
+
       it('can delete owned task', () => {
       });
     });
-- 
2.15.0


From 5800c6b8ccbce4ea5f56a4c4db65c6121eec6cb5 Mon Sep 17 00:00:00 2001
From: Tom Coleman <tom@thesnail.org>
Date: Fri, 18 Mar 2016 16:36:42 +1100
Subject: [PATCH 49/49] Step 11.4: Added test to check delete method

---
 imports/api/tasks.tests.js | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/imports/api/tasks.tests.js b/imports/api/tasks.tests.js
index 1359e85..9b61c5a 100644
--- a/imports/api/tasks.tests.js
+++ b/imports/api/tasks.tests.js
@@ -2,6 +2,7 @@
 
 import { Meteor } from 'meteor/meteor';
 import { Random } from 'meteor/random';
+import { assert } from 'meteor/practicalmeteor:chai';
 
 import { Tasks } from './tasks.js';
 
@@ -22,6 +23,18 @@ if (Meteor.isServer) {
       });
 
       it('can delete owned task', () => {
+        // Find the internal implementation of the task method so we can
+        // test it in isolation
+        const deleteTask = Meteor.server.method_handlers['tasks.remove'];
+
+        // Set up a fake method invocation that looks like what the method expects
+        const invocation = { userId };
+
+        // Run the method with `this` set to the fake invocation
+        deleteTask.apply(invocation, [taskId]);
+
+        // Verify that the method does what we expected
+        assert.equal(Tasks.find().count(), 0);
       });
     });
   });
-- 
2.15.0

